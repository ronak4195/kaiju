package asset_info // import "."


CONSTANTS

const (
	InfoExtension = ".adi"
	ProjectCache  = ".cache"
)

VARIABLES

var (
	ErrNoInfo = errors.New("asset database does not have info for this file")
)

FUNCTIONS

func Exists(path string) bool
    Exists checks to see if a given path has a generated ADI file the file it
    searches for will be path/to/file.ext.adi

func ID(path string) (string, error)
    ID returns the ID of the asset within it's ADI file, if the ADI file is not
    found, the read error is returned

func InitForCurrentProject() error
func Move(info AssetDatabaseInfo, newPath string) error
func Write(adi AssetDatabaseInfo) error

TYPES

type AssetDatabaseInfo struct {
	ID       string
	Path     string
	Type     string
	ParentID string
	Children []AssetDatabaseInfo
	Metadata map[string]string
}

func Lookup(id string) (AssetDatabaseInfo, error)

func New(path string, id string) AssetDatabaseInfo

func Read(path string) (AssetDatabaseInfo, error)
    Read will read the ADI file for the given path and return the
    AssetDatabaseInfo struct. Possible errors are:

    [-] ErrNoInfo: if the file does not exist [-] json.Unmarshal error: if the
    file is corrupted [-] filesystem.ReadTextFile error: if the file cannot be
    read

func (a *AssetDatabaseInfo) MetaValue(key string) string

func (a *AssetDatabaseInfo) SpawnChild(id string) AssetDatabaseInfo

