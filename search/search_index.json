{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Kaiju Engine","text":"<p>Kaiju is a 2D/3D game engine written in Go (Golang) backed by Vulkan. Kaiju comes with it's own modified version of the Go compiler so that optimizations with a focus on real-time games can be made.</p>"},{"location":"#under-heavy-development","title":"\u26a0\ufe0f Under heavy development \u26a0\ufe0f","text":"<p>The engine is not released and is under heavy development. Now is a great time to make suggestions and give feedback and be part of the engine development!</p>"},{"location":"#join-the-community","title":"Join the community","text":"<ul> <li>GitHub repository</li> <li>Discord server</li> <li>Brent Farris on X/Twitter</li> </ul>"},{"location":"api/","title":"API","text":"<ul> <li>assets<ul> <li>assets/asset_importer</li> <li>assets/asset_info</li> </ul> </li> <li>audio<ul> <li>audio/audio_system</li> </ul> </li> <li>bitmap</li> <li>bootstrap</li> <li>cache<ul> <li>cache/project_cache</li> </ul> </li> <li>cameras</li> <li>collision</li> <li>concurrent</li> <li>contexts</li> <li>editor<ul> <li>editor/alert</li> <li>editor/cache<ul> <li>editor/cache/editor_cache</li> </ul> </li> <li>editor/codegen<ul> <li>editor/codegen/test_data<ul> <li>editor/codegen/test_data/sub_test_data</li> </ul> </li> </ul> </li> <li>editor/content<ul> <li>editor/content/content_history</li> <li>editor/content/content_opener</li> </ul> </li> <li>editor/editor_config</li> <li>editor/interfaces</li> <li>editor/memento</li> <li>editor/project</li> <li>editor/selection</li> <li>editor/stages</li> <li>editor/ui<ul> <li>editor/ui/about_window</li> <li>editor/ui/content_window</li> <li>editor/ui/context_menu</li> <li>editor/ui/details_window</li> <li>editor/ui/drag_datas</li> <li>editor/ui/editor_menu</li> <li>editor/ui/editor_settings_window</li> <li>editor/ui/editor_window</li> <li>editor/ui/files_window</li> <li>editor/ui/hierarchy</li> <li>editor/ui/log_window</li> <li>editor/ui/project_window</li> <li>editor/ui/shader_designer</li> <li>editor/ui/status_bar</li> </ul> </li> <li>editor/viewport<ul> <li>editor/viewport/controls</li> <li>editor/viewport/tools<ul> <li>editor/viewport/tools/deleter</li> <li>editor/viewport/tools/duplicator</li> <li>editor/viewport/tools/transform_tools</li> </ul> </li> </ul> </li> </ul> </li> <li>engine<ul> <li>engine/modules<ul> <li>engine/modules/camera_module</li> </ul> </li> </ul> </li> <li>filesystem</li> <li>generators<ul> <li>generators/api</li> <li>generators/copy_header</li> <li>generators/msdf</li> <li>generators/project_template</li> <li>generators/shader_definition</li> <li>generators/spirv</li> </ul> </li> <li>hid</li> <li>host_container</li> <li>klib<ul> <li>klib/string_equations</li> </ul> </li> <li>markup<ul> <li>markup/css<ul> <li>markup/css/functions</li> <li>markup/css/helpers</li> <li>markup/css/properties</li> <li>markup/css/pseudos</li> <li>markup/css/rules</li> </ul> </li> <li>markup/document</li> <li>markup/elements</li> <li>markup/spec_generator</li> </ul> </li> <li>matrix</li> <li>pooling</li> <li>profiler</li> <li>rendering<ul> <li>rendering/loaders<ul> <li>rendering/loaders/gltf</li> <li>rendering/loaders/load_result</li> </ul> </li> <li>rendering/vulkan<ul> <li>rendering/vulkan/android</li> <li>rendering/vulkan/moltenVK</li> <li>rendering/vulkan/vulkan</li> <li>rendering/vulkan/windows</li> </ul> </li> </ul> </li> <li>runtime<ul> <li>runtime/encoding<ul> <li>runtime/encoding/gob</li> </ul> </li> </ul> </li> <li>source</li> <li>systems<ul> <li>systems/console</li> <li>systems/debug</li> <li>systems/events</li> <li>systems/logging</li> <li>systems/navigation</li> <li>systems/stages</li> <li>systems/visual2d<ul> <li>systems/visual2d/sprite</li> </ul> </li> </ul> </li> <li>tests<ul> <li>tests/calls</li> <li>tests/rendering_tests</li> </ul> </li> <li>tools<ul> <li>tools/html_preview</li> </ul> </li> <li>ui</li> <li>windowing</li> </ul>"},{"location":"api/assets/","title":"package assets","text":"<pre><code>import \"kaiju/assets\"\n</code></pre>"},{"location":"api/assets/#constants","title":"Constants","text":""},{"location":"api/assets/#texturesquare","title":"TextureSquare","text":"<p><code>\"textures/square.png\"</code></p>"},{"location":"api/assets/#texturetriangle","title":"TextureTriangle","text":"<p><code>\"textures/triangle.png\"</code></p>"},{"location":"api/assets/#shaderdefinitiongrid","title":"ShaderDefinitionGrid","text":"<p><code>\"shaders/definitions/grid.json\"</code></p>"},{"location":"api/assets/#shaderdefinitionbasic","title":"ShaderDefinitionBasic","text":"<p><code>\"shaders/definitions/basic.json\"</code></p>"},{"location":"api/assets/#shaderdefinitionbasicskinned","title":"ShaderDefinitionBasicSkinned","text":"<p><code>\"shaders/definitions/basic_skinned.json\"</code></p>"},{"location":"api/assets/#shaderdefinitionbasiccolor","title":"ShaderDefinitionBasicColor","text":"<p><code>\"shaders/definitions/basic_color.json\"</code></p>"},{"location":"api/assets/#shaderdefinitiontext3d","title":"ShaderDefinitionText3D","text":"<p><code>\"shaders/definitions/text3d.json\"</code></p>"},{"location":"api/assets/#shaderdefinitiontext","title":"ShaderDefinitionText","text":"<p><code>\"shaders/definitions/text.json\"</code></p>"},{"location":"api/assets/#shaderdefinitioncombine","title":"ShaderDefinitionCombine","text":"<p><code>\"shaders/definitions/combine.json\"</code></p>"},{"location":"api/assets/#shaderdefinitionoitcomposite","title":"ShaderDefinitionOITComposite","text":"<p><code>\"shaders/definitions/oit_composite.json\"</code></p>"},{"location":"api/assets/#shaderdefinitionui","title":"ShaderDefinitionUI","text":"<p><code>\"shaders/definitions/ui.json\"</code></p>"},{"location":"api/assets/#shaderdefinitionsprite","title":"ShaderDefinitionSprite","text":"<p><code>\"shaders/definitions/sprite.json\"</code></p>"},{"location":"api/assets/#shaderdefinitionoutline","title":"ShaderDefinitionOutline","text":"<p><code>\"shaders/definitions/outline.json\"</code></p>"},{"location":"api/assets/#shadertextvert","title":"ShaderTextVert","text":"<p><code>\"shaders/spv/text.vert.spv\"</code></p>"},{"location":"api/assets/#shadertextfrag","title":"ShaderTextFrag","text":"<p><code>\"shaders/spv/text.frag.spv\"</code></p>"},{"location":"api/assets/#shadertext3dvert","title":"ShaderText3DVert","text":"<p><code>\"shaders/spv/text3d.vert.spv\"</code></p>"},{"location":"api/assets/#shadertext3dfrag","title":"ShaderText3DFrag","text":"<p><code>ShaderTextFrag</code></p>"},{"location":"api/assets/#shaderoitcompositevert","title":"ShaderOitCompositeVert","text":"<p><code>\"shaders/spv/oit_composite.vert.spv\"</code></p>"},{"location":"api/assets/#shaderoitcompositefrag","title":"ShaderOitCompositeFrag","text":"<p><code>\"shaders/spv/oit_composite.frag.spv\"</code></p>"},{"location":"api/assets/#shaderhdrvert","title":"ShaderHdrVert","text":"<p><code>\"shaders/spv/hdr.vert.spv\"</code></p>"},{"location":"api/assets/#shaderhdrfrag","title":"ShaderHdrFrag","text":"<p><code>\"shaders/spv/hdr.frag.spv\"</code></p>"},{"location":"api/assets/#shaderuivert","title":"ShaderUIVert","text":"<p><code>\"shaders/spv/ui.vert.spv\"</code></p>"},{"location":"api/assets/#shaderuifrag","title":"ShaderUIFrag","text":"<p><code>\"shaders/spv/ui.frag.spv\"</code></p>"},{"location":"api/assets/#shadersuininefrag","title":"ShadersUINineFrag","text":"<p><code>\"shaders/spv/ui_nine.frag.spv\"</code></p>"},{"location":"api/assets/#types","title":"Types","text":""},{"location":"api/assets/#database","title":"Database","text":"<p><code>struct</code></p> <pre><code>type Database struct {\n    EditorContext EditorContext\n}\n</code></pre>"},{"location":"api/assets/#newdatabase","title":"NewDatabase","text":"<pre><code>func NewDatabase() Database\n</code></pre>"},{"location":"api/assets/#databasedestroy","title":"Database.Destroy","text":"<pre><code>func (a *Database) Destroy()\n</code></pre>"},{"location":"api/assets/#databaseexists","title":"Database.Exists","text":"<pre><code>func (a *Database) Exists(key string) bool\n</code></pre>"},{"location":"api/assets/#databaseread","title":"Database.Read","text":"<pre><code>func (a *Database) Read(key string) ([]byte, error)\n</code></pre>"},{"location":"api/assets/#databasereadtext","title":"Database.ReadText","text":"<pre><code>func (a *Database) ReadText(key string) (string, error)\n</code></pre>"},{"location":"api/assets/#editorcontext","title":"EditorContext","text":"<p><code>struct</code></p> <pre><code>type EditorContext struct{}\n</code></pre>"},{"location":"api/assets/asset_importer/","title":"package asset_importer","text":"<pre><code>import \"kaiju/assets/asset_importer\"\n</code></pre>"},{"location":"api/assets/asset_importer/#variables","title":"Variables","text":""},{"location":"api/assets/asset_importer/#errnoimporter","title":"ErrNoImporter","text":"<p><code>errors.New(\"no importer found for file\")</code></p>"},{"location":"api/assets/asset_importer/#types","title":"Types","text":""},{"location":"api/assets/asset_importer/#glbimporter","title":"GlbImporter","text":"<p><code>struct</code></p> <pre><code>type GlbImporter struct{}\n</code></pre>"},{"location":"api/assets/asset_importer/#glbimporterhandles","title":"GlbImporter.Handles","text":"<pre><code>func (m GlbImporter) Handles(path string) bool\n</code></pre>"},{"location":"api/assets/asset_importer/#glbimporterimport","title":"GlbImporter.Import","text":"<pre><code>func (m GlbImporter) Import(path string) error\n</code></pre>"},{"location":"api/assets/asset_importer/#gltfimporter","title":"GltfImporter","text":"<p><code>struct</code></p> <pre><code>type GltfImporter struct{}\n</code></pre>"},{"location":"api/assets/asset_importer/#gltfimporterhandles","title":"GltfImporter.Handles","text":"<pre><code>func (m GltfImporter) Handles(path string) bool\n</code></pre>"},{"location":"api/assets/asset_importer/#gltfimporterimport","title":"GltfImporter.Import","text":"<pre><code>func (m GltfImporter) Import(path string) error\n</code></pre>"},{"location":"api/assets/asset_importer/#htmlimporter","title":"HTMLImporter","text":"<p><code>struct</code></p> <pre><code>type HTMLImporter struct{}\n</code></pre>"},{"location":"api/assets/asset_importer/#htmlimporterhandles","title":"HTMLImporter.Handles","text":"<pre><code>func (m HTMLImporter) Handles(path string) bool\n</code></pre>"},{"location":"api/assets/asset_importer/#htmlimporterimport","title":"HTMLImporter.Import","text":"<pre><code>func (m HTMLImporter) Import(path string) error\n</code></pre>"},{"location":"api/assets/asset_importer/#importregistry","title":"ImportRegistry","text":"<p><code>struct</code></p> <pre><code>type ImportRegistry struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/assets/asset_importer/#newimportregistry","title":"NewImportRegistry","text":"<pre><code>func NewImportRegistry() ImportRegistry\n</code></pre>"},{"location":"api/assets/asset_importer/#importregistryimport","title":"ImportRegistry.Import","text":"<pre><code>func (r *ImportRegistry) Import(path string) error\n</code></pre>"},{"location":"api/assets/asset_importer/#importregistryimportifnew","title":"ImportRegistry.ImportIfNew","text":"<pre><code>func (r *ImportRegistry) ImportIfNew(path string) error\n</code></pre>"},{"location":"api/assets/asset_importer/#importregistryimportusingdefault","title":"ImportRegistry.ImportUsingDefault","text":"<pre><code>func (r *ImportRegistry) ImportUsingDefault(path string) error\n</code></pre>"},{"location":"api/assets/asset_importer/#importregistryregister","title":"ImportRegistry.Register","text":"<pre><code>func (r *ImportRegistry) Register(importer Importer)\n</code></pre>"},{"location":"api/assets/asset_importer/#importtype","title":"ImportType","text":"<p>string <pre><code>type ImportType = string\n</code></pre></p>"},{"location":"api/assets/asset_importer/#importer","title":"Importer","text":"<p><code>interface</code></p> <pre><code>type Importer interface {\n    Handles(path string) bool\n    Import(path string) error\n}\n</code></pre> <p>Importer is an interface for importing assets into the asset database. It is used to allow for custom importers to be added to the system to handle new asset types. Handles should return true if the importer can handle the given path. Import should import the asset into the asset database.</p>"},{"location":"api/assets/asset_importer/#objimporter","title":"ObjImporter","text":"<p><code>struct</code></p> <pre><code>type ObjImporter struct{}\n</code></pre>"},{"location":"api/assets/asset_importer/#objimporterhandles","title":"ObjImporter.Handles","text":"<pre><code>func (m ObjImporter) Handles(path string) bool\n</code></pre>"},{"location":"api/assets/asset_importer/#objimporterimport","title":"ObjImporter.Import","text":"<pre><code>func (m ObjImporter) Import(path string) error\n</code></pre>"},{"location":"api/assets/asset_importer/#pngimporter","title":"PNGImporter","text":"<p><code>struct</code></p> <pre><code>type PNGImporter struct{}\n</code></pre>"},{"location":"api/assets/asset_importer/#pngimporterhandles","title":"PNGImporter.Handles","text":"<pre><code>func (m PNGImporter) Handles(path string) bool\n</code></pre>"},{"location":"api/assets/asset_importer/#pngimporterimport","title":"PNGImporter.Import","text":"<pre><code>func (m PNGImporter) Import(path string) error\n</code></pre>"},{"location":"api/assets/asset_importer/#shaderpipelineimporter","title":"ShaderPipelineImporter","text":"<p><code>struct</code></p> <pre><code>type ShaderPipelineImporter struct{}\n</code></pre>"},{"location":"api/assets/asset_importer/#shaderpipelineimporterhandles","title":"ShaderPipelineImporter.Handles","text":"<pre><code>func (m ShaderPipelineImporter) Handles(path string) bool\n</code></pre>"},{"location":"api/assets/asset_importer/#shaderpipelineimporterimport","title":"ShaderPipelineImporter.Import","text":"<pre><code>func (m ShaderPipelineImporter) Import(path string) error\n</code></pre>"},{"location":"api/assets/asset_importer/#stageimporter","title":"StageImporter","text":"<p><code>struct</code></p> <pre><code>type StageImporter struct{}\n</code></pre>"},{"location":"api/assets/asset_importer/#stageimporterhandles","title":"StageImporter.Handles","text":"<pre><code>func (m StageImporter) Handles(path string) bool\n</code></pre>"},{"location":"api/assets/asset_importer/#stageimporterimport","title":"StageImporter.Import","text":"<pre><code>func (m StageImporter) Import(path string) error\n</code></pre>"},{"location":"api/assets/asset_info/","title":"package asset_info","text":"<pre><code>import \"kaiju/assets/asset_info\"\n</code></pre>"},{"location":"api/assets/asset_info/#constants","title":"Constants","text":""},{"location":"api/assets/asset_info/#infoextension","title":"InfoExtension","text":"<p><code>\".adi\"</code></p>"},{"location":"api/assets/asset_info/#projectcache","title":"ProjectCache","text":"<p><code>\".cache\"</code></p>"},{"location":"api/assets/asset_info/#variables","title":"Variables","text":""},{"location":"api/assets/asset_info/#errnoinfo","title":"ErrNoInfo","text":"<p><code>errors.New(\"asset database does not have info for this file\")</code></p>"},{"location":"api/assets/asset_info/#functions","title":"Functions","text":""},{"location":"api/assets/asset_info/#exists","title":"Exists","text":"<pre><code>func Exists(path string) bool\n</code></pre> <p>Exists checks to see if a given path has a generated ADI file the file it searches for will be path/to/file.ext.adi</p>"},{"location":"api/assets/asset_info/#id","title":"ID","text":"<pre><code>func ID(path string) (string, error)\n</code></pre> <p>ID returns the ID of the asset within it's ADI file, if the ADI file is not found, the read error is returned</p>"},{"location":"api/assets/asset_info/#initforcurrentproject","title":"InitForCurrentProject","text":"<pre><code>func InitForCurrentProject() error\n</code></pre>"},{"location":"api/assets/asset_info/#move","title":"Move","text":"<pre><code>func Move(info AssetDatabaseInfo, newPath string) error\n</code></pre>"},{"location":"api/assets/asset_info/#write","title":"Write","text":"<pre><code>func Write(adi AssetDatabaseInfo) error\n</code></pre>"},{"location":"api/assets/asset_info/#types","title":"Types","text":""},{"location":"api/assets/asset_info/#assetdatabaseinfo","title":"AssetDatabaseInfo","text":"<p><code>struct</code></p> <pre><code>type AssetDatabaseInfo struct {\n    ID       string\n    Path     string\n    Type     string\n    ParentID string\n    Children []AssetDatabaseInfo\n    Metadata map[string]string\n}\n</code></pre>"},{"location":"api/assets/asset_info/#lookup","title":"Lookup","text":"<pre><code>func Lookup(id string) (AssetDatabaseInfo, error)\n</code></pre>"},{"location":"api/assets/asset_info/#new","title":"New","text":"<pre><code>func New(path string, id string) AssetDatabaseInfo\n</code></pre>"},{"location":"api/assets/asset_info/#read","title":"Read","text":"<pre><code>func Read(path string) (AssetDatabaseInfo, error)\n</code></pre> <p>Read will read the ADI file for the given path and return the AssetDatabaseInfo struct. Possible errors are:</p> <ul> <li>ErrNoInfo: if the file does not exist </li> <li>json.Unmarshal error: if the file is corrupted </li> <li>filesystem.ReadTextFile error: if the file cannot be read</li> </ul>"},{"location":"api/assets/asset_info/#assetdatabaseinfometavalue","title":"AssetDatabaseInfo.MetaValue","text":"<pre><code>func (a *AssetDatabaseInfo) MetaValue(key string) string\n</code></pre>"},{"location":"api/assets/asset_info/#assetdatabaseinfospawnchild","title":"AssetDatabaseInfo.SpawnChild","text":"<pre><code>func (a *AssetDatabaseInfo) SpawnChild(id string) AssetDatabaseInfo\n</code></pre>"},{"location":"api/audio/","title":"package audio","text":"<pre><code>import \"kaiju/audio\"\n</code></pre>"},{"location":"api/audio/#types","title":"Types","text":""},{"location":"api/audio/#audio","title":"Audio","text":"<p><code>struct</code></p> <pre><code>type Audio struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/audio/#newaudio","title":"NewAudio","text":"<pre><code>func NewAudio() (Audio, error)\n</code></pre>"},{"location":"api/audio/#audioplay","title":"Audio.Play","text":"<pre><code>func (a *Audio) Play(wav *audio_system.Wav)\n</code></pre>"},{"location":"api/audio/audio_system/","title":"package audio_system","text":"<pre><code>import \"kaiju/audio/audio_system\"\n</code></pre>"},{"location":"api/audio/audio_system/#functions","title":"Functions","text":""},{"location":"api/audio/audio_system/#init","title":"Init","text":"<pre><code>func Init() error\n</code></pre>"},{"location":"api/audio/audio_system/#pcm2float","title":"Pcm2Float","text":"<pre><code>func Pcm2Float(wav *Wav) []byte\n</code></pre>"},{"location":"api/audio/audio_system/#playwav","title":"PlayWav","text":"<pre><code>func PlayWav(wav *Wav)\n</code></pre>"},{"location":"api/audio/audio_system/#quit","title":"Quit","text":"<pre><code>func Quit()\n</code></pre>"},{"location":"api/audio/audio_system/#rechannel","title":"Rechannel","text":"<pre><code>func Rechannel(w *Wav, channels int16) []byte\n</code></pre>"},{"location":"api/audio/audio_system/#resample","title":"Resample","text":"<pre><code>func Resample(w *Wav, sampleRate int32) []byte\n</code></pre>"},{"location":"api/audio/audio_system/#types","title":"Types","text":""},{"location":"api/audio/audio_system/#wav","title":"Wav","text":"<p><code>struct</code></p> <pre><code>type Wav struct {\n    WavData []byte // Data at top because we need to align on 64-bit\n\n    FormatType WavFormat\n    Channels   int16\n    SampleRate int32\n\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/audio/audio_system/#loadwav","title":"LoadWav","text":"<pre><code>func LoadWav(assetDatabase *assets.Database, wavFile string) (*Wav, error)\n</code></pre>"},{"location":"api/audio/audio_system/#wavformat","title":"WavFormat","text":"<p>int16 <pre><code>type WavFormat = int16\n</code></pre></p> <p>const ( WavFormatPcm WavFormat = 1 WavFormatFloat WavFormat = 3 )</p>"},{"location":"api/bitmap/","title":"package bitmap","text":"<pre><code>import \"kaiju/bitmap\"\n</code></pre>"},{"location":"api/bitmap/#functions","title":"Functions","text":""},{"location":"api/bitmap/#check","title":"Check","text":"<pre><code>func Check(b Bitmap, index int) bool\n</code></pre>"},{"location":"api/bitmap/#count","title":"Count","text":"<pre><code>func Count(b Bitmap) int\n</code></pre> <p>Count returns the number of bits that are true.</p>"},{"location":"api/bitmap/#countasm","title":"CountASM","text":"<pre><code>func CountASM(b Bitmap) int\n</code></pre>"},{"location":"api/bitmap/#countasmusingtable","title":"CountASMUsingTable","text":"<pre><code>func CountASMUsingTable(b Bitmap) int\n</code></pre>"},{"location":"api/bitmap/#lengthfor","title":"LengthFor","text":"<pre><code>func LengthFor(byteCount int) int\n</code></pre> <p>LengthFor returns the number of bytes needed to represent the specified number of bits.</p>"},{"location":"api/bitmap/#types","title":"Types","text":""},{"location":"api/bitmap/#bitmap","title":"Bitmap","text":"<p>[]byte <pre><code>type Bitmap []byte\n</code></pre></p>"},{"location":"api/bitmap/#new","title":"New","text":"<pre><code>func New(length int) Bitmap\n</code></pre> <p>New creates a new bitmap of the specified length. A bitmap is a slice of bytes where each bit represents a boolean value. The length is the number of bits that the bitmap will represent. The length is rounded up to the nearest byte.</p>"},{"location":"api/bitmap/#newtrue","title":"NewTrue","text":"<pre><code>func NewTrue(length int) Bitmap\n</code></pre> <p>NewTrue creates a new bitmap of the specified length with all bits true</p>"},{"location":"api/bitmap/#bitmapassign","title":"Bitmap.Assign","text":"<pre><code>func (b Bitmap) Assign(index int, value bool)\n</code></pre> <p>Assign sets the bit at the specified index to the specified value.</p>"},{"location":"api/bitmap/#bitmapclear","title":"Bitmap.Clear","text":"<pre><code>func (b Bitmap) Clear()\n</code></pre> <p>Clear sets all bits to false.</p>"},{"location":"api/bitmap/#bitmapcountinverse","title":"Bitmap.CountInverse","text":"<pre><code>func (b Bitmap) CountInverse() int\n</code></pre> <p>CountInverse returns the number of bits that are false.</p>"},{"location":"api/bitmap/#bitmapreset","title":"Bitmap.Reset","text":"<pre><code>func (b Bitmap) Reset(index int)\n</code></pre> <p>Reset sets the bit at the specified index to false.</p>"},{"location":"api/bitmap/#bitmapset","title":"Bitmap.Set","text":"<pre><code>func (b Bitmap) Set(index int)\n</code></pre> <p>Set sets the bit at the specified index to true.</p>"},{"location":"api/bitmap/#bitmaptoggle","title":"Bitmap.Toggle","text":"<pre><code>func (b Bitmap) Toggle(index int)\n</code></pre> <p>Toggle flips the value of the bit at the specified index.</p>"},{"location":"api/bootstrap/","title":"package bootstrap","text":"<pre><code>import \"kaiju/bootstrap\"\n</code></pre>"},{"location":"api/bootstrap/#functions","title":"Functions","text":""},{"location":"api/bootstrap/#main","title":"Main","text":"<pre><code>func Main()\n</code></pre>"},{"location":"api/cache/project_cache/","title":"package project_cache","text":"<pre><code>import \"kaiju/cache/project_cache\"\n</code></pre>"},{"location":"api/cache/project_cache/#constants","title":"Constants","text":""},{"location":"api/cache/project_cache/#cachefolder","title":"CacheFolder","text":"<p><code>\".cache\"</code></p>"},{"location":"api/cache/project_cache/#functions","title":"Functions","text":""},{"location":"api/cache/project_cache/#cachemesh","title":"CacheMesh","text":"<pre><code>func CacheMesh(adi asset_info.AssetDatabaseInfo, mesh load_result.Mesh) error\n</code></pre>"},{"location":"api/cache/project_cache/#deletemesh","title":"DeleteMesh","text":"<pre><code>func DeleteMesh(adi asset_info.AssetDatabaseInfo) error\n</code></pre>"},{"location":"api/cache/project_cache/#loadcachedmesh","title":"LoadCachedMesh","text":"<pre><code>func LoadCachedMesh(adi asset_info.AssetDatabaseInfo) (load_result.Mesh, error)\n</code></pre>"},{"location":"api/cache/project_cache/#types","title":"Types","text":""},{"location":"api/cache/project_cache/#projecteditorcache","title":"ProjectEditorCache","text":"<p><code>struct</code></p> <pre><code>type ProjectEditorCache struct {\n}\n</code></pre>"},{"location":"api/cameras/","title":"package cameras","text":"<pre><code>import \"kaiju/cameras\"\n</code></pre>"},{"location":"api/cameras/#types","title":"Types","text":""},{"location":"api/cameras/#camera","title":"Camera","text":"<p><code>interface</code></p> <pre><code>type Camera interface {\n    SetPosition(position matrix.Vec3)\n    SetFOV(fov float32)\n    SetNearPlane(near float32)\n    SetFarPlane(far float32)\n    SetWidth(width float32)\n    SetHeight(height float32)\n    ViewportChanged(width, height float32)\n    SetProperties(fov, nearPlane, farPlane, width, height float32)\n    Forward() matrix.Vec3\n    Right() matrix.Vec3\n    Up() matrix.Vec3\n    SetLookAt(position matrix.Vec3)\n    SetLookAtWithUp(point, up matrix.Vec3)\n    SetPositionAndLookAt(position, lookAt matrix.Vec3)\n    RayCast(screenPos matrix.Vec2) collision.Ray\n    TryPlaneHit(screenPos matrix.Vec2, planePos, planeNml matrix.Vec3) (hit matrix.Vec3, success bool)\n    ForwardPlaneHit(screenPos matrix.Vec2, planePos matrix.Vec3) (matrix.Vec3, bool)\n    Position() matrix.Vec3\n    Width() float32\n    Height() float32\n    View() matrix.Mat4\n    Projection() matrix.Mat4\n    LookAt() matrix.Vec3\n    NearPlane() float32\n    FarPlane() float32\n}\n</code></pre>"},{"location":"api/cameras/#standardcamera","title":"StandardCamera","text":"<p><code>struct</code></p> <pre><code>type StandardCamera struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/cameras/#newstandardcamera","title":"NewStandardCamera","text":"<pre><code>func NewStandardCamera(width, height float32, position matrix.Vec3) *StandardCamera\n</code></pre> <p>NewStandardCamera creates a new perspective camera using the width/height for the viewport and the position to place the camera.</p>"},{"location":"api/cameras/#newstandardcameraorthographic","title":"NewStandardCameraOrthographic","text":"<pre><code>func NewStandardCameraOrthographic(width, height float32, position matrix.Vec3) *StandardCamera\n</code></pre> <p>NewStandardCameraOrthographic creates a new orthographic camera using the width/height for the viewport and the position to place the camera.</p>"},{"location":"api/cameras/#standardcamerafarplane","title":"StandardCamera.FarPlane","text":"<pre><code>func (c *StandardCamera) FarPlane() float32\n</code></pre> <p>FarPlane will return the far plane of the camera.</p>"},{"location":"api/cameras/#standardcameraforward","title":"StandardCamera.Forward","text":"<pre><code>func (c *StandardCamera) Forward() matrix.Vec3\n</code></pre> <p>Forward returns the forward vector of the camera.</p>"},{"location":"api/cameras/#standardcameraforwardplanehit","title":"StandardCamera.ForwardPlaneHit","text":"<pre><code>func (c *StandardCamera) ForwardPlaneHit(screenPos matrix.Vec2, planePos matrix.Vec3) (matrix.Vec3, bool)\n</code></pre> <p>ForwardPlaneHit will project a ray from the camera's position given a screen position and test if it hits a plane directly facing the cameras position.</p>"},{"location":"api/cameras/#standardcameraheight","title":"StandardCamera.Height","text":"<pre><code>func (c *StandardCamera) Height() float32\n</code></pre> <p>Height will return the height of the camera's viewport.</p>"},{"location":"api/cameras/#standardcameralookat","title":"StandardCamera.LookAt","text":"<pre><code>func (c *StandardCamera) LookAt() matrix.Vec3\n</code></pre> <p>LookAt will return the look at position of the camera.</p>"},{"location":"api/cameras/#standardcameranearplane","title":"StandardCamera.NearPlane","text":"<pre><code>func (c *StandardCamera) NearPlane() float32\n</code></pre> <p>NearPlane will return the near plane of the camera.</p>"},{"location":"api/cameras/#standardcameraposition","title":"StandardCamera.Position","text":"<pre><code>func (c *StandardCamera) Position() matrix.Vec3\n</code></pre> <p>Position will return the position of the camera.</p>"},{"location":"api/cameras/#standardcameraprojection","title":"StandardCamera.Projection","text":"<pre><code>func (c *StandardCamera) Projection() matrix.Mat4\n</code></pre> <p>Projection will return the projection matrix of the camera.</p>"},{"location":"api/cameras/#standardcameraraycast","title":"StandardCamera.RayCast","text":"<pre><code>func (c *StandardCamera) RayCast(screenPos matrix.Vec2) collision.Ray\n</code></pre> <p>RayCast will project a ray from the camera's position given a screen position using the camera's view and projection matrices.</p>"},{"location":"api/cameras/#standardcameraright","title":"StandardCamera.Right","text":"<pre><code>func (c *StandardCamera) Right() matrix.Vec3\n</code></pre> <p>Right returns the right vector of the camera.</p>"},{"location":"api/cameras/#standardcamerasetfov","title":"StandardCamera.SetFOV","text":"<pre><code>func (c *StandardCamera) SetFOV(fov float32)\n</code></pre> <p>SetFOV sets the field of view for the camera.</p>"},{"location":"api/cameras/#standardcamerasetfarplane","title":"StandardCamera.SetFarPlane","text":"<pre><code>func (c *StandardCamera) SetFarPlane(far float32)\n</code></pre> <p>SetFarPlane sets the far plane for the camera.</p>"},{"location":"api/cameras/#standardcamerasetheight","title":"StandardCamera.SetHeight","text":"<pre><code>func (c *StandardCamera) SetHeight(height float32)\n</code></pre> <p>SetHeight sets the height of the camera viewport.</p>"},{"location":"api/cameras/#standardcamerasetlookat","title":"StandardCamera.SetLookAt","text":"<pre><code>func (c *StandardCamera) SetLookAt(position matrix.Vec3)\n</code></pre> <p>SetLookAt sets the look at position of the camera.</p>"},{"location":"api/cameras/#standardcamerasetlookatwithup","title":"StandardCamera.SetLookAtWithUp","text":"<pre><code>func (c *StandardCamera) SetLookAtWithUp(point, up matrix.Vec3)\n</code></pre> <p>SetLookAtWithUp sets the look at position of the camera and the up vector to use.</p>"},{"location":"api/cameras/#standardcamerasetnearplane","title":"StandardCamera.SetNearPlane","text":"<pre><code>func (c *StandardCamera) SetNearPlane(near float32)\n</code></pre> <p>SetNearPlane sets the near plane for the camera.</p>"},{"location":"api/cameras/#standardcamerasetposition","title":"StandardCamera.SetPosition","text":"<pre><code>func (c *StandardCamera) SetPosition(position matrix.Vec3)\n</code></pre> <p>SetPosition sets the position of the camera.</p>"},{"location":"api/cameras/#standardcamerasetpositionandlookat","title":"StandardCamera.SetPositionAndLookAt","text":"<pre><code>func (c *StandardCamera) SetPositionAndLookAt(position, lookAt matrix.Vec3)\n</code></pre> <p>SetPositionAndLookAt sets the position and look at position of the camera. This is often useful for when the camera warps to another location in space and avoids needless view matrix updates when setting the position and look at separately.</p>"},{"location":"api/cameras/#standardcamerasetproperties","title":"StandardCamera.SetProperties","text":"<pre><code>func (c *StandardCamera) SetProperties(fov, nearPlane, farPlane, width, height float32)\n</code></pre> <p>SetProperties is quick access to set many properties of the camera at once. This is typically used for initializing the camera to new values. Calling each individual setter for fields would otherwise do needless projection matrix updates.</p>"},{"location":"api/cameras/#standardcamerasetwidth","title":"StandardCamera.SetWidth","text":"<pre><code>func (c *StandardCamera) SetWidth(width float32)\n</code></pre> <p>SetWidth sets the width of the camera viewport.</p>"},{"location":"api/cameras/#standardcameratryplanehit","title":"StandardCamera.TryPlaneHit","text":"<pre><code>func (c *StandardCamera) TryPlaneHit(screenPos matrix.Vec2, planePos, planeNml matrix.Vec3) (hit matrix.Vec3, success bool)\n</code></pre> <p>TryPlaneHit will project a ray from the camera's position given a screen position and test if it hits a plane. If it does, it will return the hit position and true. If it does not, it will return the zero vector and false.</p>"},{"location":"api/cameras/#standardcameraup","title":"StandardCamera.Up","text":"<pre><code>func (c *StandardCamera) Up() matrix.Vec3\n</code></pre> <p>Up returns the up vector of the camera.</p>"},{"location":"api/cameras/#standardcameraview","title":"StandardCamera.View","text":"<pre><code>func (c *StandardCamera) View() matrix.Mat4\n</code></pre> <p>View will return the view matrix of the camera.</p>"},{"location":"api/cameras/#standardcameraviewportchanged","title":"StandardCamera.ViewportChanged","text":"<pre><code>func (c *StandardCamera) ViewportChanged(width, height float32)\n</code></pre> <p>ViewportChanged will update the camera's projection matrix and should only be used when there is a change in the viewport. This is typically done internally in the system and should not be called by the end-developer.</p>"},{"location":"api/cameras/#standardcamerawidth","title":"StandardCamera.Width","text":"<pre><code>func (c *StandardCamera) Width() float32\n</code></pre> <p>Width will return the width of the camera's viewport.</p>"},{"location":"api/cameras/#turntablecamera","title":"TurntableCamera","text":"<p><code>struct</code></p> <pre><code>type TurntableCamera struct {\n    StandardCamera\n\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/cameras/#toturntable","title":"ToTurntable","text":"<pre><code>func ToTurntable(camera *StandardCamera) *TurntableCamera\n</code></pre> <p>ToTurntable converts a standard camera to a turntable camera.</p>"},{"location":"api/cameras/#turntablecameradolly","title":"TurntableCamera.Dolly","text":"<pre><code>func (c *TurntableCamera) Dolly(delta float32)\n</code></pre> <p>Dolly moves the camera closer/further from the look at point by the given delta.</p>"},{"location":"api/cameras/#turntablecameraorbit","title":"TurntableCamera.Orbit","text":"<pre><code>func (c *TurntableCamera) Orbit(delta matrix.Vec3)\n</code></pre> <p>Orbit orbits the camera around the look at point by the given delta.</p>"},{"location":"api/cameras/#turntablecamerapan","title":"TurntableCamera.Pan","text":"<pre><code>func (c *TurntableCamera) Pan(delta matrix.Vec3)\n</code></pre> <p>Pan pans the camera while keeping the same facing by the given delta.</p>"},{"location":"api/cameras/#turntablecamerapitch","title":"TurntableCamera.Pitch","text":"<pre><code>func (c *TurntableCamera) Pitch() float32\n</code></pre> <p>Pitch returns the pitch of the camera.</p>"},{"location":"api/cameras/#turntablecameraraycast","title":"TurntableCamera.RayCast","text":"<pre><code>func (c *TurntableCamera) RayCast(screenPos matrix.Vec2) collision.Ray\n</code></pre> <p>RayCast will project a ray from the camera's position given a screen position using the camera's view and projection matrices.</p>"},{"location":"api/cameras/#turntablecamerasetlookat","title":"TurntableCamera.SetLookAt","text":"<pre><code>func (c *TurntableCamera) SetLookAt(lookAt matrix.Vec3)\n</code></pre> <p>SetLookAt sets the look at position of the camera.</p>"},{"location":"api/cameras/#turntablecamerasetlookatwithup","title":"TurntableCamera.SetLookAtWithUp","text":"<pre><code>func (c *TurntableCamera) SetLookAtWithUp(point, up matrix.Vec3)\n</code></pre> <p>SetLookAtWithUp sets the look at position of the camera and the up vector to use.</p>"},{"location":"api/cameras/#turntablecamerasetpitch","title":"TurntableCamera.SetPitch","text":"<pre><code>func (c *TurntableCamera) SetPitch(pitch float32)\n</code></pre> <p>SetPitch sets the pitch of the camera.</p>"},{"location":"api/cameras/#turntablecamerasetposition","title":"TurntableCamera.SetPosition","text":"<pre><code>func (c *TurntableCamera) SetPosition(position matrix.Vec3)\n</code></pre> <p>SetPosition sets the position of the camera.</p>"},{"location":"api/cameras/#turntablecamerasetyaw","title":"TurntableCamera.SetYaw","text":"<pre><code>func (c *TurntableCamera) SetYaw(yaw float32)\n</code></pre> <p>SetYaw sets the yaw of the camera.</p>"},{"location":"api/cameras/#turntablecamerasetyawandpitch","title":"TurntableCamera.SetYawAndPitch","text":"<pre><code>func (c *TurntableCamera) SetYawAndPitch(yaw, pitch float32)\n</code></pre> <p>SetYawAndPitch sets the yaw and pitch of the camera. This helps skip needless view matrix calculations by setting both before updating the view.</p>"},{"location":"api/cameras/#turntablecamerasetyawpitchzoom","title":"TurntableCamera.SetYawPitchZoom","text":"<pre><code>func (c *TurntableCamera) SetYawPitchZoom(yaw, pitch, zoom float32)\n</code></pre> <p>SetYawPitchZoom sets the yaw, pitch, and zoom of the camera. This helps skip needless view matrix calculations by setting all three before updating the view.</p>"},{"location":"api/cameras/#turntablecamerasetzoom","title":"TurntableCamera.SetZoom","text":"<pre><code>func (c *TurntableCamera) SetZoom(zoom float32)\n</code></pre> <p>SetZoom sets the zoom of the camera.</p>"},{"location":"api/cameras/#turntablecamerayaw","title":"TurntableCamera.Yaw","text":"<pre><code>func (c *TurntableCamera) Yaw() float32\n</code></pre> <p>Yaw returns the yaw of the camera.</p>"},{"location":"api/cameras/#turntablecamerazoom","title":"TurntableCamera.Zoom","text":"<pre><code>func (c *TurntableCamera) Zoom() float32\n</code></pre> <p>Zoom returns the zoom of the camera.</p>"},{"location":"api/collision/","title":"package collision","text":"<pre><code>import \"kaiju/collision\"\n</code></pre>"},{"location":"api/collision/#functions","title":"Functions","text":""},{"location":"api/collision/#pointoutsideofplane","title":"PointOutsideOfPlane","text":"<pre><code>func PointOutsideOfPlane(p, a, b, c, d matrix.Vec3) bool\n</code></pre> <p>PointOutsideOfPlane returns true if the given point is outside of the plane</p>"},{"location":"api/collision/#types","title":"Types","text":""},{"location":"api/collision/#aabb","title":"AABB","text":"<p><code>struct</code></p> <pre><code>type AABB struct {\n    Center matrix.Vec3\n    Extent matrix.Vec3\n}\n</code></pre> <p>AABB is an axis-aligned bounding box</p>"},{"location":"api/collision/#aabbfromminmax","title":"AABBFromMinMax","text":"<pre><code>func AABBFromMinMax(min, max matrix.Vec3) AABB\n</code></pre> <p>AABBFromMinMax creates an AABB from the minimum and maximum points</p>"},{"location":"api/collision/#aabbfromwidth","title":"AABBFromWidth","text":"<pre><code>func AABBFromWidth(center matrix.Vec3, halfWidth matrix.Float) AABB\n</code></pre> <p>AABBFromWidth creates an AABB from the center and half-width</p>"},{"location":"api/collision/#aabbunion","title":"AABBUnion","text":"<pre><code>func AABBUnion(a, b AABB) AABB\n</code></pre> <p>Union returns the union of two AABBs</p>"},{"location":"api/collision/#aabbaabbintersect","title":"AABB.AABBIntersect","text":"<pre><code>func (a *AABB) AABBIntersect(b AABB) bool\n</code></pre> <p>AABBIntersect returns whether the AABB intersects another AABB</p>"},{"location":"api/collision/#aabbclosestdistance","title":"AABB.ClosestDistance","text":"<pre><code>func (a AABB) ClosestDistance(b AABB) matrix.Float\n</code></pre> <p>ClosestDistance returns the closest distance between two AABBs</p>"},{"location":"api/collision/#aabbcontains","title":"AABB.Contains","text":"<pre><code>func (box *AABB) Contains(point matrix.Vec3) bool\n</code></pre> <p>Contains returns whether the AABB contains the point</p>"},{"location":"api/collision/#aabbcontainsaabb","title":"AABB.ContainsAABB","text":"<pre><code>func (box *AABB) ContainsAABB(b AABB) bool\n</code></pre> <p>ContainsAABB returns whether the AABB contains another AABB</p>"},{"location":"api/collision/#aabbfromtriangle","title":"AABB.FromTriangle","text":"<pre><code>func (box *AABB) FromTriangle(triangle DetailedTriangle) AABB\n</code></pre> <p>FromTriangle returns an AABB that contains the triangle</p>"},{"location":"api/collision/#aabbinfrustum","title":"AABB.InFrustum","text":"<pre><code>func (box *AABB) InFrustum(frustum Frustum) bool\n</code></pre> <p>InFrustum returns whether the AABB is in the frustum</p>"},{"location":"api/collision/#aabblongestaxis","title":"AABB.LongestAxis","text":"<pre><code>func (box *AABB) LongestAxis() int\n</code></pre> <p>LongestAxis returns the longest axis of the AABB (0 = X, 1 = Y, 2 = Z)</p>"},{"location":"api/collision/#aabbmax","title":"AABB.Max","text":"<pre><code>func (box *AABB) Max() matrix.Vec3\n</code></pre> <p>Max returns the maximum point of the AABB</p>"},{"location":"api/collision/#aabbmin","title":"AABB.Min","text":"<pre><code>func (box *AABB) Min() matrix.Vec3\n</code></pre> <p>Min returns the minimum point of the AABB</p>"},{"location":"api/collision/#aabbplaneintersect","title":"AABB.PlaneIntersect","text":"<pre><code>func (box *AABB) PlaneIntersect(plane Plane) bool\n</code></pre> <p>PlaneIntersect returns whether the AABB intersects a plane</p>"},{"location":"api/collision/#aabbrayhit","title":"AABB.RayHit","text":"<pre><code>func (box *AABB) RayHit(ray Ray) (matrix.Vec3, bool)\n</code></pre> <p>RayHit returns the point of intersection and whether the ray hit the AABB</p>"},{"location":"api/collision/#aabbsize","title":"AABB.Size","text":"<pre><code>func (box AABB) Size() matrix.Vec3\n</code></pre> <p>Size returns the size of the AABB</p>"},{"location":"api/collision/#aabbtriangleintersect","title":"AABB.TriangleIntersect","text":"<pre><code>func (box *AABB) TriangleIntersect(tri DetailedTriangle) bool\n</code></pre> <p>TriangleIntersect returns whether the AABB intersects a triangle</p>"},{"location":"api/collision/#bvh","title":"BVH","text":"<p><code>struct</code></p> <pre><code>type BVH struct {\n    Left      *BVH\n    Right     *BVH\n    Parent    *BVH\n    Transform *matrix.Transform\n    Data      HitObject\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/collision/#bvhbottomup","title":"BVHBottomUp","text":"<pre><code>func BVHBottomUp(triangles []DetailedTriangle, transform *matrix.Transform) *BVH\n</code></pre> <p>BVHBottomUp constructs a BVH from a list of triangles</p>"},{"location":"api/collision/#bvhinsert","title":"BVHInsert","text":"<pre><code>func BVHInsert(into, other *BVH) *BVH\n</code></pre> <p>BVHInsert inserts a new BVH into an existing BVH, returning the new root</p>"},{"location":"api/collision/#newbvh","title":"NewBVH","text":"<pre><code>func NewBVH() *BVH\n</code></pre>"},{"location":"api/collision/#bvhbounds","title":"BVH.Bounds","text":"<pre><code>func (b *BVH) Bounds() AABB\n</code></pre>"},{"location":"api/collision/#bvhduplicate","title":"BVH.Duplicate","text":"<pre><code>func (b *BVH) Duplicate() *BVH\n</code></pre>"},{"location":"api/collision/#bvhinsert_1","title":"BVH.Insert","text":"<pre><code>func (into *BVH) Insert(other *BVH)\n</code></pre>"},{"location":"api/collision/#bvhisleaf","title":"BVH.IsLeaf","text":"<pre><code>func (b *BVH) IsLeaf() bool\n</code></pre> <p>IsLeaf returns whether or not the BVH is a leaf node</p>"},{"location":"api/collision/#bvhisleft","title":"BVH.IsLeft","text":"<pre><code>func (b *BVH) IsLeft() bool\n</code></pre> <p>IsLeft returns whether or not the BVH is the left child of its parent</p>"},{"location":"api/collision/#bvhisright","title":"BVH.IsRight","text":"<pre><code>func (b *BVH) IsRight() bool\n</code></pre> <p>IsRight returns whether or not the BVH is the right child of its parent</p>"},{"location":"api/collision/#bvhisroot","title":"BVH.IsRoot","text":"<pre><code>func (b *BVH) IsRoot() bool\n</code></pre> <p>IsRoot returns whether or not the BVH is the root node</p>"},{"location":"api/collision/#bvhrayhit","title":"BVH.RayHit","text":"<pre><code>func (b *BVH) RayHit(ray Ray, rayLen matrix.Float) (matrix.Vec3, bool)\n</code></pre> <p>RayHit returns the point of intersection and whether or not the ray hit the BVH. The point of intersection is the closest point of intersection along the ray.</p>"},{"location":"api/collision/#bvhremovenode","title":"BVH.RemoveNode","text":"<pre><code>func (b *BVH) RemoveNode()\n</code></pre> <p>RemoveNode removes a node from the BVH and adjusts the tree accordingly. If the node is the root, nothing is done.</p>"},{"location":"api/collision/#bvhroot","title":"BVH.Root","text":"<pre><code>func (b *BVH) Root() *BVH\n</code></pre>"},{"location":"api/collision/#detailedtriangle","title":"DetailedTriangle","text":"<p><code>struct</code></p> <pre><code>type DetailedTriangle struct {\n    Points   [3]matrix.Vec3\n    Normal   matrix.Vec3\n    Centroid matrix.Vec3\n    Radius   matrix.Float\n}\n</code></pre>"},{"location":"api/collision/#detailedtrianglefrompoints","title":"DetailedTriangleFromPoints","text":"<pre><code>func DetailedTriangleFromPoints(points [3]matrix.Vec3) DetailedTriangle\n</code></pre> <p>DetailedTriangleFromPoints creates a detailed triangle from three points, a detailed triangle is different from a regular triangle in that it contains additional information such as the centroid and radius</p>"},{"location":"api/collision/#detailedtrianglebounds","title":"DetailedTriangle.Bounds","text":"<pre><code>func (t *DetailedTriangle) Bounds() AABB\n</code></pre>"},{"location":"api/collision/#detailedtrianglerayintersect","title":"DetailedTriangle.RayIntersect","text":"<pre><code>func (t *DetailedTriangle) RayIntersect(ray Ray, length float32) bool\n</code></pre>"},{"location":"api/collision/#frustum","title":"Frustum","text":"<p><code>struct</code></p> <pre><code>type Frustum struct {\n    Planes [6]Plane\n}\n</code></pre>"},{"location":"api/collision/#hitobject","title":"HitObject","text":"<p><code>interface</code></p> <pre><code>type HitObject interface {\n    Bounds() AABB\n    RayIntersect(ray Ray, length float32) bool\n}\n</code></pre>"},{"location":"api/collision/#obb","title":"OBB","text":"<p><code>struct</code></p> <pre><code>type OBB struct {\n    Center      matrix.Vec3\n    Extent      matrix.Vec3\n    Orientation matrix.Mat3\n}\n</code></pre>"},{"location":"api/collision/#obbfromaabb","title":"OBBFromAABB","text":"<pre><code>func OBBFromAABB(aabb AABB) OBB\n</code></pre>"},{"location":"api/collision/#obbcontainspoint","title":"OBB.ContainsPoint","text":"<pre><code>func (o OBB) ContainsPoint(point matrix.Vec3) bool\n</code></pre>"},{"location":"api/collision/#obbintersect","title":"OBB.Intersect","text":"<pre><code>func (o OBB) Intersect(other OBB) bool\n</code></pre>"},{"location":"api/collision/#obboverlaps","title":"OBB.Overlaps","text":"<pre><code>func (o OBB) Overlaps(other OBB) bool\n</code></pre>"},{"location":"api/collision/#obbprojectontoaxis","title":"OBB.ProjectOntoAxis","text":"<pre><code>func (o OBB) ProjectOntoAxis(axis matrix.Vec3) OBB\n</code></pre>"},{"location":"api/collision/#octree","title":"Octree","text":"<p><code>struct</code></p> <pre><code>type Octree struct {\n    Center    matrix.Vec3\n    HalfWidth matrix.Float\n    Children  [8]*Octree\n    Objects   []HitObject\n}\n</code></pre>"},{"location":"api/collision/#newoctree","title":"NewOctree","text":"<pre><code>func NewOctree(center matrix.Vec3, halfWidth matrix.Float, maxDepth int) *Octree\n</code></pre>"},{"location":"api/collision/#octreeformesh","title":"OctreeForMesh","text":"<pre><code>func OctreeForMesh(mesh []matrix.Vec3) *Octree\n</code></pre>"},{"location":"api/collision/#octreeasaabb","title":"Octree.AsAABB","text":"<pre><code>func (o *Octree) AsAABB() AABB\n</code></pre>"},{"location":"api/collision/#octreeinsert","title":"Octree.Insert","text":"<pre><code>func (node *Octree) Insert(obj HitObject)\n</code></pre>"},{"location":"api/collision/#plane","title":"Plane","text":"<p><code>struct</code></p> <pre><code>type Plane struct {\n    Normal matrix.Vec3\n    Dot    matrix.Float\n}\n</code></pre>"},{"location":"api/collision/#planeccw","title":"PlaneCCW","text":"<pre><code>func PlaneCCW(a, b, c matrix.Vec3) Plane\n</code></pre> <p>PlaneCCW creates a plane from three points in counter clockwise order</p>"},{"location":"api/collision/#planeclosestpoint","title":"Plane.ClosestPoint","text":"<pre><code>func (p Plane) ClosestPoint(point matrix.Vec3) matrix.Vec3\n</code></pre> <p>ClosestPoint returns the closest point on the plane to the given point</p>"},{"location":"api/collision/#planedistance","title":"Plane.Distance","text":"<pre><code>func (p Plane) Distance(point matrix.Vec3) float32\n</code></pre> <p>Distance returns the distance from the plane to the given point</p>"},{"location":"api/collision/#planesetfloatvalue","title":"Plane.SetFloatValue","text":"<pre><code>func (p *Plane) SetFloatValue(value float32, index int)\n</code></pre> <p>SetFloatValue sets the value of the plane at the given index (X, Y, Z, Dot)</p>"},{"location":"api/collision/#planetoarray","title":"Plane.ToArray","text":"<pre><code>func (p Plane) ToArray() [4]float32\n</code></pre> <p>ToArray converts the plane to an array of 4 floats</p>"},{"location":"api/collision/#planetovec4","title":"Plane.ToVec4","text":"<pre><code>func (p Plane) ToVec4() matrix.Vec4\n</code></pre> <p>ToVec4 converts the plane to a Vec4 (analogous to ToArray)</p>"},{"location":"api/collision/#ray","title":"Ray","text":"<p><code>struct</code></p> <pre><code>type Ray struct {\n    Origin    matrix.Vec3\n    Direction matrix.Vec3\n}\n</code></pre>"},{"location":"api/collision/#rayplanehit","title":"Ray.PlaneHit","text":"<pre><code>func (r Ray) PlaneHit(planePosition, planeNormal matrix.Vec3) (hit matrix.Vec3, success bool)\n</code></pre> <p>PlaneHit returns the point of intersection with the plane and true if the ray hits the plane</p>"},{"location":"api/collision/#raypoint","title":"Ray.Point","text":"<pre><code>func (r Ray) Point(distance float32) matrix.Vec3\n</code></pre> <p>Point returns the point at the given distance along the ray</p>"},{"location":"api/collision/#rayspherehit","title":"Ray.SphereHit","text":"<pre><code>func (r Ray) SphereHit(center matrix.Vec3, radius, maxLen float32) bool\n</code></pre> <p>SphereHit returns true if the ray hits the sphere</p>"},{"location":"api/collision/#raytrianglehit","title":"Ray.TriangleHit","text":"<pre><code>func (r Ray) TriangleHit(rayLen float32, a, b, c matrix.Vec3) bool\n</code></pre> <p>TriangleHit returns true if the ray hits the triangle defined by the three points</p>"},{"location":"api/collision/#segment","title":"Segment","text":"<p><code>struct</code></p> <pre><code>type Segment struct {\n    A matrix.Vec3\n    B matrix.Vec3\n}\n</code></pre>"},{"location":"api/collision/#linesegmentfromray","title":"LineSegmentFromRay","text":"<pre><code>func LineSegmentFromRay(ray Ray, length float32) Segment\n</code></pre> <p>LineSegmentFromRay creates a line segment from a ray</p>"},{"location":"api/collision/#segmenttrianglehit","title":"Segment.TriangleHit","text":"<pre><code>func (l Segment) TriangleHit(a, b, c matrix.Vec3) bool\n</code></pre> <p>TriangleHit returns true if the segment hits the triangle defined by the three points</p>"},{"location":"api/collision/#triangle","title":"Triangle","text":"<p><code>struct</code></p> <pre><code>type Triangle struct {\n    P           Plane\n    EdgePlaneBC Plane\n    EdgePlaneCA Plane\n}\n</code></pre>"},{"location":"api/concurrent/","title":"package concurrent","text":"<pre><code>import \"kaiju/concurrent\"\n</code></pre>"},{"location":"api/concurrent/#types","title":"Types","text":""},{"location":"api/concurrent/#workgroup","title":"WorkGroup","text":"<p><code>struct</code></p> <pre><code>type WorkGroup struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/concurrent/#workgroupadd","title":"WorkGroup.Add","text":"<pre><code>func (w *WorkGroup) Add(name string, work func())\n</code></pre>"},{"location":"api/concurrent/#workgroupexecute","title":"WorkGroup.Execute","text":"<pre><code>func (w *WorkGroup) Execute(name string)\n</code></pre>"},{"location":"api/contexts/","title":"package contexts","text":"<pre><code>import \"kaiju/contexts\"\n</code></pre>"},{"location":"api/contexts/#types","title":"Types","text":""},{"location":"api/contexts/#cancellable","title":"Cancellable","text":"<p><code>struct</code></p> <pre><code>type Cancellable struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/contexts/#newcancellable","title":"NewCancellable","text":"<pre><code>func NewCancellable() *Cancellable\n</code></pre>"},{"location":"api/contexts/#cancellablecancel","title":"Cancellable.Cancel","text":"<pre><code>func (p *Cancellable) Cancel()\n</code></pre>"},{"location":"api/contexts/#cancellabledeadline","title":"Cancellable.Deadline","text":"<pre><code>func (p *Cancellable) Deadline() (time.Time, bool)\n</code></pre>"},{"location":"api/contexts/#cancellabledone","title":"Cancellable.Done","text":"<pre><code>func (p *Cancellable) Done() &lt;-chan struct{}\n</code></pre>"},{"location":"api/contexts/#cancellableerr","title":"Cancellable.Err","text":"<pre><code>func (p *Cancellable) Err() error\n</code></pre>"},{"location":"api/contexts/#cancellablevalue","title":"Cancellable.Value","text":"<pre><code>func (p *Cancellable) Value(any) any\n</code></pre>"},{"location":"api/editor/","title":"package editor","text":"<pre><code>import \"kaiju/editor\"\n</code></pre>"},{"location":"api/editor/#types","title":"Types","text":""},{"location":"api/editor/#editor","title":"Editor","text":"<p><code>struct</code></p> <pre><code>type Editor struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/#new","title":"New","text":"<pre><code>func New() *Editor\n</code></pre>"},{"location":"api/editor/#editoravailabledatabindings","title":"Editor.AvailableDataBindings","text":"<pre><code>func (e *Editor) AvailableDataBindings() []codegen.GeneratedType\n</code></pre>"},{"location":"api/editor/#editorbvh","title":"Editor.BVH","text":"<pre><code>func (e *Editor) BVH() *collision.BVH\n</code></pre>"},{"location":"api/editor/#editorbvhentityupdates","title":"Editor.BVHEntityUpdates","text":"<pre><code>func (e *Editor) BVHEntityUpdates(entities ...*engine.Entity)\n</code></pre>"},{"location":"api/editor/#editorclosed","title":"Editor.Closed","text":"<pre><code>func (e *Editor) Closed()\n</code></pre>"},{"location":"api/editor/#editorcontainer","title":"Editor.Container","text":"<pre><code>func (e *Editor) Container() *host_container.Container\n</code></pre>"},{"location":"api/editor/#editorcontentopener","title":"Editor.ContentOpener","text":"<pre><code>func (e *Editor) ContentOpener() *content_opener.Opener\n</code></pre>"},{"location":"api/editor/#editorcontextmenu","title":"Editor.ContextMenu","text":"<pre><code>func (e *Editor) ContextMenu() *context_menu.ContextMenu\n</code></pre>"},{"location":"api/editor/#editorcreateentity","title":"Editor.CreateEntity","text":"<pre><code>func (e *Editor) CreateEntity(name string) *engine.Entity\n</code></pre>"},{"location":"api/editor/#editorhierarchy","title":"Editor.Hierarchy","text":"<pre><code>func (e *Editor) Hierarchy() *hierarchy.Hierarchy\n</code></pre>"},{"location":"api/editor/#editorhistory","title":"Editor.History","text":"<pre><code>func (e *Editor) History() *memento.History\n</code></pre>"},{"location":"api/editor/#editorhost","title":"Editor.Host","text":"<pre><code>func (e *Editor) Host() *engine.Host\n</code></pre>"},{"location":"api/editor/#editorinit","title":"Editor.Init","text":"<pre><code>func (e *Editor) Init()\n</code></pre>"},{"location":"api/editor/#editoropenproject","title":"Editor.OpenProject","text":"<pre><code>func (e *Editor) OpenProject()\n</code></pre>"},{"location":"api/editor/#editorreloadentitydatalisting","title":"Editor.ReloadEntityDataListing","text":"<pre><code>func (e *Editor) ReloadEntityDataListing()\n</code></pre>"},{"location":"api/editor/#editorrunonhost","title":"Editor.RunOnHost","text":"<pre><code>func (e *Editor) RunOnHost(fn func())\n</code></pre>"},{"location":"api/editor/#editorsavelayout","title":"Editor.SaveLayout","text":"<pre><code>func (e *Editor) SaveLayout()\n</code></pre>"},{"location":"api/editor/#editorselection","title":"Editor.Selection","text":"<pre><code>func (e *Editor) Selection() *selection.Selection\n</code></pre>"},{"location":"api/editor/#editorstagemanager","title":"Editor.StageManager","text":"<pre><code>func (e *Editor) StageManager() *stages.Manager\n</code></pre>"},{"location":"api/editor/#editorstatusbar","title":"Editor.StatusBar","text":"<pre><code>func (e *Editor) StatusBar() *status_bar.StatusBar\n</code></pre>"},{"location":"api/editor/#editortag","title":"Editor.Tag","text":"<pre><code>func (e *Editor) Tag() string\n</code></pre>"},{"location":"api/editor/#editorwindowlisting","title":"Editor.WindowListing","text":"<pre><code>func (e *Editor) WindowListing() *editor_window.Listing\n</code></pre>"},{"location":"api/editor/alert/","title":"package alert","text":"<pre><code>import \"kaiju/editor/alert\"\n</code></pre>"},{"location":"api/editor/alert/#functions","title":"Functions","text":""},{"location":"api/editor/alert/#new","title":"New","text":"<pre><code>func New(title, description, ok, cancel string, host *engine.Host) chan bool\n</code></pre>"},{"location":"api/editor/alert/#newinput","title":"NewInput","text":"<pre><code>func NewInput(title, hint, value, ok, cancel string, host *engine.Host) chan string\n</code></pre>"},{"location":"api/editor/cache/editor_cache/","title":"package editor_cache","text":"<pre><code>import \"kaiju/editor/cache/editor_cache\"\n</code></pre>"},{"location":"api/editor/cache/editor_cache/#constants","title":"Constants","text":""},{"location":"api/editor/cache/editor_cache/#cachefolder","title":"CacheFolder","text":"<p><code>\"Kaiju\"</code></p>"},{"location":"api/editor/cache/editor_cache/#mainwindow","title":"MainWindow","text":"<p><code>\"main\"</code></p>"},{"location":"api/editor/cache/editor_cache/#logwindow","title":"LogWindow","text":"<p><code>\"log\"</code></p>"},{"location":"api/editor/cache/editor_cache/#contentwindow","title":"ContentWindow","text":"<p><code>\"content\"</code></p>"},{"location":"api/editor/cache/editor_cache/#hierarchywindow","title":"HierarchyWindow","text":"<p><code>\"hierarchy\"</code></p>"},{"location":"api/editor/cache/editor_cache/#kaijugocompiler","title":"KaijuGoCompiler","text":"<p><code>\"goCompilerPath\"</code></p>"},{"location":"api/editor/cache/editor_cache/#gridsnapping","title":"GridSnapping","text":"<p><code>\"gridSnapping\"</code></p>"},{"location":"api/editor/cache/editor_cache/#rotationsnapping","title":"RotationSnapping","text":"<p><code>\"rotationSnapping\"</code></p>"},{"location":"api/editor/cache/editor_cache/#functions","title":"Functions","text":""},{"location":"api/editor/cache/editor_cache/#addproject","title":"AddProject","text":"<pre><code>func AddProject(project string) error\n</code></pre>"},{"location":"api/editor/cache/editor_cache/#editorconfigvalue","title":"EditorConfigValue","text":"<pre><code>func EditorConfigValue(key string) (any, bool)\n</code></pre>"},{"location":"api/editor/cache/editor_cache/#listprojects","title":"ListProjects","text":"<pre><code>func ListProjects() ([]string, error)\n</code></pre>"},{"location":"api/editor/cache/editor_cache/#removeproject","title":"RemoveProject","text":"<pre><code>func RemoveProject(project string) error\n</code></pre>"},{"location":"api/editor/cache/editor_cache/#savewindowcache","title":"SaveWindowCache","text":"<pre><code>func SaveWindowCache() error\n</code></pre>"},{"location":"api/editor/cache/editor_cache/#seteditorconfigvalue","title":"SetEditorConfigValue","text":"<pre><code>func SetEditorConfigValue(key string, value any)\n</code></pre>"},{"location":"api/editor/cache/editor_cache/#setwindow","title":"SetWindow","text":"<pre><code>func SetWindow(key string, x, y, w, h int, isOpen bool)\n</code></pre>"},{"location":"api/editor/cache/editor_cache/#windowwasopen","title":"WindowWasOpen","text":"<pre><code>func WindowWasOpen(key string) bool\n</code></pre>"},{"location":"api/editor/cache/editor_cache/#types","title":"Types","text":""},{"location":"api/editor/cache/editor_cache/#windowinfo","title":"WindowInfo","text":"<p><code>struct</code></p> <pre><code>type WindowInfo struct {\n    X      int\n    Y      int\n    Width  int\n    Height int\n    Open   bool\n}\n</code></pre>"},{"location":"api/editor/cache/editor_cache/#window","title":"Window","text":"<pre><code>func Window(key string) (WindowInfo, error)\n</code></pre>"},{"location":"api/editor/codegen/","title":"package codegen","text":"<pre><code>import \"kaiju/editor/codegen\"\n</code></pre>"},{"location":"api/editor/codegen/#functions","title":"Functions","text":""},{"location":"api/editor/codegen/#registertype","title":"RegisterType","text":"<pre><code>func RegisterType(t any)\n</code></pre>"},{"location":"api/editor/codegen/#registertypename","title":"RegisterTypeName","text":"<pre><code>func RegisterTypeName(name string, t any)\n</code></pre>"},{"location":"api/editor/codegen/#types","title":"Types","text":""},{"location":"api/editor/codegen/#generatedtype","title":"GeneratedType","text":"<p><code>struct</code></p> <pre><code>type GeneratedType struct {\n    Pkg     string\n    PkgPath string\n    Name    string\n    Fields  []reflect.StructField\n    Type    reflect.Type\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/codegen/#walk","title":"Walk","text":"<pre><code>func Walk(srcPath, pkgPrefix string) ([]GeneratedType, error)\n</code></pre>"},{"location":"api/editor/codegen/#generatedtypenew","title":"GeneratedType.New","text":"<pre><code>func (g *GeneratedType) New() RuntimeType\n</code></pre>"},{"location":"api/editor/codegen/#runtimetype","title":"RuntimeType","text":"<p><code>struct</code></p> <pre><code>type RuntimeType struct {\n    Generator *GeneratedType\n    Value     reflect.Value\n}\n</code></pre>"},{"location":"api/editor/content/content_history/","title":"package content_history","text":"<pre><code>import \"kaiju/editor/content/content_history\"\n</code></pre>"},{"location":"api/editor/content/content_history/#types","title":"Types","text":""},{"location":"api/editor/content/content_history/#modelopen","title":"ModelOpen","text":"<p><code>struct</code></p> <pre><code>type ModelOpen struct {\n    Host   *engine.Host\n    Entity *engine.Entity\n    Editor interfaces.Editor\n}\n</code></pre>"},{"location":"api/editor/content/content_history/#modelopendelete","title":"ModelOpen.Delete","text":"<pre><code>func (h *ModelOpen) Delete()\n</code></pre>"},{"location":"api/editor/content/content_history/#modelopenexit","title":"ModelOpen.Exit","text":"<pre><code>func (h *ModelOpen) Exit()\n</code></pre>"},{"location":"api/editor/content/content_history/#modelopenredo","title":"ModelOpen.Redo","text":"<pre><code>func (h *ModelOpen) Redo()\n</code></pre>"},{"location":"api/editor/content/content_history/#modelopenundo","title":"ModelOpen.Undo","text":"<pre><code>func (h *ModelOpen) Undo()\n</code></pre>"},{"location":"api/editor/content/content_opener/","title":"package content_opener","text":"<pre><code>import \"kaiju/editor/content/content_opener\"\n</code></pre>"},{"location":"api/editor/content/content_opener/#variables","title":"Variables","text":""},{"location":"api/editor/content/content_opener/#errnoopener","title":"ErrNoOpener","text":"<p><code>errors.New(\"no opener found\")</code></p>"},{"location":"api/editor/content/content_opener/#functions","title":"Functions","text":""},{"location":"api/editor/content/content_opener/#edittextfile","title":"EditTextFile","text":"<pre><code>func EditTextFile(file string) error\n</code></pre>"},{"location":"api/editor/content/content_opener/#isatextfile","title":"IsATextFile","text":"<pre><code>func IsATextFile(file string) bool\n</code></pre>"},{"location":"api/editor/content/content_opener/#types","title":"Types","text":""},{"location":"api/editor/content/content_opener/#contentopener","title":"ContentOpener","text":"<p><code>interface</code></p> <pre><code>type ContentOpener interface {\n    Handles(adi asset_info.AssetDatabaseInfo) bool\n    Open(adi asset_info.AssetDatabaseInfo, ed interfaces.Editor) error\n}\n</code></pre>"},{"location":"api/editor/content/content_opener/#glbopener","title":"GlbOpener","text":"<p><code>struct</code></p> <pre><code>type GlbOpener struct{}\n</code></pre>"},{"location":"api/editor/content/content_opener/#glbopenerhandles","title":"GlbOpener.Handles","text":"<pre><code>func (o GlbOpener) Handles(adi asset_info.AssetDatabaseInfo) bool\n</code></pre>"},{"location":"api/editor/content/content_opener/#glbopeneropen","title":"GlbOpener.Open","text":"<pre><code>func (o GlbOpener) Open(adi asset_info.AssetDatabaseInfo, ed interfaces.Editor) error\n</code></pre>"},{"location":"api/editor/content/content_opener/#gltfopener","title":"GltfOpener","text":"<p><code>struct</code></p> <pre><code>type GltfOpener struct{}\n</code></pre>"},{"location":"api/editor/content/content_opener/#gltfopenerhandles","title":"GltfOpener.Handles","text":"<pre><code>func (o GltfOpener) Handles(adi asset_info.AssetDatabaseInfo) bool\n</code></pre>"},{"location":"api/editor/content/content_opener/#gltfopeneropen","title":"GltfOpener.Open","text":"<pre><code>func (o GltfOpener) Open(adi asset_info.AssetDatabaseInfo, ed interfaces.Editor) error\n</code></pre>"},{"location":"api/editor/content/content_opener/#htmlopener","title":"HTMLOpener","text":"<p><code>struct</code></p> <pre><code>type HTMLOpener struct{}\n</code></pre>"},{"location":"api/editor/content/content_opener/#htmlopenerhandles","title":"HTMLOpener.Handles","text":"<pre><code>func (o HTMLOpener) Handles(adi asset_info.AssetDatabaseInfo) bool\n</code></pre>"},{"location":"api/editor/content/content_opener/#htmlopeneropen","title":"HTMLOpener.Open","text":"<pre><code>func (o HTMLOpener) Open(adi asset_info.AssetDatabaseInfo, ed interfaces.Editor) error\n</code></pre>"},{"location":"api/editor/content/content_opener/#imageopener","title":"ImageOpener","text":"<p><code>struct</code></p> <pre><code>type ImageOpener struct{}\n</code></pre>"},{"location":"api/editor/content/content_opener/#imageopenerhandles","title":"ImageOpener.Handles","text":"<pre><code>func (o ImageOpener) Handles(adi asset_info.AssetDatabaseInfo) bool\n</code></pre>"},{"location":"api/editor/content/content_opener/#imageopeneropen","title":"ImageOpener.Open","text":"<pre><code>func (o ImageOpener) Open(adi asset_info.AssetDatabaseInfo, ed interfaces.Editor) error\n</code></pre>"},{"location":"api/editor/content/content_opener/#objopener","title":"ObjOpener","text":"<p><code>struct</code></p> <pre><code>type ObjOpener struct{}\n</code></pre>"},{"location":"api/editor/content/content_opener/#objopenerhandles","title":"ObjOpener.Handles","text":"<pre><code>func (o ObjOpener) Handles(adi asset_info.AssetDatabaseInfo) bool\n</code></pre>"},{"location":"api/editor/content/content_opener/#objopeneropen","title":"ObjOpener.Open","text":"<pre><code>func (o ObjOpener) Open(adi asset_info.AssetDatabaseInfo, ed interfaces.Editor) error\n</code></pre>"},{"location":"api/editor/content/content_opener/#opener","title":"Opener","text":"<p><code>struct</code></p> <pre><code>type Opener struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/content/content_opener/#new","title":"New","text":"<pre><code>func New(importer *asset_importer.ImportRegistry,\n</code></pre> <p>container host_container.Container, history memento.History) Opener</p>"},{"location":"api/editor/content/content_opener/#openeropen","title":"Opener.Open","text":"<pre><code>func (o *Opener) Open(adi asset_info.AssetDatabaseInfo, ed interfaces.Editor) error\n</code></pre>"},{"location":"api/editor/content/content_opener/#openeropenpath","title":"Opener.OpenPath","text":"<pre><code>func (o *Opener) OpenPath(path string, ed interfaces.Editor) error\n</code></pre>"},{"location":"api/editor/content/content_opener/#openerregister","title":"Opener.Register","text":"<pre><code>func (o *Opener) Register(opener ContentOpener)\n</code></pre>"},{"location":"api/editor/content/content_opener/#shaderpipelineopener","title":"ShaderPipelineOpener","text":"<p><code>struct</code></p> <pre><code>type ShaderPipelineOpener struct{}\n</code></pre>"},{"location":"api/editor/content/content_opener/#shaderpipelineopenerhandles","title":"ShaderPipelineOpener.Handles","text":"<pre><code>func (o ShaderPipelineOpener) Handles(adi asset_info.AssetDatabaseInfo) bool\n</code></pre>"},{"location":"api/editor/content/content_opener/#shaderpipelineopeneropen","title":"ShaderPipelineOpener.Open","text":"<pre><code>func (o ShaderPipelineOpener) Open(adi asset_info.AssetDatabaseInfo, ed interfaces.Editor) error\n</code></pre>"},{"location":"api/editor/content/content_opener/#stageopener","title":"StageOpener","text":"<p><code>struct</code></p> <pre><code>type StageOpener struct{}\n</code></pre>"},{"location":"api/editor/content/content_opener/#stageopenerhandles","title":"StageOpener.Handles","text":"<pre><code>func (o StageOpener) Handles(adi asset_info.AssetDatabaseInfo) bool\n</code></pre>"},{"location":"api/editor/content/content_opener/#stageopeneropen","title":"StageOpener.Open","text":"<pre><code>func (o StageOpener) Open(adi asset_info.AssetDatabaseInfo, ed interfaces.Editor) error\n</code></pre>"},{"location":"api/editor/editor_config/","title":"package editor_config","text":"<pre><code>import \"kaiju/editor/editor_config\"\n</code></pre>"},{"location":"api/editor/editor_config/#types","title":"Types","text":""},{"location":"api/editor/editor_config/#assettype","title":"AssetType","text":"<p>string <pre><code>type AssetType = string\n</code></pre></p> <p>const ( AssetTypeH AssetType = \"h\" AssetTypeC AssetType = \"c\" AssetTypeGo AssetType = \"go\" AssetTypeMap AssetType = \"map\" AssetTypeObj AssetType = \"obj\" AssetTypeGlb AssetType = \"glb\" AssetTypeGltf AssetType = \"gltf\" AssetTypeImage AssetType = \"image\" AssetTypeMesh AssetType = \"mesh\" AssetTypeStage AssetType = \"stg\" AssetTypeHTML AssetType = \"html\" AssetTypeShaderPipeline AssetType = \"shaderpipeline\" )</p>"},{"location":"api/editor/editor_config/#fileextension","title":"FileExtension","text":"<p>string <pre><code>type FileExtension = string\n</code></pre></p> <p>const ( FileExtensionH FileExtension = \".h\" FileExtensionC FileExtension = \".c\" FileExtensionGo FileExtension = \".go\" FileExtensionMap FileExtension = \".map\" FileExtensionObj FileExtension = \".obj\" FileExtensionGlb FileExtension = \".glb\" FileExtensionGltf FileExtension = \".gltf\" FileExtensionPng FileExtension = \".png\" FileExtensionMesh FileExtension = \".msh\" FileExtensionStage FileExtension = \".stg\" FileExtensionHTML FileExtension = \".html\" FileExtensionShaderPipeline FileExtension = \".shaderpipeline\" FileExtensionAssetDbInfo FileExtension = \".adi\" )</p>"},{"location":"api/editor/interfaces/","title":"package interfaces","text":"<pre><code>import \"kaiju/editor/interfaces\"\n</code></pre>"},{"location":"api/editor/interfaces/#types","title":"Types","text":""},{"location":"api/editor/interfaces/#editor","title":"Editor","text":"<p><code>interface</code></p> <pre><code>type Editor interface {\n    Container() *host_container.Container\n    Host() *engine.Host\n    StageManager() *stages.Manager\n    Selection() *selection.Selection\n    History() *memento.History\n    WindowListing() *editor_window.Listing\n    StatusBar() *status_bar.StatusBar\n    Hierarchy() *hierarchy.Hierarchy\n    ContextMenu() *context_menu.ContextMenu\n    OpenProject()\n    AvailableDataBindings() []codegen.GeneratedType\n    ReloadEntityDataListing()\n    CreateEntity(name string) *engine.Entity\n    // TODO:  BVH stuff can be encapsulated into another structure\n    BVH() *collision.BVH\n    BVHEntityUpdates(entities ...*engine.Entity)\n}\n</code></pre>"},{"location":"api/editor/memento/","title":"package memento","text":"<pre><code>import \"kaiju/editor/memento\"\n</code></pre>"},{"location":"api/editor/memento/#types","title":"Types","text":""},{"location":"api/editor/memento/#history","title":"History","text":"<p><code>struct</code></p> <pre><code>type History struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/memento/#newhistory","title":"NewHistory","text":"<pre><code>func NewHistory(limit int) History\n</code></pre>"},{"location":"api/editor/memento/#historyadd","title":"History.Add","text":"<pre><code>func (h *History) Add(m Memento)\n</code></pre>"},{"location":"api/editor/memento/#historyclear","title":"History.Clear","text":"<pre><code>func (h *History) Clear()\n</code></pre>"},{"location":"api/editor/memento/#historyredo","title":"History.Redo","text":"<pre><code>func (h *History) Redo()\n</code></pre>"},{"location":"api/editor/memento/#historyundo","title":"History.Undo","text":"<pre><code>func (h *History) Undo()\n</code></pre>"},{"location":"api/editor/memento/#memento","title":"Memento","text":"<p><code>interface</code></p> <pre><code>type Memento interface {\n    Redo()   // Called to redo the action\n    Undo()   // Called to undo the action\n    Delete() // Called when the undo state is overridden by new undo data\n    Exit()   // Called when the undo state falls off the history list\n}\n</code></pre>"},{"location":"api/editor/project/","title":"package project","text":"<pre><code>import \"kaiju/editor/project\"\n</code></pre>"},{"location":"api/editor/project/#functions","title":"Functions","text":""},{"location":"api/editor/project/#createnew","title":"CreateNew","text":"<pre><code>func CreateNew(path, templatePath string) error\n</code></pre>"},{"location":"api/editor/project/#isprojectdirectory","title":"IsProjectDirectory","text":"<pre><code>func IsProjectDirectory(path string) bool\n</code></pre>"},{"location":"api/editor/project/#scancontent","title":"ScanContent","text":"<pre><code>func ScanContent(importers *asset_importer.ImportRegistry) error\n</code></pre>"},{"location":"api/editor/selection/","title":"package selection","text":"<pre><code>import \"kaiju/editor/selection\"\n</code></pre>"},{"location":"api/editor/selection/#types","title":"Types","text":""},{"location":"api/editor/selection/#selection","title":"Selection","text":"<p><code>struct</code></p> <pre><code>type Selection struct {\n    Changed events.Event\n\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/selection/#new","title":"New","text":"<pre><code>func New(host *engine.Host, history *memento.History) Selection\n</code></pre>"},{"location":"api/editor/selection/#selectionadd","title":"Selection.Add","text":"<pre><code>func (s *Selection) Add(e ...*engine.Entity)\n</code></pre>"},{"location":"api/editor/selection/#selectionbounds","title":"Selection.Bounds","text":"<pre><code>func (s *Selection) Bounds() collision.AABB\n</code></pre>"},{"location":"api/editor/selection/#selectioncenter","title":"Selection.Center","text":"<pre><code>func (s *Selection) Center() matrix.Vec3\n</code></pre>"},{"location":"api/editor/selection/#selectionclear","title":"Selection.Clear","text":"<pre><code>func (s *Selection) Clear()\n</code></pre>"},{"location":"api/editor/selection/#selectioncontains","title":"Selection.Contains","text":"<pre><code>func (s *Selection) Contains(e *engine.Entity) bool\n</code></pre>"},{"location":"api/editor/selection/#selectionentities","title":"Selection.Entities","text":"<pre><code>func (s *Selection) Entities() []*engine.Entity\n</code></pre>"},{"location":"api/editor/selection/#selectionfocus","title":"Selection.Focus","text":"<pre><code>func (s *Selection) Focus(camera cameras.Camera)\n</code></pre>"},{"location":"api/editor/selection/#selectionhasselection","title":"Selection.HasSelection","text":"<pre><code>func (s *Selection) HasSelection() bool\n</code></pre>"},{"location":"api/editor/selection/#selectionisempty","title":"Selection.IsEmpty","text":"<pre><code>func (s *Selection) IsEmpty() bool\n</code></pre>"},{"location":"api/editor/selection/#selectionparent","title":"Selection.Parent","text":"<pre><code>func (s *Selection) Parent(history *memento.History)\n</code></pre>"},{"location":"api/editor/selection/#selectionremove","title":"Selection.Remove","text":"<pre><code>func (s *Selection) Remove(e ...*engine.Entity)\n</code></pre>"},{"location":"api/editor/selection/#selectionset","title":"Selection.Set","text":"<pre><code>func (s *Selection) Set(e ...*engine.Entity)\n</code></pre>"},{"location":"api/editor/selection/#selectiontoggle","title":"Selection.Toggle","text":"<pre><code>func (s *Selection) Toggle(e ...*engine.Entity)\n</code></pre>"},{"location":"api/editor/selection/#selectionuntrackedadd","title":"Selection.UntrackedAdd","text":"<pre><code>func (s *Selection) UntrackedAdd(e ...*engine.Entity)\n</code></pre>"},{"location":"api/editor/selection/#selectionuntrackedclear","title":"Selection.UntrackedClear","text":"<pre><code>func (s *Selection) UntrackedClear()\n</code></pre>"},{"location":"api/editor/selection/#selectionupdate","title":"Selection.Update","text":"<pre><code>func (s *Selection) Update(host *engine.Host)\n</code></pre>"},{"location":"api/editor/stages/","title":"package stages","text":"<pre><code>import \"kaiju/editor/stages\"\n</code></pre>"},{"location":"api/editor/stages/#variables","title":"Variables","text":""},{"location":"api/editor/stages/#errorsavecancelled","title":"ErrorSaveCancelled","text":"<p><code>errors.New(\"save was requested then cancelled\")</code></p>"},{"location":"api/editor/stages/#types","title":"Types","text":""},{"location":"api/editor/stages/#manager","title":"Manager","text":"<p><code>struct</code></p> <pre><code>type Manager struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/stages/#newmanager","title":"NewManager","text":"<pre><code>func NewManager(host *engine.Host, registry *asset_importer.ImportRegistry,\n</code></pre> <p>history *memento.History) Manager</p>"},{"location":"api/editor/stages/#managerload","title":"Manager.Load","text":"<pre><code>func (m *Manager) Load(adi asset_info.AssetDatabaseInfo, host *engine.Host) error\n</code></pre>"},{"location":"api/editor/stages/#managernew","title":"Manager.New","text":"<pre><code>func (m *Manager) New()\n</code></pre>"},{"location":"api/editor/stages/#managersave","title":"Manager.Save","text":"<pre><code>func (m *Manager) Save(statusBar *status_bar.StatusBar) error\n</code></pre>"},{"location":"api/editor/stages/#managerstagename","title":"Manager.StageName","text":"<pre><code>func (m *Manager) StageName() string\n</code></pre>"},{"location":"api/editor/ui/about_window/","title":"package about_window","text":"<pre><code>import \"kaiju/editor/ui/about_window\"\n</code></pre>"},{"location":"api/editor/ui/about_window/#functions","title":"Functions","text":""},{"location":"api/editor/ui/about_window/#new","title":"New","text":"<pre><code>func New()\n</code></pre>"},{"location":"api/editor/ui/content_window/","title":"package content_window","text":"<pre><code>import \"kaiju/editor/ui/content_window\"\n</code></pre>"},{"location":"api/editor/ui/content_window/#types","title":"Types","text":""},{"location":"api/editor/ui/content_window/#contentwindow","title":"ContentWindow","text":"<p><code>struct</code></p> <pre><code>type ContentWindow struct {\n    DirTree []contentEntry\n    Dir     []contentEntry\n\n    Query string\n\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/ui/content_window/#new","title":"New","text":"<pre><code>func New(opener *content_opener.Opener, editor interfaces.Editor, uiMan *ui.Manager) *ContentWindow\n</code></pre>"},{"location":"api/editor/ui/content_window/#contentwindowdragupdate","title":"ContentWindow.DragUpdate","text":"<pre><code>func (s *ContentWindow) DragUpdate()\n</code></pre>"},{"location":"api/editor/ui/content_window/#contentwindowhide","title":"ContentWindow.Hide","text":"<pre><code>func (c *ContentWindow) Hide()\n</code></pre>"},{"location":"api/editor/ui/content_window/#contentwindowisroot","title":"ContentWindow.IsRoot","text":"<pre><code>func (s *ContentWindow) IsRoot() bool\n</code></pre>"},{"location":"api/editor/ui/content_window/#contentwindowshow","title":"ContentWindow.Show","text":"<pre><code>func (c *ContentWindow) Show()\n</code></pre>"},{"location":"api/editor/ui/content_window/#contentwindowtoggle","title":"ContentWindow.Toggle","text":"<pre><code>func (c *ContentWindow) Toggle()\n</code></pre>"},{"location":"api/editor/ui/context_menu/","title":"package context_menu","text":"<pre><code>import \"kaiju/editor/ui/context_menu\"\n</code></pre>"},{"location":"api/editor/ui/context_menu/#types","title":"Types","text":""},{"location":"api/editor/ui/context_menu/#contextmenu","title":"ContextMenu","text":"<p><code>struct</code></p> <pre><code>type ContextMenu struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/ui/context_menu/#new","title":"New","text":"<pre><code>func New(container *host_container.Container, uiMan *ui.Manager) *ContextMenu\n</code></pre>"},{"location":"api/editor/ui/context_menu/#contextmenuhide","title":"ContextMenu.Hide","text":"<pre><code>func (c *ContextMenu) Hide()\n</code></pre>"},{"location":"api/editor/ui/context_menu/#contextmenushow","title":"ContextMenu.Show","text":"<pre><code>func (c *ContextMenu) Show(entries []ContextMenuEntry)\n</code></pre>"},{"location":"api/editor/ui/context_menu/#contextmenuentry","title":"ContextMenuEntry","text":"<p><code>struct</code></p> <pre><code>type ContextMenuEntry struct {\n    Id      string\n    Label   string\n    OnClick func()\n}\n</code></pre>"},{"location":"api/editor/ui/context_menu/#contextmenuset","title":"ContextMenuSet","text":"<p><code>struct</code></p> <pre><code>type ContextMenuSet struct {\n    Entries []ContextMenuEntry\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/ui/context_menu/#newset","title":"NewSet","text":"<pre><code>func NewSet(ctxMenu *ContextMenu, entries []ContextMenuEntry) ContextMenuSet\n</code></pre>"},{"location":"api/editor/ui/context_menu/#contextmenusetshow","title":"ContextMenuSet.Show","text":"<pre><code>func (s *ContextMenuSet) Show()\n</code></pre>"},{"location":"api/editor/ui/context_menu/#contextmenusetshowwithtarget","title":"ContextMenuSet.ShowWithTarget","text":"<pre><code>func (s *ContextMenuSet) ShowWithTarget(target any)\n</code></pre>"},{"location":"api/editor/ui/details_window/","title":"package details_window","text":"<pre><code>import \"kaiju/editor/ui/details_window\"\n</code></pre>"},{"location":"api/editor/ui/details_window/#functions","title":"Functions","text":""},{"location":"api/editor/ui/details_window/#newdatapicker","title":"NewDataPicker","text":"<pre><code>func NewDataPicker(host *engine.Host, types []codegen.GeneratedType) chan int\n</code></pre>"},{"location":"api/editor/ui/details_window/#types","title":"Types","text":""},{"location":"api/editor/ui/details_window/#datapicker","title":"DataPicker","text":"<p><code>struct</code></p> <pre><code>type DataPicker struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/ui/details_window/#details","title":"Details","text":"<p><code>struct</code></p> <pre><code>type Details struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/ui/details_window/#new","title":"New","text":"<pre><code>func New(editor interfaces.Editor, uiMan *ui.Manager) *Details\n</code></pre>"},{"location":"api/editor/ui/details_window/#detailsdragupdate","title":"Details.DragUpdate","text":"<pre><code>func (d *Details) DragUpdate()\n</code></pre>"},{"location":"api/editor/ui/details_window/#detailshide","title":"Details.Hide","text":"<pre><code>func (d *Details) Hide()\n</code></pre>"},{"location":"api/editor/ui/details_window/#detailsshow","title":"Details.Show","text":"<pre><code>func (d *Details) Show()\n</code></pre>"},{"location":"api/editor/ui/details_window/#detailstoggle","title":"Details.Toggle","text":"<pre><code>func (d *Details) Toggle()\n</code></pre>"},{"location":"api/editor/ui/drag_datas/","title":"package drag_datas","text":"<pre><code>import \"kaiju/editor/ui/drag_datas\"\n</code></pre>"},{"location":"api/editor/ui/drag_datas/#types","title":"Types","text":""},{"location":"api/editor/ui/drag_datas/#entityiddragdata","title":"EntityIdDragData","text":"<p><code>struct</code></p> <pre><code>type EntityIdDragData struct {\n    EntityId engine.EntityId\n}\n</code></pre>"},{"location":"api/editor/ui/drag_datas/#entityiddragdatadragupdate","title":"EntityIdDragData.DragUpdate","text":"<pre><code>func (e *EntityIdDragData) DragUpdate()\n</code></pre>"},{"location":"api/editor/ui/editor_menu/","title":"package editor_menu","text":"<pre><code>import \"kaiju/editor/ui/editor_menu\"\n</code></pre>"},{"location":"api/editor/ui/editor_menu/#types","title":"Types","text":""},{"location":"api/editor/ui/editor_menu/#menu","title":"Menu","text":"<p><code>struct</code></p> <pre><code>type Menu struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/ui/editor_menu/#new","title":"New","text":"<pre><code>func New(container *host_container.Container,\n</code></pre> <p>logWindow log_window.LogWindow, contentWindow content_window.ContentWindow, hierarchyWindow hierarchy.Hierarchy, contentOpener content_opener.Opener, editor interfaces.Editor, uiMan ui.Manager) Menu</p>"},{"location":"api/editor/ui/editor_settings_window/","title":"package editor_settings_window","text":"<pre><code>import \"kaiju/editor/ui/editor_settings_window\"\n</code></pre>"},{"location":"api/editor/ui/editor_settings_window/#functions","title":"Functions","text":""},{"location":"api/editor/ui/editor_settings_window/#new","title":"New","text":"<pre><code>func New()\n</code></pre>"},{"location":"api/editor/ui/editor_settings_window/#types","title":"Types","text":""},{"location":"api/editor/ui/editor_settings_window/#editorsettingswindow","title":"EditorSettingsWindow","text":"<p><code>struct</code></p> <pre><code>type EditorSettingsWindow struct {\n    GoCompilerPath   string\n    GridSnapping     float32\n    RotationSnapping float32\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/ui/editor_window/","title":"package editor_window","text":"<pre><code>import \"kaiju/editor/ui/editor_window\"\n</code></pre>"},{"location":"api/editor/ui/editor_window/#functions","title":"Functions","text":""},{"location":"api/editor/ui/editor_window/#openwindow","title":"OpenWindow","text":"<pre><code>func OpenWindow(win EditorWindow,\n</code></pre> <p>defaultWidth, defaultHeight, defaultX, defaultY int)</p>"},{"location":"api/editor/ui/editor_window/#types","title":"Types","text":""},{"location":"api/editor/ui/editor_window/#editorwindow","title":"EditorWindow","text":"<p><code>interface</code></p> <pre><code>type EditorWindow interface {\n    Tag() string\n    Container() *host_container.Container\n    Init()\n    Closed()\n}\n</code></pre>"},{"location":"api/editor/ui/editor_window/#listing","title":"Listing","text":"<p><code>struct</code></p> <pre><code>type Listing struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/ui/editor_window/#new","title":"New","text":"<pre><code>func New() Listing\n</code></pre>"},{"location":"api/editor/ui/editor_window/#listingadd","title":"Listing.Add","text":"<pre><code>func (l *Listing) Add(w EditorWindow)\n</code></pre>"},{"location":"api/editor/ui/editor_window/#listingcloseall","title":"Listing.CloseAll","text":"<pre><code>func (l *Listing) CloseAll()\n</code></pre>"},{"location":"api/editor/ui/editor_window/#listingremove","title":"Listing.Remove","text":"<pre><code>func (l *Listing) Remove(w EditorWindow)\n</code></pre>"},{"location":"api/editor/ui/files_window/","title":"package files_window","text":"<pre><code>import \"kaiju/editor/ui/files_window\"\n</code></pre>"},{"location":"api/editor/ui/files_window/#functions","title":"Functions","text":""},{"location":"api/editor/ui/files_window/#any","title":"Any","text":"<pre><code>func Any(title string) chan string\n</code></pre> <p>Creates a window allowing the person to select any file or folder</p>"},{"location":"api/editor/ui/files_window/#files","title":"Files","text":"<pre><code>func Files(title string, extensions []string) chan string\n</code></pre> <p>Creates a window allowing the person to select a file with the given extensions</p>"},{"location":"api/editor/ui/files_window/#folder","title":"Folder","text":"<pre><code>func Folder(title string) chan string\n</code></pre> <p>Creates a window allowing the person to select a folder</p>"},{"location":"api/editor/ui/files_window/#types","title":"Types","text":""},{"location":"api/editor/ui/files_window/#filewindow","title":"FileWindow","text":"<p><code>struct</code></p> <pre><code>type FileWindow struct {\n    Dir        []fs.DirEntry\n    Path       string\n    Extensions []string\n\n    Folders bool\n\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/ui/files_window/#filewindowcanselectfolder","title":"FileWindow.CanSelectFolder","text":"<pre><code>func (s *FileWindow) CanSelectFolder() bool\n</code></pre>"},{"location":"api/editor/ui/hierarchy/","title":"package hierarchy","text":"<pre><code>import \"kaiju/editor/ui/hierarchy\"\n</code></pre>"},{"location":"api/editor/ui/hierarchy/#types","title":"Types","text":""},{"location":"api/editor/ui/hierarchy/#hierarchy","title":"Hierarchy","text":"<p><code>struct</code></p> <pre><code>type Hierarchy struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/ui/hierarchy/#new","title":"New","text":"<pre><code>func New(host *engine.Host, selection *selection.Selection,\n</code></pre> <p>ctxMenuSet context_menu.ContextMenuSet, uiMan ui.Manager) Hierarchy</p>"},{"location":"api/editor/ui/hierarchy/#hierarchydragupdate","title":"Hierarchy.DragUpdate","text":"<pre><code>func (h *Hierarchy) DragUpdate()\n</code></pre>"},{"location":"api/editor/ui/hierarchy/#hierarchyhide","title":"Hierarchy.Hide","text":"<pre><code>func (h *Hierarchy) Hide()\n</code></pre>"},{"location":"api/editor/ui/hierarchy/#hierarchyreload","title":"Hierarchy.Reload","text":"<pre><code>func (h *Hierarchy) Reload()\n</code></pre>"},{"location":"api/editor/ui/hierarchy/#hierarchyshow","title":"Hierarchy.Show","text":"<pre><code>func (h *Hierarchy) Show()\n</code></pre>"},{"location":"api/editor/ui/hierarchy/#hierarchytoggle","title":"Hierarchy.Toggle","text":"<pre><code>func (h *Hierarchy) Toggle()\n</code></pre>"},{"location":"api/editor/ui/log_window/","title":"package log_window","text":"<pre><code>import \"kaiju/editor/ui/log_window\"\n</code></pre>"},{"location":"api/editor/ui/log_window/#types","title":"Types","text":""},{"location":"api/editor/ui/log_window/#logwindow","title":"LogWindow","text":"<p><code>struct</code></p> <pre><code>type LogWindow struct {\n    Group viewGroup\n\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/ui/log_window/#new","title":"New","text":"<pre><code>func New(host *engine.Host, logStream *logging.LogStream, uiMan *ui.Manager) *LogWindow\n</code></pre>"},{"location":"api/editor/ui/log_window/#logwindowall","title":"LogWindow.All","text":"<pre><code>func (l *LogWindow) All() []visibleMessage\n</code></pre>"},{"location":"api/editor/ui/log_window/#logwindowdragupdate","title":"LogWindow.DragUpdate","text":"<pre><code>func (l *LogWindow) DragUpdate()\n</code></pre>"},{"location":"api/editor/ui/log_window/#logwindowerrors","title":"LogWindow.Errors","text":"<pre><code>func (l *LogWindow) Errors() []visibleMessage\n</code></pre>"},{"location":"api/editor/ui/log_window/#logwindowhide","title":"LogWindow.Hide","text":"<pre><code>func (l *LogWindow) Hide()\n</code></pre>"},{"location":"api/editor/ui/log_window/#logwindowinfos","title":"LogWindow.Infos","text":"<pre><code>func (l *LogWindow) Infos() []visibleMessage\n</code></pre>"},{"location":"api/editor/ui/log_window/#logwindowshow","title":"LogWindow.Show","text":"<pre><code>func (l *LogWindow) Show()\n</code></pre>"},{"location":"api/editor/ui/log_window/#logwindowtoggle","title":"LogWindow.Toggle","text":"<pre><code>func (l *LogWindow) Toggle()\n</code></pre>"},{"location":"api/editor/ui/log_window/#logwindowwarnings","title":"LogWindow.Warnings","text":"<pre><code>func (l *LogWindow) Warnings() []visibleMessage\n</code></pre>"},{"location":"api/editor/ui/project_window/","title":"package project_window","text":"<pre><code>import \"kaiju/editor/ui/project_window\"\n</code></pre>"},{"location":"api/editor/ui/project_window/#types","title":"Types","text":""},{"location":"api/editor/ui/project_window/#projectwindow","title":"ProjectWindow","text":"<p><code>struct</code></p> <pre><code>type ProjectWindow struct {\n    Selected chan string\n\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/ui/project_window/#new","title":"New","text":"<pre><code>func New(templatePath string, cx, cy int) (*ProjectWindow, error)\n</code></pre>"},{"location":"api/editor/ui/shader_designer/","title":"package shader_designer","text":"<pre><code>import \"kaiju/editor/ui/shader_designer\"\n</code></pre>"},{"location":"api/editor/ui/shader_designer/#functions","title":"Functions","text":""},{"location":"api/editor/ui/shader_designer/#new","title":"New","text":"<pre><code>func New()\n</code></pre>"},{"location":"api/editor/ui/shader_designer/#openpipeline","title":"OpenPipeline","text":"<pre><code>func OpenPipeline(path string)\n</code></pre>"},{"location":"api/editor/ui/shader_designer/#types","title":"Types","text":""},{"location":"api/editor/ui/shader_designer/#shaderdesigner","title":"ShaderDesigner","text":"<p><code>struct</code></p> <pre><code>type ShaderDesigner struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/ui/status_bar/","title":"package status_bar","text":"<pre><code>import \"kaiju/editor/ui/status_bar\"\n</code></pre>"},{"location":"api/editor/ui/status_bar/#types","title":"Types","text":""},{"location":"api/editor/ui/status_bar/#statusbar","title":"StatusBar","text":"<p><code>struct</code></p> <pre><code>type StatusBar struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/ui/status_bar/#new","title":"New","text":"<pre><code>func New(uiMan *ui.Manager, logWindow *log_window.LogWindow) *StatusBar\n</code></pre>"},{"location":"api/editor/ui/status_bar/#statusbarsetmessage","title":"StatusBar.SetMessage","text":"<pre><code>func (s *StatusBar) SetMessage(status string)\n</code></pre>"},{"location":"api/editor/viewport/controls/","title":"package controls","text":"<pre><code>import \"kaiju/editor/viewport/controls\"\n</code></pre>"},{"location":"api/editor/viewport/controls/#constants","title":"Constants","text":""},{"location":"api/editor/viewport/controls/#rot_scale","title":"ROT_SCALE","text":"<p>0.01</p>"},{"location":"api/editor/viewport/controls/#zoom_scale","title":"ZOOM_SCALE","text":"<p>float32(0](../float32(0#05))</p>"},{"location":"api/editor/viewport/controls/#types","title":"Types","text":""},{"location":"api/editor/viewport/controls/#editorcamera","title":"EditorCamera","text":"<p><code>struct</code></p> <pre><code>type EditorCamera struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/viewport/controls/#editorcameraupdate","title":"EditorCamera.Update","text":"<pre><code>func (e *EditorCamera) Update(host *engine.Host, delta float64) (changed bool)\n</code></pre>"},{"location":"api/editor/viewport/tools/deleter/","title":"package deleter","text":"<pre><code>import \"kaiju/editor/viewport/tools/deleter\"\n</code></pre>"},{"location":"api/editor/viewport/tools/deleter/#functions","title":"Functions","text":""},{"location":"api/editor/viewport/tools/deleter/#delete","title":"Delete","text":"<pre><code>func Delete(editor interfaces.Editor, entities []*engine.Entity)\n</code></pre>"},{"location":"api/editor/viewport/tools/deleter/#deleteselected","title":"DeleteSelected","text":"<pre><code>func DeleteSelected(editor interfaces.Editor)\n</code></pre>"},{"location":"api/editor/viewport/tools/duplicator/","title":"package duplicator","text":"<pre><code>import \"kaiju/editor/viewport/tools/duplicator\"\n</code></pre>"},{"location":"api/editor/viewport/tools/duplicator/#functions","title":"Functions","text":""},{"location":"api/editor/viewport/tools/duplicator/#delete","title":"Delete","text":"<pre><code>func Delete(editor interfaces.Editor, entities []*engine.Entity)\n</code></pre>"},{"location":"api/editor/viewport/tools/duplicator/#deleteselected","title":"DeleteSelected","text":"<pre><code>func DeleteSelected(editor interfaces.Editor)\n</code></pre>"},{"location":"api/editor/viewport/tools/transform_tools/","title":"package transform_tools","text":"<pre><code>import \"kaiju/editor/viewport/tools/transform_tools\"\n</code></pre>"},{"location":"api/editor/viewport/tools/transform_tools/#types","title":"Types","text":""},{"location":"api/editor/viewport/tools/transform_tools/#axisstate","title":"AxisState","text":"<p>uint8 <pre><code>type AxisState uint8\n</code></pre></p> <p>const ( AxisStateNone AxisState = iota AxisStateX AxisStateY AxisStateZ )</p>"},{"location":"api/editor/viewport/tools/transform_tools/#axisstatetoggle","title":"AxisState.Toggle","text":"<pre><code>func (a *AxisState) Toggle(axis AxisState)\n</code></pre>"},{"location":"api/editor/viewport/tools/transform_tools/#toolstate","title":"ToolState","text":"<p>uint8 <pre><code>type ToolState = uint8\n</code></pre></p> <p>const ( ToolStateNone ToolState = iota ToolStateMove ToolStateRotate ToolStateScale )</p>"},{"location":"api/editor/viewport/tools/transform_tools/#transformtool","title":"TransformTool","text":"<p><code>struct</code></p> <pre><code>type TransformTool struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/editor/viewport/tools/transform_tools/#new","title":"New","text":"<pre><code>func New(host *engine.Host, editor interfaces.Editor,\n</code></pre> <p>canvas string, history *memento.History) TransformTool</p>"},{"location":"api/editor/viewport/tools/transform_tools/#transformtooldisable","title":"TransformTool.Disable","text":"<pre><code>func (t *TransformTool) Disable()\n</code></pre>"},{"location":"api/editor/viewport/tools/transform_tools/#transformtoolenable","title":"TransformTool.Enable","text":"<pre><code>func (t *TransformTool) Enable(state ToolState)\n</code></pre>"},{"location":"api/editor/viewport/tools/transform_tools/#transformtoolupdate","title":"TransformTool.Update","text":"<pre><code>func (t *TransformTool) Update(host *engine.Host) (busy bool)\n</code></pre>"},{"location":"api/engine/","title":"package engine","text":"<pre><code>import \"kaiju/engine\"\n</code></pre>"},{"location":"api/engine/#constants","title":"Constants","text":""},{"location":"api/engine/#defaultwindowwidth","title":"DefaultWindowWidth","text":"<p><code>944</code></p>"},{"location":"api/engine/#defaultwindowheight","title":"DefaultWindowHeight","text":"<p><code>500</code></p>"},{"location":"api/engine/#functions","title":"Functions","text":""},{"location":"api/engine/#registerentitydata","title":"RegisterEntityData","text":"<pre><code>func RegisterEntityData(value EntityData) error\n</code></pre>"},{"location":"api/engine/#types","title":"Types","text":""},{"location":"api/engine/#entity","title":"Entity","text":"<p><code>struct</code></p> <pre><code>type Entity struct {\n    Transform matrix.Transform\n    Parent    *Entity\n    Children  []*Entity\n\n    OnDestroy    events.Event\n    OnActivate   events.Event\n    OnDeactivate events.Event\n\n    EditorBindings entityEditorBindings\n\n    // Has unexported fields.\n}\n</code></pre> <p>Entity is a struct that represents an arbitrary object in the host system. It contains a 3D transformation and can be a parent of, or a child to, other entities. Entities can also contain arbitrary named data to make it easier to access data that is specific to the entity.</p> <p>Child entities are unordered by default, you'll need to call Entity.SetChildrenOrdered to make them ordered. It is recommended to leave children unordered unless you have a specific reason to order them.</p>"},{"location":"api/engine/#newentity","title":"NewEntity","text":"<pre><code>func NewEntity(workGroup *concurrent.WorkGroup) *Entity\n</code></pre> <p>NewEntity creates a new Entity struct and returns it</p>"},{"location":"api/engine/#entityactivate","title":"Entity.Activate","text":"<pre><code>func (e *Entity) Activate()\n</code></pre> <p>Activate will set an active flag on the entity that can be queried with Entity.IsActive. It will also set the active flag on all children of the entity. If the entity is already active, this function will do nothing.</p>"},{"location":"api/engine/#entityaddnameddata","title":"Entity.AddNamedData","text":"<pre><code>func (e *Entity) AddNamedData(key string, data interface{})\n</code></pre> <p>AddNamedData allows you to add arbitrary data to the entity that can be accessed by a string key. This is useful for storing data that is specific to the entity.</p> <p>Named data is stored in a map of slices, so you can add multiple pieces of data to the same key. It is recommended to compile the data into a single structure so the slice length is 1, but sometimes that's not reasonable.</p>"},{"location":"api/engine/#entitychildat","title":"Entity.ChildAt","text":"<pre><code>func (e *Entity) ChildAt(idx int) *Entity\n</code></pre> <p>ChildAt returns the child entity at the specified index</p>"},{"location":"api/engine/#entitychildcount","title":"Entity.ChildCount","text":"<pre><code>func (e *Entity) ChildCount() int\n</code></pre> <p>ChildCount returns the number of children the entity has</p>"},{"location":"api/engine/#entitycopy","title":"Entity.Copy","text":"<pre><code>func (e *Entity) Copy(other *Entity)\n</code></pre>"},{"location":"api/engine/#entitydeactivate","title":"Entity.Deactivate","text":"<pre><code>func (e *Entity) Deactivate()\n</code></pre> <p>Deactivate will set an active flag on the entity that can be queried with Entity.IsActive. It will also set the active flag on all children of the entity. If the entity is already inactive, this function will do nothing.</p>"},{"location":"api/engine/#entitydeserialize","title":"Entity.Deserialize","text":"<pre><code>func (e *Entity) Deserialize(stream io.Reader, host *Host) error\n</code></pre> <p>Deserialize will read the entity from the given stream and is reversed using Serialize. This will not deserialize the children of the entity, that is the responsibility of the caller. All errors returned will be related to decoding the binary stream</p>"},{"location":"api/engine/#entitydestroy","title":"Entity.Destroy","text":"<pre><code>func (e *Entity) Destroy()\n</code></pre> <p>Destroy will set the destroyed flag on the entity, this can be queried with Entity.IsDestroyed. The entity is not immediately destroyed as it may be in use for the current frame. The Entity.TickCleanup should be called for each frame to check if the entity is ready to be completely destroyed.</p> <p>Destroying a parent will also destroy all children of the entity.</p>"},{"location":"api/engine/#entityduplicate","title":"Entity.Duplicate","text":"<pre><code>func (e *Entity) Duplicate(sparse bool, onDupe func(from, to *Entity)) *Entity\n</code></pre>"},{"location":"api/engine/#entityfindbyname","title":"Entity.FindByName","text":"<pre><code>func (e *Entity) FindByName(name string) *Entity\n</code></pre> <p>FindByName will search the entity and the tree of children for the first entity with the specified name. If no entity is found, nil will be returned.</p>"},{"location":"api/engine/#entityhaschildrecursive","title":"Entity.HasChildRecursive","text":"<pre><code>func (e *Entity) HasChildRecursive(child *Entity) bool\n</code></pre>"},{"location":"api/engine/#entityhaschildren","title":"Entity.HasChildren","text":"<pre><code>func (e *Entity) HasChildren() bool\n</code></pre> <p>HasChildren returns true if the entity has any children</p>"},{"location":"api/engine/#entityid","title":"Entity.Id","text":"<pre><code>func (e *Entity) Id() EntityId\n</code></pre> <p>ID returns the unique identifier of the entity. The Id is only valid for entities that are not generated through template instantiation. The Id may also be stripped during game runtime if the entity is never externally referenced by any other part of the system.</p>"},{"location":"api/engine/#entityindexofchild","title":"Entity.IndexOfChild","text":"<pre><code>func (e *Entity) IndexOfChild(child *Entity) int\n</code></pre>"},{"location":"api/engine/#entityinit","title":"Entity.Init","text":"<pre><code>func (e *Entity) Init(workGroup *concurrent.WorkGroup)\n</code></pre>"},{"location":"api/engine/#entityisactive","title":"Entity.IsActive","text":"<pre><code>func (e *Entity) IsActive() bool\n</code></pre> <p>IsActive will return true if the entity is active, false otherwise</p>"},{"location":"api/engine/#entityisdestroyed","title":"Entity.IsDestroyed","text":"<pre><code>func (e *Entity) IsDestroyed() bool\n</code></pre> <p>IsDestroyed will return true if the entity is destroyed, false otherwise</p>"},{"location":"api/engine/#entityisroot","title":"Entity.IsRoot","text":"<pre><code>func (e *Entity) IsRoot() bool\n</code></pre> <p>IsRoot returns true if the entity is the root entity in the hierarchy</p>"},{"location":"api/engine/#entityname","title":"Entity.Name","text":"<pre><code>func (e *Entity) Name() string\n</code></pre> <p>Name returns the name of the entity</p>"},{"location":"api/engine/#entitynameddata","title":"Entity.NamedData","text":"<pre><code>func (e *Entity) NamedData(key string) []interface{}\n</code></pre> <p>NamedData will return the data associated with the specified key. If the key does not exist, nil will be returned.</p>"},{"location":"api/engine/#entityremovenameddata","title":"Entity.RemoveNamedData","text":"<pre><code>func (e *Entity) RemoveNamedData(key string, data interface{})\n</code></pre> <p>RemoveNamedData will remove the specified data from the entity's named data map. If the key does not exist, this function will do nothing.</p> <p>This will remove the entire slice and all of it's data</p>"},{"location":"api/engine/#entityroot","title":"Entity.Root","text":"<pre><code>func (e *Entity) Root() *Entity\n</code></pre> <p>Root will return the root entity of the entity's hierarchy</p>"},{"location":"api/engine/#entityserialize","title":"Entity.Serialize","text":"<pre><code>func (e *Entity) Serialize(stream io.Writer) error\n</code></pre> <p>Serialize will write the entity to the given stream and is reversed using Deserialize. This will not serialize the children of the entity, that is the responsibility of the caller. All errors returned will be related to decoding the binary stream</p>"},{"location":"api/engine/#entitysetactive","title":"Entity.SetActive","text":"<pre><code>func (e *Entity) SetActive(isActive bool)\n</code></pre> <p>SetActive will set the active flag on the entity that can be queried with Entity.IsActive. It will also set the active flag on all children of the entity. If the entity is already active, this function will do nothing.</p>"},{"location":"api/engine/#entitysetchildrenordered","title":"Entity.SetChildrenOrdered","text":"<pre><code>func (e *Entity) SetChildrenOrdered()\n</code></pre> <p>SetChildrenOrdered sets the children of the entity to be ordered</p>"},{"location":"api/engine/#entitysetchildrenunordered","title":"Entity.SetChildrenUnordered","text":"<pre><code>func (e *Entity) SetChildrenUnordered()\n</code></pre> <p>SetChildrenUnordered sets the children of the entity to be unordered</p>"},{"location":"api/engine/#entitysetname","title":"Entity.SetName","text":"<pre><code>func (e *Entity) SetName(name string)\n</code></pre> <p>SetName sets the name of the entity</p>"},{"location":"api/engine/#entitysetparent","title":"Entity.SetParent","text":"<pre><code>func (e *Entity) SetParent(newParent *Entity)\n</code></pre> <p>SetParent will set the parent of the entity. If the entity already has a parent, it will be removed from the parent's children list. If the new parent is nil, the entity will be removed from the hierarchy and will become the root entity. If the new parent is not nil, the entity will be added to the new parent's children list. If the new parent is not active, the entity will be deactivated as well.</p> <p>This will also handle the transformation parenting internally</p>"},{"location":"api/engine/#entitytickcleanup","title":"Entity.TickCleanup","text":"<pre><code>func (e *Entity) TickCleanup() bool\n</code></pre> <p>TickCleanup will check if the entity is ready to be completely destroyed. If the entity is ready to be destroyed, it will execute the Entity.OnDestroy event and return true. If the entity is not ready to be destroyed, it will return false.</p>"},{"location":"api/engine/#entitydata","title":"EntityData","text":"<p><code>interface</code></p> <pre><code>type EntityData interface {\n    Init(entity *Entity, host *Host)\n}\n</code></pre>"},{"location":"api/engine/#entityid_1","title":"EntityId","text":"<p>string <pre><code>type EntityId string\n</code></pre></p> <p>EntityId is a string that represents a unique identifier for an entity. The identifier is only valid for entities that are not generated through template instantiation. The identifier may also be stripped during game runtime if the entity is never externally referenced by any other part of the system.</p>"},{"location":"api/engine/#frameid","title":"FrameId","text":"<p>uint64 <pre><code>type FrameId = uint64\n</code></pre></p> <p>FrameId is a unique identifier for a frame</p>"},{"location":"api/engine/#host","title":"Host","text":"<p><code>struct</code></p> <pre><code>type Host struct {\n    Window    *windowing.Window\n    LogStream *logging.LogStream\n\n    Camera   cameras.Camera\n    UICamera cameras.Camera\n\n    Drawings rendering.Drawings\n\n    Closing       bool\n    UIUpdater     Updater\n    UILateUpdater Updater\n    Updater       Updater\n    LateUpdater   Updater\n\n    OnClose     events.Event\n    CloseSignal chan struct{}\n\n    // Has unexported fields.\n}\n</code></pre> <p>Host is the mediator to the entire runtime for the game/editor. It is the main entry point for the game loop and is responsible for managing all entities, the window, and the rendering context. The host can be used to create and manage entities, call update functions on the main thread, and access various caches and resources.</p> <p>The host is expected to be passed around quite often throughout the program. It is designed to remove things like service locators, singletons, and other global state. You can have multiple hosts in a program to isolate things like windows and game state.</p>"},{"location":"api/engine/#newhost","title":"NewHost","text":"<pre><code>func NewHost(name string, logStream *logging.LogStream) *Host\n</code></pre> <p>NewHost creates a new host with the given name and log stream. The log stream is the log handler that is used by the slog package functions. A Host that is created through NewHost has no function until Host.Initialize is called.</p> <p>This is primarily called from host_container/New</p>"},{"location":"api/engine/#hostaddentities","title":"Host.AddEntities","text":"<pre><code>func (host *Host) AddEntities(entities ...*Entity)\n</code></pre> <p>AddEntities adds multiple entities to the host. This will add the entities using the same rules as AddEntity. If the host is in the process of creating editor entities, then the entities will be added to the editor entity pool.</p>"},{"location":"api/engine/#hostaddentity","title":"Host.AddEntity","text":"<pre><code>func (host *Host) AddEntity(entity *Entity)\n</code></pre> <p>AddEntity adds an entity to the host. This will add the entity to the standard entity pool. If the host is in the process of creating editor entities, then the entity will be added to the editor entity pool.</p>"},{"location":"api/engine/#hostassetdatabase","title":"Host.AssetDatabase","text":"<pre><code>func (host *Host) AssetDatabase() *assets.Database\n</code></pre> <p>AssetDatabase returns the asset database for the host</p>"},{"location":"api/engine/#hostaudio","title":"Host.Audio","text":"<pre><code>func (host *Host) Audio() *audio.Audio\n</code></pre> <p>Audio returns the audio system for the host</p>"},{"location":"api/engine/#hostclearentities","title":"Host.ClearEntities","text":"<pre><code>func (host *Host) ClearEntities()\n</code></pre> <p>ClearEntities will remove all entities from the host. This will remove all entities from the standard entity pool only. The entities will be destroyed using the standard destroy method, so they will take not be fully removed during the frame that this function was called.</p>"},{"location":"api/engine/#hostclose","title":"Host.Close","text":"<pre><code>func (host *Host) Close()\n</code></pre> <p>Close will set the closing flag to true and signal the host to clean up resources and close the window.</p>"},{"location":"api/engine/#hostcreatingeditorentities","title":"Host.CreatingEditorEntities","text":"<pre><code>func (host *Host) CreatingEditorEntities()\n</code></pre> <p>CreatingEditorEntities is used exclusively for the editor to know that the entities that are being created are for the editor. This is used to logically separate editor entities from game entities.</p> <p>This will increment so it can be called many times, however it is expected that Host.DoneCreatingEditorEntities is be called the same number of times.</p>"},{"location":"api/engine/#hostdeadline","title":"Host.Deadline","text":"<pre><code>func (h *Host) Deadline() (time.Time, bool)\n</code></pre> <p>Deadline is here to fulfil context.Context and will return zero and false</p>"},{"location":"api/engine/#hostdone","title":"Host.Done","text":"<pre><code>func (h *Host) Done() &lt;-chan struct{}\n</code></pre> <p>Done is here to fulfil context.Context and will cose the CloseSignal channel</p>"},{"location":"api/engine/#hostdonecreatingeditorentities","title":"Host.DoneCreatingEditorEntities","text":"<pre><code>func (host *Host) DoneCreatingEditorEntities()\n</code></pre> <p>DoneCreatingEditorEntities is used to signal that the editor is done creating entities. This should be called the same number of times as Host.CreatingEditorEntities. When the internal counter reaches 0, then any entity created on the host will go to the standard entity pool.</p>"},{"location":"api/engine/#hostentities","title":"Host.Entities","text":"<pre><code>func (host *Host) Entities() []*Entity\n</code></pre> <p>Entities returns all the entities that are currently in the host. This will return all entities in the standard entity pool only. In the editor, this will not return any entities that have been destroyed (and are pending cleanup due to being in the undo history)</p>"},{"location":"api/engine/#hostentitiesraw","title":"Host.EntitiesRaw","text":"<pre><code>func (host *Host) EntitiesRaw() []*Entity\n</code></pre> <p>Entities returns all the entities that are currently in the host. This will return all entities in the standard entity pool only. In the editor, this will also return any entities that have been destroyed (and are pending cleanup due to being in the undo history)</p>"},{"location":"api/engine/#hosterr","title":"Host.Err","text":"<pre><code>func (h *Host) Err() error\n</code></pre> <p>Err is here to fulfil context.Context and will return nil or context.Canceled</p>"},{"location":"api/engine/#hostfindentity","title":"Host.FindEntity","text":"<pre><code>func (host *Host) FindEntity(id EntityId) (*Entity, bool)\n</code></pre> <p>FindEntity will search for an entity contained in this host by its id. If the entity is found, then it will return the entity and true, otherwise it will return nil and false.</p>"},{"location":"api/engine/#hostfontcache","title":"Host.FontCache","text":"<pre><code>func (host *Host) FontCache() *rendering.FontCache\n</code></pre> <p>FontCache returns the font cache for the host</p>"},{"location":"api/engine/#hostframe","title":"Host.Frame","text":"<pre><code>func (host *Host) Frame() FrameId\n</code></pre> <p>Frame will return the current frame id</p>"},{"location":"api/engine/#hostinitialize","title":"Host.Initialize","text":"<pre><code>func (host *Host) Initialize(width, height, x, y int) error\n</code></pre> <p>Initializes the various systems and caches that are mediated through the host. This includes the window, the shader cache, the texture cache, the mesh cache, and the font cache, and the camera systems.</p>"},{"location":"api/engine/#hostinitializeaudio","title":"Host.InitializeAudio","text":"<pre><code>func (host *Host) InitializeAudio() error\n</code></pre>"},{"location":"api/engine/#hostmeshcache","title":"Host.MeshCache","text":"<pre><code>func (host *Host) MeshCache() *rendering.MeshCache\n</code></pre> <p>MeshCache returns the mesh cache for the host</p>"},{"location":"api/engine/#hostname","title":"Host.Name","text":"<pre><code>func (host *Host) Name() string\n</code></pre> <p>Name returns the name of the host</p>"},{"location":"api/engine/#hostnewentity","title":"Host.NewEntity","text":"<pre><code>func (host *Host) NewEntity() *Entity\n</code></pre> <p>NewEntity creates a new entity and adds it to the host. This will add the entity to the standard entity pool. If the host is in the process of creating editor entities, then the entity will be added to the editor entity pool.</p>"},{"location":"api/engine/#hostremoveentity","title":"Host.RemoveEntity","text":"<pre><code>func (host *Host) RemoveEntity(entity *Entity)\n</code></pre> <p>RemoveEntity removes an entity from the host. This will remove the entity from the standard entity pool. This will determine if the entity is in the editor entity pool and remove it from there if so, otherwise it will be removed from the standard entity pool. Entities are not ordered, so they are removed in O(n) time. Do not assume the entities are ordered at any time.</p>"},{"location":"api/engine/#hostrender","title":"Host.Render","text":"<pre><code>func (host *Host) Render()\n</code></pre> <p>Render will render the scene. This starts by preparing any drawings that are pending. It also creates any pending shaders, textures, and meshes before the start of the render. The frame is then readied, buffers swapped, and any transformations that are dirty on entities are then cleaned.</p>"},{"location":"api/engine/#hostreserveentities","title":"Host.ReserveEntities","text":"<pre><code>func (host *Host) ReserveEntities(additional int)\n</code></pre>"},{"location":"api/engine/#hostrunafterframes","title":"Host.RunAfterFrames","text":"<pre><code>func (host *Host) RunAfterFrames(wait int, call func())\n</code></pre> <p>RunAfterFrames will call the given function after the given number of frames have passed from the current frame</p>"},{"location":"api/engine/#hostruntime","title":"Host.Runtime","text":"<pre><code>func (host *Host) Runtime() float64\n</code></pre> <p>Runtime will return how long the host has been running in seconds</p>"},{"location":"api/engine/#hostsetframeratelimit","title":"Host.SetFrameRateLimit","text":"<pre><code>func (h *Host) SetFrameRateLimit(fps int64)\n</code></pre> <p>SetFrameRateLimit will set the frame rate limit for the host. If the frame rate is set to 0, then the frame rate limit will be removed.</p> <p>If a frame rate is set, then the host will block until the desired frame rate is reached before continuing the update loop.</p>"},{"location":"api/engine/#hostshadercache","title":"Host.ShaderCache","text":"<pre><code>func (host *Host) ShaderCache() *rendering.ShaderCache\n</code></pre> <p>ShaderCache returns the shader cache for the host</p>"},{"location":"api/engine/#hostteardown","title":"Host.Teardown","text":"<pre><code>func (host *Host) Teardown()\n</code></pre> <p>Teardown will destroy the host and all of its resources. This will also execute the OnClose event. This will also signal the CloseSignal channel.</p>"},{"location":"api/engine/#hosttexturecache","title":"Host.TextureCache","text":"<pre><code>func (host *Host) TextureCache() *rendering.TextureCache\n</code></pre> <p>TextureCache returns the texture cache for the host</p>"},{"location":"api/engine/#hostupdate","title":"Host.Update","text":"<pre><code>func (host *Host) Update(deltaTime float64)\n</code></pre> <p>Update is the main update loop for the host. This will poll the window for events, update the entities, and render the scene. This will also check if the window has been closed or crashed and set the closing flag accordingly.</p> <p>The update order is FrameRunner -&gt; Update -&gt; LateUpdate -&gt; EndUpdate:</p> <ul> <li>FrameRunner: Functions added to RunAfterFrames </li> <li>UIUpdate: Functions added to UIUpdater </li> <li>UILateUpdate: Functions added to UILateUpdater - Update: Functions added to Updater </li> <li>LateUpdate: Functions added to LateUpdater </li> <li>EndUpdate: Internal functions for preparing for the next frame</li> </ul> <p>Any destroyed entities will also be ticked for their cleanup. This will also tick the editor entities for cleanup.</p>"},{"location":"api/engine/#hostvalue","title":"Host.Value","text":"<pre><code>func (h *Host) Value(key any) any\n</code></pre> <p>Value is here to fulfil context.Context and will always return nil</p>"},{"location":"api/engine/#hostwaitforframerate","title":"Host.WaitForFrameRate","text":"<pre><code>func (h *Host) WaitForFrameRate()\n</code></pre> <p>WaitForFrameRate will block until the desired frame rate limit is reached</p>"},{"location":"api/engine/#hostworkgroup","title":"Host.WorkGroup","text":"<pre><code>func (host *Host) WorkGroup() *concurrent.WorkGroup\n</code></pre> <p>WorkGroup returns the work group for this instance of host</p>"},{"location":"api/engine/#updater","title":"Updater","text":"<p><code>struct</code></p> <pre><code>type Updater struct {\n    // Has unexported fields.\n}\n</code></pre> <p>Updater is a struct that stores update functions to be called when the Updater.Update function is called. This simply goes through the list from top to bottom and calls each function.</p> <p>Note that update functions are unordered, so don't rely on the order</p>"},{"location":"api/engine/#newupdater","title":"NewUpdater","text":"<pre><code>func NewUpdater() Updater\n</code></pre> <p>NewUpdater creates a new Updater struct and returns it</p>"},{"location":"api/engine/#updateraddupdate","title":"Updater.AddUpdate","text":"<pre><code>func (u *Updater) AddUpdate(update func(float64)) int\n</code></pre> <p>AddUpdate adds an update function to the list of updates to be called when the Updater.Update function is called. It returns the id of the update function that was added so that it can be removed later.</p> <p>The update function is added to a back-buffer so it will not begin updating until the next call to Updater.Update.</p>"},{"location":"api/engine/#updaterdestroy","title":"Updater.Destroy","text":"<pre><code>func (u *Updater) Destroy()\n</code></pre> <p>Destroy cleans up the updater and should be called when the updater is no longer needed. It will close the pending and complete channels and clear the updates map.</p>"},{"location":"api/engine/#updaterremoveupdate","title":"Updater.RemoveUpdate","text":"<pre><code>func (u *Updater) RemoveUpdate(id int)\n</code></pre> <p>RemoveUpdate removes an update function from the list of updates to be called when the Updater.Update function is called. It takes the id of the update function that was returned when the update function was added.</p> <p>The update function is removed from a back-buffer so it will not be removed until the next call to Updater.Update.</p>"},{"location":"api/engine/#updaterstartconcurrent","title":"Updater.StartConcurrent","text":"<pre><code>func (u *Updater) StartConcurrent(goroutines int)\n</code></pre> <p>StartConcurrent starts the number of goroutines specified to handle updates concurrently. This will no longer use inline updates once this function is called and all updates will be handled through the goroutines.</p>"},{"location":"api/engine/#updaterupdate","title":"Updater.Update","text":"<pre><code>func (u *Updater) Update(deltaTime float64)\n</code></pre> <p>Update calls all of the update functions that have been added to the updater. It takes a deltaTime parameter that is the approximate amount of time since the last call to Updater.Update.</p>"},{"location":"api/engine/modules/camera_module/","title":"package camera_module","text":"<pre><code>import \"kaiju/engine/modules/camera_module\"\n</code></pre>"},{"location":"api/engine/modules/camera_module/#types","title":"Types","text":""},{"location":"api/engine/modules/camera_module/#cameramodule","title":"CameraModule","text":"<p><code>struct</code></p> <pre><code>type CameraModule struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/engine/modules/camera_module/#cameramodulesetasactive","title":"CameraModule.SetAsActive","text":"<pre><code>func (c *CameraModule) SetAsActive()\n</code></pre>"},{"location":"api/engine/modules/camera_module/#cameramodulebinding","title":"CameraModuleBinding","text":"<p><code>struct</code></p> <pre><code>type CameraModuleBinding struct {\n    FOV       float32 `clamp:\"60,45,120\"` //default,min,max\n    NearPlane float32 `default:\"0.01\"`\n    FarPlane  float32 `default:\"500.0\"`\n    IsPrimary bool\n}\n</code></pre>"},{"location":"api/engine/modules/camera_module/#cameramodulebindinginit","title":"CameraModuleBinding.Init","text":"<pre><code>func (c *CameraModuleBinding) Init(e *engine.Entity, host *engine.Host)\n</code></pre>"},{"location":"api/filesystem/","title":"package filesystem","text":"<pre><code>import \"kaiju/filesystem\"\n</code></pre>"},{"location":"api/filesystem/#functions","title":"Functions","text":""},{"location":"api/filesystem/#copydirectory","title":"CopyDirectory","text":"<pre><code>func CopyDirectory(src, dst string) error\n</code></pre> <p>CopyDirectory copies the directory at the source path to the destination path.</p>"},{"location":"api/filesystem/#copyfile","title":"CopyFile","text":"<pre><code>func CopyFile(src, dst string) error\n</code></pre> <p>CopyFile copies the file from the source path to the destination path. If the destination file already exists, an error will be returned.</p>"},{"location":"api/filesystem/#copygosourcefile","title":"CopyGoSourceFile","text":"<pre><code>func CopyGoSourceFile(src, dst string) error\n</code></pre> <p>CopyGoSourceFile copies go specific source code from the source path to the destination path. If the destination file already exists, an error will be returned. This function is used to ensure that the generated files have the correct header.</p>"},{"location":"api/filesystem/#createdirectory","title":"CreateDirectory","text":"<pre><code>func CreateDirectory(path string) error\n</code></pre> <p>CreateDirectory creates a directory at the specified path with full permissions.</p>"},{"location":"api/filesystem/#deletedirectory","title":"DeleteDirectory","text":"<pre><code>func DeleteDirectory(path string) error\n</code></pre> <p>DeleteDirectory deletes the directory at the specified path.</p>"},{"location":"api/filesystem/#directoryexists","title":"DirectoryExists","text":"<pre><code>func DirectoryExists(path string) bool\n</code></pre> <p>DirectoryExists returns true if the directory exists at the specified path.</p>"},{"location":"api/filesystem/#fileexists","title":"FileExists","text":"<pre><code>func FileExists(path string) bool\n</code></pre> <p>FileExists returns true if the file exists at the specified path.</p>"},{"location":"api/filesystem/#imagedirectory","title":"ImageDirectory","text":"<pre><code>func ImageDirectory() (string, error)\n</code></pre> <p>ImageDirectory will attempt to find the default user directory where images are stored. This function is OS specific.</p>"},{"location":"api/filesystem/#listfilesrecursive","title":"ListFilesRecursive","text":"<pre><code>func ListFilesRecursive(path string) ([]string, error)\n</code></pre> <p>ListFilesRecursive returns a list of all files in the specified, it walks through all of the subdirectories as well.</p>"},{"location":"api/filesystem/#listfoldersrecursive","title":"ListFoldersRecursive","text":"<pre><code>func ListFoldersRecursive(path string) ([]string, error)\n</code></pre> <p>ListFoldersRecursive returns a list of all directories in the specified, it walks through all of the subdirectories as well.</p>"},{"location":"api/filesystem/#listrecursive","title":"ListRecursive","text":"<pre><code>func ListRecursive(path string) ([]string, error)\n</code></pre> <p>ListRecursive returns a list of all files and directories in the specified, it walks through all of the subdirectories as well.</p>"},{"location":"api/filesystem/#readfile","title":"ReadFile","text":"<pre><code>func ReadFile(path string) ([]byte, error)\n</code></pre> <p>ReadFile reads the binary data from the file at the specified path. If the file does not exist, an error will be returned.</p>"},{"location":"api/filesystem/#readtextfile","title":"ReadTextFile","text":"<pre><code>func ReadTextFile(path string) (string, error)\n</code></pre> <p>ReadTextFile reads the text data from the file at the specified path. If the file does not exist, an error will be returned.</p>"},{"location":"api/filesystem/#writefile","title":"WriteFile","text":"<pre><code>func WriteFile(path string, data []byte) error\n</code></pre> <p>WriteFile writes the binary data to the file at the specified path. This will use permissions 0644 for the file. If the file already exists, it will be overwritten.</p>"},{"location":"api/filesystem/#writetextfile","title":"WriteTextFile","text":"<pre><code>func WriteTextFile(path string, data string) error\n</code></pre> <p>WriteTextFile writes the text data to the file at the specified path. This will use permissions 0644 for the file. If the file already exists, it will be overwritten.</p>"},{"location":"api/hid/","title":"package hid","text":"<pre><code>import \"kaiju/hid\"\n</code></pre>"},{"location":"api/hid/#constants","title":"Constants","text":""},{"location":"api/hid/#controllerbuttonup","title":"ControllerButtonUp","text":"<p><code>iota</code></p>"},{"location":"api/hid/#controllerbuttondown","title":"ControllerButtonDown","text":""},{"location":"api/hid/#controllerbuttonleft","title":"ControllerButtonLeft","text":""},{"location":"api/hid/#controllerbuttonright","title":"ControllerButtonRight","text":""},{"location":"api/hid/#controllerbuttonstart","title":"ControllerButtonStart","text":""},{"location":"api/hid/#controllerbuttonselect","title":"ControllerButtonSelect","text":""},{"location":"api/hid/#controllerbuttonleftstick","title":"ControllerButtonLeftStick","text":""},{"location":"api/hid/#controllerbuttonrightstick","title":"ControllerButtonRightStick","text":""},{"location":"api/hid/#controllerbuttonleftbumper","title":"ControllerButtonLeftBumper","text":""},{"location":"api/hid/#controllerbuttonrightbumper","title":"ControllerButtonRightBumper","text":""},{"location":"api/hid/#controllerbuttonex1","title":"ControllerButtonEx1","text":""},{"location":"api/hid/#todo","title":"TODO","text":""},{"location":"api/hid/#name","title":"Name","text":""},{"location":"api/hid/#this","title":"this","text":""},{"location":"api/hid/#correctly","title":"correctly","text":""},{"location":"api/hid/#controllerbuttonex2","title":"ControllerButtonEx2","text":""},{"location":"api/hid/#todo_1","title":"TODO","text":""},{"location":"api/hid/#name_1","title":"Name","text":""},{"location":"api/hid/#this_1","title":"this","text":""},{"location":"api/hid/#correctly_1","title":"correctly","text":""},{"location":"api/hid/#controllerbuttona","title":"ControllerButtonA","text":""},{"location":"api/hid/#controllerbuttonb","title":"ControllerButtonB","text":""},{"location":"api/hid/#controllerbuttonx","title":"ControllerButtonX","text":""},{"location":"api/hid/#controllerbuttony","title":"ControllerButtonY","text":""},{"location":"api/hid/#controllerbuttonmax","title":"ControllerButtonMax","text":""},{"location":"api/hid/#controlleraxisleftvertical","title":"ControllerAxisLeftVertical","text":"<p><code>iota</code></p>"},{"location":"api/hid/#controlleraxislefthorizontal","title":"ControllerAxisLeftHorizontal","text":""},{"location":"api/hid/#controlleraxisrightvertical","title":"ControllerAxisRightVertical","text":""},{"location":"api/hid/#controlleraxisrighthorizontal","title":"ControllerAxisRightHorizontal","text":""},{"location":"api/hid/#controlleraxislefttrigger","title":"ControllerAxisLeftTrigger","text":""},{"location":"api/hid/#controlleraxisrighttrigger","title":"ControllerAxisRightTrigger","text":""},{"location":"api/hid/#controlleraxismax","title":"ControllerAxisMax","text":""},{"location":"api/hid/#mousebuttonleft","title":"MouseButtonLeft","text":"<p><code>iota</code></p>"},{"location":"api/hid/#mousebuttonmiddle","title":"MouseButtonMiddle","text":""},{"location":"api/hid/#mousebuttonright","title":"MouseButtonRight","text":""},{"location":"api/hid/#mousebuttonx1","title":"MouseButtonX1","text":""},{"location":"api/hid/#mousebuttonx2","title":"MouseButtonX2","text":""},{"location":"api/hid/#mousebuttonlast","title":"MouseButtonLast","text":""},{"location":"api/hid/#mouserelease","title":"MouseRelease","text":"<p><code>iota</code></p>"},{"location":"api/hid/#mousepress","title":"MousePress","text":""},{"location":"api/hid/#mouserepeat","title":"MouseRepeat","text":""},{"location":"api/hid/#mouseinvalid","title":"MouseInvalid","text":"<p><code>-1</code></p>"},{"location":"api/hid/#mousebuttonstateinvalid","title":"MouseButtonStateInvalid","text":"<p><code>-1</code></p>"},{"location":"api/hid/#amotioneventactionidle","title":"AMotionEventActionIdle","text":"<p><code>99</code></p>"},{"location":"api/hid/#amotioneventactionheld","title":"AMotionEventActionHeld","text":"<p><code>100</code></p>"},{"location":"api/hid/#amotioneventactionhoverenter","title":"AMotionEventActionHoverEnter","text":"<p><code>1 + iota</code></p>"},{"location":"api/hid/#amotioneventactionhovermove","title":"AMotionEventActionHoverMove","text":""},{"location":"api/hid/#amotioneventactionhoverexit","title":"AMotionEventActionHoverExit","text":""},{"location":"api/hid/#amotioneventactionhover","title":"AMotionEventActionHover","text":""},{"location":"api/hid/#amotioneventactiondown","title":"AMotionEventActionDown","text":""},{"location":"api/hid/#amotioneventactionmove","title":"AMotionEventActionMove","text":""},{"location":"api/hid/#amotioneventactionup","title":"AMotionEventActionUp","text":""},{"location":"api/hid/#controllermaxdevices","title":"ControllerMaxDevices","text":"<p><code>8</code></p>"},{"location":"api/hid/#maxtouchpointersavailable","title":"MaxTouchPointersAvailable","text":"<p><code>10</code></p>"},{"location":"api/hid/#types","title":"Types","text":""},{"location":"api/hid/#controller","title":"Controller","text":"<p><code>struct</code></p> <pre><code>type Controller struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/hid/#newcontroller","title":"NewController","text":"<pre><code>func NewController() Controller\n</code></pre> <p>NewController creates a new controller. This is called automatically by the system and should not be called by the end-developer</p>"},{"location":"api/hid/#controlleravailable","title":"Controller.Available","text":"<pre><code>func (c *Controller) Available(id int) bool\n</code></pre> <p>Available returns true if the controller is available. This is called automatically by the system and should not be called by the end-developer</p>"},{"location":"api/hid/#controlleraxis","title":"Controller.Axis","text":"<pre><code>func (c *Controller) Axis(id, stick int) float32\n</code></pre> <p>Axis returns the axis value for the given controller and stick</p>"},{"location":"api/hid/#controllerconnected","title":"Controller.Connected","text":"<pre><code>func (c *Controller) Connected(id int)\n</code></pre> <p>Connected returns true if the controller is connected. This is called automatically by the system and should not be called by the end-developer</p>"},{"location":"api/hid/#controllerdisconnected","title":"Controller.Disconnected","text":"<pre><code>func (c *Controller) Disconnected(id int)\n</code></pre> <p>Disconnected returns true if the controller is disconnected. This is called automatically by the system and should not be called by the end-developer</p>"},{"location":"api/hid/#controllerendupdate","title":"Controller.EndUpdate","text":"<pre><code>func (c *Controller) EndUpdate()\n</code></pre> <p>EndUpdate is called at the end of the frame. It updates the state of each controller for the next frame. This is called automatically by the system and should not be called by the end-developer</p>"},{"location":"api/hid/#controllerisbuttondown","title":"Controller.IsButtonDown","text":"<pre><code>func (c *Controller) IsButtonDown(id, button int) bool\n</code></pre> <p>IsButtonDown returns true if the button is down</p>"},{"location":"api/hid/#controllerisbuttonheld","title":"Controller.IsButtonHeld","text":"<pre><code>func (c *Controller) IsButtonHeld(id, button int) bool\n</code></pre> <p>IsButtonHeld returns true if the button is held</p>"},{"location":"api/hid/#controllerisbuttonup","title":"Controller.IsButtonUp","text":"<pre><code>func (c *Controller) IsButtonUp(id, button int) bool\n</code></pre> <p>IsButtonUp returns true if the button is up</p>"},{"location":"api/hid/#controllerreset","title":"Controller.Reset","text":"<pre><code>func (c *Controller) Reset()\n</code></pre> <p>Reset will completely wipe the state of all controllers</p>"},{"location":"api/hid/#controllersetaxis","title":"Controller.SetAxis","text":"<pre><code>func (c *Controller) SetAxis(id, stick int, axis float32)\n</code></pre> <p>SetAxis sets the axis on the given controller. This is called automatically by the system and should not be called by the end-developer</p>"},{"location":"api/hid/#controllersetbuttondown","title":"Controller.SetButtonDown","text":"<pre><code>func (c *Controller) SetButtonDown(id, button int)\n</code></pre> <p>SetButtonDown sets the button down on the given controller. This is called automatically by the system and should not be called by the end-developer</p>"},{"location":"api/hid/#controllersetbuttonup","title":"Controller.SetButtonUp","text":"<pre><code>func (c *Controller) SetButtonUp(id, button int)\n</code></pre> <p>SetButtonUp sets the button up on the given controller. This is called automatically by the system and should not be called by the end-developer</p>"},{"location":"api/hid/#controllerdevice","title":"ControllerDevice","text":"<p><code>struct</code></p> <pre><code>type ControllerDevice struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/hid/#cursor","title":"Cursor","text":"<p><code>struct</code></p> <pre><code>type Cursor struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/hid/#newcursor","title":"NewCursor","text":"<pre><code>func NewCursor(mouse *Mouse, touch *Touch, stylus *Stylus) Cursor\n</code></pre>"},{"location":"api/hid/#cursordragdata","title":"Cursor.DragData","text":"<pre><code>func (c *Cursor) DragData() (any, bool)\n</code></pre>"},{"location":"api/hid/#cursorhasdragdata","title":"Cursor.HasDragData","text":"<pre><code>func (c *Cursor) HasDragData() bool\n</code></pre>"},{"location":"api/hid/#cursorheld","title":"Cursor.Held","text":"<pre><code>func (c *Cursor) Held() bool\n</code></pre>"},{"location":"api/hid/#cursormoved","title":"Cursor.Moved","text":"<pre><code>func (c *Cursor) Moved() bool\n</code></pre>"},{"location":"api/hid/#cursorpoll","title":"Cursor.Poll","text":"<pre><code>func (c *Cursor) Poll()\n</code></pre>"},{"location":"api/hid/#cursorposition","title":"Cursor.Position","text":"<pre><code>func (c *Cursor) Position() matrix.Vec2\n</code></pre>"},{"location":"api/hid/#cursorpressed","title":"Cursor.Pressed","text":"<pre><code>func (c *Cursor) Pressed() bool\n</code></pre>"},{"location":"api/hid/#cursorreleased","title":"Cursor.Released","text":"<pre><code>func (c *Cursor) Released() bool\n</code></pre>"},{"location":"api/hid/#cursorscreenposition","title":"Cursor.ScreenPosition","text":"<pre><code>func (c *Cursor) ScreenPosition() matrix.Vec2\n</code></pre>"},{"location":"api/hid/#cursoruiposition","title":"Cursor.UIPosition","text":"<pre><code>func (c *Cursor) UIPosition(uiSize, windowSize matrix.Vec2) matrix.Vec2\n</code></pre>"},{"location":"api/hid/#dragdata","title":"DragData","text":"<p><code>interface</code></p> <pre><code>type DragData interface {\n    DragUpdate()\n}\n</code></pre>"},{"location":"api/hid/#keystate","title":"KeyState","text":"<p>uint8 <pre><code>type KeyState = uint8\n</code></pre></p> <p>const ( KeyStateIdle KeyState = iota KeyStateDown KeyStateHeld KeyStateUp KeyStatePressedAndReleased )</p>"},{"location":"api/hid/#keyboard","title":"Keyboard","text":"<p><code>struct</code></p> <pre><code>type Keyboard struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/hid/#newkeyboard","title":"NewKeyboard","text":"<pre><code>func NewKeyboard() Keyboard\n</code></pre>"},{"location":"api/hid/#keyboardaddkeycallback","title":"Keyboard.AddKeyCallback","text":"<pre><code>func (k *Keyboard) AddKeyCallback(cb func(keyId int, keyState KeyState)) int\n</code></pre>"},{"location":"api/hid/#keyboardendupdate","title":"Keyboard.EndUpdate","text":"<pre><code>func (k *Keyboard) EndUpdate()\n</code></pre>"},{"location":"api/hid/#keyboardhasalt","title":"Keyboard.HasAlt","text":"<pre><code>func (k Keyboard) HasAlt() bool\n</code></pre>"},{"location":"api/hid/#keyboardhasctrl","title":"Keyboard.HasCtrl","text":"<pre><code>func (k Keyboard) HasCtrl() bool\n</code></pre>"},{"location":"api/hid/#keyboardhasshift","title":"Keyboard.HasShift","text":"<pre><code>func (k Keyboard) HasShift() bool\n</code></pre>"},{"location":"api/hid/#keyboardkeydown","title":"Keyboard.KeyDown","text":"<pre><code>func (k Keyboard) KeyDown(key KeyboardKey) bool\n</code></pre>"},{"location":"api/hid/#keyboardkeyheld","title":"Keyboard.KeyHeld","text":"<pre><code>func (k Keyboard) KeyHeld(key KeyboardKey) bool\n</code></pre>"},{"location":"api/hid/#keyboardkeytorune","title":"Keyboard.KeyToRune","text":"<pre><code>func (k *Keyboard) KeyToRune(key KeyboardKey) rune\n</code></pre>"},{"location":"api/hid/#keyboardkeyup","title":"Keyboard.KeyUp","text":"<pre><code>func (k Keyboard) KeyUp(key KeyboardKey) bool\n</code></pre>"},{"location":"api/hid/#keyboardremovekeycallback","title":"Keyboard.RemoveKeyCallback","text":"<pre><code>func (k *Keyboard) RemoveKeyCallback(id int)\n</code></pre>"},{"location":"api/hid/#keyboardreset","title":"Keyboard.Reset","text":"<pre><code>func (k *Keyboard) Reset()\n</code></pre>"},{"location":"api/hid/#keyboardsetkeydown","title":"Keyboard.SetKeyDown","text":"<pre><code>func (k *Keyboard) SetKeyDown(key KeyboardKey)\n</code></pre>"},{"location":"api/hid/#keyboardsetkeydownup","title":"Keyboard.SetKeyDownUp","text":"<pre><code>func (k *Keyboard) SetKeyDownUp(key KeyboardKey)\n</code></pre>"},{"location":"api/hid/#keyboardsetkeyup","title":"Keyboard.SetKeyUp","text":"<pre><code>func (k *Keyboard) SetKeyUp(key KeyboardKey)\n</code></pre>"},{"location":"api/hid/#keyboardkey","title":"KeyboardKey","text":"<p>int <pre><code>type KeyboardKey = int\n</code></pre></p> <p>const ( KeyBoardKeyInvalid KeyboardKey = -1 + iota KeyboardKeyLeftAlt KeyboardKeyRightAlt KeyboardKeyLeftCtrl KeyboardKeyRightCtrl KeyboardKeyLeftShift KeyboardKeyRightShift KeyboardKeyA KeyboardKeyB KeyboardKeyC KeyboardKeyD KeyboardKeyE KeyboardKeyF KeyboardKeyG KeyboardKeyH KeyboardKeyI KeyboardKeyJ KeyboardKeyK KeyboardKeyL KeyboardKeyM KeyboardKeyN KeyboardKeyO KeyboardKeyP KeyboardKeyQ KeyboardKeyR KeyboardKeyS KeyboardKeyT KeyboardKeyU KeyboardKeyV KeyboardKeyW KeyboardKeyX KeyboardKeyY KeyboardKeyZ KeyboardKeyLeft KeyboardKeyUp KeyboardKeyRight KeyboardKeyDown KeyboardKeyEscape KeyboardKeyTab KeyboardKeySpace KeyboardKeyBackspace KeyboardKeyBackQuote KeyboardKeyDelete KeyboardKeyReturn KeyboardKeyEnter KeyboardKeyComma KeyboardKeyPeriod KeyboardKeyBackSlash KeyboardKeyForwardSlash KeyboardKeyOpenBracket KeyboardKeyCloseBracket KeyboardKeySemicolon KeyboardKeyQuote KeyboardKeyEqual KeyboardKeyMinus KeyboardKey0 KeyboardKey1 KeyboardKey2 KeyboardKey3 KeyboardKey4 KeyboardKey5 KeyboardKey6 KeyboardKey7 KeyboardKey8 KeyboardKey9 KeyboardNumKey0 KeyboardNumKey1 KeyboardNumKey2 KeyboardNumKey3 KeyboardNumKey4 KeyboardNumKey5 KeyboardNumKey6 KeyboardNumKey7 KeyboardNumKey8 KeyboardNumKey9 KeyboardKeyF1 KeyboardKeyF2 KeyboardKeyF3 KeyboardKeyF4 KeyboardKeyF5 KeyboardKeyF6 KeyboardKeyF7 KeyboardKeyF8 KeyboardKeyF9 KeyboardKeyF10 KeyboardKeyF11 KeyboardKeyF12 KeyboardKeyCapsLock KeyboardKeyScrollLock KeyboardKeyNumLock KeyboardKeyPrintScreen KeyboardKeyPause KeyboardKeyInsert KeyboardKeyHome KeyboardKeyPageUp KeyboardKeyPageDown KeyboardKeyEnd KeyboardKeyMaximum )</p>"},{"location":"api/hid/#tokeyboardkey","title":"ToKeyboardKey","text":"<pre><code>func ToKeyboardKey(nativeKey int) KeyboardKey\n</code></pre>"},{"location":"api/hid/#mouse","title":"Mouse","text":"<p><code>struct</code></p> <pre><code>type Mouse struct {\n    X, Y             float32\n    SX, SY           float32\n    CX, CY           float32\n    ScrollX, ScrollY float32\n\n    OnDragStop events.Event\n\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/hid/#newmouse","title":"NewMouse","text":"<pre><code>func NewMouse() Mouse\n</code></pre>"},{"location":"api/hid/#mousebuttonchanged","title":"Mouse.ButtonChanged","text":"<pre><code>func (m Mouse) ButtonChanged() bool\n</code></pre>"},{"location":"api/hid/#mousebuttonstate","title":"Mouse.ButtonState","text":"<pre><code>func (m Mouse) ButtonState(index int) int\n</code></pre>"},{"location":"api/hid/#mousecenteredposition","title":"Mouse.CenteredPosition","text":"<pre><code>func (m Mouse) CenteredPosition() matrix.Vec2\n</code></pre>"},{"location":"api/hid/#mousedragdata","title":"Mouse.DragData","text":"<pre><code>func (m Mouse) DragData() any\n</code></pre>"},{"location":"api/hid/#mouseendupdate","title":"Mouse.EndUpdate","text":"<pre><code>func (m *Mouse) EndUpdate()\n</code></pre>"},{"location":"api/hid/#mouseheld","title":"Mouse.Held","text":"<pre><code>func (m Mouse) Held(index int) bool\n</code></pre>"},{"location":"api/hid/#mousemoved","title":"Mouse.Moved","text":"<pre><code>func (m Mouse) Moved() bool\n</code></pre>"},{"location":"api/hid/#mouseposition","title":"Mouse.Position","text":"<pre><code>func (m Mouse) Position() matrix.Vec2\n</code></pre>"},{"location":"api/hid/#mousepressed","title":"Mouse.Pressed","text":"<pre><code>func (m Mouse) Pressed(index int) bool\n</code></pre>"},{"location":"api/hid/#mousereleased","title":"Mouse.Released","text":"<pre><code>func (m Mouse) Released(index int) bool\n</code></pre>"},{"location":"api/hid/#mousereset","title":"Mouse.Reset","text":"<pre><code>func (m *Mouse) Reset()\n</code></pre>"},{"location":"api/hid/#mousescreenposition","title":"Mouse.ScreenPosition","text":"<pre><code>func (m Mouse) ScreenPosition() matrix.Vec2\n</code></pre>"},{"location":"api/hid/#mousescroll","title":"Mouse.Scroll","text":"<pre><code>func (m Mouse) Scroll() matrix.Vec2\n</code></pre>"},{"location":"api/hid/#mousescrolled","title":"Mouse.Scrolled","text":"<pre><code>func (m Mouse) Scrolled() bool\n</code></pre>"},{"location":"api/hid/#mousesetdown","title":"Mouse.SetDown","text":"<pre><code>func (m *Mouse) SetDown(index int)\n</code></pre>"},{"location":"api/hid/#mousesetdragdata","title":"Mouse.SetDragData","text":"<pre><code>func (m *Mouse) SetDragData(data DragData)\n</code></pre>"},{"location":"api/hid/#mousesetposition","title":"Mouse.SetPosition","text":"<pre><code>func (m *Mouse) SetPosition(x, y, windowWidth, windowHeight float32)\n</code></pre>"},{"location":"api/hid/#mousesetscroll","title":"Mouse.SetScroll","text":"<pre><code>func (m *Mouse) SetScroll(x, y float32)\n</code></pre>"},{"location":"api/hid/#mousesetup","title":"Mouse.SetUp","text":"<pre><code>func (m *Mouse) SetUp(index int)\n</code></pre>"},{"location":"api/hid/#stylus","title":"Stylus","text":"<p><code>struct</code></p> <pre><code>type Stylus struct {\n    X        float32\n    Y        float32\n    IY       float32\n    Pressure float32\n    Distance float32\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/hid/#newstylus","title":"NewStylus","text":"<pre><code>func NewStylus() Stylus\n</code></pre>"},{"location":"api/hid/#stylusactionstate","title":"Stylus.ActionState","text":"<pre><code>func (s *Stylus) ActionState() int\n</code></pre>"},{"location":"api/hid/#stylusendupdate","title":"Stylus.EndUpdate","text":"<pre><code>func (s *Stylus) EndUpdate()\n</code></pre>"},{"location":"api/hid/#stylusheld","title":"Stylus.Held","text":"<pre><code>func (s *Stylus) Held() bool\n</code></pre>"},{"location":"api/hid/#stylusisactive","title":"Stylus.IsActive","text":"<pre><code>func (s *Stylus) IsActive() bool\n</code></pre>"},{"location":"api/hid/#stylusmoved","title":"Stylus.Moved","text":"<pre><code>func (s *Stylus) Moved() bool\n</code></pre>"},{"location":"api/hid/#styluspressed","title":"Stylus.Pressed","text":"<pre><code>func (s *Stylus) Pressed() bool\n</code></pre>"},{"location":"api/hid/#stylusreleased","title":"Stylus.Released","text":"<pre><code>func (s *Stylus) Released() bool\n</code></pre>"},{"location":"api/hid/#stylusreset","title":"Stylus.Reset","text":"<pre><code>func (s *Stylus) Reset()\n</code></pre>"},{"location":"api/hid/#stylusset","title":"Stylus.Set","text":"<pre><code>func (s *Stylus) Set(x, y, windowHeight, pressure float32)\n</code></pre>"},{"location":"api/hid/#stylussetactionstate","title":"Stylus.SetActionState","text":"<pre><code>func (s *Stylus) SetActionState(state StylusActionState)\n</code></pre>"},{"location":"api/hid/#stylussetdistance","title":"Stylus.SetDistance","text":"<pre><code>func (s *Stylus) SetDistance(distance float32)\n</code></pre>"},{"location":"api/hid/#stylusactionstate_1","title":"StylusActionState","text":"<p>int <pre><code>type StylusActionState = int\n</code></pre></p> <p>const ( StylusActionNone StylusActionState = AMotionEventActionIdle StylusActionHoverEnter StylusActionState = AMotionEventActionHoverEnter StylusActionHoverMove StylusActionState = AMotionEventActionHoverMove StylusActionHoverExit StylusActionState = AMotionEventActionHoverExit StylusActionDown StylusActionState = AMotionEventActionDown StylusActionMove StylusActionState = AMotionEventActionMove StylusActionUp StylusActionState = AMotionEventActionUp StylusActionHeld StylusActionState = AMotionEventActionHeld StylusActionHover StylusActionState = AMotionEventActionHover )</p>"},{"location":"api/hid/#touch","title":"Touch","text":"<p><code>struct</code></p> <pre><code>type Touch struct {\n    Pointers []*TouchPointer\n    Pool     [MaxTouchPointersAvailable]TouchPointer\n}\n</code></pre>"},{"location":"api/hid/#newtouch","title":"NewTouch","text":"<pre><code>func NewTouch() Touch\n</code></pre>"},{"location":"api/hid/#touchcancel","title":"Touch.Cancel","text":"<pre><code>func (t *Touch) Cancel()\n</code></pre>"},{"location":"api/hid/#touchcancelled","title":"Touch.Cancelled","text":"<pre><code>func (t *Touch) Cancelled() bool\n</code></pre>"},{"location":"api/hid/#touchendupdate","title":"Touch.EndUpdate","text":"<pre><code>func (t *Touch) EndUpdate()\n</code></pre>"},{"location":"api/hid/#touchheld","title":"Touch.Held","text":"<pre><code>func (t *Touch) Held() bool\n</code></pre>"},{"location":"api/hid/#touchmoved","title":"Touch.Moved","text":"<pre><code>func (t *Touch) Moved() bool\n</code></pre>"},{"location":"api/hid/#touchpointer","title":"Touch.Pointer","text":"<pre><code>func (t *Touch) Pointer(index int) *TouchPointer\n</code></pre>"},{"location":"api/hid/#touchpressed","title":"Touch.Pressed","text":"<pre><code>func (t *Touch) Pressed() bool\n</code></pre>"},{"location":"api/hid/#touchreleased","title":"Touch.Released","text":"<pre><code>func (t *Touch) Released() bool\n</code></pre>"},{"location":"api/hid/#touchreset","title":"Touch.Reset","text":"<pre><code>func (t *Touch) Reset()\n</code></pre>"},{"location":"api/hid/#touchsetdown","title":"Touch.SetDown","text":"<pre><code>func (t *Touch) SetDown(id int64, x, y, windowHeight float32)\n</code></pre>"},{"location":"api/hid/#touchsetmoved","title":"Touch.SetMoved","text":"<pre><code>func (t *Touch) SetMoved(id int64, x, y, windowHeight float32)\n</code></pre>"},{"location":"api/hid/#touchsetpressure","title":"Touch.SetPressure","text":"<pre><code>func (t *Touch) SetPressure(id int64, pressure float32)\n</code></pre>"},{"location":"api/hid/#touchsetup","title":"Touch.SetUp","text":"<pre><code>func (t *Touch) SetUp(id int64, x, y, windowHeight float32)\n</code></pre>"},{"location":"api/hid/#touchaction","title":"TouchAction","text":"<p>int <pre><code>type TouchAction = int\n</code></pre></p> <p>const ( TouchActionNone TouchAction = -1 TouchActionDown TouchAction = internalTouchActionDown TouchActionUp TouchAction = internalTouchActionUp TouchActionMove TouchAction = internalTouchActionMove TouchActionCancel TouchAction = -2 TouchActionHeld TouchAction = -3 )</p>"},{"location":"api/hid/#touchpointer_1","title":"TouchPointer","text":"<p><code>struct</code></p> <pre><code>type TouchPointer struct {\n    Pressure float32\n    X        float32\n    Y        float32\n    IY       float32\n    State    TouchAction\n    Id       int64\n}\n</code></pre>"},{"location":"api/host_container/","title":"package host_container","text":"<pre><code>import \"kaiju/host_container\"\n</code></pre>"},{"location":"api/host_container/#types","title":"Types","text":""},{"location":"api/host_container/#container","title":"Container","text":"<p><code>struct</code></p> <pre><code>type Container struct {\n    Host *engine.Host\n\n    PrepLock chan struct{}\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/host_container/#new","title":"New","text":"<pre><code>func New(name string, logStream *logging.LogStream) *Container\n</code></pre>"},{"location":"api/host_container/#containerclose","title":"Container.Close","text":"<pre><code>func (c *Container) Close()\n</code></pre>"},{"location":"api/host_container/#containerrun","title":"Container.Run","text":"<pre><code>func (c *Container) Run(width, height, x, y int) error\n</code></pre>"},{"location":"api/host_container/#containerrunfunction","title":"Container.RunFunction","text":"<pre><code>func (c *Container) RunFunction(f func())\n</code></pre>"},{"location":"api/klib/","title":"package klib","text":"<pre><code>import \"kaiju/klib\"\n</code></pre>"},{"location":"api/klib/#constants","title":"Constants","text":""},{"location":"api/klib/#iso8601","title":"ISO8601","text":"<p><code>\"2006-01-02T15:04:05Z\"</code></p>"},{"location":"api/klib/#functions","title":"Functions","text":""},{"location":"api/klib/#appenduniquet-comparable","title":"AppendUnique[T comparable]","text":"<pre><code>func AppendUnique[T comparable](slice []T, values ...T) []T\n</code></pre>"},{"location":"api/klib/#binaryread","title":"BinaryRead","text":"<pre><code>func BinaryRead(r io.Reader, data any)\n</code></pre>"},{"location":"api/klib/#binaryreadlen","title":"BinaryReadLen","text":"<pre><code>func BinaryReadLen(r io.Reader) (int32, error)\n</code></pre>"},{"location":"api/klib/#binaryreadstring","title":"BinaryReadString","text":"<pre><code>func BinaryReadString(r io.Reader) (string, error)\n</code></pre>"},{"location":"api/klib/#binaryreadvart-any","title":"BinaryReadVar[T any]","text":"<pre><code>func BinaryReadVar[T any](r io.Reader) (T, error)\n</code></pre>"},{"location":"api/klib/#binaryreadvarslicet-any","title":"BinaryReadVarSlice[T any]","text":"<pre><code>func BinaryReadVarSlice[T any](r io.Reader) ([]T, error)\n</code></pre>"},{"location":"api/klib/#binarywrite","title":"BinaryWrite","text":"<pre><code>func BinaryWrite(w io.Writer, data any)\n</code></pre>"},{"location":"api/klib/#binarywritemapk-comparable-v-any","title":"BinaryWriteMap[K comparable, V any]","text":"<pre><code>func BinaryWriteMap[K comparable, V any](w io.Writer, data map[K]V)\n</code></pre>"},{"location":"api/klib/#binarywritemaplenk-comparable-v-any","title":"BinaryWriteMapLen[K comparable, V any]","text":"<pre><code>func BinaryWriteMapLen[K comparable, V any](w io.Writer, data map[K]V)\n</code></pre>"},{"location":"api/klib/#binarywriteslicet-any","title":"BinaryWriteSlice[T any]","text":"<pre><code>func BinaryWriteSlice[T any](w io.Writer, data []T)\n</code></pre>"},{"location":"api/klib/#binarywriteslicelent-any","title":"BinaryWriteSliceLen[T any]","text":"<pre><code>func BinaryWriteSliceLen[T any](w io.Writer, data []T)\n</code></pre>"},{"location":"api/klib/#binarywritestring","title":"BinaryWriteString","text":"<pre><code>func BinaryWriteString(w io.Writer, str string)\n</code></pre>"},{"location":"api/klib/#byteslicetofloat32slice","title":"ByteSliceToFloat32Slice","text":"<pre><code>func ByteSliceToFloat32Slice(data []byte) []float32\n</code></pre>"},{"location":"api/klib/#byteslicetouint16slice","title":"ByteSliceToUInt16Slice","text":"<pre><code>func ByteSliceToUInt16Slice(data []byte) []uint16\n</code></pre>"},{"location":"api/klib/#clampt-cmpordered","title":"Clamp[T cmp.Ordered]","text":"<pre><code>func Clamp[T cmp.Ordered](current, minimum, maximum T) T\n</code></pre>"},{"location":"api/klib/#containst-comparable","title":"Contains[T comparable]","text":"<pre><code>func Contains[T comparable](slice []T, item T) bool\n</code></pre>"},{"location":"api/klib/#convertbyteslicetypet-any","title":"ConvertByteSliceType[T any]","text":"<pre><code>func ConvertByteSliceType[T any](slice []byte) []T\n</code></pre>"},{"location":"api/klib/#decrypt","title":"Decrypt","text":"<pre><code>func Decrypt(encryptedData []byte, key []byte) ([]byte, error)\n</code></pre>"},{"location":"api/klib/#delaycall","title":"DelayCall","text":"<pre><code>func DelayCall(d time.Duration, f func(), ctx context.Context)\n</code></pre>"},{"location":"api/klib/#encrypt","title":"Encrypt","text":"<pre><code>func Encrypt(rawData []byte, key []byte) ([]byte, error)\n</code></pre>"},{"location":"api/klib/#exeextension","title":"ExeExtension","text":"<pre><code>func ExeExtension() string\n</code></pre>"},{"location":"api/klib/#findfirstzeroinbytearray","title":"FindFirstZeroInByteArray","text":"<pre><code>func FindFirstZeroInByteArray(arr []byte) int\n</code></pre>"},{"location":"api/klib/#floatequalst-float","title":"FloatEquals[T Float]","text":"<pre><code>func FloatEquals[T Float](a, b T) bool\n</code></pre>"},{"location":"api/klib/#interfaceunderlyingpointert-any","title":"InterfaceUnderlyingPointer[T any]","text":"<pre><code>func InterfaceUnderlyingPointer[T any](s T) unsafe.Pointer\n</code></pre>"},{"location":"api/klib/#jsondecodet-any","title":"JsonDecode[T any]","text":"<pre><code>func JsonDecode[T any](decoder *json.Decoder, container *T) error\n</code></pre>"},{"location":"api/klib/#mm2pxt-number","title":"MM2PX[T Number]","text":"<pre><code>func MM2PX[T Number](pixels, mm, targetMM T) T\n</code></pre>"},{"location":"api/klib/#mapkeyst-comparable-u-any","title":"MapKeys[T comparable, U any]","text":"<pre><code>func MapKeys[T comparable, U any](m map[T]U) []T\n</code></pre>"},{"location":"api/klib/#mapvaluest-comparable-u-any","title":"MapValues[T comparable, U any]","text":"<pre><code>func MapValues[T comparable, U any](m map[T]U) []U\n</code></pre>"},{"location":"api/klib/#memcpy","title":"Memcpy","text":"<pre><code>func Memcpy(dst unsafe.Pointer, src unsafe.Pointer, size uint64)\n</code></pre>"},{"location":"api/klib/#must","title":"Must","text":"<pre><code>func Must(err error)\n</code></pre>"},{"location":"api/klib/#mustreturnt-any","title":"MustReturn[T any]","text":"<pre><code>func MustReturn[T any](ret T, err error) T\n</code></pre>"},{"location":"api/klib/#mustreturn2t-u-any","title":"MustReturn2[T, U any]","text":"<pre><code>func MustReturn2[T, U any](ret1 T, ret2 U, err error) (T, U)\n</code></pre>"},{"location":"api/klib/#notyetimplemented","title":"NotYetImplemented","text":"<pre><code>func NotYetImplemented(issueId int)\n</code></pre>"},{"location":"api/klib/#openwebsite","title":"OpenWebsite","text":"<pre><code>func OpenWebsite(url string)\n</code></pre>"},{"location":"api/klib/#readrootfile","title":"ReadRootFile","text":"<pre><code>func ReadRootFile(fs *os.Root, filePath string) ([]byte, error)\n</code></pre>"},{"location":"api/klib/#removeunorderedt-any","title":"RemoveUnordered[T any]","text":"<pre><code>func RemoveUnordered[T any](slice []T, idx int) []T\n</code></pre>"},{"location":"api/klib/#replacestringrecursive","title":"ReplaceStringRecursive","text":"<pre><code>func ReplaceStringRecursive(s string, old string, new string) string\n</code></pre>"},{"location":"api/klib/#should","title":"Should","text":"<pre><code>func Should(err error) bool\n</code></pre>"},{"location":"api/klib/#shouldreturnt-any","title":"ShouldReturn[T any]","text":"<pre><code>func ShouldReturn[T any](ret T, err error) T\n</code></pre>"},{"location":"api/klib/#shufflet-any","title":"Shuffle[T any]","text":"<pre><code>func Shuffle[T any](slice []T, rng *rand.Rand)\n</code></pre>"},{"location":"api/klib/#sizedstructtobytearray","title":"SizedStructToByteArray","text":"<pre><code>func SizedStructToByteArray(s unsafe.Pointer, size int) []byte\n</code></pre>"},{"location":"api/klib/#stringtotypevalue","title":"StringToTypeValue","text":"<pre><code>func StringToTypeValue(typeName, v string) any\n</code></pre>"},{"location":"api/klib/#structslicetobytearrayt-any","title":"StructSliceToByteArray[T any]","text":"<pre><code>func StructSliceToByteArray[T any](s []T) []byte\n</code></pre>"},{"location":"api/klib/#structtobytearrayt-any","title":"StructToByteArray[T any]","text":"<pre><code>func StructToByteArray[T any](s T) []byte\n</code></pre>"},{"location":"api/klib/#tickerwait","title":"TickerWait","text":"<pre><code>func TickerWait(interval, limit time.Duration, condition func() bool) bool\n</code></pre>"},{"location":"api/klib/#tounixpath","title":"ToUnixPath","text":"<pre><code>func ToUnixPath(path string) string\n</code></pre>"},{"location":"api/klib/#trace","title":"Trace","text":"<pre><code>func Trace(message string)\n</code></pre>"},{"location":"api/klib/#tracestring","title":"TraceString","text":"<pre><code>func TraceString(message string) string\n</code></pre>"},{"location":"api/klib/#tracestrings","title":"TraceStrings","text":"<pre><code>func TraceStrings(message string, skip int) []string\n</code></pre>"},{"location":"api/klib/#writerootfile","title":"WriteRootFile","text":"<pre><code>func WriteRootFile(fs *os.Root, filePath string, data []byte) error\n</code></pre>"},{"location":"api/klib/#types","title":"Types","text":""},{"location":"api/klib/#complex","title":"Complex","text":"<p><code>interface</code></p> <pre><code>type Complex interface {\n    ~complex64 | ~complex128\n}\n</code></pre>"},{"location":"api/klib/#errorlist","title":"ErrorList","text":"<p><code>struct</code></p> <pre><code>type ErrorList struct {\n    Errors []error\n}\n</code></pre>"},{"location":"api/klib/#newerrorlist","title":"NewErrorList","text":"<pre><code>func NewErrorList() ErrorList\n</code></pre>"},{"location":"api/klib/#errorlistaddany","title":"ErrorList.AddAny","text":"<pre><code>func (e *ErrorList) AddAny(err error)\n</code></pre>"},{"location":"api/klib/#errorlistany","title":"ErrorList.Any","text":"<pre><code>func (e *ErrorList) Any() bool\n</code></pre>"},{"location":"api/klib/#errorlistfirst","title":"ErrorList.First","text":"<pre><code>func (e *ErrorList) First() error\n</code></pre>"},{"location":"api/klib/#float","title":"Float","text":"<p><code>interface</code></p> <pre><code>type Float interface {\n    ~float32 | ~float64\n}\n</code></pre>"},{"location":"api/klib/#integer","title":"Integer","text":"<p><code>interface</code></p> <pre><code>type Integer interface {\n    Signed | Unsigned\n}\n</code></pre>"},{"location":"api/klib/#number","title":"Number","text":"<p><code>interface</code></p> <pre><code>type Number interface {\n    Integer | Float\n}\n</code></pre>"},{"location":"api/klib/#ordered","title":"Ordered","text":"<p><code>interface</code></p> <pre><code>type Ordered interface {\n    Integer | Float | ~string\n}\n</code></pre>"},{"location":"api/klib/#serializable","title":"Serializable","text":"<p><code>interface</code></p> <pre><code>type Serializable interface {\n    Serialize(stream io.Writer)\n    Deserialize(stream io.Reader)\n}\n</code></pre>"},{"location":"api/klib/#signed","title":"Signed","text":"<p><code>interface</code></p> <pre><code>type Signed interface {\n    ~int | ~int8 | ~int16 | ~int32 | ~int64\n}\n</code></pre>"},{"location":"api/klib/#unsigned","title":"Unsigned","text":"<p><code>interface</code></p> <pre><code>type Unsigned interface {\n    ~uint | ~uint8 | ~uint16 | ~uint32 | ~uint64 | ~uintptr\n}\n</code></pre>"},{"location":"api/klib/string_equations/","title":"package string_equations","text":"<pre><code>import \"kaiju/klib/string_equations\"\n</code></pre>"},{"location":"api/klib/string_equations/#functions","title":"Functions","text":""},{"location":"api/klib/string_equations/#calculatesimplestringexpression","title":"CalculateSimpleStringExpression","text":"<pre><code>func CalculateSimpleStringExpression(expression string) (float64, error)\n</code></pre> <p>CalculateSimpleStringExpression will take an input string math equation, using only simple expressions (+, -, *, /) (and parenthesis) to generate a resulting value</p>"},{"location":"api/markup/","title":"package markup","text":"<pre><code>import \"kaiju/markup\"\n</code></pre>"},{"location":"api/markup/#functions","title":"Functions","text":""},{"location":"api/markup/#documentfromhtmlasset","title":"DocumentFromHTMLAsset","text":"<pre><code>func DocumentFromHTMLAsset(uiMan *ui.Manager, htmlPath string, withData any, funcMap map[string]func(*document.Element)) (*document.Document, error)\n</code></pre>"},{"location":"api/markup/#documentfromhtmlstring","title":"DocumentFromHTMLString","text":"<pre><code>func DocumentFromHTMLString(uiMan *ui.Manager, html, cssStr string, withData any, funcMap map[string]func(*document.Element)) *document.Document\n</code></pre>"},{"location":"api/markup/css/","title":"package css","text":"<pre><code>import \"kaiju/markup/css\"\n</code></pre>"},{"location":"api/markup/css/#variables","title":"Variables","text":""},{"location":"api/markup/css/#functions","title":"Functions","text":""},{"location":"api/markup/css/#apply","title":"Apply","text":"<pre><code>func Apply(s rules.StyleSheet, doc *document.Document, host *engine.Host)\n</code></pre>"},{"location":"api/markup/css/#types","title":"Types","text":""},{"location":"api/markup/css/#cssmap","title":"CSSMap","text":"<p>[map <pre><code>type CSSMap map[*ui.UI][]rules.Rule\n</code></pre></p>"},{"location":"api/markup/css/functions/","title":"package functions","text":"<pre><code>import \"kaiju/markup/css/functions\"\n</code></pre>"},{"location":"api/markup/css/functions/#variables","title":"Variables","text":""},{"location":"api/markup/css/functions/#functionmap","title":"FunctionMap","text":"<pre><code>map[string]Function{\n    \"attr\":                      Attr{},\n    \"calc\":                      Calc{},\n    \"conic-gradient\":            ConicGradient{},\n    \"counter\":                   Counter{},\n    \"cubic-bezier\":              CubicBezier{},\n    \"hsl\":                       Hsl{},\n    \"hsla\":                      Hsla{},\n    \"linear-gradient\":           LinearGradient{},\n    \"max\":                       Max{},\n    \"min\":                       Min{},\n    \"radial-gradient\":           RadialGradient{},\n    \"repeating-conic-gradient\":  RepeatingConicGradient{},\n    \"repeating-linear-gradient\": RepeatingLinearGradient{},\n    \"repeating-radial-gradient\": RepeatingRadialGradient{},\n    \"rgb\":                       Rgb{},\n    \"rgba\":                      Rgba{},\n    \"var\":                       Var{},\n}\n</code></pre>"},{"location":"api/markup/css/functions/#types","title":"Types","text":""},{"location":"api/markup/css/functions/#attr","title":"Attr","text":"<p><code>struct</code></p> <pre><code>type Attr struct{}\n</code></pre> <p>Returns the value of an attribute of the selected element</p>"},{"location":"api/markup/css/functions/#attrkey","title":"Attr.Key","text":"<pre><code>func (f Attr) Key() string\n</code></pre>"},{"location":"api/markup/css/functions/#attrprocess","title":"Attr.Process","text":"<pre><code>func (f Attr) Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n</code></pre>"},{"location":"api/markup/css/functions/#calc","title":"Calc","text":"<p><code>struct</code></p> <pre><code>type Calc struct{}\n</code></pre> <p>Allows you to perform calculations to determine CSS property values</p>"},{"location":"api/markup/css/functions/#calckey","title":"Calc.Key","text":"<pre><code>func (f Calc) Key() string\n</code></pre>"},{"location":"api/markup/css/functions/#calcprocess","title":"Calc.Process","text":"<pre><code>func (f Calc) Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n</code></pre>"},{"location":"api/markup/css/functions/#conicgradient","title":"ConicGradient","text":"<p><code>struct</code></p> <pre><code>type ConicGradient struct{}\n</code></pre> <p>Creates a conic gradient</p>"},{"location":"api/markup/css/functions/#conicgradientkey","title":"ConicGradient.Key","text":"<pre><code>func (f ConicGradient) Key() string\n</code></pre>"},{"location":"api/markup/css/functions/#conicgradientprocess","title":"ConicGradient.Process","text":"<pre><code>func (f ConicGradient) Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n</code></pre>"},{"location":"api/markup/css/functions/#counter","title":"Counter","text":"<p><code>struct</code></p> <pre><code>type Counter struct{}\n</code></pre> <p>Returns the current value of the named counter</p>"},{"location":"api/markup/css/functions/#counterkey","title":"Counter.Key","text":"<pre><code>func (f Counter) Key() string\n</code></pre>"},{"location":"api/markup/css/functions/#counterprocess","title":"Counter.Process","text":"<pre><code>func (f Counter) Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n</code></pre>"},{"location":"api/markup/css/functions/#cubicbezier","title":"CubicBezier","text":"<p><code>struct</code></p> <pre><code>type CubicBezier struct{}\n</code></pre> <p>Defines a Cubic Bezier curve</p>"},{"location":"api/markup/css/functions/#cubicbezierkey","title":"CubicBezier.Key","text":"<pre><code>func (f CubicBezier) Key() string\n</code></pre>"},{"location":"api/markup/css/functions/#cubicbezierprocess","title":"CubicBezier.Process","text":"<pre><code>func (f CubicBezier) Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n</code></pre>"},{"location":"api/markup/css/functions/#function","title":"Function","text":"<p><code>interface</code></p> <pre><code>type Function interface {\n    Key() string\n    Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n}\n</code></pre>"},{"location":"api/markup/css/functions/#hsl","title":"Hsl","text":"<p><code>struct</code></p> <pre><code>type Hsl struct{}\n</code></pre> <p>Defines colors using the Hue-Saturation-Lightness model (HSL)</p>"},{"location":"api/markup/css/functions/#hslkey","title":"Hsl.Key","text":"<pre><code>func (f Hsl) Key() string\n</code></pre>"},{"location":"api/markup/css/functions/#hslprocess","title":"Hsl.Process","text":"<pre><code>func (f Hsl) Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n</code></pre>"},{"location":"api/markup/css/functions/#hsla","title":"Hsla","text":"<p><code>struct</code></p> <pre><code>type Hsla struct{}\n</code></pre> <p>Defines colors using the Hue-Saturation-Lightness-Alpha model (HSLA)</p>"},{"location":"api/markup/css/functions/#hslakey","title":"Hsla.Key","text":"<pre><code>func (f Hsla) Key() string\n</code></pre>"},{"location":"api/markup/css/functions/#hslaprocess","title":"Hsla.Process","text":"<pre><code>func (f Hsla) Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n</code></pre>"},{"location":"api/markup/css/functions/#lineargradient","title":"LinearGradient","text":"<p><code>struct</code></p> <pre><code>type LinearGradient struct{}\n</code></pre> <p>Creates a linear gradient</p>"},{"location":"api/markup/css/functions/#lineargradientkey","title":"LinearGradient.Key","text":"<pre><code>func (f LinearGradient) Key() string\n</code></pre>"},{"location":"api/markup/css/functions/#lineargradientprocess","title":"LinearGradient.Process","text":"<pre><code>func (f LinearGradient) Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n</code></pre>"},{"location":"api/markup/css/functions/#max","title":"Max","text":"<p><code>struct</code></p> <pre><code>type Max struct{}\n</code></pre> <p>Uses the largest value, from a comma-separated list of values, as the property value</p>"},{"location":"api/markup/css/functions/#maxkey","title":"Max.Key","text":"<pre><code>func (f Max) Key() string\n</code></pre>"},{"location":"api/markup/css/functions/#maxprocess","title":"Max.Process","text":"<pre><code>func (f Max) Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n</code></pre>"},{"location":"api/markup/css/functions/#min","title":"Min","text":"<p><code>struct</code></p> <pre><code>type Min struct{}\n</code></pre> <p>Uses the smallest value, from a comma-separated list of values, as the property value</p>"},{"location":"api/markup/css/functions/#minkey","title":"Min.Key","text":"<pre><code>func (f Min) Key() string\n</code></pre>"},{"location":"api/markup/css/functions/#minprocess","title":"Min.Process","text":"<pre><code>func (f Min) Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n</code></pre>"},{"location":"api/markup/css/functions/#radialgradient","title":"RadialGradient","text":"<p><code>struct</code></p> <pre><code>type RadialGradient struct{}\n</code></pre> <p>Creates a radial gradient</p>"},{"location":"api/markup/css/functions/#radialgradientkey","title":"RadialGradient.Key","text":"<pre><code>func (f RadialGradient) Key() string\n</code></pre>"},{"location":"api/markup/css/functions/#radialgradientprocess","title":"RadialGradient.Process","text":"<pre><code>func (f RadialGradient) Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n</code></pre>"},{"location":"api/markup/css/functions/#repeatingconicgradient","title":"RepeatingConicGradient","text":"<p><code>struct</code></p> <pre><code>type RepeatingConicGradient struct{}\n</code></pre> <p>Repeats a conic gradient</p>"},{"location":"api/markup/css/functions/#repeatingconicgradientkey","title":"RepeatingConicGradient.Key","text":"<pre><code>func (f RepeatingConicGradient) Key() string\n</code></pre>"},{"location":"api/markup/css/functions/#repeatingconicgradientprocess","title":"RepeatingConicGradient.Process","text":"<pre><code>func (f RepeatingConicGradient) Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n</code></pre>"},{"location":"api/markup/css/functions/#repeatinglineargradient","title":"RepeatingLinearGradient","text":"<p><code>struct</code></p> <pre><code>type RepeatingLinearGradient struct{}\n</code></pre> <p>Repeats a linear gradient</p>"},{"location":"api/markup/css/functions/#repeatinglineargradientkey","title":"RepeatingLinearGradient.Key","text":"<pre><code>func (f RepeatingLinearGradient) Key() string\n</code></pre>"},{"location":"api/markup/css/functions/#repeatinglineargradientprocess","title":"RepeatingLinearGradient.Process","text":"<pre><code>func (f RepeatingLinearGradient) Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n</code></pre>"},{"location":"api/markup/css/functions/#repeatingradialgradient","title":"RepeatingRadialGradient","text":"<p><code>struct</code></p> <pre><code>type RepeatingRadialGradient struct{}\n</code></pre> <p>Repeats a radial gradient</p>"},{"location":"api/markup/css/functions/#repeatingradialgradientkey","title":"RepeatingRadialGradient.Key","text":"<pre><code>func (f RepeatingRadialGradient) Key() string\n</code></pre>"},{"location":"api/markup/css/functions/#repeatingradialgradientprocess","title":"RepeatingRadialGradient.Process","text":"<pre><code>func (f RepeatingRadialGradient) Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n</code></pre>"},{"location":"api/markup/css/functions/#rgb","title":"Rgb","text":"<p><code>struct</code></p> <pre><code>type Rgb struct{}\n</code></pre> <p>Defines colors using the Red-Green-Blue model (RGB)</p>"},{"location":"api/markup/css/functions/#rgbkey","title":"Rgb.Key","text":"<pre><code>func (f Rgb) Key() string\n</code></pre>"},{"location":"api/markup/css/functions/#rgbprocess","title":"Rgb.Process","text":"<pre><code>func (f Rgb) Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n</code></pre>"},{"location":"api/markup/css/functions/#rgba","title":"Rgba","text":"<p><code>struct</code></p> <pre><code>type Rgba struct{}\n</code></pre> <p>Defines colors using the Red-Green-Blue-Alpha model (RGBA)</p>"},{"location":"api/markup/css/functions/#rgbakey","title":"Rgba.Key","text":"<pre><code>func (f Rgba) Key() string\n</code></pre>"},{"location":"api/markup/css/functions/#rgbaprocess","title":"Rgba.Process","text":"<pre><code>func (f Rgba) Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n</code></pre>"},{"location":"api/markup/css/functions/#var","title":"Var","text":"<p><code>struct</code></p> <pre><code>type Var struct{}\n</code></pre> <p>Inserts the value of a custom property</p>"},{"location":"api/markup/css/functions/#varkey","title":"Var.Key","text":"<pre><code>func (f Var) Key() string\n</code></pre>"},{"location":"api/markup/css/functions/#varprocess","title":"Var.Process","text":"<pre><code>func (f Var) Process(panel *ui.Panel, elm *document.Element, value rules.PropertyValue) (string, error)\n</code></pre>"},{"location":"api/markup/css/helpers/","title":"package helpers","text":"<pre><code>import \"kaiju/markup/css/helpers\"\n</code></pre>"},{"location":"api/markup/css/helpers/#variables","title":"Variables","text":""},{"location":"api/markup/css/helpers/#colormap","title":"ColorMap","text":"<pre><code>map[string]string{\n    \"aliceblue\":            \"#F0F8FF\",\n    \"antiquewhite\":         \"#FAEBD7\",\n    \"aqua\":                 \"#00FFFF\",\n    \"aquamarine\":           \"#7FFFD4\",\n    \"azure\":                \"#F0FFFF\",\n    \"beige\":                \"#F5F5DC\",\n    \"bisque\":               \"#FFE4C4\",\n    \"black\":                \"#000000\",\n    \"blanchedalmond\":       \"#FFEBCD\",\n    \"blue\":                 \"#0000FF\",\n    \"blueviolet\":           \"#8A2BE2\",\n    \"brown\":                \"#A52A2A\",\n    \"burlywood\":            \"#DEB887\",\n    \"cadetblue\":            \"#5F9EA0\",\n    \"chartreuse\":           \"#7FFF00\",\n    \"chocolate\":            \"#D2691E\",\n    \"coral\":                \"#FF7F50\",\n    \"cornflowerblue\":       \"#6495ED\",\n    \"cornsilk\":             \"#FFF8DC\",\n    \"crimson\":              \"#DC143C\",\n    \"cyan\":                 \"#00FFFF\",\n    \"darkblue\":             \"#00008B\",\n    \"darkcyan\":             \"#008B8B\",\n    \"darkgoldenrod\":        \"#B8860B\",\n    \"darkgray\":             \"#A9A9A9\",\n    \"darkgrey\":             \"#A9A9A9\",\n    \"darkgreen\":            \"#006400\",\n    \"darkkhaki\":            \"#BDB76B\",\n    \"darkmagenta\":          \"#8B008B\",\n    \"darkolivegreen\":       \"#556B2F\",\n    \"darkorange\":           \"#FF8C00\",\n    \"darkorchid\":           \"#9932CC\",\n    \"darkred\":              \"#8B0000\",\n    \"darksalmon\":           \"#E9967A\",\n    \"darkseagreen\":         \"#8FBC8F\",\n    \"darkslateblue\":        \"#483D8B\",\n    \"darkslategray\":        \"#2F4F4F\",\n    \"darkslategrey\":        \"#2F4F4F\",\n    \"darkturquoise\":        \"#00CED1\",\n    \"darkviolet\":           \"#9400D3\",\n    \"deeppink\":             \"#FF1493\",\n    \"deepskyblue\":          \"#00BFFF\",\n    \"dimgray\":              \"#696969\",\n    \"dimgrey\":              \"#696969\",\n    \"dodgerblue\":           \"#1E90FF\",\n    \"firebrick\":            \"#B22222\",\n    \"floralwhite\":          \"#FFFAF0\",\n    \"forestgreen\":          \"#228B22\",\n    \"fuchsia\":              \"#FF00FF\",\n    \"gainsboro\":            \"#DCDCDC\",\n    \"ghostwhite\":           \"#F8F8FF\",\n    \"gold\":                 \"#FFD700\",\n    \"goldenrod\":            \"#DAA520\",\n    \"gray\":                 \"#808080\",\n    \"grey\":                 \"#808080\",\n    \"green\":                \"#008000\",\n    \"greenyellow\":          \"#ADFF2F\",\n    \"honeydew\":             \"#F0FFF0\",\n    \"hotpink\":              \"#FF69B4\",\n    \"indianred\":            \"#CD5C5C\",\n    \"indigo\":               \"#4B0082\",\n    \"ivory\":                \"#FFFFF0\",\n    \"khaki\":                \"#F0E68C\",\n    \"lavender\":             \"#E6E6FA\",\n    \"lavenderblush\":        \"#FFF0F5\",\n    \"lawngreen\":            \"#7CFC00\",\n    \"lemonchiffon\":         \"#FFFACD\",\n    \"lightblue\":            \"#ADD8E6\",\n    \"lightcoral\":           \"#F08080\",\n    \"lightcyan\":            \"#E0FFFF\",\n    \"lightgoldenrodyellow\": \"#FAFAD2\",\n    \"lightgray\":            \"#D3D3D3\",\n    \"lightgrey\":            \"#D3D3D3\",\n    \"lightgreen\":           \"#90EE90\",\n    \"lightpink\":            \"#FFB6C1\",\n    \"lightsalmon\":          \"#FFA07A\",\n    \"lightseagreen\":        \"#20B2AA\",\n    \"lightskyblue\":         \"#87CEFA\",\n    \"lightslategray\":       \"#778899\",\n    \"lightslategrey\":       \"#778899\",\n    \"lightsteelblue\":       \"#B0C4DE\",\n    \"lightyellow\":          \"#FFFFE0\",\n    \"lime\":                 \"#00FF00\",\n    \"limegreen\":            \"#32CD32\",\n    \"linen\":                \"#FAF0E6\",\n    \"magenta\":              \"#FF00FF\",\n    \"maroon\":               \"#800000\",\n    \"mediumaquamarine\":     \"#66CDAA\",\n    \"mediumblue\":           \"#0000CD\",\n    \"mediumorchid\":         \"#BA55D3\",\n    \"mediumpurple\":         \"#9370DB\",\n    \"mediumseagreen\":       \"#3CB371\",\n    \"mediumslateblue\":      \"#7B68EE\",\n    \"mediumspringgreen\":    \"#00FA9A\",\n    \"mediumturquoise\":      \"#48D1CC\",\n    \"mediumvioletred\":      \"#C71585\",\n    \"midnightblue\":         \"#191970\",\n    \"mintcream\":            \"#F5FFFA\",\n    \"mistyrose\":            \"#FFE4E1\",\n    \"moccasin\":             \"#FFE4B5\",\n    \"navajowhite\":          \"#FFDEAD\",\n    \"navy\":                 \"#000080\",\n    \"oldlace\":              \"#FDF5E6\",\n    \"olive\":                \"#808000\",\n    \"olivedrab\":            \"#6B8E23\",\n    \"orange\":               \"#FFA500\",\n    \"orangered\":            \"#FF4500\",\n    \"orchid\":               \"#DA70D6\",\n    \"palegoldenrod\":        \"#EEE8AA\",\n    \"palegreen\":            \"#98FB98\",\n    \"paleturquoise\":        \"#AFEEEE\",\n    \"palevioletred\":        \"#DB7093\",\n    \"papayawhip\":           \"#FFEFD5\",\n    \"peachpuff\":            \"#FFDAB9\",\n    \"peru\":                 \"#CD853F\",\n    \"pink\":                 \"#FFC0CB\",\n    \"plum\":                 \"#DDA0DD\",\n    \"powderblue\":           \"#B0E0E6\",\n    \"purple\":               \"#800080\",\n    \"rebeccapurple\":        \"#663399\",\n    \"red\":                  \"#FF0000\",\n    \"rosybrown\":            \"#BC8F8F\",\n    \"royalblue\":            \"#4169E1\",\n    \"saddlebrown\":          \"#8B4513\",\n    \"salmon\":               \"#FA8072\",\n    \"sandybrown\":           \"#F4A460\",\n    \"seagreen\":             \"#2E8B57\",\n    \"seashell\":             \"#FFF5EE\",\n    \"sienna\":               \"#A0522D\",\n    \"silver\":               \"#C0C0C0\",\n    \"skyblue\":              \"#87CEEB\",\n    \"slateblue\":            \"#6A5ACD\",\n    \"slategray\":            \"#708090\",\n    \"slategrey\":            \"#708090\",\n    \"snow\":                 \"#FFFAFA\",\n    \"springgreen\":          \"#00FF7F\",\n    \"steelblue\":            \"#4682B4\",\n    \"tan\":                  \"#D2B48C\",\n    \"teal\":                 \"#008080\",\n    \"thistle\":              \"#D8BFD8\",\n    \"tomato\":               \"#FF6347\",\n    \"turquoise\":            \"#40E0D0\",\n    \"violet\":               \"#EE82EE\",\n    \"wheat\":                \"#F5DEB3\",\n    \"white\":                \"#FFFFFF\",\n    \"whitesmoke\":           \"#F5F5F5\",\n    \"yellow\":               \"#FFFF00\",\n    \"yellowgreen\":          \"#9ACD32\",\n}\n</code></pre>"},{"location":"api/markup/css/helpers/#functions","title":"Functions","text":""},{"location":"api/markup/css/helpers/#arithmeticstring","title":"ArithmeticString","text":"<pre><code>func ArithmeticString(args []string) (int, error)\n</code></pre>"},{"location":"api/markup/css/helpers/#changentochildcount","title":"ChangeNToChildCount","text":"<pre><code>func ChangeNToChildCount(args []string, count int)\n</code></pre>"},{"location":"api/markup/css/helpers/#numfromlength","title":"NumFromLength","text":"<pre><code>func NumFromLength(str string, window *windowing.Window) float32\n</code></pre>"},{"location":"api/markup/css/helpers/#numfromlengthwithfont","title":"NumFromLengthWithFont","text":"<pre><code>func NumFromLengthWithFont(str string, window *windowing.Window, fontSize float32) float32\n</code></pre>"},{"location":"api/markup/css/properties/","title":"package properties","text":"<pre><code>import \"kaiju/markup/css/properties\"\n</code></pre>"},{"location":"api/markup/css/properties/#variables","title":"Variables","text":""},{"location":"api/markup/css/properties/#propertymap","title":"PropertyMap","text":"<pre><code>map[string]Property{\n    \"accent-color\":                AccentColor{},\n    \"align-content\":               AlignContent{},\n    \"align-items\":                 AlignItems{},\n    \"align-self\":                  AlignSelf{},\n    \"all\":                         All{},\n    \"animation\":                   Animation{},\n    \"animation-delay\":             AnimationDelay{},\n    \"animation-direction\":         AnimationDirection{},\n    \"animation-duration\":          AnimationDuration{},\n    \"animation-fill-mode\":         AnimationFillMode{},\n    \"animation-iteration-count\":   AnimationIterationCount{},\n    \"animation-name\":              AnimationName{},\n    \"animation-play-state\":        AnimationPlayState{},\n    \"animation-timing-function\":   AnimationTimingFunction{},\n    \"aspect-ratio\":                AspectRatio{},\n    \"backdrop-filter\":             BackdropFilter{},\n    \"backface-visibility\":         BackfaceVisibility{},\n    \"background\":                  Background{},\n    \"background-attachment\":       BackgroundAttachment{},\n    \"background-blend-mode\":       BackgroundBlendMode{},\n    \"background-clip\":             BackgroundClip{},\n    \"background-color\":            BackgroundColor{},\n    \"background-image\":            BackgroundImage{},\n    \"background-origin\":           BackgroundOrigin{},\n    \"background-position\":         BackgroundPosition{},\n    \"background-position-x\":       BackgroundPositionX{},\n    \"background-position-y\":       BackgroundPositionY{},\n    \"background-repeat\":           BackgroundRepeat{},\n    \"background-size\":             BackgroundSize{},\n    \"block-size\":                  BlockSize{},\n    \"border\":                      Border{},\n    \"border-block\":                BorderBlock{},\n    \"border-block-color\":          BorderBlockColor{},\n    \"border-block-end-color\":      BorderBlockEndColor{},\n    \"border-block-end-style\":      BorderBlockEndStyle{},\n    \"border-block-end-width\":      BorderBlockEndWidth{},\n    \"border-block-start-color\":    BorderBlockStartColor{},\n    \"border-block-start-style\":    BorderBlockStartStyle{},\n    \"border-block-start-width\":    BorderBlockStartWidth{},\n    \"border-block-style\":          BorderBlockStyle{},\n    \"border-block-width\":          BorderBlockWidth{},\n    \"border-bottom\":               BorderBottom{},\n    \"border-bottom-color\":         BorderBottomColor{},\n    \"border-bottom-left-radius\":   BorderBottomLeftRadius{},\n    \"border-bottom-right-radius\":  BorderBottomRightRadius{},\n    \"border-bottom-style\":         BorderBottomStyle{},\n    \"border-bottom-width\":         BorderBottomWidth{},\n    \"border-collapse\":             BorderCollapse{},\n    \"border-color\":                BorderColor{},\n    \"border-image\":                BorderImage{},\n    \"border-image-outset\":         BorderImageOutset{},\n    \"border-image-repeat\":         BorderImageRepeat{},\n    \"border-image-slice\":          BorderImageSlice{},\n    \"border-image-source\":         BorderImageSource{},\n    \"border-image-width\":          BorderImageWidth{},\n    \"border-inline\":               BorderInline{},\n    \"border-inline-color\":         BorderInlineColor{},\n    \"border-inline-end-color\":     BorderInlineEndColor{},\n    \"border-inline-end-style\":     BorderInlineEndStyle{},\n    \"border-inline-end-width\":     BorderInlineEndWidth{},\n    \"border-inline-start-color\":   BorderInlineStartColor{},\n    \"border-inline-start-style\":   BorderInlineStartStyle{},\n    \"border-inline-start-width\":   BorderInlineStartWidth{},\n    \"border-inline-style\":         BorderInlineStyle{},\n    \"border-inline-width\":         BorderInlineWidth{},\n    \"border-left\":                 BorderLeft{},\n    \"border-left-color\":           BorderLeftColor{},\n    \"border-left-style\":           BorderLeftStyle{},\n    \"border-left-width\":           BorderLeftWidth{},\n    \"border-radius\":               BorderRadius{},\n    \"border-right\":                BorderRight{},\n    \"border-right-color\":          BorderRightColor{},\n    \"border-right-style\":          BorderRightStyle{},\n    \"border-right-width\":          BorderRightWidth{},\n    \"border-spacing\":              BorderSpacing{},\n    \"border-style\":                BorderStyle{},\n    \"border-top\":                  BorderTop{},\n    \"border-top-color\":            BorderTopColor{},\n    \"border-top-left-radius\":      BorderTopLeftRadius{},\n    \"border-top-right-radius\":     BorderTopRightRadius{},\n    \"border-top-style\":            BorderTopStyle{},\n    \"border-top-width\":            BorderTopWidth{},\n    \"border-width\":                BorderWidth{},\n    \"bottom\":                      Bottom{},\n    \"box-decoration-break\":        BoxDecorationBreak{},\n    \"box-reflect\":                 BoxReflect{},\n    \"box-shadow\":                  BoxShadow{},\n    \"box-sizing\":                  BoxSizing{},\n    \"break-after\":                 BreakAfter{},\n    \"break-before\":                BreakBefore{},\n    \"break-inside\":                BreakInside{},\n    \"caption-side\":                CaptionSide{},\n    \"caret-color\":                 CaretColor{},\n    \"charset\":                     Charset{},\n    \"clear\":                       Clear{},\n    \"clip\":                        Clip{},\n    \"color\":                       Color{},\n    \"column-count\":                ColumnCount{},\n    \"column-fill\":                 ColumnFill{},\n    \"column-gap\":                  ColumnGap{},\n    \"column-rule\":                 ColumnRule{},\n    \"column-rule-color\":           ColumnRuleColor{},\n    \"column-rule-style\":           ColumnRuleStyle{},\n    \"column-rule-width\":           ColumnRuleWidth{},\n    \"column-span\":                 ColumnSpan{},\n    \"column-width\":                ColumnWidth{},\n    \"columns\":                     Columns{},\n    \"content\":                     Content{},\n    \"counter-increment\":           CounterIncrement{},\n    \"counter-reset\":               CounterReset{},\n    \"cursor\":                      Cursor{},\n    \"direction\":                   Direction{},\n    \"display\":                     Display{},\n    \"empty-cells\":                 EmptyCells{},\n    \"filter\":                      Filter{},\n    \"flex\":                        Flex{},\n    \"flex-basis\":                  FlexBasis{},\n    \"flex-direction\":              FlexDirection{},\n    \"flex-flow\":                   FlexFlow{},\n    \"flex-grow\":                   FlexGrow{},\n    \"flex-shrink\":                 FlexShrink{},\n    \"flex-wrap\":                   FlexWrap{},\n    \"float\":                       Float{},\n    \"font\":                        Font{},\n    \"font-face\":                   FontFace{},\n    \"font-family\":                 FontFamily{},\n    \"font-feature-settings\":       FontFeatureSettings{},\n    \"font-feature-values\":         FontFeatureValues{},\n    \"font-kerning\":                FontKerning{},\n    \"font-language-override\":      FontLanguageOverride{},\n    \"font-size\":                   FontSize{},\n    \"font-size-adjust\":            FontSizeAdjust{},\n    \"font-stretch\":                FontStretch{},\n    \"font-style\":                  FontStyle{},\n    \"font-synthesis\":              FontSynthesis{},\n    \"font-variant\":                FontVariant{},\n    \"font-variant-alternates\":     FontVariantAlternates{},\n    \"font-variant-caps\":           FontVariantCaps{},\n    \"font-variant-east-asian\":     FontVariantEastAsian{},\n    \"font-variant-ligatures\":      FontVariantLigatures{},\n    \"font-variant-numeric\":        FontVariantNumeric{},\n    \"font-variant-position\":       FontVariantPosition{},\n    \"font-weight\":                 FontWeight{},\n    \"gap\":                         Gap{},\n    \"grid\":                        Grid{},\n    \"grid-area\":                   GridArea{},\n    \"grid-auto-columns\":           GridAutoColumns{},\n    \"grid-auto-flow\":              GridAutoFlow{},\n    \"grid-auto-rows\":              GridAutoRows{},\n    \"grid-column\":                 GridColumn{},\n    \"grid-column-end\":             GridColumnEnd{},\n    \"grid-column-gap\":             GridColumnGap{},\n    \"grid-column-start\":           GridColumnStart{},\n    \"grid-gap\":                    GridGap{},\n    \"grid-row\":                    GridRow{},\n    \"grid-row-end\":                GridRowEnd{},\n    \"grid-row-gap\":                GridRowGap{},\n    \"grid-row-start\":              GridRowStart{},\n    \"grid-template\":               GridTemplate{},\n    \"grid-template-areas\":         GridTemplateAreas{},\n    \"grid-template-columns\":       GridTemplateColumns{},\n    \"grid-template-rows\":          GridTemplateRows{},\n    \"hanging-punctuation\":         HangingPunctuation{},\n    \"height\":                      Height{},\n    \"hyphens\":                     Hyphens{},\n    \"image-rendering\":             ImageRendering{},\n    \"import\":                      Import{},\n    \"inline-size\":                 InlineSize{},\n    \"inset\":                       Inset{},\n    \"inset-block\":                 InsetBlock{},\n    \"inset-block-end\":             InsetBlockEnd{},\n    \"inset-block-start\":           InsetBlockStart{},\n    \"inset-inline\":                InsetInline{},\n    \"inset-inline-end\":            InsetInlineEnd{},\n    \"inset-inline-start\":          InsetInlineStart{},\n    \"isolation\":                   Isolation{},\n    \"justify-content\":             JustifyContent{},\n    \"justify-items\":               JustifyItems{},\n    \"justify-self\":                JustifySelf{},\n    \"keyframes\":                   Keyframes{},\n    \"left\":                        Left{},\n    \"letter-spacing\":              LetterSpacing{},\n    \"line-break\":                  LineBreak{},\n    \"line-height\":                 LineHeight{},\n    \"list-style\":                  ListStyle{},\n    \"list-style-image\":            ListStyleImage{},\n    \"list-style-position\":         ListStylePosition{},\n    \"list-style-type\":             ListStyleType{},\n    \"margin\":                      Margin{},\n    \"margin-block\":                MarginBlock{},\n    \"margin-block-end\":            MarginBlockEnd{},\n    \"margin-block-start\":          MarginBlockStart{},\n    \"margin-bottom\":               MarginBottom{},\n    \"margin-inline\":               MarginInline{},\n    \"margin-inline-end\":           MarginInlineEnd{},\n    \"margin-inline-start\":         MarginInlineStart{},\n    \"margin-left\":                 MarginLeft{},\n    \"margin-right\":                MarginRight{},\n    \"margin-top\":                  MarginTop{},\n    \"mask\":                        Mask{},\n    \"mask-clip\":                   MaskClip{},\n    \"mask-composite\":              MaskComposite{},\n    \"mask-image\":                  MaskImage{},\n    \"mask-mode\":                   MaskMode{},\n    \"mask-origin\":                 MaskOrigin{},\n    \"mask-position\":               MaskPosition{},\n    \"mask-repeat\":                 MaskRepeat{},\n    \"mask-size\":                   MaskSize{},\n    \"mask-type\":                   MaskType{},\n    \"max-height\":                  MaxHeight{},\n    \"max-width\":                   MaxWidth{},\n    \"media\":                       Media{},\n    \"max-block-size\":              MaxBlockSize{},\n    \"max-inline-size\":             MaxInlineSize{},\n    \"min-block-size\":              MinBlockSize{},\n    \"min-inline-size\":             MinInlineSize{},\n    \"min-height\":                  MinHeight{},\n    \"min-width\":                   MinWidth{},\n    \"mix-blend-mode\":              MixBlendMode{},\n    \"object-fit\":                  ObjectFit{},\n    \"object-position\":             ObjectPosition{},\n    \"offset\":                      Offset{},\n    \"offset-anchor\":               OffsetAnchor{},\n    \"offset-distance\":             OffsetDistance{},\n    \"offset-path\":                 OffsetPath{},\n    \"offset-rotate\":               OffsetRotate{},\n    \"opacity\":                     Opacity{},\n    \"order\":                       Order{},\n    \"orphans\":                     Orphans{},\n    \"outline\":                     Outline{},\n    \"outline-color\":               OutlineColor{},\n    \"outline-offset\":              OutlineOffset{},\n    \"outline-style\":               OutlineStyle{},\n    \"outline-width\":               OutlineWidth{},\n    \"overflow\":                    Overflow{},\n    \"overflow-anchor\":             OverflowAnchor{},\n    \"overflow-wrap\":               OverflowWrap{},\n    \"overflow-x\":                  OverflowX{},\n    \"overflow-y\":                  OverflowY{},\n    \"overscroll-behavior\":         OverscrollBehavior{},\n    \"overscroll-behavior-block\":   OverscrollBehaviorBlock{},\n    \"overscroll-behavior-inline\":  OverscrollBehaviorInline{},\n    \"overscroll-behavior-x\":       OverscrollBehaviorX{},\n    \"overscroll-behavior-y\":       OverscrollBehaviorY{},\n    \"padding\":                     Padding{},\n    \"padding-block\":               PaddingBlock{},\n    \"padding-block-end\":           PaddingBlockEnd{},\n    \"padding-block-start\":         PaddingBlockStart{},\n    \"padding-bottom\":              PaddingBottom{},\n    \"padding-inline\":              PaddingInline{},\n    \"padding-inline-end\":          PaddingInlineEnd{},\n    \"padding-inline-start\":        PaddingInlineStart{},\n    \"padding-left\":                PaddingLeft{},\n    \"padding-right\":               PaddingRight{},\n    \"padding-top\":                 PaddingTop{},\n    \"page-break-after\":            PageBreakAfter{},\n    \"page-break-before\":           PageBreakBefore{},\n    \"page-break-inside\":           PageBreakInside{},\n    \"paint-order\":                 PaintOrder{},\n    \"perspective\":                 Perspective{},\n    \"perspective-origin\":          PerspectiveOrigin{},\n    \"place-content\":               PlaceContent{},\n    \"place-items\":                 PlaceItems{},\n    \"place-self\":                  PlaceSelf{},\n    \"pointer-events\":              PointerEvents{},\n    \"position\":                    Position{},\n    \"quotes\":                      Quotes{},\n    \"resize\":                      Resize{},\n    \"right\":                       Right{},\n    \"rotate\":                      Rotate{},\n    \"row-gap\":                     RowGap{},\n    \"scale\":                       Scale{},\n    \"scroll-behavior\":             ScrollBehavior{},\n    \"scroll-margin\":               ScrollMargin{},\n    \"scroll-margin-block\":         ScrollMarginBlock{},\n    \"scroll-margin-block-end\":     ScrollMarginBlockEnd{},\n    \"scroll-margin-block-start\":   ScrollMarginBlockStart{},\n    \"scroll-margin-bottom\":        ScrollMarginBottom{},\n    \"scroll-margin-inline\":        ScrollMarginInline{},\n    \"scroll-margin-inline-end\":    ScrollMarginInlineEnd{},\n    \"scroll-margin-inline-start\":  ScrollMarginInlineStart{},\n    \"scroll-margin-left\":          ScrollMarginLeft{},\n    \"scroll-margin-right\":         ScrollMarginRight{},\n    \"scroll-margin-top\":           ScrollMarginTop{},\n    \"scroll-padding\":              ScrollPadding{},\n    \"scroll-padding-block\":        ScrollPaddingBlock{},\n    \"scroll-padding-block-end\":    ScrollPaddingBlockEnd{},\n    \"scroll-padding-block-start\":  ScrollPaddingBlockStart{},\n    \"scroll-padding-bottom\":       ScrollPaddingBottom{},\n    \"scroll-padding-inline\":       ScrollPaddingInline{},\n    \"scroll-padding-inline-end\":   ScrollPaddingInlineEnd{},\n    \"scroll-padding-inline-start\": ScrollPaddingInlineStart{},\n    \"scroll-padding-left\":         ScrollPaddingLeft{},\n    \"scroll-padding-right\":        ScrollPaddingRight{},\n    \"scroll-padding-top\":          ScrollPaddingTop{},\n    \"scroll-snap-align\":           ScrollSnapAlign{},\n    \"scroll-snap-stop\":            ScrollSnapStop{},\n    \"scroll-snap-type\":            ScrollSnapType{},\n    \"scrollbar-color\":             ScrollbarColor{},\n    \"tab-size\":                    TabSize{},\n    \"table-layout\":                TableLayout{},\n    \"text-align\":                  TextAlign{},\n    \"text-align-last\":             TextAlignLast{},\n    \"text-combine-upright\":        TextCombineUpright{},\n    \"text-decoration\":             TextDecoration{},\n    \"text-decoration-color\":       TextDecorationColor{},\n    \"text-decoration-line\":        TextDecorationLine{},\n    \"text-decoration-style\":       TextDecorationStyle{},\n    \"text-decoration-thickness\":   TextDecorationThickness{},\n    \"text-emphasis\":               TextEmphasis{},\n    \"text-indent\":                 TextIndent{},\n    \"text-justify\":                TextJustify{},\n    \"text-orientation\":            TextOrientation{},\n    \"text-overflow\":               TextOverflow{},\n    \"text-shadow\":                 TextShadow{},\n    \"text-transform\":              TextTransform{},\n    \"text-underline-position\":     TextUnderlinePosition{},\n    \"top\":                         Top{},\n    \"transform\":                   Transform{},\n    \"transform-origin\":            TransformOrigin{},\n    \"transform-style\":             TransformStyle{},\n    \"transition\":                  Transition{},\n    \"transition-delay\":            TransitionDelay{},\n    \"transition-duration\":         TransitionDuration{},\n    \"transition-property\":         TransitionProperty{},\n    \"transition-timing-function\":  TransitionTimingFunction{},\n    \"translate\":                   Translate{},\n    \"unicode-bidi\":                UnicodeBidi{},\n    \"user-select\":                 UserSelect{},\n    \"vertical-align\":              VerticalAlign{},\n    \"visibility\":                  Visibility{},\n    \"white-space\":                 WhiteSpace{},\n    \"widows\":                      Widows{},\n    \"width\":                       Width{},\n    \"word-break\":                  WordBreak{},\n    \"word-spacing\":                WordSpacing{},\n    \"word-wrap\":                   WordWrap{},\n    \"writing-mode\":                WritingMode{},\n    \"z-index\":                     ZIndex{},\n}\n</code></pre>"},{"location":"api/markup/css/properties/#types","title":"Types","text":""},{"location":"api/markup/css/properties/#accentcolor","title":"AccentColor","text":"<p><code>struct</code></p> <pre><code>type AccentColor struct{}\n</code></pre> <p>Specifies an accent color for user-interface controls</p>"},{"location":"api/markup/css/properties/#accentcolorkey","title":"AccentColor.Key","text":"<pre><code>func (p AccentColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#accentcolorprocess","title":"AccentColor.Process","text":"<pre><code>func (p AccentColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#aligncontent","title":"AlignContent","text":"<p><code>struct</code></p> <pre><code>type AlignContent struct{}\n</code></pre> <p>Specifies the alignment between the lines inside a flexible container when the items do not use all available space</p>"},{"location":"api/markup/css/properties/#aligncontentkey","title":"AlignContent.Key","text":"<pre><code>func (p AlignContent) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#aligncontentprocess","title":"AlignContent.Process","text":"<pre><code>func (p AlignContent) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#alignitems","title":"AlignItems","text":"<p><code>struct</code></p> <pre><code>type AlignItems struct{}\n</code></pre> <p>Specifies the alignment for items inside a flexible container</p>"},{"location":"api/markup/css/properties/#alignitemskey","title":"AlignItems.Key","text":"<pre><code>func (p AlignItems) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#alignitemsprocess","title":"AlignItems.Process","text":"<pre><code>func (p AlignItems) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#alignself","title":"AlignSelf","text":"<p><code>struct</code></p> <pre><code>type AlignSelf struct{}\n</code></pre> <p>Specifies the alignment for selected items inside a flexible container</p>"},{"location":"api/markup/css/properties/#alignselfkey","title":"AlignSelf.Key","text":"<pre><code>func (p AlignSelf) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#alignselfprocess","title":"AlignSelf.Process","text":"<pre><code>func (p AlignSelf) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#all","title":"All","text":"<p><code>struct</code></p> <pre><code>type All struct{}\n</code></pre> <p>Resets all properties (except unicode-bidi and direction)</p>"},{"location":"api/markup/css/properties/#allkey","title":"All.Key","text":"<pre><code>func (p All) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#allprocess","title":"All.Process","text":"<pre><code>func (p All) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#animation","title":"Animation","text":"<p><code>struct</code></p> <pre><code>type Animation struct{}\n</code></pre> <p>A shorthand property for all the animation-* properties</p>"},{"location":"api/markup/css/properties/#animationkey","title":"Animation.Key","text":"<pre><code>func (p Animation) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#animationprocess","title":"Animation.Process","text":"<pre><code>func (p Animation) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#animationdelay","title":"AnimationDelay","text":"<p><code>struct</code></p> <pre><code>type AnimationDelay struct{}\n</code></pre> <p>Specifies a delay for the start of an animation</p>"},{"location":"api/markup/css/properties/#animationdelaykey","title":"AnimationDelay.Key","text":"<pre><code>func (p AnimationDelay) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#animationdelayprocess","title":"AnimationDelay.Process","text":"<pre><code>func (p AnimationDelay) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#animationdirection","title":"AnimationDirection","text":"<p><code>struct</code></p> <pre><code>type AnimationDirection struct{}\n</code></pre> <p>Specifies whether an animation should be played forwards, backwards or in alternate cycles</p>"},{"location":"api/markup/css/properties/#animationdirectionkey","title":"AnimationDirection.Key","text":"<pre><code>func (p AnimationDirection) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#animationdirectionprocess","title":"AnimationDirection.Process","text":"<pre><code>func (p AnimationDirection) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#animationduration","title":"AnimationDuration","text":"<p><code>struct</code></p> <pre><code>type AnimationDuration struct{}\n</code></pre> <p>Specifies how long an animation should take to complete one cycle</p>"},{"location":"api/markup/css/properties/#animationdurationkey","title":"AnimationDuration.Key","text":"<pre><code>func (p AnimationDuration) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#animationdurationprocess","title":"AnimationDuration.Process","text":"<pre><code>func (p AnimationDuration) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#animationfillmode","title":"AnimationFillMode","text":"<p><code>struct</code></p> <pre><code>type AnimationFillMode struct{}\n</code></pre> <p>Specifies a style for the element when the animation is not playing (before it starts, after it ends, or both)</p>"},{"location":"api/markup/css/properties/#animationfillmodekey","title":"AnimationFillMode.Key","text":"<pre><code>func (p AnimationFillMode) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#animationfillmodeprocess","title":"AnimationFillMode.Process","text":"<pre><code>func (p AnimationFillMode) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#animationiterationcount","title":"AnimationIterationCount","text":"<p><code>struct</code></p> <pre><code>type AnimationIterationCount struct{}\n</code></pre> <p>Specifies the number of times an animation should be played</p>"},{"location":"api/markup/css/properties/#animationiterationcountkey","title":"AnimationIterationCount.Key","text":"<pre><code>func (p AnimationIterationCount) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#animationiterationcountprocess","title":"AnimationIterationCount.Process","text":"<pre><code>func (p AnimationIterationCount) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#animationname","title":"AnimationName","text":"<p><code>struct</code></p> <pre><code>type AnimationName struct{}\n</code></pre> <p>Specifies a name for the @keyframes animation</p>"},{"location":"api/markup/css/properties/#animationnamekey","title":"AnimationName.Key","text":"<pre><code>func (p AnimationName) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#animationnameprocess","title":"AnimationName.Process","text":"<pre><code>func (p AnimationName) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#animationplaystate","title":"AnimationPlayState","text":"<p><code>struct</code></p> <pre><code>type AnimationPlayState struct{}\n</code></pre> <p>Specifies whether the animation is running or paused</p>"},{"location":"api/markup/css/properties/#animationplaystatekey","title":"AnimationPlayState.Key","text":"<pre><code>func (p AnimationPlayState) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#animationplaystateprocess","title":"AnimationPlayState.Process","text":"<pre><code>func (p AnimationPlayState) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#animationtimingfunction","title":"AnimationTimingFunction","text":"<p><code>struct</code></p> <pre><code>type AnimationTimingFunction struct{}\n</code></pre> <p>Specifies the speed curve of an animation</p>"},{"location":"api/markup/css/properties/#animationtimingfunctionkey","title":"AnimationTimingFunction.Key","text":"<pre><code>func (p AnimationTimingFunction) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#animationtimingfunctionprocess","title":"AnimationTimingFunction.Process","text":"<pre><code>func (p AnimationTimingFunction) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#aspectratio","title":"AspectRatio","text":"<p><code>struct</code></p> <pre><code>type AspectRatio struct{}\n</code></pre> <p>Specifies preferred aspect ratio of an element</p>"},{"location":"api/markup/css/properties/#aspectratiokey","title":"AspectRatio.Key","text":"<pre><code>func (p AspectRatio) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#aspectratioprocess","title":"AspectRatio.Process","text":"<pre><code>func (p AspectRatio) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#backdropfilter","title":"BackdropFilter","text":"<p><code>struct</code></p> <pre><code>type BackdropFilter struct{}\n</code></pre> <p>Defines a graphical effect to the area behind an element</p>"},{"location":"api/markup/css/properties/#backdropfilterkey","title":"BackdropFilter.Key","text":"<pre><code>func (p BackdropFilter) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#backdropfilterprocess","title":"BackdropFilter.Process","text":"<pre><code>func (p BackdropFilter) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#backfacevisibility","title":"BackfaceVisibility","text":"<p><code>struct</code></p> <pre><code>type BackfaceVisibility struct{}\n</code></pre> <p>Defines whether or not the back face of an element should be visible when facing the user</p>"},{"location":"api/markup/css/properties/#backfacevisibilitykey","title":"BackfaceVisibility.Key","text":"<pre><code>func (p BackfaceVisibility) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#backfacevisibilityprocess","title":"BackfaceVisibility.Process","text":"<pre><code>func (p BackfaceVisibility) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#background","title":"Background","text":"<p><code>struct</code></p> <pre><code>type Background struct{}\n</code></pre> <p>A shorthand property for all the background-* properties</p>"},{"location":"api/markup/css/properties/#backgroundkey","title":"Background.Key","text":"<pre><code>func (p Background) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundprocess","title":"Background.Process","text":"<pre><code>func (p Background) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundattachment","title":"BackgroundAttachment","text":"<p><code>struct</code></p> <pre><code>type BackgroundAttachment struct{}\n</code></pre> <p>Sets whether a background image scrolls with the rest of the page, or is fixed</p>"},{"location":"api/markup/css/properties/#backgroundattachmentkey","title":"BackgroundAttachment.Key","text":"<pre><code>func (p BackgroundAttachment) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundattachmentprocess","title":"BackgroundAttachment.Process","text":"<pre><code>func (p BackgroundAttachment) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundblendmode","title":"BackgroundBlendMode","text":"<p><code>struct</code></p> <pre><code>type BackgroundBlendMode struct{}\n</code></pre> <p>Specifies the blending mode of each background layer (color/image)</p>"},{"location":"api/markup/css/properties/#backgroundblendmodekey","title":"BackgroundBlendMode.Key","text":"<pre><code>func (p BackgroundBlendMode) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundblendmodeprocess","title":"BackgroundBlendMode.Process","text":"<pre><code>func (p BackgroundBlendMode) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundclip","title":"BackgroundClip","text":"<p><code>struct</code></p> <pre><code>type BackgroundClip struct{}\n</code></pre> <p>Defines how far the background (color or image) should extend within an element</p>"},{"location":"api/markup/css/properties/#backgroundclipkey","title":"BackgroundClip.Key","text":"<pre><code>func (p BackgroundClip) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundclipprocess","title":"BackgroundClip.Process","text":"<pre><code>func (p BackgroundClip) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundcolor","title":"BackgroundColor","text":"<p><code>struct</code></p> <pre><code>type BackgroundColor struct{}\n</code></pre> <p>Specifies the background color of an element</p>"},{"location":"api/markup/css/properties/#backgroundcolorkey","title":"BackgroundColor.Key","text":"<pre><code>func (p BackgroundColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundcolorprocess","title":"BackgroundColor.Process","text":"<pre><code>func (p BackgroundColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundimage","title":"BackgroundImage","text":"<p><code>struct</code></p> <pre><code>type BackgroundImage struct{}\n</code></pre> <p>Specifies one or more background images for an element</p>"},{"location":"api/markup/css/properties/#backgroundimagekey","title":"BackgroundImage.Key","text":"<pre><code>func (p BackgroundImage) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundimageprocess","title":"BackgroundImage.Process","text":"<pre><code>func (p BackgroundImage) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundorigin","title":"BackgroundOrigin","text":"<p><code>struct</code></p> <pre><code>type BackgroundOrigin struct{}\n</code></pre> <p>Specifies the origin position of a background image</p>"},{"location":"api/markup/css/properties/#backgroundoriginkey","title":"BackgroundOrigin.Key","text":"<pre><code>func (p BackgroundOrigin) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundoriginprocess","title":"BackgroundOrigin.Process","text":"<pre><code>func (p BackgroundOrigin) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundposition","title":"BackgroundPosition","text":"<p><code>struct</code></p> <pre><code>type BackgroundPosition struct{}\n</code></pre> <p>Specifies the position of a background image</p>"},{"location":"api/markup/css/properties/#backgroundpositionkey","title":"BackgroundPosition.Key","text":"<pre><code>func (p BackgroundPosition) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundpositionprocess","title":"BackgroundPosition.Process","text":"<pre><code>func (p BackgroundPosition) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundpositionx","title":"BackgroundPositionX","text":"<p><code>struct</code></p> <pre><code>type BackgroundPositionX struct{}\n</code></pre> <p>Specifies the position of a background image on x-axis</p>"},{"location":"api/markup/css/properties/#backgroundpositionxkey","title":"BackgroundPositionX.Key","text":"<pre><code>func (p BackgroundPositionX) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundpositionxprocess","title":"BackgroundPositionX.Process","text":"<pre><code>func (p BackgroundPositionX) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundpositiony","title":"BackgroundPositionY","text":"<p><code>struct</code></p> <pre><code>type BackgroundPositionY struct{}\n</code></pre> <p>Specifies the position of a background image on y-axis</p>"},{"location":"api/markup/css/properties/#backgroundpositionykey","title":"BackgroundPositionY.Key","text":"<pre><code>func (p BackgroundPositionY) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundpositionyprocess","title":"BackgroundPositionY.Process","text":"<pre><code>func (p BackgroundPositionY) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundrepeat","title":"BackgroundRepeat","text":"<p><code>struct</code></p> <pre><code>type BackgroundRepeat struct{}\n</code></pre> <p>Sets if/how a background image will be repeated</p>"},{"location":"api/markup/css/properties/#backgroundrepeatkey","title":"BackgroundRepeat.Key","text":"<pre><code>func (p BackgroundRepeat) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundrepeatprocess","title":"BackgroundRepeat.Process","text":"<pre><code>func (p BackgroundRepeat) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundsize","title":"BackgroundSize","text":"<p><code>struct</code></p> <pre><code>type BackgroundSize struct{}\n</code></pre> <p>Specifies the size of the background images</p>"},{"location":"api/markup/css/properties/#backgroundsizekey","title":"BackgroundSize.Key","text":"<pre><code>func (p BackgroundSize) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#backgroundsizeprocess","title":"BackgroundSize.Process","text":"<pre><code>func (p BackgroundSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#blocksize","title":"BlockSize","text":"<p><code>struct</code></p> <pre><code>type BlockSize struct{}\n</code></pre> <p>Specifies the size of an element in block direction</p>"},{"location":"api/markup/css/properties/#blocksizekey","title":"BlockSize.Key","text":"<pre><code>func (p BlockSize) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#blocksizeprocess","title":"BlockSize.Process","text":"<pre><code>func (p BlockSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#border","title":"Border","text":"<p><code>struct</code></p> <pre><code>type Border struct{}\n</code></pre> <p>A shorthand property for border-width, border-style and border-color</p>"},{"location":"api/markup/css/properties/#borderkey","title":"Border.Key","text":"<pre><code>func (p Border) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderprocess","title":"Border.Process","text":"<pre><code>func (p Border) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>border-width border-style border-color|initial|inherit</p>"},{"location":"api/markup/css/properties/#borderblock","title":"BorderBlock","text":"<p><code>struct</code></p> <pre><code>type BorderBlock struct{}\n</code></pre> <p>A shorthand property for border-block-width, border-block-style and border-block-color</p>"},{"location":"api/markup/css/properties/#borderblockkey","title":"BorderBlock.Key","text":"<pre><code>func (p BorderBlock) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockprocess","title":"BorderBlock.Process","text":"<pre><code>func (p BorderBlock) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockcolor","title":"BorderBlockColor","text":"<p><code>struct</code></p> <pre><code>type BorderBlockColor struct{}\n</code></pre> <p>Sets the color of the borders at start and end in the block direction</p>"},{"location":"api/markup/css/properties/#borderblockcolorkey","title":"BorderBlockColor.Key","text":"<pre><code>func (p BorderBlockColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockcolorprocess","title":"BorderBlockColor.Process","text":"<pre><code>func (p BorderBlockColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockendcolor","title":"BorderBlockEndColor","text":"<p><code>struct</code></p> <pre><code>type BorderBlockEndColor struct{}\n</code></pre> <p>Sets the color of the border at the end in the block direction</p>"},{"location":"api/markup/css/properties/#borderblockendcolorkey","title":"BorderBlockEndColor.Key","text":"<pre><code>func (p BorderBlockEndColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockendcolorprocess","title":"BorderBlockEndColor.Process","text":"<pre><code>func (p BorderBlockEndColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockendstyle","title":"BorderBlockEndStyle","text":"<p><code>struct</code></p> <pre><code>type BorderBlockEndStyle struct{}\n</code></pre> <p>Sets the style of the border at the end in the block direction</p>"},{"location":"api/markup/css/properties/#borderblockendstylekey","title":"BorderBlockEndStyle.Key","text":"<pre><code>func (p BorderBlockEndStyle) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockendstyleprocess","title":"BorderBlockEndStyle.Process","text":"<pre><code>func (p BorderBlockEndStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockendwidth","title":"BorderBlockEndWidth","text":"<p><code>struct</code></p> <pre><code>type BorderBlockEndWidth struct{}\n</code></pre> <p>Sets the width of the border at the end in the block direction</p>"},{"location":"api/markup/css/properties/#borderblockendwidthkey","title":"BorderBlockEndWidth.Key","text":"<pre><code>func (p BorderBlockEndWidth) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockendwidthprocess","title":"BorderBlockEndWidth.Process","text":"<pre><code>func (p BorderBlockEndWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockstartcolor","title":"BorderBlockStartColor","text":"<p><code>struct</code></p> <pre><code>type BorderBlockStartColor struct{}\n</code></pre> <p>Sets the color of the border at the start in the block direction</p>"},{"location":"api/markup/css/properties/#borderblockstartcolorkey","title":"BorderBlockStartColor.Key","text":"<pre><code>func (p BorderBlockStartColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockstartcolorprocess","title":"BorderBlockStartColor.Process","text":"<pre><code>func (p BorderBlockStartColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockstartstyle","title":"BorderBlockStartStyle","text":"<p><code>struct</code></p> <pre><code>type BorderBlockStartStyle struct{}\n</code></pre> <p>Sets the style of the border at the start in the block direction</p>"},{"location":"api/markup/css/properties/#borderblockstartstylekey","title":"BorderBlockStartStyle.Key","text":"<pre><code>func (p BorderBlockStartStyle) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockstartstyleprocess","title":"BorderBlockStartStyle.Process","text":"<pre><code>func (p BorderBlockStartStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockstartwidth","title":"BorderBlockStartWidth","text":"<p><code>struct</code></p> <pre><code>type BorderBlockStartWidth struct{}\n</code></pre> <p>Sets the width of the border at the start in the block direction</p>"},{"location":"api/markup/css/properties/#borderblockstartwidthkey","title":"BorderBlockStartWidth.Key","text":"<pre><code>func (p BorderBlockStartWidth) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockstartwidthprocess","title":"BorderBlockStartWidth.Process","text":"<pre><code>func (p BorderBlockStartWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockstyle","title":"BorderBlockStyle","text":"<p><code>struct</code></p> <pre><code>type BorderBlockStyle struct{}\n</code></pre> <p>Sets the style of the borders at start and end in the block direction</p>"},{"location":"api/markup/css/properties/#borderblockstylekey","title":"BorderBlockStyle.Key","text":"<pre><code>func (p BorderBlockStyle) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockstyleprocess","title":"BorderBlockStyle.Process","text":"<pre><code>func (p BorderBlockStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockwidth","title":"BorderBlockWidth","text":"<p><code>struct</code></p> <pre><code>type BorderBlockWidth struct{}\n</code></pre> <p>Sets the width of the borders at start and end in the block direction</p>"},{"location":"api/markup/css/properties/#borderblockwidthkey","title":"BorderBlockWidth.Key","text":"<pre><code>func (p BorderBlockWidth) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderblockwidthprocess","title":"BorderBlockWidth.Process","text":"<pre><code>func (p BorderBlockWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderbottom","title":"BorderBottom","text":"<p><code>struct</code></p> <pre><code>type BorderBottom struct{}\n</code></pre> <p>A shorthand property for border-bottom-width, border-bottom-style and border-bottom-color</p>"},{"location":"api/markup/css/properties/#borderbottomkey","title":"BorderBottom.Key","text":"<pre><code>func (p BorderBottom) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderbottomprocess","title":"BorderBottom.Process","text":"<pre><code>func (p BorderBottom) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>border-width border-style border-color|initial|inherit</p>"},{"location":"api/markup/css/properties/#borderbottomcolor","title":"BorderBottomColor","text":"<p><code>struct</code></p> <pre><code>type BorderBottomColor struct{}\n</code></pre> <p>Sets the color of the bottom border</p>"},{"location":"api/markup/css/properties/#borderbottomcolorkey","title":"BorderBottomColor.Key","text":"<pre><code>func (p BorderBottomColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderbottomcolorprocess","title":"BorderBottomColor.Process","text":"<pre><code>func (p BorderBottomColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>color|transparent|initial|inherit</p>"},{"location":"api/markup/css/properties/#borderbottomleftradius","title":"BorderBottomLeftRadius","text":"<p><code>struct</code></p> <pre><code>type BorderBottomLeftRadius struct{}\n</code></pre> <p>Defines the radius of the border of the bottom-left corner</p>"},{"location":"api/markup/css/properties/#borderbottomleftradiuskey","title":"BorderBottomLeftRadius.Key","text":"<pre><code>func (p BorderBottomLeftRadius) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderbottomleftradiusprocess","title":"BorderBottomLeftRadius.Process","text":"<pre><code>func (p BorderBottomLeftRadius) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderbottomrightradius","title":"BorderBottomRightRadius","text":"<p><code>struct</code></p> <pre><code>type BorderBottomRightRadius struct{}\n</code></pre> <p>Defines the radius of the border of the bottom-right corner</p>"},{"location":"api/markup/css/properties/#borderbottomrightradiuskey","title":"BorderBottomRightRadius.Key","text":"<pre><code>func (p BorderBottomRightRadius) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderbottomrightradiusprocess","title":"BorderBottomRightRadius.Process","text":"<pre><code>func (p BorderBottomRightRadius) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderbottomstyle","title":"BorderBottomStyle","text":"<p><code>struct</code></p> <pre><code>type BorderBottomStyle struct{}\n</code></pre> <p>Sets the style of the bottom border</p>"},{"location":"api/markup/css/properties/#borderbottomstylekey","title":"BorderBottomStyle.Key","text":"<pre><code>func (p BorderBottomStyle) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderbottomstyleprocess","title":"BorderBottomStyle.Process","text":"<pre><code>func (p BorderBottomStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset|initial|inherit</p>"},{"location":"api/markup/css/properties/#borderbottomwidth","title":"BorderBottomWidth","text":"<p><code>struct</code></p> <pre><code>type BorderBottomWidth struct{}\n</code></pre> <p>Sets the width of the bottom border</p>"},{"location":"api/markup/css/properties/#borderbottomwidthkey","title":"BorderBottomWidth.Key","text":"<pre><code>func (p BorderBottomWidth) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderbottomwidthprocess","title":"BorderBottomWidth.Process","text":"<pre><code>func (p BorderBottomWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>medium|thin|thick|length|initial|inherit</p>"},{"location":"api/markup/css/properties/#bordercollapse","title":"BorderCollapse","text":"<p><code>struct</code></p> <pre><code>type BorderCollapse struct{}\n</code></pre> <p>Sets whether table borders should collapse into a single border or be separated</p>"},{"location":"api/markup/css/properties/#bordercollapsekey","title":"BorderCollapse.Key","text":"<pre><code>func (p BorderCollapse) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#bordercollapseprocess","title":"BorderCollapse.Process","text":"<pre><code>func (p BorderCollapse) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#bordercolor","title":"BorderColor","text":"<p><code>struct</code></p> <pre><code>type BorderColor struct{}\n</code></pre> <p>Sets the color of the four borders</p>"},{"location":"api/markup/css/properties/#bordercolorkey","title":"BorderColor.Key","text":"<pre><code>func (p BorderColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#bordercolorprocess","title":"BorderColor.Process","text":"<pre><code>func (p BorderColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderimage","title":"BorderImage","text":"<p><code>struct</code></p> <pre><code>type BorderImage struct{}\n</code></pre> <p>A shorthand property for all the border-image-* properties</p>"},{"location":"api/markup/css/properties/#borderimagekey","title":"BorderImage.Key","text":"<pre><code>func (p BorderImage) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderimageprocess","title":"BorderImage.Process","text":"<pre><code>func (p BorderImage) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderimageoutset","title":"BorderImageOutset","text":"<p><code>struct</code></p> <pre><code>type BorderImageOutset struct{}\n</code></pre> <p>Specifies the amount by which the border image area extends beyond the border box</p>"},{"location":"api/markup/css/properties/#borderimageoutsetkey","title":"BorderImageOutset.Key","text":"<pre><code>func (p BorderImageOutset) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderimageoutsetprocess","title":"BorderImageOutset.Process","text":"<pre><code>func (p BorderImageOutset) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderimagerepeat","title":"BorderImageRepeat","text":"<p><code>struct</code></p> <pre><code>type BorderImageRepeat struct{}\n</code></pre> <p>Specifies whether the border image should be repeated, rounded or stretched</p>"},{"location":"api/markup/css/properties/#borderimagerepeatkey","title":"BorderImageRepeat.Key","text":"<pre><code>func (p BorderImageRepeat) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderimagerepeatprocess","title":"BorderImageRepeat.Process","text":"<pre><code>func (p BorderImageRepeat) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderimageslice","title":"BorderImageSlice","text":"<p><code>struct</code></p> <pre><code>type BorderImageSlice struct{}\n</code></pre> <p>Specifies how to slice the border image</p>"},{"location":"api/markup/css/properties/#borderimageslicekey","title":"BorderImageSlice.Key","text":"<pre><code>func (p BorderImageSlice) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderimagesliceprocess","title":"BorderImageSlice.Process","text":"<pre><code>func (p BorderImageSlice) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderimagesource","title":"BorderImageSource","text":"<p><code>struct</code></p> <pre><code>type BorderImageSource struct{}\n</code></pre> <p>Specifies the path to the image to be used as a border</p>"},{"location":"api/markup/css/properties/#borderimagesourcekey","title":"BorderImageSource.Key","text":"<pre><code>func (p BorderImageSource) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderimagesourceprocess","title":"BorderImageSource.Process","text":"<pre><code>func (p BorderImageSource) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderimagewidth","title":"BorderImageWidth","text":"<p><code>struct</code></p> <pre><code>type BorderImageWidth struct{}\n</code></pre> <p>Specifies the width of the border image</p>"},{"location":"api/markup/css/properties/#borderimagewidthkey","title":"BorderImageWidth.Key","text":"<pre><code>func (p BorderImageWidth) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderimagewidthprocess","title":"BorderImageWidth.Process","text":"<pre><code>func (p BorderImageWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderinline","title":"BorderInline","text":"<p><code>struct</code></p> <pre><code>type BorderInline struct{}\n</code></pre> <p>A shorthand property for border-inline-width, border-inline-style and border-inline-color</p>"},{"location":"api/markup/css/properties/#borderinlinekey","title":"BorderInline.Key","text":"<pre><code>func (p BorderInline) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlineprocess","title":"BorderInline.Process","text":"<pre><code>func (p BorderInline) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlinecolor","title":"BorderInlineColor","text":"<p><code>struct</code></p> <pre><code>type BorderInlineColor struct{}\n</code></pre> <p>Sets the color of the borders at start and end in the inline direction</p>"},{"location":"api/markup/css/properties/#borderinlinecolorkey","title":"BorderInlineColor.Key","text":"<pre><code>func (p BorderInlineColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlinecolorprocess","title":"BorderInlineColor.Process","text":"<pre><code>func (p BorderInlineColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlineendcolor","title":"BorderInlineEndColor","text":"<p><code>struct</code></p> <pre><code>type BorderInlineEndColor struct{}\n</code></pre> <p>Sets the color of the border at the end in the inline direction</p>"},{"location":"api/markup/css/properties/#borderinlineendcolorkey","title":"BorderInlineEndColor.Key","text":"<pre><code>func (p BorderInlineEndColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlineendcolorprocess","title":"BorderInlineEndColor.Process","text":"<pre><code>func (p BorderInlineEndColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlineendstyle","title":"BorderInlineEndStyle","text":"<p><code>struct</code></p> <pre><code>type BorderInlineEndStyle struct{}\n</code></pre> <p>Sets the style of the border at the end in the inline direction</p>"},{"location":"api/markup/css/properties/#borderinlineendstylekey","title":"BorderInlineEndStyle.Key","text":"<pre><code>func (p BorderInlineEndStyle) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlineendstyleprocess","title":"BorderInlineEndStyle.Process","text":"<pre><code>func (p BorderInlineEndStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlineendwidth","title":"BorderInlineEndWidth","text":"<p><code>struct</code></p> <pre><code>type BorderInlineEndWidth struct{}\n</code></pre> <p>Sets the width of the border at the end in the inline direction</p>"},{"location":"api/markup/css/properties/#borderinlineendwidthkey","title":"BorderInlineEndWidth.Key","text":"<pre><code>func (p BorderInlineEndWidth) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlineendwidthprocess","title":"BorderInlineEndWidth.Process","text":"<pre><code>func (p BorderInlineEndWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlinestartcolor","title":"BorderInlineStartColor","text":"<p><code>struct</code></p> <pre><code>type BorderInlineStartColor struct{}\n</code></pre> <p>Sets the color of the border at the start in the inline direction</p>"},{"location":"api/markup/css/properties/#borderinlinestartcolorkey","title":"BorderInlineStartColor.Key","text":"<pre><code>func (p BorderInlineStartColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlinestartcolorprocess","title":"BorderInlineStartColor.Process","text":"<pre><code>func (p BorderInlineStartColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlinestartstyle","title":"BorderInlineStartStyle","text":"<p><code>struct</code></p> <pre><code>type BorderInlineStartStyle struct{}\n</code></pre> <p>Sets the style of the border at the start in the inline direction</p>"},{"location":"api/markup/css/properties/#borderinlinestartstylekey","title":"BorderInlineStartStyle.Key","text":"<pre><code>func (p BorderInlineStartStyle) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlinestartstyleprocess","title":"BorderInlineStartStyle.Process","text":"<pre><code>func (p BorderInlineStartStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlinestartwidth","title":"BorderInlineStartWidth","text":"<p><code>struct</code></p> <pre><code>type BorderInlineStartWidth struct{}\n</code></pre> <p>Sets the width of the border at the start in the inline direction</p>"},{"location":"api/markup/css/properties/#borderinlinestartwidthkey","title":"BorderInlineStartWidth.Key","text":"<pre><code>func (p BorderInlineStartWidth) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlinestartwidthprocess","title":"BorderInlineStartWidth.Process","text":"<pre><code>func (p BorderInlineStartWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlinestyle","title":"BorderInlineStyle","text":"<p><code>struct</code></p> <pre><code>type BorderInlineStyle struct{}\n</code></pre> <p>Sets the style of the borders at start and end in the inline direction</p>"},{"location":"api/markup/css/properties/#borderinlinestylekey","title":"BorderInlineStyle.Key","text":"<pre><code>func (p BorderInlineStyle) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlinestyleprocess","title":"BorderInlineStyle.Process","text":"<pre><code>func (p BorderInlineStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlinewidth","title":"BorderInlineWidth","text":"<p><code>struct</code></p> <pre><code>type BorderInlineWidth struct{}\n</code></pre> <p>Sets the width of the borders at start and end in the inline direction</p>"},{"location":"api/markup/css/properties/#borderinlinewidthkey","title":"BorderInlineWidth.Key","text":"<pre><code>func (p BorderInlineWidth) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderinlinewidthprocess","title":"BorderInlineWidth.Process","text":"<pre><code>func (p BorderInlineWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderleft","title":"BorderLeft","text":"<p><code>struct</code></p> <pre><code>type BorderLeft struct{}\n</code></pre> <p>A shorthand property for all the border-left-* properties</p>"},{"location":"api/markup/css/properties/#borderleftkey","title":"BorderLeft.Key","text":"<pre><code>func (p BorderLeft) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderleftprocess","title":"BorderLeft.Process","text":"<pre><code>func (p BorderLeft) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>border-width border-style border-color|initial|inherit</p>"},{"location":"api/markup/css/properties/#borderleftcolor","title":"BorderLeftColor","text":"<p><code>struct</code></p> <pre><code>type BorderLeftColor struct{}\n</code></pre> <p>Sets the color of the left border</p>"},{"location":"api/markup/css/properties/#borderleftcolorkey","title":"BorderLeftColor.Key","text":"<pre><code>func (p BorderLeftColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderleftcolorprocess","title":"BorderLeftColor.Process","text":"<pre><code>func (p BorderLeftColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>color|transparent|initial|inherit</p>"},{"location":"api/markup/css/properties/#borderleftstyle","title":"BorderLeftStyle","text":"<p><code>struct</code></p> <pre><code>type BorderLeftStyle struct{}\n</code></pre> <p>Sets the style of the left border</p>"},{"location":"api/markup/css/properties/#borderleftstylekey","title":"BorderLeftStyle.Key","text":"<pre><code>func (p BorderLeftStyle) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderleftstyleprocess","title":"BorderLeftStyle.Process","text":"<pre><code>func (p BorderLeftStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset|initial|inherit</p>"},{"location":"api/markup/css/properties/#borderleftwidth","title":"BorderLeftWidth","text":"<p><code>struct</code></p> <pre><code>type BorderLeftWidth struct{}\n</code></pre> <p>Sets the width of the left border</p>"},{"location":"api/markup/css/properties/#borderleftwidthkey","title":"BorderLeftWidth.Key","text":"<pre><code>func (p BorderLeftWidth) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderleftwidthprocess","title":"BorderLeftWidth.Process","text":"<pre><code>func (p BorderLeftWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>medium|thin|thick|length|initial|inherit</p>"},{"location":"api/markup/css/properties/#borderradius","title":"BorderRadius","text":"<p><code>struct</code></p> <pre><code>type BorderRadius struct{}\n</code></pre> <p>A shorthand property for the four border-*-radius properties</p>"},{"location":"api/markup/css/properties/#borderradiuskey","title":"BorderRadius.Key","text":"<pre><code>func (p BorderRadius) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderradiusprocess","title":"BorderRadius.Process","text":"<pre><code>func (p BorderRadius) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderright","title":"BorderRight","text":"<p><code>struct</code></p> <pre><code>type BorderRight struct{}\n</code></pre> <p>A shorthand property for all the border-right-* properties</p>"},{"location":"api/markup/css/properties/#borderrightkey","title":"BorderRight.Key","text":"<pre><code>func (p BorderRight) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderrightprocess","title":"BorderRight.Process","text":"<pre><code>func (p BorderRight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>border-width border-style border-color|initial|inherit</p>"},{"location":"api/markup/css/properties/#borderrightcolor","title":"BorderRightColor","text":"<p><code>struct</code></p> <pre><code>type BorderRightColor struct{}\n</code></pre> <p>Sets the color of the right border</p>"},{"location":"api/markup/css/properties/#borderrightcolorkey","title":"BorderRightColor.Key","text":"<pre><code>func (p BorderRightColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderrightcolorprocess","title":"BorderRightColor.Process","text":"<pre><code>func (p BorderRightColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>color|transparent|initial|inherit</p>"},{"location":"api/markup/css/properties/#borderrightstyle","title":"BorderRightStyle","text":"<p><code>struct</code></p> <pre><code>type BorderRightStyle struct{}\n</code></pre> <p>Sets the style of the right border</p>"},{"location":"api/markup/css/properties/#borderrightstylekey","title":"BorderRightStyle.Key","text":"<pre><code>func (p BorderRightStyle) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderrightstyleprocess","title":"BorderRightStyle.Process","text":"<pre><code>func (p BorderRightStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset|initial|inherit</p>"},{"location":"api/markup/css/properties/#borderrightwidth","title":"BorderRightWidth","text":"<p><code>struct</code></p> <pre><code>type BorderRightWidth struct{}\n</code></pre> <p>Sets the width of the right border</p>"},{"location":"api/markup/css/properties/#borderrightwidthkey","title":"BorderRightWidth.Key","text":"<pre><code>func (p BorderRightWidth) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderrightwidthprocess","title":"BorderRightWidth.Process","text":"<pre><code>func (p BorderRightWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>medium|thin|thick|length|initial|inherit</p>"},{"location":"api/markup/css/properties/#borderspacing","title":"BorderSpacing","text":"<p><code>struct</code></p> <pre><code>type BorderSpacing struct{}\n</code></pre> <p>Sets the distance between the borders of adjacent cells</p>"},{"location":"api/markup/css/properties/#borderspacingkey","title":"BorderSpacing.Key","text":"<pre><code>func (p BorderSpacing) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderspacingprocess","title":"BorderSpacing.Process","text":"<pre><code>func (p BorderSpacing) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#borderstyle","title":"BorderStyle","text":"<p><code>struct</code></p> <pre><code>type BorderStyle struct{}\n</code></pre> <p>Sets the style of the four borders</p>"},{"location":"api/markup/css/properties/#borderstylekey","title":"BorderStyle.Key","text":"<pre><code>func (p BorderStyle) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderstyleprocess","title":"BorderStyle.Process","text":"<pre><code>func (p BorderStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset|initial|inherit</p>"},{"location":"api/markup/css/properties/#bordertop","title":"BorderTop","text":"<p><code>struct</code></p> <pre><code>type BorderTop struct{}\n</code></pre> <p>A shorthand property for border-top-width, border-top-style and border-top-color</p>"},{"location":"api/markup/css/properties/#bordertopkey","title":"BorderTop.Key","text":"<pre><code>func (p BorderTop) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#bordertopprocess","title":"BorderTop.Process","text":"<pre><code>func (p BorderTop) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>border-width border-style border-color|initial|inherit</p>"},{"location":"api/markup/css/properties/#bordertopcolor","title":"BorderTopColor","text":"<p><code>struct</code></p> <pre><code>type BorderTopColor struct{}\n</code></pre> <p>Sets the color of the top border</p>"},{"location":"api/markup/css/properties/#bordertopcolorkey","title":"BorderTopColor.Key","text":"<pre><code>func (p BorderTopColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#bordertopcolorprocess","title":"BorderTopColor.Process","text":"<pre><code>func (p BorderTopColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>color|transparent|initial|inherit</p>"},{"location":"api/markup/css/properties/#bordertopleftradius","title":"BorderTopLeftRadius","text":"<p><code>struct</code></p> <pre><code>type BorderTopLeftRadius struct{}\n</code></pre> <p>Defines the radius of the border of the top-left corner</p>"},{"location":"api/markup/css/properties/#bordertopleftradiuskey","title":"BorderTopLeftRadius.Key","text":"<pre><code>func (p BorderTopLeftRadius) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#bordertopleftradiusprocess","title":"BorderTopLeftRadius.Process","text":"<pre><code>func (p BorderTopLeftRadius) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#bordertoprightradius","title":"BorderTopRightRadius","text":"<p><code>struct</code></p> <pre><code>type BorderTopRightRadius struct{}\n</code></pre> <p>Defines the radius of the border of the top-right corner</p>"},{"location":"api/markup/css/properties/#bordertoprightradiuskey","title":"BorderTopRightRadius.Key","text":"<pre><code>func (p BorderTopRightRadius) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#bordertoprightradiusprocess","title":"BorderTopRightRadius.Process","text":"<pre><code>func (p BorderTopRightRadius) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#bordertopstyle","title":"BorderTopStyle","text":"<p><code>struct</code></p> <pre><code>type BorderTopStyle struct{}\n</code></pre> <p>Sets the style of the top border</p>"},{"location":"api/markup/css/properties/#bordertopstylekey","title":"BorderTopStyle.Key","text":"<pre><code>func (p BorderTopStyle) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#bordertopstyleprocess","title":"BorderTopStyle.Process","text":"<pre><code>func (p BorderTopStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset|initial|inherit</p>"},{"location":"api/markup/css/properties/#bordertopwidth","title":"BorderTopWidth","text":"<p><code>struct</code></p> <pre><code>type BorderTopWidth struct{}\n</code></pre> <p>Sets the width of the top border</p>"},{"location":"api/markup/css/properties/#bordertopwidthkey","title":"BorderTopWidth.Key","text":"<pre><code>func (p BorderTopWidth) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#bordertopwidthprocess","title":"BorderTopWidth.Process","text":"<pre><code>func (p BorderTopWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>medium|thin|thick|length|initial|inherit</p>"},{"location":"api/markup/css/properties/#borderwidth","title":"BorderWidth","text":"<p><code>struct</code></p> <pre><code>type BorderWidth struct{}\n</code></pre> <p>Sets the width of the four borders</p>"},{"location":"api/markup/css/properties/#borderwidthkey","title":"BorderWidth.Key","text":"<pre><code>func (p BorderWidth) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#borderwidthprocess","title":"BorderWidth.Process","text":"<pre><code>func (p BorderWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#bottom","title":"Bottom","text":"<p><code>struct</code></p> <pre><code>type Bottom struct{}\n</code></pre> <p>Sets the elements position, from the bottom of its parent element</p>"},{"location":"api/markup/css/properties/#bottomkey","title":"Bottom.Key","text":"<pre><code>func (p Bottom) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#bottomprocess","title":"Bottom.Process","text":"<pre><code>func (p Bottom) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>auto|length|initial|inherit</p>"},{"location":"api/markup/css/properties/#boxdecorationbreak","title":"BoxDecorationBreak","text":"<p><code>struct</code></p> <pre><code>type BoxDecorationBreak struct{}\n</code></pre> <p>Sets the behavior of the background and border of an element at page-break, or, for in-line elements, at line-break.</p>"},{"location":"api/markup/css/properties/#boxdecorationbreakkey","title":"BoxDecorationBreak.Key","text":"<pre><code>func (p BoxDecorationBreak) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#boxdecorationbreakprocess","title":"BoxDecorationBreak.Process","text":"<pre><code>func (p BoxDecorationBreak) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#boxreflect","title":"BoxReflect","text":"<p><code>struct</code></p> <pre><code>type BoxReflect struct{}\n</code></pre> <p>The box-reflect property is used to create a reflection of an element.</p>"},{"location":"api/markup/css/properties/#boxreflectkey","title":"BoxReflect.Key","text":"<pre><code>func (p BoxReflect) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#boxreflectprocess","title":"BoxReflect.Process","text":"<pre><code>func (p BoxReflect) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#boxshadow","title":"BoxShadow","text":"<p><code>struct</code></p> <pre><code>type BoxShadow struct{}\n</code></pre> <p>Attaches one or more shadows to an element</p>"},{"location":"api/markup/css/properties/#boxshadowkey","title":"BoxShadow.Key","text":"<pre><code>func (p BoxShadow) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#boxshadowprocess","title":"BoxShadow.Process","text":"<pre><code>func (p BoxShadow) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#boxsizing","title":"BoxSizing","text":"<p><code>struct</code></p> <pre><code>type BoxSizing struct{}\n</code></pre> <p>Defines how the width and height of an element are calculated: should they include padding and borders, or not</p>"},{"location":"api/markup/css/properties/#boxsizingkey","title":"BoxSizing.Key","text":"<pre><code>func (p BoxSizing) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#boxsizingprocess","title":"BoxSizing.Process","text":"<pre><code>func (p BoxSizing) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#breakafter","title":"BreakAfter","text":"<p><code>struct</code></p> <pre><code>type BreakAfter struct{}\n</code></pre> <p>Specifies whether or not a page-, column-, or region-break should occur after the specified element</p>"},{"location":"api/markup/css/properties/#breakafterkey","title":"BreakAfter.Key","text":"<pre><code>func (p BreakAfter) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#breakafterprocess","title":"BreakAfter.Process","text":"<pre><code>func (p BreakAfter) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#breakbefore","title":"BreakBefore","text":"<p><code>struct</code></p> <pre><code>type BreakBefore struct{}\n</code></pre> <p>Specifies whether or not a page-, column-, or region-break should occur before the specified element</p>"},{"location":"api/markup/css/properties/#breakbeforekey","title":"BreakBefore.Key","text":"<pre><code>func (p BreakBefore) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#breakbeforeprocess","title":"BreakBefore.Process","text":"<pre><code>func (p BreakBefore) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#breakinside","title":"BreakInside","text":"<p><code>struct</code></p> <pre><code>type BreakInside struct{}\n</code></pre> <p>Specifies whether or not a page-, column-, or region-break should occur inside the specified element</p>"},{"location":"api/markup/css/properties/#breakinsidekey","title":"BreakInside.Key","text":"<pre><code>func (p BreakInside) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#breakinsideprocess","title":"BreakInside.Process","text":"<pre><code>func (p BreakInside) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#captionside","title":"CaptionSide","text":"<p><code>struct</code></p> <pre><code>type CaptionSide struct{}\n</code></pre> <p>Specifies the placement of a table caption</p>"},{"location":"api/markup/css/properties/#captionsidekey","title":"CaptionSide.Key","text":"<pre><code>func (p CaptionSide) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#captionsideprocess","title":"CaptionSide.Process","text":"<pre><code>func (p CaptionSide) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#caretcolor","title":"CaretColor","text":"<p><code>struct</code></p> <pre><code>type CaretColor struct{}\n</code></pre> <p>Specifies the color of the cursor (caret) in inputs, textareas, or any element that is editable</p>"},{"location":"api/markup/css/properties/#caretcolorkey","title":"CaretColor.Key","text":"<pre><code>func (p CaretColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#caretcolorprocess","title":"CaretColor.Process","text":"<pre><code>func (p CaretColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#charset","title":"Charset","text":"<p><code>struct</code></p> <pre><code>type Charset struct{}\n</code></pre> <p>Specifies the character encoding used in the style sheet</p>"},{"location":"api/markup/css/properties/#charsetkey","title":"Charset.Key","text":"<pre><code>func (p Charset) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#charsetprocess","title":"Charset.Process","text":"<pre><code>func (p Charset) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#clear","title":"Clear","text":"<p><code>struct</code></p> <pre><code>type Clear struct{}\n</code></pre> <p>Specifies what should happen with the element that is next to a floating element</p>"},{"location":"api/markup/css/properties/#clearkey","title":"Clear.Key","text":"<pre><code>func (p Clear) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#clearprocess","title":"Clear.Process","text":"<pre><code>func (p Clear) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#clip","title":"Clip","text":"<p><code>struct</code></p> <pre><code>type Clip struct{}\n</code></pre> <p>Clips an absolutely positioned element</p>"},{"location":"api/markup/css/properties/#clipkey","title":"Clip.Key","text":"<pre><code>func (p Clip) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#clipprocess","title":"Clip.Process","text":"<pre><code>func (p Clip) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#color","title":"Color","text":"<p><code>struct</code></p> <pre><code>type Color struct{}\n</code></pre> <p>Sets the color of text</p>"},{"location":"api/markup/css/properties/#colorkey","title":"Color.Key","text":"<pre><code>func (p Color) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#colorprocess","title":"Color.Process","text":"<pre><code>func (p Color) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#columncount","title":"ColumnCount","text":"<p><code>struct</code></p> <pre><code>type ColumnCount struct{}\n</code></pre> <p>Specifies the number of columns an element should be divided into</p>"},{"location":"api/markup/css/properties/#columncountkey","title":"ColumnCount.Key","text":"<pre><code>func (p ColumnCount) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#columncountprocess","title":"ColumnCount.Process","text":"<pre><code>func (p ColumnCount) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#columnfill","title":"ColumnFill","text":"<p><code>struct</code></p> <pre><code>type ColumnFill struct{}\n</code></pre> <p>Specifies how to fill columns, balanced or not</p>"},{"location":"api/markup/css/properties/#columnfillkey","title":"ColumnFill.Key","text":"<pre><code>func (p ColumnFill) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#columnfillprocess","title":"ColumnFill.Process","text":"<pre><code>func (p ColumnFill) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#columngap","title":"ColumnGap","text":"<p><code>struct</code></p> <pre><code>type ColumnGap struct{}\n</code></pre> <p>Specifies the gap between the columns</p>"},{"location":"api/markup/css/properties/#columngapkey","title":"ColumnGap.Key","text":"<pre><code>func (p ColumnGap) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#columngapprocess","title":"ColumnGap.Process","text":"<pre><code>func (p ColumnGap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#columnrule","title":"ColumnRule","text":"<p><code>struct</code></p> <pre><code>type ColumnRule struct{}\n</code></pre> <p>A shorthand property for all the column-rule-* properties</p>"},{"location":"api/markup/css/properties/#columnrulekey","title":"ColumnRule.Key","text":"<pre><code>func (p ColumnRule) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#columnruleprocess","title":"ColumnRule.Process","text":"<pre><code>func (p ColumnRule) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#columnrulecolor","title":"ColumnRuleColor","text":"<p><code>struct</code></p> <pre><code>type ColumnRuleColor struct{}\n</code></pre> <p>Specifies the color of the rule between columns</p>"},{"location":"api/markup/css/properties/#columnrulecolorkey","title":"ColumnRuleColor.Key","text":"<pre><code>func (p ColumnRuleColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#columnrulecolorprocess","title":"ColumnRuleColor.Process","text":"<pre><code>func (p ColumnRuleColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#columnrulestyle","title":"ColumnRuleStyle","text":"<p><code>struct</code></p> <pre><code>type ColumnRuleStyle struct{}\n</code></pre> <p>Specifies the style of the rule between columns</p>"},{"location":"api/markup/css/properties/#columnrulestylekey","title":"ColumnRuleStyle.Key","text":"<pre><code>func (p ColumnRuleStyle) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#columnrulestyleprocess","title":"ColumnRuleStyle.Process","text":"<pre><code>func (p ColumnRuleStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#columnrulewidth","title":"ColumnRuleWidth","text":"<p><code>struct</code></p> <pre><code>type ColumnRuleWidth struct{}\n</code></pre> <p>Specifies the width of the rule between columns</p>"},{"location":"api/markup/css/properties/#columnrulewidthkey","title":"ColumnRuleWidth.Key","text":"<pre><code>func (p ColumnRuleWidth) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#columnrulewidthprocess","title":"ColumnRuleWidth.Process","text":"<pre><code>func (p ColumnRuleWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#columnspan","title":"ColumnSpan","text":"<p><code>struct</code></p> <pre><code>type ColumnSpan struct{}\n</code></pre> <p>Specifies how many columns an element should span across</p>"},{"location":"api/markup/css/properties/#columnspankey","title":"ColumnSpan.Key","text":"<pre><code>func (p ColumnSpan) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#columnspanprocess","title":"ColumnSpan.Process","text":"<pre><code>func (p ColumnSpan) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#columnwidth","title":"ColumnWidth","text":"<p><code>struct</code></p> <pre><code>type ColumnWidth struct{}\n</code></pre> <p>Specifies the column width</p>"},{"location":"api/markup/css/properties/#columnwidthkey","title":"ColumnWidth.Key","text":"<pre><code>func (p ColumnWidth) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#columnwidthprocess","title":"ColumnWidth.Process","text":"<pre><code>func (p ColumnWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#columns","title":"Columns","text":"<p><code>struct</code></p> <pre><code>type Columns struct{}\n</code></pre> <p>A shorthand property for column-width and column-count</p>"},{"location":"api/markup/css/properties/#columnskey","title":"Columns.Key","text":"<pre><code>func (p Columns) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#columnsprocess","title":"Columns.Process","text":"<pre><code>func (p Columns) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#content","title":"Content","text":"<p><code>struct</code></p> <pre><code>type Content struct{}\n</code></pre> <p>Used with the :before and :after pseudo-elements, to insert generated content</p>"},{"location":"api/markup/css/properties/#contentkey","title":"Content.Key","text":"<pre><code>func (p Content) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#contentprocess","title":"Content.Process","text":"<pre><code>func (p Content) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#counterincrement","title":"CounterIncrement","text":"<p><code>struct</code></p> <pre><code>type CounterIncrement struct{}\n</code></pre> <p>Increases or decreases the value of one or more CSS counters</p>"},{"location":"api/markup/css/properties/#counterincrementkey","title":"CounterIncrement.Key","text":"<pre><code>func (p CounterIncrement) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#counterincrementprocess","title":"CounterIncrement.Process","text":"<pre><code>func (p CounterIncrement) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#counterreset","title":"CounterReset","text":"<p><code>struct</code></p> <pre><code>type CounterReset struct{}\n</code></pre> <p>Creates or resets one or more CSS counters</p>"},{"location":"api/markup/css/properties/#counterresetkey","title":"CounterReset.Key","text":"<pre><code>func (p CounterReset) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#counterresetprocess","title":"CounterReset.Process","text":"<pre><code>func (p CounterReset) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#cursor","title":"Cursor","text":"<p><code>struct</code></p> <pre><code>type Cursor struct{}\n</code></pre> <p>Specifies the mouse cursor to be displayed when pointing over an element</p>"},{"location":"api/markup/css/properties/#cursorkey","title":"Cursor.Key","text":"<pre><code>func (p Cursor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#cursorprocess","title":"Cursor.Process","text":"<pre><code>func (p Cursor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#direction","title":"Direction","text":"<p><code>struct</code></p> <pre><code>type Direction struct{}\n</code></pre> <p>Specifies the text direction/writing direction</p>"},{"location":"api/markup/css/properties/#directionkey","title":"Direction.Key","text":"<pre><code>func (p Direction) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#directionprocess","title":"Direction.Process","text":"<pre><code>func (p Direction) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#display","title":"Display","text":"<p><code>struct</code></p> <pre><code>type Display struct{}\n</code></pre> <p>Specifies how a certain HTML element should be displayed</p>"},{"location":"api/markup/css/properties/#displaykey","title":"Display.Key","text":"<pre><code>func (p Display) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#displayprocess","title":"Display.Process","text":"<pre><code>func (p Display) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#emptycells","title":"EmptyCells","text":"<p><code>struct</code></p> <pre><code>type EmptyCells struct{}\n</code></pre> <p>Specifies whether or not to display borders and background on empty cells in a table</p>"},{"location":"api/markup/css/properties/#emptycellskey","title":"EmptyCells.Key","text":"<pre><code>func (p EmptyCells) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#emptycellsprocess","title":"EmptyCells.Process","text":"<pre><code>func (p EmptyCells) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#filter","title":"Filter","text":"<p><code>struct</code></p> <pre><code>type Filter struct{}\n</code></pre> <p>Defines effects (e.g. blurring or color shifting) on an element before the element is displayed</p>"},{"location":"api/markup/css/properties/#filterkey","title":"Filter.Key","text":"<pre><code>func (p Filter) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#filterprocess","title":"Filter.Process","text":"<pre><code>func (p Filter) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#flex","title":"Flex","text":"<p><code>struct</code></p> <pre><code>type Flex struct{}\n</code></pre> <p>A shorthand property for the flex-grow, flex-shrink, and the flex-basis properties</p>"},{"location":"api/markup/css/properties/#flexkey","title":"Flex.Key","text":"<pre><code>func (p Flex) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#flexprocess","title":"Flex.Process","text":"<pre><code>func (p Flex) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#flexbasis","title":"FlexBasis","text":"<p><code>struct</code></p> <pre><code>type FlexBasis struct{}\n</code></pre> <p>Specifies the initial length of a flexible item</p>"},{"location":"api/markup/css/properties/#flexbasiskey","title":"FlexBasis.Key","text":"<pre><code>func (p FlexBasis) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#flexbasisprocess","title":"FlexBasis.Process","text":"<pre><code>func (p FlexBasis) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#flexdirection","title":"FlexDirection","text":"<p><code>struct</code></p> <pre><code>type FlexDirection struct{}\n</code></pre> <p>Specifies the direction of the flexible items</p>"},{"location":"api/markup/css/properties/#flexdirectionkey","title":"FlexDirection.Key","text":"<pre><code>func (p FlexDirection) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#flexdirectionprocess","title":"FlexDirection.Process","text":"<pre><code>func (p FlexDirection) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#flexflow","title":"FlexFlow","text":"<p><code>struct</code></p> <pre><code>type FlexFlow struct{}\n</code></pre> <p>A shorthand property for the flex-direction and the flex-wrap properties</p>"},{"location":"api/markup/css/properties/#flexflowkey","title":"FlexFlow.Key","text":"<pre><code>func (p FlexFlow) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#flexflowprocess","title":"FlexFlow.Process","text":"<pre><code>func (p FlexFlow) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#flexgrow","title":"FlexGrow","text":"<p><code>struct</code></p> <pre><code>type FlexGrow struct{}\n</code></pre> <p>Specifies how much the item will grow relative to the rest</p>"},{"location":"api/markup/css/properties/#flexgrowkey","title":"FlexGrow.Key","text":"<pre><code>func (p FlexGrow) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#flexgrowprocess","title":"FlexGrow.Process","text":"<pre><code>func (p FlexGrow) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#flexshrink","title":"FlexShrink","text":"<p><code>struct</code></p> <pre><code>type FlexShrink struct{}\n</code></pre> <p>Specifies how the item will shrink relative to the rest</p>"},{"location":"api/markup/css/properties/#flexshrinkkey","title":"FlexShrink.Key","text":"<pre><code>func (p FlexShrink) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#flexshrinkprocess","title":"FlexShrink.Process","text":"<pre><code>func (p FlexShrink) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#flexwrap","title":"FlexWrap","text":"<p><code>struct</code></p> <pre><code>type FlexWrap struct{}\n</code></pre> <p>Specifies whether the flexible items should wrap or not</p>"},{"location":"api/markup/css/properties/#flexwrapkey","title":"FlexWrap.Key","text":"<pre><code>func (p FlexWrap) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#flexwrapprocess","title":"FlexWrap.Process","text":"<pre><code>func (p FlexWrap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#float","title":"Float","text":"<p><code>struct</code></p> <pre><code>type Float struct{}\n</code></pre> <p>Specifies whether an element should float to the left, right, or not at all</p>"},{"location":"api/markup/css/properties/#floatkey","title":"Float.Key","text":"<pre><code>func (p Float) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#floatprocess","title":"Float.Process","text":"<pre><code>func (p Float) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#font","title":"Font","text":"<p><code>struct</code></p> <pre><code>type Font struct{}\n</code></pre> <p>A shorthand property for the font-style, font-variant, font-weight, font-size/line-height, and the font-family properties</p>"},{"location":"api/markup/css/properties/#fontkey","title":"Font.Key","text":"<pre><code>func (p Font) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontprocess","title":"Font.Process","text":"<pre><code>func (p Font) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontface","title":"FontFace","text":"<p><code>struct</code></p> <pre><code>type FontFace struct{}\n</code></pre> <p>A rule that allows websites to download and use fonts other than the \"web-safe\" fonts</p>"},{"location":"api/markup/css/properties/#fontfacekey","title":"FontFace.Key","text":"<pre><code>func (p FontFace) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontfaceprocess","title":"FontFace.Process","text":"<pre><code>func (p FontFace) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontfamily","title":"FontFamily","text":"<p><code>struct</code></p> <pre><code>type FontFamily struct{}\n</code></pre> <p>Specifies the font family for text</p>"},{"location":"api/markup/css/properties/#fontfamilykey","title":"FontFamily.Key","text":"<pre><code>func (p FontFamily) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontfamilyprocess","title":"FontFamily.Process","text":"<pre><code>func (p FontFamily) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontfeaturesettings","title":"FontFeatureSettings","text":"<p><code>struct</code></p> <pre><code>type FontFeatureSettings struct{}\n</code></pre> <p>Allows control over advanced typographic features in OpenType fonts</p>"},{"location":"api/markup/css/properties/#fontfeaturesettingskey","title":"FontFeatureSettings.Key","text":"<pre><code>func (p FontFeatureSettings) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontfeaturesettingsprocess","title":"FontFeatureSettings.Process","text":"<pre><code>func (p FontFeatureSettings) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontfeaturevalues","title":"FontFeatureValues","text":"<p><code>struct</code></p> <pre><code>type FontFeatureValues struct{}\n</code></pre> <p>Allows authors to use a common name in font-variant-alternate for feature activated differently in OpenType</p>"},{"location":"api/markup/css/properties/#fontfeaturevalueskey","title":"FontFeatureValues.Key","text":"<pre><code>func (p FontFeatureValues) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontfeaturevaluesprocess","title":"FontFeatureValues.Process","text":"<pre><code>func (p FontFeatureValues) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontkerning","title":"FontKerning","text":"<p><code>struct</code></p> <pre><code>type FontKerning struct{}\n</code></pre> <p>Controls the usage of the kerning information (how letters are spaced)</p>"},{"location":"api/markup/css/properties/#fontkerningkey","title":"FontKerning.Key","text":"<pre><code>func (p FontKerning) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontkerningprocess","title":"FontKerning.Process","text":"<pre><code>func (p FontKerning) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontlanguageoverride","title":"FontLanguageOverride","text":"<p><code>struct</code></p> <pre><code>type FontLanguageOverride struct{}\n</code></pre> <p>Controls the usage of language-specific glyphs in a typeface</p>"},{"location":"api/markup/css/properties/#fontlanguageoverridekey","title":"FontLanguageOverride.Key","text":"<pre><code>func (p FontLanguageOverride) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontlanguageoverrideprocess","title":"FontLanguageOverride.Process","text":"<pre><code>func (p FontLanguageOverride) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontsize","title":"FontSize","text":"<p><code>struct</code></p> <pre><code>type FontSize struct{}\n</code></pre> <p>Specifies the font size of text</p>"},{"location":"api/markup/css/properties/#fontsizekey","title":"FontSize.Key","text":"<pre><code>func (p FontSize) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontsizeprocess","title":"FontSize.Process","text":"<pre><code>func (p FontSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontsizeadjust","title":"FontSizeAdjust","text":"<p><code>struct</code></p> <pre><code>type FontSizeAdjust struct{}\n</code></pre> <p>Preserves the readability of text when font fallback occurs</p>"},{"location":"api/markup/css/properties/#fontsizeadjustkey","title":"FontSizeAdjust.Key","text":"<pre><code>func (p FontSizeAdjust) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontsizeadjustprocess","title":"FontSizeAdjust.Process","text":"<pre><code>func (p FontSizeAdjust) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontstretch","title":"FontStretch","text":"<p><code>struct</code></p> <pre><code>type FontStretch struct{}\n</code></pre> <p>Selects a normal, condensed, or expanded face from a font family</p>"},{"location":"api/markup/css/properties/#fontstretchkey","title":"FontStretch.Key","text":"<pre><code>func (p FontStretch) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontstretchprocess","title":"FontStretch.Process","text":"<pre><code>func (p FontStretch) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontstyle","title":"FontStyle","text":"<p><code>struct</code></p> <pre><code>type FontStyle struct{}\n</code></pre> <p>Specifies the font style for text</p>"},{"location":"api/markup/css/properties/#fontstylekey","title":"FontStyle.Key","text":"<pre><code>func (p FontStyle) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontstyleprocess","title":"FontStyle.Process","text":"<pre><code>func (p FontStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>normal|italic|oblique|initial|inherit</p>"},{"location":"api/markup/css/properties/#fontsynthesis","title":"FontSynthesis","text":"<p><code>struct</code></p> <pre><code>type FontSynthesis struct{}\n</code></pre> <p>Controls which missing typefaces (bold or italic) may be synthesized by the browser</p>"},{"location":"api/markup/css/properties/#fontsynthesiskey","title":"FontSynthesis.Key","text":"<pre><code>func (p FontSynthesis) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontsynthesisprocess","title":"FontSynthesis.Process","text":"<pre><code>func (p FontSynthesis) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontvariant","title":"FontVariant","text":"<p><code>struct</code></p> <pre><code>type FontVariant struct{}\n</code></pre> <p>Specifies whether or not a text should be displayed in a small-caps font</p>"},{"location":"api/markup/css/properties/#fontvariantkey","title":"FontVariant.Key","text":"<pre><code>func (p FontVariant) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontvariantprocess","title":"FontVariant.Process","text":"<pre><code>func (p FontVariant) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontvariantalternates","title":"FontVariantAlternates","text":"<p><code>struct</code></p> <pre><code>type FontVariantAlternates struct{}\n</code></pre> <p>Controls the usage of alternate glyphs associated to alternative names defined in @font-feature-values</p>"},{"location":"api/markup/css/properties/#fontvariantalternateskey","title":"FontVariantAlternates.Key","text":"<pre><code>func (p FontVariantAlternates) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontvariantalternatesprocess","title":"FontVariantAlternates.Process","text":"<pre><code>func (p FontVariantAlternates) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontvariantcaps","title":"FontVariantCaps","text":"<p><code>struct</code></p> <pre><code>type FontVariantCaps struct{}\n</code></pre> <p>Controls the usage of alternate glyphs for capital letters</p>"},{"location":"api/markup/css/properties/#fontvariantcapskey","title":"FontVariantCaps.Key","text":"<pre><code>func (p FontVariantCaps) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontvariantcapsprocess","title":"FontVariantCaps.Process","text":"<pre><code>func (p FontVariantCaps) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontvarianteastasian","title":"FontVariantEastAsian","text":"<p><code>struct</code></p> <pre><code>type FontVariantEastAsian struct{}\n</code></pre> <p>Controls the usage of alternate glyphs for East Asian scripts (e.g Japanese and Chinese)</p>"},{"location":"api/markup/css/properties/#fontvarianteastasiankey","title":"FontVariantEastAsian.Key","text":"<pre><code>func (p FontVariantEastAsian) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontvarianteastasianprocess","title":"FontVariantEastAsian.Process","text":"<pre><code>func (p FontVariantEastAsian) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontvariantligatures","title":"FontVariantLigatures","text":"<p><code>struct</code></p> <pre><code>type FontVariantLigatures struct{}\n</code></pre> <p>Controls which ligatures and contextual forms are used in textual content of the elements it applies to</p>"},{"location":"api/markup/css/properties/#fontvariantligatureskey","title":"FontVariantLigatures.Key","text":"<pre><code>func (p FontVariantLigatures) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontvariantligaturesprocess","title":"FontVariantLigatures.Process","text":"<pre><code>func (p FontVariantLigatures) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontvariantnumeric","title":"FontVariantNumeric","text":"<p><code>struct</code></p> <pre><code>type FontVariantNumeric struct{}\n</code></pre> <p>Controls the usage of alternate glyphs for numbers, fractions, and ordinal markers</p>"},{"location":"api/markup/css/properties/#fontvariantnumerickey","title":"FontVariantNumeric.Key","text":"<pre><code>func (p FontVariantNumeric) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontvariantnumericprocess","title":"FontVariantNumeric.Process","text":"<pre><code>func (p FontVariantNumeric) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontvariantposition","title":"FontVariantPosition","text":"<p><code>struct</code></p> <pre><code>type FontVariantPosition struct{}\n</code></pre> <p>Controls the usage of alternate glyphs of smaller size positioned as superscript or subscript regarding the baseline of the font</p>"},{"location":"api/markup/css/properties/#fontvariantpositionkey","title":"FontVariantPosition.Key","text":"<pre><code>func (p FontVariantPosition) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontvariantpositionprocess","title":"FontVariantPosition.Process","text":"<pre><code>func (p FontVariantPosition) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#fontweight","title":"FontWeight","text":"<p><code>struct</code></p> <pre><code>type FontWeight struct{}\n</code></pre> <p>Specifies the weight of a font</p>"},{"location":"api/markup/css/properties/#fontweightkey","title":"FontWeight.Key","text":"<pre><code>func (p FontWeight) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#fontweightprocess","title":"FontWeight.Process","text":"<pre><code>func (p FontWeight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>normal|bold|bolder|lighter|number|initial|inherit</p>"},{"location":"api/markup/css/properties/#gap","title":"Gap","text":"<p><code>struct</code></p> <pre><code>type Gap struct{}\n</code></pre> <p>A shorthand property for the row-gap and the column-gap properties</p>"},{"location":"api/markup/css/properties/#gapkey","title":"Gap.Key","text":"<pre><code>func (p Gap) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gapprocess","title":"Gap.Process","text":"<pre><code>func (p Gap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#grid","title":"Grid","text":"<p><code>struct</code></p> <pre><code>type Grid struct{}\n</code></pre> <p>A shorthand property for the grid-template-rows, grid-template-columns, grid-template-areas, grid-auto-rows, grid-auto-columns, and the grid-auto-flow properties</p>"},{"location":"api/markup/css/properties/#gridkey","title":"Grid.Key","text":"<pre><code>func (p Grid) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridprocess","title":"Grid.Process","text":"<pre><code>func (p Grid) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#gridarea","title":"GridArea","text":"<p><code>struct</code></p> <pre><code>type GridArea struct{}\n</code></pre> <p>Either specifies a name for the grid item, or this property is a shorthand property for the grid-row-start, grid-column-start, grid-row-end, and grid-column-end properties</p>"},{"location":"api/markup/css/properties/#gridareakey","title":"GridArea.Key","text":"<pre><code>func (p GridArea) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridareaprocess","title":"GridArea.Process","text":"<pre><code>func (p GridArea) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#gridautocolumns","title":"GridAutoColumns","text":"<p><code>struct</code></p> <pre><code>type GridAutoColumns struct{}\n</code></pre> <p>Specifies a default column size</p>"},{"location":"api/markup/css/properties/#gridautocolumnskey","title":"GridAutoColumns.Key","text":"<pre><code>func (p GridAutoColumns) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridautocolumnsprocess","title":"GridAutoColumns.Process","text":"<pre><code>func (p GridAutoColumns) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#gridautoflow","title":"GridAutoFlow","text":"<p><code>struct</code></p> <pre><code>type GridAutoFlow struct{}\n</code></pre> <p>Specifies how auto-placed items are inserted in the grid</p>"},{"location":"api/markup/css/properties/#gridautoflowkey","title":"GridAutoFlow.Key","text":"<pre><code>func (p GridAutoFlow) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridautoflowprocess","title":"GridAutoFlow.Process","text":"<pre><code>func (p GridAutoFlow) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#gridautorows","title":"GridAutoRows","text":"<p><code>struct</code></p> <pre><code>type GridAutoRows struct{}\n</code></pre> <p>Specifies a default row size</p>"},{"location":"api/markup/css/properties/#gridautorowskey","title":"GridAutoRows.Key","text":"<pre><code>func (p GridAutoRows) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridautorowsprocess","title":"GridAutoRows.Process","text":"<pre><code>func (p GridAutoRows) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#gridcolumn","title":"GridColumn","text":"<p><code>struct</code></p> <pre><code>type GridColumn struct{}\n</code></pre> <p>A shorthand property for the grid-column-start and the grid-column-end properties</p>"},{"location":"api/markup/css/properties/#gridcolumnkey","title":"GridColumn.Key","text":"<pre><code>func (p GridColumn) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridcolumnprocess","title":"GridColumn.Process","text":"<pre><code>func (p GridColumn) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#gridcolumnend","title":"GridColumnEnd","text":"<p><code>struct</code></p> <pre><code>type GridColumnEnd struct{}\n</code></pre> <p>Specifies where to end the grid item</p>"},{"location":"api/markup/css/properties/#gridcolumnendkey","title":"GridColumnEnd.Key","text":"<pre><code>func (p GridColumnEnd) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridcolumnendprocess","title":"GridColumnEnd.Process","text":"<pre><code>func (p GridColumnEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#gridcolumngap","title":"GridColumnGap","text":"<p><code>struct</code></p> <pre><code>type GridColumnGap struct{}\n</code></pre> <p>Specifies the size of the gap between columns</p>"},{"location":"api/markup/css/properties/#gridcolumngapkey","title":"GridColumnGap.Key","text":"<pre><code>func (p GridColumnGap) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridcolumngapprocess","title":"GridColumnGap.Process","text":"<pre><code>func (p GridColumnGap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#gridcolumnstart","title":"GridColumnStart","text":"<p><code>struct</code></p> <pre><code>type GridColumnStart struct{}\n</code></pre> <p>Specifies where to start the grid item</p>"},{"location":"api/markup/css/properties/#gridcolumnstartkey","title":"GridColumnStart.Key","text":"<pre><code>func (p GridColumnStart) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridcolumnstartprocess","title":"GridColumnStart.Process","text":"<pre><code>func (p GridColumnStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#gridgap","title":"GridGap","text":"<p><code>struct</code></p> <pre><code>type GridGap struct{}\n</code></pre> <p>A shorthand property for the grid-row-gap and grid-column-gap properties</p>"},{"location":"api/markup/css/properties/#gridgapkey","title":"GridGap.Key","text":"<pre><code>func (p GridGap) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridgapprocess","title":"GridGap.Process","text":"<pre><code>func (p GridGap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#gridrow","title":"GridRow","text":"<p><code>struct</code></p> <pre><code>type GridRow struct{}\n</code></pre> <p>A shorthand property for the grid-row-start and the grid-row-end properties</p>"},{"location":"api/markup/css/properties/#gridrowkey","title":"GridRow.Key","text":"<pre><code>func (p GridRow) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridrowprocess","title":"GridRow.Process","text":"<pre><code>func (p GridRow) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#gridrowend","title":"GridRowEnd","text":"<p><code>struct</code></p> <pre><code>type GridRowEnd struct{}\n</code></pre> <p>Specifies where to end the grid item</p>"},{"location":"api/markup/css/properties/#gridrowendkey","title":"GridRowEnd.Key","text":"<pre><code>func (p GridRowEnd) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridrowendprocess","title":"GridRowEnd.Process","text":"<pre><code>func (p GridRowEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#gridrowgap","title":"GridRowGap","text":"<p><code>struct</code></p> <pre><code>type GridRowGap struct{}\n</code></pre> <p>Specifies the size of the gap between rows</p>"},{"location":"api/markup/css/properties/#gridrowgapkey","title":"GridRowGap.Key","text":"<pre><code>func (p GridRowGap) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridrowgapprocess","title":"GridRowGap.Process","text":"<pre><code>func (p GridRowGap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#gridrowstart","title":"GridRowStart","text":"<p><code>struct</code></p> <pre><code>type GridRowStart struct{}\n</code></pre> <p>Specifies where to start the grid item</p>"},{"location":"api/markup/css/properties/#gridrowstartkey","title":"GridRowStart.Key","text":"<pre><code>func (p GridRowStart) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridrowstartprocess","title":"GridRowStart.Process","text":"<pre><code>func (p GridRowStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#gridtemplate","title":"GridTemplate","text":"<p><code>struct</code></p> <pre><code>type GridTemplate struct{}\n</code></pre> <p>A shorthand property for the grid-template-rows, grid-template-columns and grid-areas properties</p>"},{"location":"api/markup/css/properties/#gridtemplatekey","title":"GridTemplate.Key","text":"<pre><code>func (p GridTemplate) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridtemplateprocess","title":"GridTemplate.Process","text":"<pre><code>func (p GridTemplate) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#gridtemplateareas","title":"GridTemplateAreas","text":"<p><code>struct</code></p> <pre><code>type GridTemplateAreas struct{}\n</code></pre> <p>Specifies how to display columns and rows, using named grid items</p>"},{"location":"api/markup/css/properties/#gridtemplateareaskey","title":"GridTemplateAreas.Key","text":"<pre><code>func (p GridTemplateAreas) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridtemplateareasprocess","title":"GridTemplateAreas.Process","text":"<pre><code>func (p GridTemplateAreas) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#gridtemplatecolumns","title":"GridTemplateColumns","text":"<p><code>struct</code></p> <pre><code>type GridTemplateColumns struct{}\n</code></pre> <p>Specifies the size of the columns, and how many columns in a grid layout</p>"},{"location":"api/markup/css/properties/#gridtemplatecolumnskey","title":"GridTemplateColumns.Key","text":"<pre><code>func (p GridTemplateColumns) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridtemplatecolumnsprocess","title":"GridTemplateColumns.Process","text":"<pre><code>func (p GridTemplateColumns) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#gridtemplaterows","title":"GridTemplateRows","text":"<p><code>struct</code></p> <pre><code>type GridTemplateRows struct{}\n</code></pre> <p>Specifies the size of the rows in a grid layout</p>"},{"location":"api/markup/css/properties/#gridtemplaterowskey","title":"GridTemplateRows.Key","text":"<pre><code>func (p GridTemplateRows) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#gridtemplaterowsprocess","title":"GridTemplateRows.Process","text":"<pre><code>func (p GridTemplateRows) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#hangingpunctuation","title":"HangingPunctuation","text":"<p><code>struct</code></p> <pre><code>type HangingPunctuation struct{}\n</code></pre> <p>Specifies whether a punctuation character may be placed outside the line box</p>"},{"location":"api/markup/css/properties/#hangingpunctuationkey","title":"HangingPunctuation.Key","text":"<pre><code>func (p HangingPunctuation) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#hangingpunctuationprocess","title":"HangingPunctuation.Process","text":"<pre><code>func (p HangingPunctuation) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#height","title":"Height","text":"<p><code>struct</code></p> <pre><code>type Height struct{}\n</code></pre> <p>Sets the height of an element</p>"},{"location":"api/markup/css/properties/#heightkey","title":"Height.Key","text":"<pre><code>func (p Height) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#heightprocess","title":"Height.Process","text":"<pre><code>func (p Height) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#hyphens","title":"Hyphens","text":"<p><code>struct</code></p> <pre><code>type Hyphens struct{}\n</code></pre> <p>Sets how to split words to improve the layout of paragraphs</p>"},{"location":"api/markup/css/properties/#hyphenskey","title":"Hyphens.Key","text":"<pre><code>func (p Hyphens) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#hyphensprocess","title":"Hyphens.Process","text":"<pre><code>func (p Hyphens) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#imagerendering","title":"ImageRendering","text":"<p><code>struct</code></p> <pre><code>type ImageRendering struct{}\n</code></pre> <p>Specifies the type of algorithm to use for image scaling</p>"},{"location":"api/markup/css/properties/#imagerenderingkey","title":"ImageRendering.Key","text":"<pre><code>func (p ImageRendering) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#imagerenderingprocess","title":"ImageRendering.Process","text":"<pre><code>func (p ImageRendering) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#import","title":"Import","text":"<p><code>struct</code></p> <pre><code>type Import struct{}\n</code></pre> <p>Allows you to import a style sheet into another style sheet</p>"},{"location":"api/markup/css/properties/#importkey","title":"Import.Key","text":"<pre><code>func (p Import) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#importprocess","title":"Import.Process","text":"<pre><code>func (p Import) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#inlinesize","title":"InlineSize","text":"<p><code>struct</code></p> <pre><code>type InlineSize struct{}\n</code></pre> <p>Specifies the size of an element in the inline direction</p>"},{"location":"api/markup/css/properties/#inlinesizekey","title":"InlineSize.Key","text":"<pre><code>func (p InlineSize) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#inlinesizeprocess","title":"InlineSize.Process","text":"<pre><code>func (p InlineSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#inset","title":"Inset","text":"<p><code>struct</code></p> <pre><code>type Inset struct{}\n</code></pre> <p>Specifies the distance between an element and the parent element</p>"},{"location":"api/markup/css/properties/#insetkey","title":"Inset.Key","text":"<pre><code>func (p Inset) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#insetprocess","title":"Inset.Process","text":"<pre><code>func (p Inset) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#insetblock","title":"InsetBlock","text":"<p><code>struct</code></p> <pre><code>type InsetBlock struct{}\n</code></pre> <p>Specifies the distance between an element and the parent element in the block direction</p>"},{"location":"api/markup/css/properties/#insetblockkey","title":"InsetBlock.Key","text":"<pre><code>func (p InsetBlock) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#insetblockprocess","title":"InsetBlock.Process","text":"<pre><code>func (p InsetBlock) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#insetblockend","title":"InsetBlockEnd","text":"<p><code>struct</code></p> <pre><code>type InsetBlockEnd struct{}\n</code></pre> <p>Specifies the distance between the end of an element and the parent element in the block direction</p>"},{"location":"api/markup/css/properties/#insetblockendkey","title":"InsetBlockEnd.Key","text":"<pre><code>func (p InsetBlockEnd) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#insetblockendprocess","title":"InsetBlockEnd.Process","text":"<pre><code>func (p InsetBlockEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#insetblockstart","title":"InsetBlockStart","text":"<p><code>struct</code></p> <pre><code>type InsetBlockStart struct{}\n</code></pre> <p>Specifies the distance between the start of an element and the parent element in the block direction</p>"},{"location":"api/markup/css/properties/#insetblockstartkey","title":"InsetBlockStart.Key","text":"<pre><code>func (p InsetBlockStart) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#insetblockstartprocess","title":"InsetBlockStart.Process","text":"<pre><code>func (p InsetBlockStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#insetinline","title":"InsetInline","text":"<p><code>struct</code></p> <pre><code>type InsetInline struct{}\n</code></pre> <p>Specifies the distance between an element and the parent element in the inline direction</p>"},{"location":"api/markup/css/properties/#insetinlinekey","title":"InsetInline.Key","text":"<pre><code>func (p InsetInline) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#insetinlineprocess","title":"InsetInline.Process","text":"<pre><code>func (p InsetInline) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#insetinlineend","title":"InsetInlineEnd","text":"<p><code>struct</code></p> <pre><code>type InsetInlineEnd struct{}\n</code></pre> <p>Specifies the distance between the end of an element and the parent element in the inline direction</p>"},{"location":"api/markup/css/properties/#insetinlineendkey","title":"InsetInlineEnd.Key","text":"<pre><code>func (p InsetInlineEnd) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#insetinlineendprocess","title":"InsetInlineEnd.Process","text":"<pre><code>func (p InsetInlineEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#insetinlinestart","title":"InsetInlineStart","text":"<p><code>struct</code></p> <pre><code>type InsetInlineStart struct{}\n</code></pre> <p>Specifies the distance between the start of an element and the parent element in the inline direction</p>"},{"location":"api/markup/css/properties/#insetinlinestartkey","title":"InsetInlineStart.Key","text":"<pre><code>func (p InsetInlineStart) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#insetinlinestartprocess","title":"InsetInlineStart.Process","text":"<pre><code>func (p InsetInlineStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#isolation","title":"Isolation","text":"<p><code>struct</code></p> <pre><code>type Isolation struct{}\n</code></pre> <p>Defines whether an element must create a new stacking content</p>"},{"location":"api/markup/css/properties/#isolationkey","title":"Isolation.Key","text":"<pre><code>func (p Isolation) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#isolationprocess","title":"Isolation.Process","text":"<pre><code>func (p Isolation) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#justifycontent","title":"JustifyContent","text":"<p><code>struct</code></p> <pre><code>type JustifyContent struct{}\n</code></pre> <p>Specifies the alignment between the items inside a flexible container when the items do not use all available space</p>"},{"location":"api/markup/css/properties/#justifycontentkey","title":"JustifyContent.Key","text":"<pre><code>func (p JustifyContent) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#justifycontentprocess","title":"JustifyContent.Process","text":"<pre><code>func (p JustifyContent) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#justifyitems","title":"JustifyItems","text":"<p><code>struct</code></p> <pre><code>type JustifyItems struct{}\n</code></pre> <p>Is set on the grid container. Specifies the alignment of grid items in the inline direction</p>"},{"location":"api/markup/css/properties/#justifyitemskey","title":"JustifyItems.Key","text":"<pre><code>func (p JustifyItems) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#justifyitemsprocess","title":"JustifyItems.Process","text":"<pre><code>func (p JustifyItems) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#justifyself","title":"JustifySelf","text":"<p><code>struct</code></p> <pre><code>type JustifySelf struct{}\n</code></pre> <p>Is set on the grid item. Specifies the alignment of the grid item in the inline direction</p>"},{"location":"api/markup/css/properties/#justifyselfkey","title":"JustifySelf.Key","text":"<pre><code>func (p JustifySelf) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#justifyselfprocess","title":"JustifySelf.Process","text":"<pre><code>func (p JustifySelf) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#keyframes","title":"Keyframes","text":"<p><code>struct</code></p> <pre><code>type Keyframes struct{}\n</code></pre> <p>Specifies the animation code</p>"},{"location":"api/markup/css/properties/#keyframeskey","title":"Keyframes.Key","text":"<pre><code>func (p Keyframes) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#keyframesprocess","title":"Keyframes.Process","text":"<pre><code>func (p Keyframes) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#left","title":"Left","text":"<p><code>struct</code></p> <pre><code>type Left struct{}\n</code></pre> <p>Specifies the left position of a positioned element</p>"},{"location":"api/markup/css/properties/#leftkey","title":"Left.Key","text":"<pre><code>func (p Left) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#leftprocess","title":"Left.Process","text":"<pre><code>func (p Left) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>auto|length|initial|inherit</p>"},{"location":"api/markup/css/properties/#letterspacing","title":"LetterSpacing","text":"<p><code>struct</code></p> <pre><code>type LetterSpacing struct{}\n</code></pre> <p>Increases or decreases the space between characters in a text</p>"},{"location":"api/markup/css/properties/#letterspacingkey","title":"LetterSpacing.Key","text":"<pre><code>func (p LetterSpacing) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#letterspacingprocess","title":"LetterSpacing.Process","text":"<pre><code>func (p LetterSpacing) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#linebreak","title":"LineBreak","text":"<p><code>struct</code></p> <pre><code>type LineBreak struct{}\n</code></pre> <p>Specifies how/if to break lines</p>"},{"location":"api/markup/css/properties/#linebreakkey","title":"LineBreak.Key","text":"<pre><code>func (p LineBreak) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#linebreakprocess","title":"LineBreak.Process","text":"<pre><code>func (p LineBreak) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#lineheight","title":"LineHeight","text":"<p><code>struct</code></p> <pre><code>type LineHeight struct{}\n</code></pre> <p>Sets the line height</p>"},{"location":"api/markup/css/properties/#lineheightkey","title":"LineHeight.Key","text":"<pre><code>func (p LineHeight) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#lineheightprocess","title":"LineHeight.Process","text":"<pre><code>func (p LineHeight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#liststyle","title":"ListStyle","text":"<p><code>struct</code></p> <pre><code>type ListStyle struct{}\n</code></pre> <p>Sets all the properties for a list in one declaration</p>"},{"location":"api/markup/css/properties/#liststylekey","title":"ListStyle.Key","text":"<pre><code>func (p ListStyle) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#liststyleprocess","title":"ListStyle.Process","text":"<pre><code>func (p ListStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#liststyleimage","title":"ListStyleImage","text":"<p><code>struct</code></p> <pre><code>type ListStyleImage struct{}\n</code></pre> <p>Specifies an image as the list-item marker</p>"},{"location":"api/markup/css/properties/#liststyleimagekey","title":"ListStyleImage.Key","text":"<pre><code>func (p ListStyleImage) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#liststyleimageprocess","title":"ListStyleImage.Process","text":"<pre><code>func (p ListStyleImage) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#liststyleposition","title":"ListStylePosition","text":"<p><code>struct</code></p> <pre><code>type ListStylePosition struct{}\n</code></pre> <p>Specifies the position of the list-item markers (bullet points)</p>"},{"location":"api/markup/css/properties/#liststylepositionkey","title":"ListStylePosition.Key","text":"<pre><code>func (p ListStylePosition) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#liststylepositionprocess","title":"ListStylePosition.Process","text":"<pre><code>func (p ListStylePosition) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#liststyletype","title":"ListStyleType","text":"<p><code>struct</code></p> <pre><code>type ListStyleType struct{}\n</code></pre> <p>Specifies the type of list-item marker</p>"},{"location":"api/markup/css/properties/#liststyletypekey","title":"ListStyleType.Key","text":"<pre><code>func (p ListStyleType) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#liststyletypeprocess","title":"ListStyleType.Process","text":"<pre><code>func (p ListStyleType) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#margin","title":"Margin","text":"<p><code>struct</code></p> <pre><code>type Margin struct{}\n</code></pre> <p>Sets all the margin properties in one declaration</p>"},{"location":"api/markup/css/properties/#marginkey","title":"Margin.Key","text":"<pre><code>func (p Margin) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#marginprocess","title":"Margin.Process","text":"<pre><code>func (p Margin) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#marginblock","title":"MarginBlock","text":"<p><code>struct</code></p> <pre><code>type MarginBlock struct{}\n</code></pre> <p>Specifies the margin in the block direction</p>"},{"location":"api/markup/css/properties/#marginblockkey","title":"MarginBlock.Key","text":"<pre><code>func (p MarginBlock) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#marginblockprocess","title":"MarginBlock.Process","text":"<pre><code>func (p MarginBlock) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#marginblockend","title":"MarginBlockEnd","text":"<p><code>struct</code></p> <pre><code>type MarginBlockEnd struct{}\n</code></pre> <p>Specifies the margin at the end in the block direction</p>"},{"location":"api/markup/css/properties/#marginblockendkey","title":"MarginBlockEnd.Key","text":"<pre><code>func (p MarginBlockEnd) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#marginblockendprocess","title":"MarginBlockEnd.Process","text":"<pre><code>func (p MarginBlockEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#marginblockstart","title":"MarginBlockStart","text":"<p><code>struct</code></p> <pre><code>type MarginBlockStart struct{}\n</code></pre> <p>Specifies the margin at the start in the block direction</p>"},{"location":"api/markup/css/properties/#marginblockstartkey","title":"MarginBlockStart.Key","text":"<pre><code>func (p MarginBlockStart) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#marginblockstartprocess","title":"MarginBlockStart.Process","text":"<pre><code>func (p MarginBlockStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#marginbottom","title":"MarginBottom","text":"<p><code>struct</code></p> <pre><code>type MarginBottom struct{}\n</code></pre> <p>Sets the bottom margin of an element</p>"},{"location":"api/markup/css/properties/#marginbottomkey","title":"MarginBottom.Key","text":"<pre><code>func (p MarginBottom) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#marginbottomprocess","title":"MarginBottom.Process","text":"<pre><code>func (p MarginBottom) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>length|auto|initial|inherit</p>"},{"location":"api/markup/css/properties/#margininline","title":"MarginInline","text":"<p><code>struct</code></p> <pre><code>type MarginInline struct{}\n</code></pre> <p>Specifies the margin in the inline direction</p>"},{"location":"api/markup/css/properties/#margininlinekey","title":"MarginInline.Key","text":"<pre><code>func (p MarginInline) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#margininlineprocess","title":"MarginInline.Process","text":"<pre><code>func (p MarginInline) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#margininlineend","title":"MarginInlineEnd","text":"<p><code>struct</code></p> <pre><code>type MarginInlineEnd struct{}\n</code></pre> <p>Specifies the margin at the end in the inline direction</p>"},{"location":"api/markup/css/properties/#margininlineendkey","title":"MarginInlineEnd.Key","text":"<pre><code>func (p MarginInlineEnd) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#margininlineendprocess","title":"MarginInlineEnd.Process","text":"<pre><code>func (p MarginInlineEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#margininlinestart","title":"MarginInlineStart","text":"<p><code>struct</code></p> <pre><code>type MarginInlineStart struct{}\n</code></pre> <p>Specifies the margin at the start in the inline direction</p>"},{"location":"api/markup/css/properties/#margininlinestartkey","title":"MarginInlineStart.Key","text":"<pre><code>func (p MarginInlineStart) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#margininlinestartprocess","title":"MarginInlineStart.Process","text":"<pre><code>func (p MarginInlineStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#marginleft","title":"MarginLeft","text":"<p><code>struct</code></p> <pre><code>type MarginLeft struct{}\n</code></pre> <p>Sets the left margin of an element</p>"},{"location":"api/markup/css/properties/#marginleftkey","title":"MarginLeft.Key","text":"<pre><code>func (p MarginLeft) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#marginleftprocess","title":"MarginLeft.Process","text":"<pre><code>func (p MarginLeft) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>length|auto|initial|inherit</p>"},{"location":"api/markup/css/properties/#marginright","title":"MarginRight","text":"<p><code>struct</code></p> <pre><code>type MarginRight struct{}\n</code></pre> <p>Sets the right margin of an element</p>"},{"location":"api/markup/css/properties/#marginrightkey","title":"MarginRight.Key","text":"<pre><code>func (p MarginRight) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#marginrightprocess","title":"MarginRight.Process","text":"<pre><code>func (p MarginRight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>length|auto|initial|inherit</p>"},{"location":"api/markup/css/properties/#margintop","title":"MarginTop","text":"<p><code>struct</code></p> <pre><code>type MarginTop struct{}\n</code></pre> <p>Sets the top margin of an element</p>"},{"location":"api/markup/css/properties/#margintopkey","title":"MarginTop.Key","text":"<pre><code>func (p MarginTop) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#margintopprocess","title":"MarginTop.Process","text":"<pre><code>func (p MarginTop) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>length|auto|initial|inherit</p>"},{"location":"api/markup/css/properties/#mask","title":"Mask","text":"<p><code>struct</code></p> <pre><code>type Mask struct{}\n</code></pre> <p>Hides parts of an element by masking or clipping an image at specific places</p>"},{"location":"api/markup/css/properties/#maskkey","title":"Mask.Key","text":"<pre><code>func (p Mask) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#maskprocess","title":"Mask.Process","text":"<pre><code>func (p Mask) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#maskclip","title":"MaskClip","text":"<p><code>struct</code></p> <pre><code>type MaskClip struct{}\n</code></pre> <p>Specifies the mask area</p>"},{"location":"api/markup/css/properties/#maskclipkey","title":"MaskClip.Key","text":"<pre><code>func (p MaskClip) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#maskclipprocess","title":"MaskClip.Process","text":"<pre><code>func (p MaskClip) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#maskcomposite","title":"MaskComposite","text":"<p><code>struct</code></p> <pre><code>type MaskComposite struct{}\n</code></pre> <p>Represents a compositing operation used on the current mask layer with the mask layers below it</p>"},{"location":"api/markup/css/properties/#maskcompositekey","title":"MaskComposite.Key","text":"<pre><code>func (p MaskComposite) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#maskcompositeprocess","title":"MaskComposite.Process","text":"<pre><code>func (p MaskComposite) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#maskimage","title":"MaskImage","text":"<p><code>struct</code></p> <pre><code>type MaskImage struct{}\n</code></pre> <p>Specifies an image to be used as a mask layer for an element</p>"},{"location":"api/markup/css/properties/#maskimagekey","title":"MaskImage.Key","text":"<pre><code>func (p MaskImage) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#maskimageprocess","title":"MaskImage.Process","text":"<pre><code>func (p MaskImage) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#maskmode","title":"MaskMode","text":"<p><code>struct</code></p> <pre><code>type MaskMode struct{}\n</code></pre> <p>Specifies whether the mask layer image is treated as a luminance mask or as an alpha mask</p>"},{"location":"api/markup/css/properties/#maskmodekey","title":"MaskMode.Key","text":"<pre><code>func (p MaskMode) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#maskmodeprocess","title":"MaskMode.Process","text":"<pre><code>func (p MaskMode) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#maskorigin","title":"MaskOrigin","text":"<p><code>struct</code></p> <pre><code>type MaskOrigin struct{}\n</code></pre> <p>Specifies the origin position (the mask position area) of a mask layer image</p>"},{"location":"api/markup/css/properties/#maskoriginkey","title":"MaskOrigin.Key","text":"<pre><code>func (p MaskOrigin) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#maskoriginprocess","title":"MaskOrigin.Process","text":"<pre><code>func (p MaskOrigin) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#maskposition","title":"MaskPosition","text":"<p><code>struct</code></p> <pre><code>type MaskPosition struct{}\n</code></pre> <p>Sets the starting position of a mask layer image (relative to the mask position area)</p>"},{"location":"api/markup/css/properties/#maskpositionkey","title":"MaskPosition.Key","text":"<pre><code>func (p MaskPosition) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#maskpositionprocess","title":"MaskPosition.Process","text":"<pre><code>func (p MaskPosition) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#maskrepeat","title":"MaskRepeat","text":"<p><code>struct</code></p> <pre><code>type MaskRepeat struct{}\n</code></pre> <p>Specifies how the mask layer image is repeated</p>"},{"location":"api/markup/css/properties/#maskrepeatkey","title":"MaskRepeat.Key","text":"<pre><code>func (p MaskRepeat) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#maskrepeatprocess","title":"MaskRepeat.Process","text":"<pre><code>func (p MaskRepeat) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#masksize","title":"MaskSize","text":"<p><code>struct</code></p> <pre><code>type MaskSize struct{}\n</code></pre> <p>Specifies the size of a mask layer image</p>"},{"location":"api/markup/css/properties/#masksizekey","title":"MaskSize.Key","text":"<pre><code>func (p MaskSize) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#masksizeprocess","title":"MaskSize.Process","text":"<pre><code>func (p MaskSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#masktype","title":"MaskType","text":"<p><code>struct</code></p> <pre><code>type MaskType struct{}\n</code></pre> <p>Specifies whether an SVG  element is treated as a luminance mask or as an alpha mask"},{"location":"api/markup/css/properties/#masktypekey","title":"MaskType.Key","text":"<pre><code>func (p MaskType) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#masktypeprocess","title":"MaskType.Process","text":"<pre><code>func (p MaskType) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#maxblocksize","title":"MaxBlockSize","text":"<p><code>struct</code></p> <pre><code>type MaxBlockSize struct{}\n</code></pre> <p>Sets the maximum size of an element in the block direction</p>"},{"location":"api/markup/css/properties/#maxblocksizekey","title":"MaxBlockSize.Key","text":"<pre><code>func (p MaxBlockSize) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#maxblocksizeprocess","title":"MaxBlockSize.Process","text":"<pre><code>func (p MaxBlockSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#maxheight","title":"MaxHeight","text":"<p><code>struct</code></p> <pre><code>type MaxHeight struct{}\n</code></pre> <p>Sets the maximum height of an element</p>"},{"location":"api/markup/css/properties/#maxheightkey","title":"MaxHeight.Key","text":"<pre><code>func (p MaxHeight) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#maxheightprocess","title":"MaxHeight.Process","text":"<pre><code>func (p MaxHeight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#maxinlinesize","title":"MaxInlineSize","text":"<p><code>struct</code></p> <pre><code>type MaxInlineSize struct{}\n</code></pre> <p>Sets the maximum size of an element in the inline direction</p>"},{"location":"api/markup/css/properties/#maxinlinesizekey","title":"MaxInlineSize.Key","text":"<pre><code>func (p MaxInlineSize) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#maxinlinesizeprocess","title":"MaxInlineSize.Process","text":"<pre><code>func (p MaxInlineSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#maxwidth","title":"MaxWidth","text":"<p><code>struct</code></p> <pre><code>type MaxWidth struct{}\n</code></pre> <p>Sets the maximum width of an element</p>"},{"location":"api/markup/css/properties/#maxwidthkey","title":"MaxWidth.Key","text":"<pre><code>func (p MaxWidth) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#maxwidthprocess","title":"MaxWidth.Process","text":"<pre><code>func (p MaxWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#media","title":"Media","text":"<p><code>struct</code></p> <pre><code>type Media struct{}\n</code></pre> <p>Sets the style rules for different media types/devices/sizes</p>"},{"location":"api/markup/css/properties/#mediakey","title":"Media.Key","text":"<pre><code>func (p Media) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#mediaprocess","title":"Media.Process","text":"<pre><code>func (p Media) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#minblocksize","title":"MinBlockSize","text":"<p><code>struct</code></p> <pre><code>type MinBlockSize struct{}\n</code></pre> <p>Sets the minimum size of an element in the block direction</p>"},{"location":"api/markup/css/properties/#minblocksizekey","title":"MinBlockSize.Key","text":"<pre><code>func (p MinBlockSize) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#minblocksizeprocess","title":"MinBlockSize.Process","text":"<pre><code>func (p MinBlockSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#minheight","title":"MinHeight","text":"<p><code>struct</code></p> <pre><code>type MinHeight struct{}\n</code></pre> <p>Sets the minimum height of an element</p>"},{"location":"api/markup/css/properties/#minheightkey","title":"MinHeight.Key","text":"<pre><code>func (p MinHeight) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#minheightprocess","title":"MinHeight.Process","text":"<pre><code>func (p MinHeight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#mininlinesize","title":"MinInlineSize","text":"<p><code>struct</code></p> <pre><code>type MinInlineSize struct{}\n</code></pre> <p>Sets the minimum size of an element in the inline direction</p>"},{"location":"api/markup/css/properties/#mininlinesizekey","title":"MinInlineSize.Key","text":"<pre><code>func (p MinInlineSize) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#mininlinesizeprocess","title":"MinInlineSize.Process","text":"<pre><code>func (p MinInlineSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#minwidth","title":"MinWidth","text":"<p><code>struct</code></p> <pre><code>type MinWidth struct{}\n</code></pre> <p>Sets the minimum width of an element</p>"},{"location":"api/markup/css/properties/#minwidthkey","title":"MinWidth.Key","text":"<pre><code>func (p MinWidth) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#minwidthprocess","title":"MinWidth.Process","text":"<pre><code>func (p MinWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#mixblendmode","title":"MixBlendMode","text":"<p><code>struct</code></p> <pre><code>type MixBlendMode struct{}\n</code></pre> <p>Specifies how an element's content should blend with its direct parent background</p>"},{"location":"api/markup/css/properties/#mixblendmodekey","title":"MixBlendMode.Key","text":"<pre><code>func (p MixBlendMode) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#mixblendmodeprocess","title":"MixBlendMode.Process","text":"<pre><code>func (p MixBlendMode) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#objectfit","title":"ObjectFit","text":"<p><code>struct</code></p> <pre><code>type ObjectFit struct{}\n</code></pre> <p>Specifies how the contents of a replaced element should be fitted to the box established by its used height and width</p>"},{"location":"api/markup/css/properties/#objectfitkey","title":"ObjectFit.Key","text":"<pre><code>func (p ObjectFit) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#objectfitprocess","title":"ObjectFit.Process","text":"<pre><code>func (p ObjectFit) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#objectposition","title":"ObjectPosition","text":"<p><code>struct</code></p> <pre><code>type ObjectPosition struct{}\n</code></pre> <p>Specifies the alignment of the replaced element inside its box</p>"},{"location":"api/markup/css/properties/#objectpositionkey","title":"ObjectPosition.Key","text":"<pre><code>func (p ObjectPosition) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#objectpositionprocess","title":"ObjectPosition.Process","text":"<pre><code>func (p ObjectPosition) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#offset","title":"Offset","text":"<p><code>struct</code></p> <pre><code>type Offset struct{}\n</code></pre> <p>Is a shorthand, and specifies how to animate an element along a path</p>"},{"location":"api/markup/css/properties/#offsetkey","title":"Offset.Key","text":"<pre><code>func (p Offset) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#offsetprocess","title":"Offset.Process","text":"<pre><code>func (p Offset) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#offsetanchor","title":"OffsetAnchor","text":"<p><code>struct</code></p> <pre><code>type OffsetAnchor struct{}\n</code></pre> <p>Specifies a point on an element that is fixed to the path it is animated along</p>"},{"location":"api/markup/css/properties/#offsetanchorkey","title":"OffsetAnchor.Key","text":"<pre><code>func (p OffsetAnchor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#offsetanchorprocess","title":"OffsetAnchor.Process","text":"<pre><code>func (p OffsetAnchor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#offsetdistance","title":"OffsetDistance","text":"<p><code>struct</code></p> <pre><code>type OffsetDistance struct{}\n</code></pre> <p>Specifies the position along a path where an animated element is placed</p>"},{"location":"api/markup/css/properties/#offsetdistancekey","title":"OffsetDistance.Key","text":"<pre><code>func (p OffsetDistance) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#offsetdistanceprocess","title":"OffsetDistance.Process","text":"<pre><code>func (p OffsetDistance) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#offsetpath","title":"OffsetPath","text":"<p><code>struct</code></p> <pre><code>type OffsetPath struct{}\n</code></pre> <p>Specifies the path an element is animated along</p>"},{"location":"api/markup/css/properties/#offsetpathkey","title":"OffsetPath.Key","text":"<pre><code>func (p OffsetPath) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#offsetpathprocess","title":"OffsetPath.Process","text":"<pre><code>func (p OffsetPath) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#offsetrotate","title":"OffsetRotate","text":"<p><code>struct</code></p> <pre><code>type OffsetRotate struct{}\n</code></pre> <p>Specifies rotation of an element as it is animated along a path</p>"},{"location":"api/markup/css/properties/#offsetrotatekey","title":"OffsetRotate.Key","text":"<pre><code>func (p OffsetRotate) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#offsetrotateprocess","title":"OffsetRotate.Process","text":"<pre><code>func (p OffsetRotate) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#opacity","title":"Opacity","text":"<p><code>struct</code></p> <pre><code>type Opacity struct{}\n</code></pre> <p>Sets the opacity level for an element</p>"},{"location":"api/markup/css/properties/#opacitykey","title":"Opacity.Key","text":"<pre><code>func (p Opacity) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#opacityprocess","title":"Opacity.Process","text":"<pre><code>func (p Opacity) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#order","title":"Order","text":"<p><code>struct</code></p> <pre><code>type Order struct{}\n</code></pre> <p>Sets the order of the flexible item, relative to the rest</p>"},{"location":"api/markup/css/properties/#orderkey","title":"Order.Key","text":"<pre><code>func (p Order) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#orderprocess","title":"Order.Process","text":"<pre><code>func (p Order) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#orphans","title":"Orphans","text":"<p><code>struct</code></p> <pre><code>type Orphans struct{}\n</code></pre> <p>Sets the minimum number of lines that must be left at the bottom of a page or column</p>"},{"location":"api/markup/css/properties/#orphanskey","title":"Orphans.Key","text":"<pre><code>func (p Orphans) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#orphansprocess","title":"Orphans.Process","text":"<pre><code>func (p Orphans) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#outline","title":"Outline","text":"<p><code>struct</code></p> <pre><code>type Outline struct{}\n</code></pre> <p>A shorthand property for the outline-width, outline-style, and the outline-color properties</p>"},{"location":"api/markup/css/properties/#outlinekey","title":"Outline.Key","text":"<pre><code>func (p Outline) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#outlineprocess","title":"Outline.Process","text":"<pre><code>func (p Outline) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#outlinecolor","title":"OutlineColor","text":"<p><code>struct</code></p> <pre><code>type OutlineColor struct{}\n</code></pre> <p>Sets the color of an outline</p>"},{"location":"api/markup/css/properties/#outlinecolorkey","title":"OutlineColor.Key","text":"<pre><code>func (p OutlineColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#outlinecolorprocess","title":"OutlineColor.Process","text":"<pre><code>func (p OutlineColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#outlineoffset","title":"OutlineOffset","text":"<p><code>struct</code></p> <pre><code>type OutlineOffset struct{}\n</code></pre> <p>Offsets an outline, and draws it beyond the border edge</p>"},{"location":"api/markup/css/properties/#outlineoffsetkey","title":"OutlineOffset.Key","text":"<pre><code>func (p OutlineOffset) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#outlineoffsetprocess","title":"OutlineOffset.Process","text":"<pre><code>func (p OutlineOffset) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#outlinestyle","title":"OutlineStyle","text":"<p><code>struct</code></p> <pre><code>type OutlineStyle struct{}\n</code></pre> <p>Sets the style of an outline</p>"},{"location":"api/markup/css/properties/#outlinestylekey","title":"OutlineStyle.Key","text":"<pre><code>func (p OutlineStyle) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#outlinestyleprocess","title":"OutlineStyle.Process","text":"<pre><code>func (p OutlineStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#outlinewidth","title":"OutlineWidth","text":"<p><code>struct</code></p> <pre><code>type OutlineWidth struct{}\n</code></pre> <p>Sets the width of an outline</p>"},{"location":"api/markup/css/properties/#outlinewidthkey","title":"OutlineWidth.Key","text":"<pre><code>func (p OutlineWidth) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#outlinewidthprocess","title":"OutlineWidth.Process","text":"<pre><code>func (p OutlineWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#overflow","title":"Overflow","text":"<p><code>struct</code></p> <pre><code>type Overflow struct{}\n</code></pre> <p>Specifies what happens if content overflows an element's box</p>"},{"location":"api/markup/css/properties/#overflowkey","title":"Overflow.Key","text":"<pre><code>func (p Overflow) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#overflowprocess","title":"Overflow.Process","text":"<pre><code>func (p Overflow) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>overflow: visible|hidden|clip|scroll|auto|initial|inherit;</p>"},{"location":"api/markup/css/properties/#overflowanchor","title":"OverflowAnchor","text":"<p><code>struct</code></p> <pre><code>type OverflowAnchor struct{}\n</code></pre> <p>Specifies whether or not content in viewable area in a scrollable contianer should be pushed down when new content is loaded above</p>"},{"location":"api/markup/css/properties/#overflowanchorkey","title":"OverflowAnchor.Key","text":"<pre><code>func (p OverflowAnchor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#overflowanchorprocess","title":"OverflowAnchor.Process","text":"<pre><code>func (p OverflowAnchor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#overflowwrap","title":"OverflowWrap","text":"<p><code>struct</code></p> <pre><code>type OverflowWrap struct{}\n</code></pre> <p>Specifies whether or not the browser can break lines with long words, if they overflow the container</p>"},{"location":"api/markup/css/properties/#overflowwrapkey","title":"OverflowWrap.Key","text":"<pre><code>func (p OverflowWrap) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#overflowwrapprocess","title":"OverflowWrap.Process","text":"<pre><code>func (p OverflowWrap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#overflowx","title":"OverflowX","text":"<p><code>struct</code></p> <pre><code>type OverflowX struct{}\n</code></pre> <p>Specifies whether or not to clip the left/right edges of the content, if it overflows the element's content area</p>"},{"location":"api/markup/css/properties/#overflowxkey","title":"OverflowX.Key","text":"<pre><code>func (p OverflowX) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#overflowxprocess","title":"OverflowX.Process","text":"<pre><code>func (p OverflowX) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#overflowy","title":"OverflowY","text":"<p><code>struct</code></p> <pre><code>type OverflowY struct{}\n</code></pre> <p>Specifies whether or not to clip the top/bottom edges of the content, if it overflows the element's content area</p>"},{"location":"api/markup/css/properties/#overflowykey","title":"OverflowY.Key","text":"<pre><code>func (p OverflowY) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#overflowyprocess","title":"OverflowY.Process","text":"<pre><code>func (p OverflowY) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#overscrollbehavior","title":"OverscrollBehavior","text":"<p><code>struct</code></p> <pre><code>type OverscrollBehavior struct{}\n</code></pre> <p>Specifies whether to have scroll chaining or overscroll affordance in x- and y-directions</p>"},{"location":"api/markup/css/properties/#overscrollbehaviorkey","title":"OverscrollBehavior.Key","text":"<pre><code>func (p OverscrollBehavior) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#overscrollbehaviorprocess","title":"OverscrollBehavior.Process","text":"<pre><code>func (p OverscrollBehavior) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#overscrollbehaviorblock","title":"OverscrollBehaviorBlock","text":"<p><code>struct</code></p> <pre><code>type OverscrollBehaviorBlock struct{}\n</code></pre> <p>Specifies whether to have scroll chaining or overscroll affordance in the block direction</p>"},{"location":"api/markup/css/properties/#overscrollbehaviorblockkey","title":"OverscrollBehaviorBlock.Key","text":"<pre><code>func (p OverscrollBehaviorBlock) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#overscrollbehaviorblockprocess","title":"OverscrollBehaviorBlock.Process","text":"<pre><code>func (p OverscrollBehaviorBlock) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#overscrollbehaviorinline","title":"OverscrollBehaviorInline","text":"<p><code>struct</code></p> <pre><code>type OverscrollBehaviorInline struct{}\n</code></pre> <p>Specifies whether to have scroll chaining or overscroll affordance in the inline direction</p>"},{"location":"api/markup/css/properties/#overscrollbehaviorinlinekey","title":"OverscrollBehaviorInline.Key","text":"<pre><code>func (p OverscrollBehaviorInline) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#overscrollbehaviorinlineprocess","title":"OverscrollBehaviorInline.Process","text":"<pre><code>func (p OverscrollBehaviorInline) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#overscrollbehaviorx","title":"OverscrollBehaviorX","text":"<p><code>struct</code></p> <pre><code>type OverscrollBehaviorX struct{}\n</code></pre> <p>Specifies whether to have scroll chaining or overscroll affordance in x-direction</p>"},{"location":"api/markup/css/properties/#overscrollbehaviorxkey","title":"OverscrollBehaviorX.Key","text":"<pre><code>func (p OverscrollBehaviorX) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#overscrollbehaviorxprocess","title":"OverscrollBehaviorX.Process","text":"<pre><code>func (p OverscrollBehaviorX) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#overscrollbehaviory","title":"OverscrollBehaviorY","text":"<p><code>struct</code></p> <pre><code>type OverscrollBehaviorY struct{}\n</code></pre> <p>Specifies whether to have scroll chaining or overscroll affordance in y-directions</p>"},{"location":"api/markup/css/properties/#overscrollbehaviorykey","title":"OverscrollBehaviorY.Key","text":"<pre><code>func (p OverscrollBehaviorY) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#overscrollbehavioryprocess","title":"OverscrollBehaviorY.Process","text":"<pre><code>func (p OverscrollBehaviorY) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#padding","title":"Padding","text":"<p><code>struct</code></p> <pre><code>type Padding struct{}\n</code></pre> <p>A shorthand property for all the padding-* properties</p>"},{"location":"api/markup/css/properties/#paddingkey","title":"Padding.Key","text":"<pre><code>func (p Padding) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#paddingprocess","title":"Padding.Process","text":"<pre><code>func (p Padding) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>length|initial|inherit</p>"},{"location":"api/markup/css/properties/#paddingblock","title":"PaddingBlock","text":"<p><code>struct</code></p> <pre><code>type PaddingBlock struct{}\n</code></pre> <p>Specifies the padding in the block direction</p>"},{"location":"api/markup/css/properties/#paddingblockkey","title":"PaddingBlock.Key","text":"<pre><code>func (p PaddingBlock) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#paddingblockprocess","title":"PaddingBlock.Process","text":"<pre><code>func (p PaddingBlock) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#paddingblockend","title":"PaddingBlockEnd","text":"<p><code>struct</code></p> <pre><code>type PaddingBlockEnd struct{}\n</code></pre> <p>Specifies the padding at the end in the block direction</p>"},{"location":"api/markup/css/properties/#paddingblockendkey","title":"PaddingBlockEnd.Key","text":"<pre><code>func (p PaddingBlockEnd) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#paddingblockendprocess","title":"PaddingBlockEnd.Process","text":"<pre><code>func (p PaddingBlockEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#paddingblockstart","title":"PaddingBlockStart","text":"<p><code>struct</code></p> <pre><code>type PaddingBlockStart struct{}\n</code></pre> <p>Specifies the padding at the start in the block direction</p>"},{"location":"api/markup/css/properties/#paddingblockstartkey","title":"PaddingBlockStart.Key","text":"<pre><code>func (p PaddingBlockStart) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#paddingblockstartprocess","title":"PaddingBlockStart.Process","text":"<pre><code>func (p PaddingBlockStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#paddingbottom","title":"PaddingBottom","text":"<p><code>struct</code></p> <pre><code>type PaddingBottom struct{}\n</code></pre> <p>Sets the bottom padding of an element</p>"},{"location":"api/markup/css/properties/#paddingbottomkey","title":"PaddingBottom.Key","text":"<pre><code>func (p PaddingBottom) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#paddingbottomprocess","title":"PaddingBottom.Process","text":"<pre><code>func (p PaddingBottom) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>length|initial|inherit</p>"},{"location":"api/markup/css/properties/#paddinginline","title":"PaddingInline","text":"<p><code>struct</code></p> <pre><code>type PaddingInline struct{}\n</code></pre> <p>Specifies the padding in the inline direction</p>"},{"location":"api/markup/css/properties/#paddinginlinekey","title":"PaddingInline.Key","text":"<pre><code>func (p PaddingInline) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#paddinginlineprocess","title":"PaddingInline.Process","text":"<pre><code>func (p PaddingInline) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#paddinginlineend","title":"PaddingInlineEnd","text":"<p><code>struct</code></p> <pre><code>type PaddingInlineEnd struct{}\n</code></pre> <p>Specifies the padding at the end in the inline direction</p>"},{"location":"api/markup/css/properties/#paddinginlineendkey","title":"PaddingInlineEnd.Key","text":"<pre><code>func (p PaddingInlineEnd) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#paddinginlineendprocess","title":"PaddingInlineEnd.Process","text":"<pre><code>func (p PaddingInlineEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#paddinginlinestart","title":"PaddingInlineStart","text":"<p><code>struct</code></p> <pre><code>type PaddingInlineStart struct{}\n</code></pre> <p>Specifies the padding at the start in the inline direction</p>"},{"location":"api/markup/css/properties/#paddinginlinestartkey","title":"PaddingInlineStart.Key","text":"<pre><code>func (p PaddingInlineStart) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#paddinginlinestartprocess","title":"PaddingInlineStart.Process","text":"<pre><code>func (p PaddingInlineStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#paddingleft","title":"PaddingLeft","text":"<p><code>struct</code></p> <pre><code>type PaddingLeft struct{}\n</code></pre> <p>Sets the left padding of an element</p>"},{"location":"api/markup/css/properties/#paddingleftkey","title":"PaddingLeft.Key","text":"<pre><code>func (p PaddingLeft) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#paddingleftprocess","title":"PaddingLeft.Process","text":"<pre><code>func (p PaddingLeft) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>length|initial|inherit</p>"},{"location":"api/markup/css/properties/#paddingright","title":"PaddingRight","text":"<p><code>struct</code></p> <pre><code>type PaddingRight struct{}\n</code></pre> <p>Sets the right padding of an element</p>"},{"location":"api/markup/css/properties/#paddingrightkey","title":"PaddingRight.Key","text":"<pre><code>func (p PaddingRight) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#paddingrightprocess","title":"PaddingRight.Process","text":"<pre><code>func (p PaddingRight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>length|initial|inherit</p>"},{"location":"api/markup/css/properties/#paddingtop","title":"PaddingTop","text":"<p><code>struct</code></p> <pre><code>type PaddingTop struct{}\n</code></pre> <p>Sets the top padding of an element</p>"},{"location":"api/markup/css/properties/#paddingtopkey","title":"PaddingTop.Key","text":"<pre><code>func (p PaddingTop) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#paddingtopprocess","title":"PaddingTop.Process","text":"<pre><code>func (p PaddingTop) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>length|initial|inherit</p>"},{"location":"api/markup/css/properties/#pagebreakafter","title":"PageBreakAfter","text":"<p><code>struct</code></p> <pre><code>type PageBreakAfter struct{}\n</code></pre> <p>Sets the page-break behavior after an element</p>"},{"location":"api/markup/css/properties/#pagebreakafterkey","title":"PageBreakAfter.Key","text":"<pre><code>func (p PageBreakAfter) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#pagebreakafterprocess","title":"PageBreakAfter.Process","text":"<pre><code>func (p PageBreakAfter) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#pagebreakbefore","title":"PageBreakBefore","text":"<p><code>struct</code></p> <pre><code>type PageBreakBefore struct{}\n</code></pre> <p>Sets the page-break behavior before an element</p>"},{"location":"api/markup/css/properties/#pagebreakbeforekey","title":"PageBreakBefore.Key","text":"<pre><code>func (p PageBreakBefore) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#pagebreakbeforeprocess","title":"PageBreakBefore.Process","text":"<pre><code>func (p PageBreakBefore) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#pagebreakinside","title":"PageBreakInside","text":"<p><code>struct</code></p> <pre><code>type PageBreakInside struct{}\n</code></pre> <p>Sets the page-break behavior inside an element</p>"},{"location":"api/markup/css/properties/#pagebreakinsidekey","title":"PageBreakInside.Key","text":"<pre><code>func (p PageBreakInside) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#pagebreakinsideprocess","title":"PageBreakInside.Process","text":"<pre><code>func (p PageBreakInside) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#paintorder","title":"PaintOrder","text":"<p><code>struct</code></p> <pre><code>type PaintOrder struct{}\n</code></pre> <p>Sets the order of how an SVG element or text is painted.</p>"},{"location":"api/markup/css/properties/#paintorderkey","title":"PaintOrder.Key","text":"<pre><code>func (p PaintOrder) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#paintorderprocess","title":"PaintOrder.Process","text":"<pre><code>func (p PaintOrder) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#perspective","title":"Perspective","text":"<p><code>struct</code></p> <pre><code>type Perspective struct{}\n</code></pre> <p>Gives a 3D-positioned element some perspective</p>"},{"location":"api/markup/css/properties/#perspectivekey","title":"Perspective.Key","text":"<pre><code>func (p Perspective) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#perspectiveprocess","title":"Perspective.Process","text":"<pre><code>func (p Perspective) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#perspectiveorigin","title":"PerspectiveOrigin","text":"<p><code>struct</code></p> <pre><code>type PerspectiveOrigin struct{}\n</code></pre> <p>Defines at which position the user is looking at the 3D-positioned element</p>"},{"location":"api/markup/css/properties/#perspectiveoriginkey","title":"PerspectiveOrigin.Key","text":"<pre><code>func (p PerspectiveOrigin) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#perspectiveoriginprocess","title":"PerspectiveOrigin.Process","text":"<pre><code>func (p PerspectiveOrigin) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#placecontent","title":"PlaceContent","text":"<p><code>struct</code></p> <pre><code>type PlaceContent struct{}\n</code></pre> <p>Specifies align-content and justify-content property values for flexbox and grid layouts</p>"},{"location":"api/markup/css/properties/#placecontentkey","title":"PlaceContent.Key","text":"<pre><code>func (p PlaceContent) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#placecontentprocess","title":"PlaceContent.Process","text":"<pre><code>func (p PlaceContent) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#placeitems","title":"PlaceItems","text":"<p><code>struct</code></p> <pre><code>type PlaceItems struct{}\n</code></pre> <p>Specifies align-items and justify-items property values for grid layouts</p>"},{"location":"api/markup/css/properties/#placeitemskey","title":"PlaceItems.Key","text":"<pre><code>func (p PlaceItems) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#placeitemsprocess","title":"PlaceItems.Process","text":"<pre><code>func (p PlaceItems) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#placeself","title":"PlaceSelf","text":"<p><code>struct</code></p> <pre><code>type PlaceSelf struct{}\n</code></pre> <p>Specifies align-self and justify-self property values for grid layouts</p>"},{"location":"api/markup/css/properties/#placeselfkey","title":"PlaceSelf.Key","text":"<pre><code>func (p PlaceSelf) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#placeselfprocess","title":"PlaceSelf.Process","text":"<pre><code>func (p PlaceSelf) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#pointerevents","title":"PointerEvents","text":"<p><code>struct</code></p> <pre><code>type PointerEvents struct{}\n</code></pre> <p>Defines whether or not an element reacts to pointer events</p>"},{"location":"api/markup/css/properties/#pointereventskey","title":"PointerEvents.Key","text":"<pre><code>func (p PointerEvents) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#pointereventsprocess","title":"PointerEvents.Process","text":"<pre><code>func (p PointerEvents) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#position","title":"Position","text":"<p><code>struct</code></p> <pre><code>type Position struct{}\n</code></pre> <p>Specifies the type of positioning method used for an element (static, relative, absolute or fixed)</p>"},{"location":"api/markup/css/properties/#positionkey","title":"Position.Key","text":"<pre><code>func (p Position) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#positionprocess","title":"Position.Process","text":"<pre><code>func (p Position) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>static|absolute|fixed|relative|sticky|initial|inherit</p>"},{"location":"api/markup/css/properties/#property","title":"Property","text":"<p><code>interface</code></p> <pre><code>type Property interface {\n    Key() string\n    Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n}\n</code></pre>"},{"location":"api/markup/css/properties/#quotes","title":"Quotes","text":"<p><code>struct</code></p> <pre><code>type Quotes struct{}\n</code></pre> <p>Sets the type of quotation marks for embedded quotations</p>"},{"location":"api/markup/css/properties/#quoteskey","title":"Quotes.Key","text":"<pre><code>func (p Quotes) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#quotesprocess","title":"Quotes.Process","text":"<pre><code>func (p Quotes) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#resize","title":"Resize","text":"<p><code>struct</code></p> <pre><code>type Resize struct{}\n</code></pre> <p>Defines if (and how) an element is resizable by the user</p>"},{"location":"api/markup/css/properties/#resizekey","title":"Resize.Key","text":"<pre><code>func (p Resize) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#resizeprocess","title":"Resize.Process","text":"<pre><code>func (p Resize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#right","title":"Right","text":"<p><code>struct</code></p> <pre><code>type Right struct{}\n</code></pre> <p>Specifies the right position of a positioned element</p>"},{"location":"api/markup/css/properties/#rightkey","title":"Right.Key","text":"<pre><code>func (p Right) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#rightprocess","title":"Right.Process","text":"<pre><code>func (p Right) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>auto|length|initial|inherit</p>"},{"location":"api/markup/css/properties/#rotate","title":"Rotate","text":"<p><code>struct</code></p> <pre><code>type Rotate struct{}\n</code></pre> <p>Specifies the rotation of an element</p>"},{"location":"api/markup/css/properties/#rotatekey","title":"Rotate.Key","text":"<pre><code>func (p Rotate) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#rotateprocess","title":"Rotate.Process","text":"<pre><code>func (p Rotate) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#rowgap","title":"RowGap","text":"<p><code>struct</code></p> <pre><code>type RowGap struct{}\n</code></pre> <p>Specifies the gap between the grid rows</p>"},{"location":"api/markup/css/properties/#rowgapkey","title":"RowGap.Key","text":"<pre><code>func (p RowGap) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#rowgapprocess","title":"RowGap.Process","text":"<pre><code>func (p RowGap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scale","title":"Scale","text":"<p><code>struct</code></p> <pre><code>type Scale struct{}\n</code></pre> <p>Specifies the size of an element by scaling up or down</p>"},{"location":"api/markup/css/properties/#scalekey","title":"Scale.Key","text":"<pre><code>func (p Scale) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scaleprocess","title":"Scale.Process","text":"<pre><code>func (p Scale) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollbehavior","title":"ScrollBehavior","text":"<p><code>struct</code></p> <pre><code>type ScrollBehavior struct{}\n</code></pre> <p>Specifies whether to smoothly animate the scroll position in a scrollable box, instead of a straight jump</p>"},{"location":"api/markup/css/properties/#scrollbehaviorkey","title":"ScrollBehavior.Key","text":"<pre><code>func (p ScrollBehavior) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollbehaviorprocess","title":"ScrollBehavior.Process","text":"<pre><code>func (p ScrollBehavior) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmargin","title":"ScrollMargin","text":"<p><code>struct</code></p> <pre><code>type ScrollMargin struct{}\n</code></pre> <p>Specifies the margin between the snap position and the container</p>"},{"location":"api/markup/css/properties/#scrollmarginkey","title":"ScrollMargin.Key","text":"<pre><code>func (p ScrollMargin) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmarginprocess","title":"ScrollMargin.Process","text":"<pre><code>func (p ScrollMargin) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmarginblock","title":"ScrollMarginBlock","text":"<p><code>struct</code></p> <pre><code>type ScrollMarginBlock struct{}\n</code></pre> <p>Specifies the margin between the snap position and the container in the block direction</p>"},{"location":"api/markup/css/properties/#scrollmarginblockkey","title":"ScrollMarginBlock.Key","text":"<pre><code>func (p ScrollMarginBlock) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmarginblockprocess","title":"ScrollMarginBlock.Process","text":"<pre><code>func (p ScrollMarginBlock) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmarginblockend","title":"ScrollMarginBlockEnd","text":"<p><code>struct</code></p> <pre><code>type ScrollMarginBlockEnd struct{}\n</code></pre> <p>Specifies the end margin between the snap position and the container in the block direction</p>"},{"location":"api/markup/css/properties/#scrollmarginblockendkey","title":"ScrollMarginBlockEnd.Key","text":"<pre><code>func (p ScrollMarginBlockEnd) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmarginblockendprocess","title":"ScrollMarginBlockEnd.Process","text":"<pre><code>func (p ScrollMarginBlockEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmarginblockstart","title":"ScrollMarginBlockStart","text":"<p><code>struct</code></p> <pre><code>type ScrollMarginBlockStart struct{}\n</code></pre> <p>Specifies the start margin between the snap position and the container in the block direction</p>"},{"location":"api/markup/css/properties/#scrollmarginblockstartkey","title":"ScrollMarginBlockStart.Key","text":"<pre><code>func (p ScrollMarginBlockStart) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmarginblockstartprocess","title":"ScrollMarginBlockStart.Process","text":"<pre><code>func (p ScrollMarginBlockStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmarginbottom","title":"ScrollMarginBottom","text":"<p><code>struct</code></p> <pre><code>type ScrollMarginBottom struct{}\n</code></pre> <p>Specifies the margin between the snap position on the bottom side and the container</p>"},{"location":"api/markup/css/properties/#scrollmarginbottomkey","title":"ScrollMarginBottom.Key","text":"<pre><code>func (p ScrollMarginBottom) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmarginbottomprocess","title":"ScrollMarginBottom.Process","text":"<pre><code>func (p ScrollMarginBottom) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmargininline","title":"ScrollMarginInline","text":"<p><code>struct</code></p> <pre><code>type ScrollMarginInline struct{}\n</code></pre> <p>Specifies the margin between the snap position and the container in the inline direction</p>"},{"location":"api/markup/css/properties/#scrollmargininlinekey","title":"ScrollMarginInline.Key","text":"<pre><code>func (p ScrollMarginInline) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmargininlineprocess","title":"ScrollMarginInline.Process","text":"<pre><code>func (p ScrollMarginInline) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmargininlineend","title":"ScrollMarginInlineEnd","text":"<p><code>struct</code></p> <pre><code>type ScrollMarginInlineEnd struct{}\n</code></pre> <p>Specifies the end margin between the snap position and the container in the inline direction</p>"},{"location":"api/markup/css/properties/#scrollmargininlineendkey","title":"ScrollMarginInlineEnd.Key","text":"<pre><code>func (p ScrollMarginInlineEnd) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmargininlineendprocess","title":"ScrollMarginInlineEnd.Process","text":"<pre><code>func (p ScrollMarginInlineEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmargininlinestart","title":"ScrollMarginInlineStart","text":"<p><code>struct</code></p> <pre><code>type ScrollMarginInlineStart struct{}\n</code></pre> <p>Specifies the start margin between the snap position and the container in the inline direction</p>"},{"location":"api/markup/css/properties/#scrollmargininlinestartkey","title":"ScrollMarginInlineStart.Key","text":"<pre><code>func (p ScrollMarginInlineStart) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmargininlinestartprocess","title":"ScrollMarginInlineStart.Process","text":"<pre><code>func (p ScrollMarginInlineStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmarginleft","title":"ScrollMarginLeft","text":"<p><code>struct</code></p> <pre><code>type ScrollMarginLeft struct{}\n</code></pre> <p>Specifies the margin between the snap position on the left side and the container</p>"},{"location":"api/markup/css/properties/#scrollmarginleftkey","title":"ScrollMarginLeft.Key","text":"<pre><code>func (p ScrollMarginLeft) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmarginleftprocess","title":"ScrollMarginLeft.Process","text":"<pre><code>func (p ScrollMarginLeft) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmarginright","title":"ScrollMarginRight","text":"<p><code>struct</code></p> <pre><code>type ScrollMarginRight struct{}\n</code></pre> <p>Specifies the margin between the snap position on the right side and the container</p>"},{"location":"api/markup/css/properties/#scrollmarginrightkey","title":"ScrollMarginRight.Key","text":"<pre><code>func (p ScrollMarginRight) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmarginrightprocess","title":"ScrollMarginRight.Process","text":"<pre><code>func (p ScrollMarginRight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmargintop","title":"ScrollMarginTop","text":"<p><code>struct</code></p> <pre><code>type ScrollMarginTop struct{}\n</code></pre> <p>Specifies the margin between the snap position on the top side and the container</p>"},{"location":"api/markup/css/properties/#scrollmargintopkey","title":"ScrollMarginTop.Key","text":"<pre><code>func (p ScrollMarginTop) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollmargintopprocess","title":"ScrollMarginTop.Process","text":"<pre><code>func (p ScrollMarginTop) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpadding","title":"ScrollPadding","text":"<p><code>struct</code></p> <pre><code>type ScrollPadding struct{}\n</code></pre> <p>Specifies the distance from the container to the snap position on the child elements</p>"},{"location":"api/markup/css/properties/#scrollpaddingkey","title":"ScrollPadding.Key","text":"<pre><code>func (p ScrollPadding) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddingprocess","title":"ScrollPadding.Process","text":"<pre><code>func (p ScrollPadding) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddingblock","title":"ScrollPaddingBlock","text":"<p><code>struct</code></p> <pre><code>type ScrollPaddingBlock struct{}\n</code></pre> <p>Specifies the distance in block direction from the container to the snap position on the child elements</p>"},{"location":"api/markup/css/properties/#scrollpaddingblockkey","title":"ScrollPaddingBlock.Key","text":"<pre><code>func (p ScrollPaddingBlock) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddingblockprocess","title":"ScrollPaddingBlock.Process","text":"<pre><code>func (p ScrollPaddingBlock) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddingblockend","title":"ScrollPaddingBlockEnd","text":"<p><code>struct</code></p> <pre><code>type ScrollPaddingBlockEnd struct{}\n</code></pre> <p>Specifies the distance in block direction from the end of the container to the snap position on the child elements</p>"},{"location":"api/markup/css/properties/#scrollpaddingblockendkey","title":"ScrollPaddingBlockEnd.Key","text":"<pre><code>func (p ScrollPaddingBlockEnd) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddingblockendprocess","title":"ScrollPaddingBlockEnd.Process","text":"<pre><code>func (p ScrollPaddingBlockEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddingblockstart","title":"ScrollPaddingBlockStart","text":"<p><code>struct</code></p> <pre><code>type ScrollPaddingBlockStart struct{}\n</code></pre> <p>Specifies the distance in block direction from the start of the container to the snap position on the child elements</p>"},{"location":"api/markup/css/properties/#scrollpaddingblockstartkey","title":"ScrollPaddingBlockStart.Key","text":"<pre><code>func (p ScrollPaddingBlockStart) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddingblockstartprocess","title":"ScrollPaddingBlockStart.Process","text":"<pre><code>func (p ScrollPaddingBlockStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddingbottom","title":"ScrollPaddingBottom","text":"<p><code>struct</code></p> <pre><code>type ScrollPaddingBottom struct{}\n</code></pre> <p>Specifies the distance from the bottom of the container to the snap position on the child elements</p>"},{"location":"api/markup/css/properties/#scrollpaddingbottomkey","title":"ScrollPaddingBottom.Key","text":"<pre><code>func (p ScrollPaddingBottom) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddingbottomprocess","title":"ScrollPaddingBottom.Process","text":"<pre><code>func (p ScrollPaddingBottom) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddinginline","title":"ScrollPaddingInline","text":"<p><code>struct</code></p> <pre><code>type ScrollPaddingInline struct{}\n</code></pre> <p>Specifies the distance in inline direction from the container to the snap position on the child elements</p>"},{"location":"api/markup/css/properties/#scrollpaddinginlinekey","title":"ScrollPaddingInline.Key","text":"<pre><code>func (p ScrollPaddingInline) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddinginlineprocess","title":"ScrollPaddingInline.Process","text":"<pre><code>func (p ScrollPaddingInline) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddinginlineend","title":"ScrollPaddingInlineEnd","text":"<p><code>struct</code></p> <pre><code>type ScrollPaddingInlineEnd struct{}\n</code></pre> <p>Specifies the distance in inline direction from the end of the container to the snap position on the child elements</p>"},{"location":"api/markup/css/properties/#scrollpaddinginlineendkey","title":"ScrollPaddingInlineEnd.Key","text":"<pre><code>func (p ScrollPaddingInlineEnd) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddinginlineendprocess","title":"ScrollPaddingInlineEnd.Process","text":"<pre><code>func (p ScrollPaddingInlineEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddinginlinestart","title":"ScrollPaddingInlineStart","text":"<p><code>struct</code></p> <pre><code>type ScrollPaddingInlineStart struct{}\n</code></pre> <p>Specifies the distance in inline direction from the start of the container to the snap position on the child elements</p>"},{"location":"api/markup/css/properties/#scrollpaddinginlinestartkey","title":"ScrollPaddingInlineStart.Key","text":"<pre><code>func (p ScrollPaddingInlineStart) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddinginlinestartprocess","title":"ScrollPaddingInlineStart.Process","text":"<pre><code>func (p ScrollPaddingInlineStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddingleft","title":"ScrollPaddingLeft","text":"<p><code>struct</code></p> <pre><code>type ScrollPaddingLeft struct{}\n</code></pre> <p>Specifies the distance from the left side of the container to the snap position on the child elements</p>"},{"location":"api/markup/css/properties/#scrollpaddingleftkey","title":"ScrollPaddingLeft.Key","text":"<pre><code>func (p ScrollPaddingLeft) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddingleftprocess","title":"ScrollPaddingLeft.Process","text":"<pre><code>func (p ScrollPaddingLeft) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddingright","title":"ScrollPaddingRight","text":"<p><code>struct</code></p> <pre><code>type ScrollPaddingRight struct{}\n</code></pre> <p>Specifies the distance from the right side of the container to the snap position on the child elements</p>"},{"location":"api/markup/css/properties/#scrollpaddingrightkey","title":"ScrollPaddingRight.Key","text":"<pre><code>func (p ScrollPaddingRight) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddingrightprocess","title":"ScrollPaddingRight.Process","text":"<pre><code>func (p ScrollPaddingRight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddingtop","title":"ScrollPaddingTop","text":"<p><code>struct</code></p> <pre><code>type ScrollPaddingTop struct{}\n</code></pre> <p>Specifies the distance from the top of the container to the snap position on the child elements</p>"},{"location":"api/markup/css/properties/#scrollpaddingtopkey","title":"ScrollPaddingTop.Key","text":"<pre><code>func (p ScrollPaddingTop) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollpaddingtopprocess","title":"ScrollPaddingTop.Process","text":"<pre><code>func (p ScrollPaddingTop) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollsnapalign","title":"ScrollSnapAlign","text":"<p><code>struct</code></p> <pre><code>type ScrollSnapAlign struct{}\n</code></pre> <p>Specifies where to position elements when the user stops scrolling</p>"},{"location":"api/markup/css/properties/#scrollsnapalignkey","title":"ScrollSnapAlign.Key","text":"<pre><code>func (p ScrollSnapAlign) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollsnapalignprocess","title":"ScrollSnapAlign.Process","text":"<pre><code>func (p ScrollSnapAlign) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollsnapstop","title":"ScrollSnapStop","text":"<p><code>struct</code></p> <pre><code>type ScrollSnapStop struct{}\n</code></pre> <p>Specifies scroll behaviour after fast swipe on trackpad or touch screen</p>"},{"location":"api/markup/css/properties/#scrollsnapstopkey","title":"ScrollSnapStop.Key","text":"<pre><code>func (p ScrollSnapStop) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollsnapstopprocess","title":"ScrollSnapStop.Process","text":"<pre><code>func (p ScrollSnapStop) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollsnaptype","title":"ScrollSnapType","text":"<p><code>struct</code></p> <pre><code>type ScrollSnapType struct{}\n</code></pre> <p>Specifies how snap behaviour should be when scrolling</p>"},{"location":"api/markup/css/properties/#scrollsnaptypekey","title":"ScrollSnapType.Key","text":"<pre><code>func (p ScrollSnapType) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollsnaptypeprocess","title":"ScrollSnapType.Process","text":"<pre><code>func (p ScrollSnapType) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#scrollbarcolor","title":"ScrollbarColor","text":"<p><code>struct</code></p> <pre><code>type ScrollbarColor struct{}\n</code></pre> <p>Specifies the color of the scrollbar of an element</p>"},{"location":"api/markup/css/properties/#scrollbarcolorkey","title":"ScrollbarColor.Key","text":"<pre><code>func (p ScrollbarColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#scrollbarcolorprocess","title":"ScrollbarColor.Process","text":"<pre><code>func (p ScrollbarColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#tabsize","title":"TabSize","text":"<p><code>struct</code></p> <pre><code>type TabSize struct{}\n</code></pre> <p>Specifies the width of a tab character</p>"},{"location":"api/markup/css/properties/#tabsizekey","title":"TabSize.Key","text":"<pre><code>func (p TabSize) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#tabsizeprocess","title":"TabSize.Process","text":"<pre><code>func (p TabSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#tablelayout","title":"TableLayout","text":"<p><code>struct</code></p> <pre><code>type TableLayout struct{}\n</code></pre> <p>Defines the algorithm used to lay out table cells, rows, and columns</p>"},{"location":"api/markup/css/properties/#tablelayoutkey","title":"TableLayout.Key","text":"<pre><code>func (p TableLayout) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#tablelayoutprocess","title":"TableLayout.Process","text":"<pre><code>func (p TableLayout) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#textalign","title":"TextAlign","text":"<p><code>struct</code></p> <pre><code>type TextAlign struct{}\n</code></pre> <p>Specifies the horizontal alignment of text</p>"},{"location":"api/markup/css/properties/#textalignkey","title":"TextAlign.Key","text":"<pre><code>func (p TextAlign) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#textalignprocess","title":"TextAlign.Process","text":"<pre><code>func (p TextAlign) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>left|right|center|justify|initial|inherit</p>"},{"location":"api/markup/css/properties/#textalignlast","title":"TextAlignLast","text":"<p><code>struct</code></p> <pre><code>type TextAlignLast struct{}\n</code></pre> <p>Describes how the last line of a block or a line right before a forced line break is aligned when text-align is \"justify\"</p>"},{"location":"api/markup/css/properties/#textalignlastkey","title":"TextAlignLast.Key","text":"<pre><code>func (p TextAlignLast) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#textalignlastprocess","title":"TextAlignLast.Process","text":"<pre><code>func (p TextAlignLast) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#textcombineupright","title":"TextCombineUpright","text":"<p><code>struct</code></p> <pre><code>type TextCombineUpright struct{}\n</code></pre> <p>Specifies the combination of multiple characters into the space of a single character</p>"},{"location":"api/markup/css/properties/#textcombineuprightkey","title":"TextCombineUpright.Key","text":"<pre><code>func (p TextCombineUpright) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#textcombineuprightprocess","title":"TextCombineUpright.Process","text":"<pre><code>func (p TextCombineUpright) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#textdecoration","title":"TextDecoration","text":"<p><code>struct</code></p> <pre><code>type TextDecoration struct{}\n</code></pre> <p>Specifies the decoration added to text</p>"},{"location":"api/markup/css/properties/#textdecorationkey","title":"TextDecoration.Key","text":"<pre><code>func (p TextDecoration) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#textdecorationprocess","title":"TextDecoration.Process","text":"<pre><code>func (p TextDecoration) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#textdecorationcolor","title":"TextDecorationColor","text":"<p><code>struct</code></p> <pre><code>type TextDecorationColor struct{}\n</code></pre> <p>Specifies the color of the text-decoration</p>"},{"location":"api/markup/css/properties/#textdecorationcolorkey","title":"TextDecorationColor.Key","text":"<pre><code>func (p TextDecorationColor) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#textdecorationcolorprocess","title":"TextDecorationColor.Process","text":"<pre><code>func (p TextDecorationColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#textdecorationline","title":"TextDecorationLine","text":"<p><code>struct</code></p> <pre><code>type TextDecorationLine struct{}\n</code></pre> <p>Specifies the type of line in a text-decoration</p>"},{"location":"api/markup/css/properties/#textdecorationlinekey","title":"TextDecorationLine.Key","text":"<pre><code>func (p TextDecorationLine) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#textdecorationlineprocess","title":"TextDecorationLine.Process","text":"<pre><code>func (p TextDecorationLine) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#textdecorationstyle","title":"TextDecorationStyle","text":"<p><code>struct</code></p> <pre><code>type TextDecorationStyle struct{}\n</code></pre> <p>Specifies the style of the line in a text decoration</p>"},{"location":"api/markup/css/properties/#textdecorationstylekey","title":"TextDecorationStyle.Key","text":"<pre><code>func (p TextDecorationStyle) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#textdecorationstyleprocess","title":"TextDecorationStyle.Process","text":"<pre><code>func (p TextDecorationStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#textdecorationthickness","title":"TextDecorationThickness","text":"<p><code>struct</code></p> <pre><code>type TextDecorationThickness struct{}\n</code></pre> <p>Specifies the thickness of the decoration line</p>"},{"location":"api/markup/css/properties/#textdecorationthicknesskey","title":"TextDecorationThickness.Key","text":"<pre><code>func (p TextDecorationThickness) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#textdecorationthicknessprocess","title":"TextDecorationThickness.Process","text":"<pre><code>func (p TextDecorationThickness) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#textemphasis","title":"TextEmphasis","text":"<p><code>struct</code></p> <pre><code>type TextEmphasis struct{}\n</code></pre> <p>Applies emphasis marks to text</p>"},{"location":"api/markup/css/properties/#textemphasiskey","title":"TextEmphasis.Key","text":"<pre><code>func (p TextEmphasis) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#textemphasisprocess","title":"TextEmphasis.Process","text":"<pre><code>func (p TextEmphasis) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#textindent","title":"TextIndent","text":"<p><code>struct</code></p> <pre><code>type TextIndent struct{}\n</code></pre> <p>Specifies the indentation of the first line in a text-block</p>"},{"location":"api/markup/css/properties/#textindentkey","title":"TextIndent.Key","text":"<pre><code>func (p TextIndent) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#textindentprocess","title":"TextIndent.Process","text":"<pre><code>func (p TextIndent) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#textjustify","title":"TextJustify","text":"<p><code>struct</code></p> <pre><code>type TextJustify struct{}\n</code></pre> <p>Specifies the justification method used when text-align is \"justify\"</p>"},{"location":"api/markup/css/properties/#textjustifykey","title":"TextJustify.Key","text":"<pre><code>func (p TextJustify) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#textjustifyprocess","title":"TextJustify.Process","text":"<pre><code>func (p TextJustify) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#textorientation","title":"TextOrientation","text":"<p><code>struct</code></p> <pre><code>type TextOrientation struct{}\n</code></pre> <p>Defines the orientation of characters in a line</p>"},{"location":"api/markup/css/properties/#textorientationkey","title":"TextOrientation.Key","text":"<pre><code>func (p TextOrientation) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#textorientationprocess","title":"TextOrientation.Process","text":"<pre><code>func (p TextOrientation) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#textoverflow","title":"TextOverflow","text":"<p><code>struct</code></p> <pre><code>type TextOverflow struct{}\n</code></pre> <p>Specifies what should happen when text overflows the containing element</p>"},{"location":"api/markup/css/properties/#textoverflowkey","title":"TextOverflow.Key","text":"<pre><code>func (p TextOverflow) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#textoverflowprocess","title":"TextOverflow.Process","text":"<pre><code>func (p TextOverflow) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#textshadow","title":"TextShadow","text":"<p><code>struct</code></p> <pre><code>type TextShadow struct{}\n</code></pre> <p>Adds shadow to text</p>"},{"location":"api/markup/css/properties/#textshadowkey","title":"TextShadow.Key","text":"<pre><code>func (p TextShadow) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#textshadowprocess","title":"TextShadow.Process","text":"<pre><code>func (p TextShadow) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#texttransform","title":"TextTransform","text":"<p><code>struct</code></p> <pre><code>type TextTransform struct{}\n</code></pre> <p>Controls the capitalization of text</p>"},{"location":"api/markup/css/properties/#texttransformkey","title":"TextTransform.Key","text":"<pre><code>func (p TextTransform) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#texttransformprocess","title":"TextTransform.Process","text":"<pre><code>func (p TextTransform) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#textunderlineposition","title":"TextUnderlinePosition","text":"<p><code>struct</code></p> <pre><code>type TextUnderlinePosition struct{}\n</code></pre> <p>Specifies the position of the underline which is set using the text-decoration property</p>"},{"location":"api/markup/css/properties/#textunderlinepositionkey","title":"TextUnderlinePosition.Key","text":"<pre><code>func (p TextUnderlinePosition) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#textunderlinepositionprocess","title":"TextUnderlinePosition.Process","text":"<pre><code>func (p TextUnderlinePosition) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#top","title":"Top","text":"<p><code>struct</code></p> <pre><code>type Top struct{}\n</code></pre> <p>Specifies the top position of a positioned element</p>"},{"location":"api/markup/css/properties/#topkey","title":"Top.Key","text":"<pre><code>func (p Top) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#topprocess","title":"Top.Process","text":"<pre><code>func (p Top) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>auto|length|initial|inherit</p>"},{"location":"api/markup/css/properties/#transform","title":"Transform","text":"<p><code>struct</code></p> <pre><code>type Transform struct{}\n</code></pre> <p>Applies a 2D or 3D transformation to an element</p>"},{"location":"api/markup/css/properties/#transformkey","title":"Transform.Key","text":"<pre><code>func (p Transform) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#transformprocess","title":"Transform.Process","text":"<pre><code>func (p Transform) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>none|transform-functions|initial|inherit</p>"},{"location":"api/markup/css/properties/#transformorigin","title":"TransformOrigin","text":"<p><code>struct</code></p> <pre><code>type TransformOrigin struct{}\n</code></pre> <p>Allows you to change the position on transformed elements</p>"},{"location":"api/markup/css/properties/#transformoriginkey","title":"TransformOrigin.Key","text":"<pre><code>func (p TransformOrigin) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#transformoriginprocess","title":"TransformOrigin.Process","text":"<pre><code>func (p TransformOrigin) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#transformstyle","title":"TransformStyle","text":"<p><code>struct</code></p> <pre><code>type TransformStyle struct{}\n</code></pre> <p>Specifies how nested elements are rendered in 3D space</p>"},{"location":"api/markup/css/properties/#transformstylekey","title":"TransformStyle.Key","text":"<pre><code>func (p TransformStyle) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#transformstyleprocess","title":"TransformStyle.Process","text":"<pre><code>func (p TransformStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#transition","title":"Transition","text":"<p><code>struct</code></p> <pre><code>type Transition struct{}\n</code></pre> <p>A shorthand property for all the transition-* properties</p>"},{"location":"api/markup/css/properties/#transitionkey","title":"Transition.Key","text":"<pre><code>func (p Transition) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#transitionprocess","title":"Transition.Process","text":"<pre><code>func (p Transition) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#transitiondelay","title":"TransitionDelay","text":"<p><code>struct</code></p> <pre><code>type TransitionDelay struct{}\n</code></pre> <p>Specifies when the transition effect will start</p>"},{"location":"api/markup/css/properties/#transitiondelaykey","title":"TransitionDelay.Key","text":"<pre><code>func (p TransitionDelay) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#transitiondelayprocess","title":"TransitionDelay.Process","text":"<pre><code>func (p TransitionDelay) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#transitionduration","title":"TransitionDuration","text":"<p><code>struct</code></p> <pre><code>type TransitionDuration struct{}\n</code></pre> <p>Specifies how many seconds or milliseconds a transition effect takes to complete</p>"},{"location":"api/markup/css/properties/#transitiondurationkey","title":"TransitionDuration.Key","text":"<pre><code>func (p TransitionDuration) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#transitiondurationprocess","title":"TransitionDuration.Process","text":"<pre><code>func (p TransitionDuration) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#transitionproperty","title":"TransitionProperty","text":"<p><code>struct</code></p> <pre><code>type TransitionProperty struct{}\n</code></pre> <p>Specifies the name of the CSS property the transition effect is for</p>"},{"location":"api/markup/css/properties/#transitionpropertykey","title":"TransitionProperty.Key","text":"<pre><code>func (p TransitionProperty) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#transitionpropertyprocess","title":"TransitionProperty.Process","text":"<pre><code>func (p TransitionProperty) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#transitiontimingfunction","title":"TransitionTimingFunction","text":"<p><code>struct</code></p> <pre><code>type TransitionTimingFunction struct{}\n</code></pre> <p>Specifies the speed curve of the transition effect</p>"},{"location":"api/markup/css/properties/#transitiontimingfunctionkey","title":"TransitionTimingFunction.Key","text":"<pre><code>func (p TransitionTimingFunction) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#transitiontimingfunctionprocess","title":"TransitionTimingFunction.Process","text":"<pre><code>func (p TransitionTimingFunction) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#translate","title":"Translate","text":"<p><code>struct</code></p> <pre><code>type Translate struct{}\n</code></pre> <p>Specifies the position of an element</p>"},{"location":"api/markup/css/properties/#translatekey","title":"Translate.Key","text":"<pre><code>func (p Translate) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#translateprocess","title":"Translate.Process","text":"<pre><code>func (p Translate) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#unicodebidi","title":"UnicodeBidi","text":"<p><code>struct</code></p> <pre><code>type UnicodeBidi struct{}\n</code></pre> <p>Used together with the direction property to set or return whether the text should be overridden to support multiple languages in the same document</p>"},{"location":"api/markup/css/properties/#unicodebidikey","title":"UnicodeBidi.Key","text":"<pre><code>func (p UnicodeBidi) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#unicodebidiprocess","title":"UnicodeBidi.Process","text":"<pre><code>func (p UnicodeBidi) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#userselect","title":"UserSelect","text":"<p><code>struct</code></p> <pre><code>type UserSelect struct{}\n</code></pre> <p>Specifies whether the text of an element can be selected</p>"},{"location":"api/markup/css/properties/#userselectkey","title":"UserSelect.Key","text":"<pre><code>func (p UserSelect) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#userselectprocess","title":"UserSelect.Process","text":"<pre><code>func (p UserSelect) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#verticalalign","title":"VerticalAlign","text":"<p><code>struct</code></p> <pre><code>type VerticalAlign struct{}\n</code></pre> <p>Sets the vertical alignment of an element</p>"},{"location":"api/markup/css/properties/#verticalalignkey","title":"VerticalAlign.Key","text":"<pre><code>func (p VerticalAlign) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#verticalalignprocess","title":"VerticalAlign.Process","text":"<pre><code>func (p VerticalAlign) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#visibility","title":"Visibility","text":"<p><code>struct</code></p> <pre><code>type Visibility struct{}\n</code></pre> <p>Specifies whether or not an element is visible</p>"},{"location":"api/markup/css/properties/#visibilitykey","title":"Visibility.Key","text":"<pre><code>func (p Visibility) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#visibilityprocess","title":"Visibility.Process","text":"<pre><code>func (p Visibility) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre> <p>visibility: visible|hidden|collapse|initial|inherit;</p>"},{"location":"api/markup/css/properties/#whitespace","title":"WhiteSpace","text":"<p><code>struct</code></p> <pre><code>type WhiteSpace struct{}\n</code></pre> <p>Specifies how white-space inside an element is handled</p>"},{"location":"api/markup/css/properties/#whitespacekey","title":"WhiteSpace.Key","text":"<pre><code>func (p WhiteSpace) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#whitespaceprocess","title":"WhiteSpace.Process","text":"<pre><code>func (p WhiteSpace) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#widows","title":"Widows","text":"<p><code>struct</code></p> <pre><code>type Widows struct{}\n</code></pre> <p>Sets the minimum number of lines that must be left at the top of a page or column</p>"},{"location":"api/markup/css/properties/#widowskey","title":"Widows.Key","text":"<pre><code>func (p Widows) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#widowsprocess","title":"Widows.Process","text":"<pre><code>func (p Widows) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#width","title":"Width","text":"<p><code>struct</code></p> <pre><code>type Width struct{}\n</code></pre> <p>Sets the width of an element</p>"},{"location":"api/markup/css/properties/#widthkey","title":"Width.Key","text":"<pre><code>func (p Width) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#widthprocess","title":"Width.Process","text":"<pre><code>func (p Width) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#wordbreak","title":"WordBreak","text":"<p><code>struct</code></p> <pre><code>type WordBreak struct{}\n</code></pre> <p>Specifies how words should break when reaching the end of a line</p>"},{"location":"api/markup/css/properties/#wordbreakkey","title":"WordBreak.Key","text":"<pre><code>func (p WordBreak) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#wordbreakprocess","title":"WordBreak.Process","text":"<pre><code>func (p WordBreak) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#wordspacing","title":"WordSpacing","text":"<p><code>struct</code></p> <pre><code>type WordSpacing struct{}\n</code></pre> <p>Increases or decreases the space between words in a text</p>"},{"location":"api/markup/css/properties/#wordspacingkey","title":"WordSpacing.Key","text":"<pre><code>func (p WordSpacing) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#wordspacingprocess","title":"WordSpacing.Process","text":"<pre><code>func (p WordSpacing) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#wordwrap","title":"WordWrap","text":"<p><code>struct</code></p> <pre><code>type WordWrap struct{}\n</code></pre> <p>Allows long, unbreakable words to be broken and wrap to the next line</p>"},{"location":"api/markup/css/properties/#wordwrapkey","title":"WordWrap.Key","text":"<pre><code>func (p WordWrap) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#wordwrapprocess","title":"WordWrap.Process","text":"<pre><code>func (p WordWrap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#writingmode","title":"WritingMode","text":"<p><code>struct</code></p> <pre><code>type WritingMode struct{}\n</code></pre> <p>Specifies whether lines of text are laid out horizontally or vertically</p>"},{"location":"api/markup/css/properties/#writingmodekey","title":"WritingMode.Key","text":"<pre><code>func (p WritingMode) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#writingmodeprocess","title":"WritingMode.Process","text":"<pre><code>func (p WritingMode) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/properties/#zindex","title":"ZIndex","text":"<p><code>struct</code></p> <pre><code>type ZIndex struct{}\n</code></pre> <p>Sets the stack order of a positioned element</p>"},{"location":"api/markup/css/properties/#zindexkey","title":"ZIndex.Key","text":"<pre><code>func (p ZIndex) Key() string\n</code></pre>"},{"location":"api/markup/css/properties/#zindexprocess","title":"ZIndex.Process","text":"<pre><code>func (p ZIndex) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error\n</code></pre>"},{"location":"api/markup/css/pseudos/","title":"package pseudos","text":"<pre><code>import \"kaiju/markup/css/pseudos\"\n</code></pre>"},{"location":"api/markup/css/pseudos/#variables","title":"Variables","text":""},{"location":"api/markup/css/pseudos/#pseudomap","title":"PseudoMap","text":"<pre><code>map[string]Pseudo{\n    \"active\":             Active{},\n    \"any-link\":           AnyLink{},\n    \"autofill\":           Autofill{},\n    \"blank\":              Blank{},\n    \"checked\":            Checked{},\n    \"current\":            Current{},\n    \"default\":            Default{},\n    \"defined\":            Defined{},\n    \"dir\":                Dir{},\n    \"disabled\":           Disabled{},\n    \"empty\":              Empty{},\n    \"enabled\":            Enabled{},\n    \"first\":              First{},\n    \"first-child\":        FirstChild{},\n    \"first-of-type\":      FirstOfType{},\n    \"fullscreen\":         Fullscreen{},\n    \"future\":             Future{},\n    \"focus\":              Focus{},\n    \"focus-visible\":      FocusVisible{},\n    \"focus-within\":       FocusWithin{},\n    \"has\":                Has{},\n    \"host\":               Host{},\n    \"host-context\":       HostContext{},\n    \"hover\":              Hover{},\n    \"indeterminate\":      Indeterminate{},\n    \"in-range\":           InRange{},\n    \"invalid\":            Invalid{},\n    \"is\":                 Is{},\n    \"lang\":               Lang{},\n    \"last-child\":         LastChild{},\n    \"last-of-type\":       LastOfType{},\n    \"left\":               Left{},\n    \"link\":               Link{},\n    \"local-link\":         LocalLink{},\n    \"modal\":              Modal{},\n    \"not\":                Not{},\n    \"nth-child\":          NthChild{},\n    \"nth-col\":            NthCol{},\n    \"nth-last-child\":     NthLastChild{},\n    \"nth-last-col\":       NthLastCol{},\n    \"nth-last-of-type\":   NthLastOfType{},\n    \"nth-of-type\":        NthOfType{},\n    \"only-child\":         OnlyChild{},\n    \"only-of-type\":       OnlyOfType{},\n    \"optional\":           Optional{},\n    \"out-of-range\":       OutOfRange{},\n    \"past\":               Past{},\n    \"picture-in-picture\": PictureInPicture{},\n    \"placeholder-shown\":  PlaceholderShown{},\n    \"paused\":             Paused{},\n    \"playing\":            Playing{},\n    \"read-only\":          ReadOnly{},\n    \"read-write\":         ReadWrite{},\n    \"required\":           Required{},\n    \"right\":              Right{},\n    \"root\":               Root{},\n    \"scope\":              Scope{},\n    \"state\":              State{},\n    \"target\":             Target{},\n    \"target-within\":      TargetWithin{},\n    \"user-invalid\":       UserInvalid{},\n    \"valid\":              Valid{},\n    \"visited\":            Visited{},\n    \"where\":              Where{},\n}\n</code></pre>"},{"location":"api/markup/css/pseudos/#types","title":"Types","text":""},{"location":"api/markup/css/pseudos/#active","title":"Active","text":"<p><code>struct</code></p> <pre><code>type Active struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:active</p>"},{"location":"api/markup/css/pseudos/#activealterrules","title":"Active.AlterRules","text":"<pre><code>func (p Active) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#activeisfunction","title":"Active.IsFunction","text":"<pre><code>func (p Active) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#activekey","title":"Active.Key","text":"<pre><code>func (p Active) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#activeprocess","title":"Active.Process","text":"<pre><code>func (p Active) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#anylink","title":"AnyLink","text":"<p><code>struct</code></p> <pre><code>type AnyLink struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:any-link</p>"},{"location":"api/markup/css/pseudos/#anylinkalterrules","title":"AnyLink.AlterRules","text":"<pre><code>func (p AnyLink) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#anylinkisfunction","title":"AnyLink.IsFunction","text":"<pre><code>func (p AnyLink) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#anylinkkey","title":"AnyLink.Key","text":"<pre><code>func (p AnyLink) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#anylinkprocess","title":"AnyLink.Process","text":"<pre><code>func (p AnyLink) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#autofill","title":"Autofill","text":"<p><code>struct</code></p> <pre><code>type Autofill struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:autofill</p>"},{"location":"api/markup/css/pseudos/#autofillalterrules","title":"Autofill.AlterRules","text":"<pre><code>func (p Autofill) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#autofillisfunction","title":"Autofill.IsFunction","text":"<pre><code>func (p Autofill) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#autofillkey","title":"Autofill.Key","text":"<pre><code>func (p Autofill) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#autofillprocess","title":"Autofill.Process","text":"<pre><code>func (p Autofill) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#blank","title":"Blank","text":"<p><code>struct</code></p> <pre><code>type Blank struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:blank</p>"},{"location":"api/markup/css/pseudos/#blankalterrules","title":"Blank.AlterRules","text":"<pre><code>func (p Blank) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#blankisfunction","title":"Blank.IsFunction","text":"<pre><code>func (p Blank) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#blankkey","title":"Blank.Key","text":"<pre><code>func (p Blank) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#blankprocess","title":"Blank.Process","text":"<pre><code>func (p Blank) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#checked","title":"Checked","text":"<p><code>struct</code></p> <pre><code>type Checked struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:checked</p>"},{"location":"api/markup/css/pseudos/#checkedalterrules","title":"Checked.AlterRules","text":"<pre><code>func (p Checked) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#checkedisfunction","title":"Checked.IsFunction","text":"<pre><code>func (p Checked) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#checkedkey","title":"Checked.Key","text":"<pre><code>func (p Checked) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#checkedprocess","title":"Checked.Process","text":"<pre><code>func (p Checked) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#current","title":"Current","text":"<p><code>struct</code></p> <pre><code>type Current struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:current</p>"},{"location":"api/markup/css/pseudos/#currentalterrules","title":"Current.AlterRules","text":"<pre><code>func (p Current) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#currentisfunction","title":"Current.IsFunction","text":"<pre><code>func (p Current) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#currentkey","title":"Current.Key","text":"<pre><code>func (p Current) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#currentprocess","title":"Current.Process","text":"<pre><code>func (p Current) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#default","title":"Default","text":"<p><code>struct</code></p> <pre><code>type Default struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:default</p>"},{"location":"api/markup/css/pseudos/#defaultalterrules","title":"Default.AlterRules","text":"<pre><code>func (p Default) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#defaultisfunction","title":"Default.IsFunction","text":"<pre><code>func (p Default) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#defaultkey","title":"Default.Key","text":"<pre><code>func (p Default) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#defaultprocess","title":"Default.Process","text":"<pre><code>func (p Default) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#defined","title":"Defined","text":"<p><code>struct</code></p> <pre><code>type Defined struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:defined</p>"},{"location":"api/markup/css/pseudos/#definedalterrules","title":"Defined.AlterRules","text":"<pre><code>func (p Defined) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#definedisfunction","title":"Defined.IsFunction","text":"<pre><code>func (p Defined) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#definedkey","title":"Defined.Key","text":"<pre><code>func (p Defined) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#definedprocess","title":"Defined.Process","text":"<pre><code>func (p Defined) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#dir","title":"Dir","text":"<p><code>struct</code></p> <pre><code>type Dir struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:dir</p>"},{"location":"api/markup/css/pseudos/#diralterrules","title":"Dir.AlterRules","text":"<pre><code>func (p Dir) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#dirisfunction","title":"Dir.IsFunction","text":"<pre><code>func (p Dir) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#dirkey","title":"Dir.Key","text":"<pre><code>func (p Dir) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#dirprocess","title":"Dir.Process","text":"<pre><code>func (p Dir) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#disabled","title":"Disabled","text":"<p><code>struct</code></p> <pre><code>type Disabled struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:disabled</p>"},{"location":"api/markup/css/pseudos/#disabledalterrules","title":"Disabled.AlterRules","text":"<pre><code>func (p Disabled) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#disabledisfunction","title":"Disabled.IsFunction","text":"<pre><code>func (p Disabled) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#disabledkey","title":"Disabled.Key","text":"<pre><code>func (p Disabled) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#disabledprocess","title":"Disabled.Process","text":"<pre><code>func (p Disabled) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#empty","title":"Empty","text":"<p><code>struct</code></p> <pre><code>type Empty struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:empty</p>"},{"location":"api/markup/css/pseudos/#emptyalterrules","title":"Empty.AlterRules","text":"<pre><code>func (p Empty) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#emptyisfunction","title":"Empty.IsFunction","text":"<pre><code>func (p Empty) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#emptykey","title":"Empty.Key","text":"<pre><code>func (p Empty) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#emptyprocess","title":"Empty.Process","text":"<pre><code>func (p Empty) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#enabled","title":"Enabled","text":"<p><code>struct</code></p> <pre><code>type Enabled struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:enabled</p>"},{"location":"api/markup/css/pseudos/#enabledalterrules","title":"Enabled.AlterRules","text":"<pre><code>func (p Enabled) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#enabledisfunction","title":"Enabled.IsFunction","text":"<pre><code>func (p Enabled) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#enabledkey","title":"Enabled.Key","text":"<pre><code>func (p Enabled) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#enabledprocess","title":"Enabled.Process","text":"<pre><code>func (p Enabled) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#first","title":"First","text":"<p><code>struct</code></p> <pre><code>type First struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:first</p>"},{"location":"api/markup/css/pseudos/#firstalterrules","title":"First.AlterRules","text":"<pre><code>func (p First) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#firstisfunction","title":"First.IsFunction","text":"<pre><code>func (p First) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#firstkey","title":"First.Key","text":"<pre><code>func (p First) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#firstprocess","title":"First.Process","text":"<pre><code>func (p First) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#firstchild","title":"FirstChild","text":"<p><code>struct</code></p> <pre><code>type FirstChild struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:first-child</p>"},{"location":"api/markup/css/pseudos/#firstchildalterrules","title":"FirstChild.AlterRules","text":"<pre><code>func (p FirstChild) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#firstchildisfunction","title":"FirstChild.IsFunction","text":"<pre><code>func (p FirstChild) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#firstchildkey","title":"FirstChild.Key","text":"<pre><code>func (p FirstChild) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#firstchildprocess","title":"FirstChild.Process","text":"<pre><code>func (p FirstChild) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#firstoftype","title":"FirstOfType","text":"<p><code>struct</code></p> <pre><code>type FirstOfType struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:first-of-type</p>"},{"location":"api/markup/css/pseudos/#firstoftypealterrules","title":"FirstOfType.AlterRules","text":"<pre><code>func (p FirstOfType) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#firstoftypeisfunction","title":"FirstOfType.IsFunction","text":"<pre><code>func (p FirstOfType) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#firstoftypekey","title":"FirstOfType.Key","text":"<pre><code>func (p FirstOfType) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#firstoftypeprocess","title":"FirstOfType.Process","text":"<pre><code>func (p FirstOfType) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#focus","title":"Focus","text":"<p><code>struct</code></p> <pre><code>type Focus struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:focus</p>"},{"location":"api/markup/css/pseudos/#focusalterrules","title":"Focus.AlterRules","text":"<pre><code>func (p Focus) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#focusisfunction","title":"Focus.IsFunction","text":"<pre><code>func (p Focus) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#focuskey","title":"Focus.Key","text":"<pre><code>func (p Focus) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#focusprocess","title":"Focus.Process","text":"<pre><code>func (p Focus) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#focusvisible","title":"FocusVisible","text":"<p><code>struct</code></p> <pre><code>type FocusVisible struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible</p>"},{"location":"api/markup/css/pseudos/#focusvisiblealterrules","title":"FocusVisible.AlterRules","text":"<pre><code>func (p FocusVisible) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#focusvisibleisfunction","title":"FocusVisible.IsFunction","text":"<pre><code>func (p FocusVisible) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#focusvisiblekey","title":"FocusVisible.Key","text":"<pre><code>func (p FocusVisible) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#focusvisibleprocess","title":"FocusVisible.Process","text":"<pre><code>func (p FocusVisible) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#focuswithin","title":"FocusWithin","text":"<p><code>struct</code></p> <pre><code>type FocusWithin struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-within</p>"},{"location":"api/markup/css/pseudos/#focuswithinalterrules","title":"FocusWithin.AlterRules","text":"<pre><code>func (p FocusWithin) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#focuswithinisfunction","title":"FocusWithin.IsFunction","text":"<pre><code>func (p FocusWithin) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#focuswithinkey","title":"FocusWithin.Key","text":"<pre><code>func (p FocusWithin) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#focuswithinprocess","title":"FocusWithin.Process","text":"<pre><code>func (p FocusWithin) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#fullscreen","title":"Fullscreen","text":"<p><code>struct</code></p> <pre><code>type Fullscreen struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:fullscreen</p>"},{"location":"api/markup/css/pseudos/#fullscreenalterrules","title":"Fullscreen.AlterRules","text":"<pre><code>func (p Fullscreen) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#fullscreenisfunction","title":"Fullscreen.IsFunction","text":"<pre><code>func (p Fullscreen) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#fullscreenkey","title":"Fullscreen.Key","text":"<pre><code>func (p Fullscreen) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#fullscreenprocess","title":"Fullscreen.Process","text":"<pre><code>func (p Fullscreen) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#future","title":"Future","text":"<p><code>struct</code></p> <pre><code>type Future struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:future</p>"},{"location":"api/markup/css/pseudos/#futurealterrules","title":"Future.AlterRules","text":"<pre><code>func (p Future) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#futureisfunction","title":"Future.IsFunction","text":"<pre><code>func (p Future) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#futurekey","title":"Future.Key","text":"<pre><code>func (p Future) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#futureprocess","title":"Future.Process","text":"<pre><code>func (p Future) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#has","title":"Has","text":"<p><code>struct</code></p> <pre><code>type Has struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:has</p>"},{"location":"api/markup/css/pseudos/#hasalterrules","title":"Has.AlterRules","text":"<pre><code>func (p Has) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#hasisfunction","title":"Has.IsFunction","text":"<pre><code>func (p Has) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#haskey","title":"Has.Key","text":"<pre><code>func (p Has) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#hasprocess","title":"Has.Process","text":"<pre><code>func (p Has) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#host","title":"Host","text":"<p><code>struct</code></p> <pre><code>type Host struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:host</p>"},{"location":"api/markup/css/pseudos/#hostalterrules","title":"Host.AlterRules","text":"<pre><code>func (p Host) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#hostisfunction","title":"Host.IsFunction","text":"<pre><code>func (p Host) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#hostkey","title":"Host.Key","text":"<pre><code>func (p Host) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#hostprocess","title":"Host.Process","text":"<pre><code>func (p Host) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#hostcontext","title":"HostContext","text":"<p><code>struct</code></p> <pre><code>type HostContext struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:host-context</p>"},{"location":"api/markup/css/pseudos/#hostcontextalterrules","title":"HostContext.AlterRules","text":"<pre><code>func (p HostContext) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#hostcontextisfunction","title":"HostContext.IsFunction","text":"<pre><code>func (p HostContext) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#hostcontextkey","title":"HostContext.Key","text":"<pre><code>func (p HostContext) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#hostcontextprocess","title":"HostContext.Process","text":"<pre><code>func (p HostContext) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#hover","title":"Hover","text":"<p><code>struct</code></p> <pre><code>type Hover struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:hover</p>"},{"location":"api/markup/css/pseudos/#hoveralterrules","title":"Hover.AlterRules","text":"<pre><code>func (p Hover) AlterRules(inRules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#hoverisfunction","title":"Hover.IsFunction","text":"<pre><code>func (p Hover) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#hoverkey","title":"Hover.Key","text":"<pre><code>func (p Hover) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#hoverprocess","title":"Hover.Process","text":"<pre><code>func (p Hover) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#inrange","title":"InRange","text":"<p><code>struct</code></p> <pre><code>type InRange struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:in-range</p>"},{"location":"api/markup/css/pseudos/#inrangealterrules","title":"InRange.AlterRules","text":"<pre><code>func (p InRange) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#inrangeisfunction","title":"InRange.IsFunction","text":"<pre><code>func (p InRange) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#inrangekey","title":"InRange.Key","text":"<pre><code>func (p InRange) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#inrangeprocess","title":"InRange.Process","text":"<pre><code>func (p InRange) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#indeterminate","title":"Indeterminate","text":"<p><code>struct</code></p> <pre><code>type Indeterminate struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:indeterminate</p>"},{"location":"api/markup/css/pseudos/#indeterminatealterrules","title":"Indeterminate.AlterRules","text":"<pre><code>func (p Indeterminate) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#indeterminateisfunction","title":"Indeterminate.IsFunction","text":"<pre><code>func (p Indeterminate) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#indeterminatekey","title":"Indeterminate.Key","text":"<pre><code>func (p Indeterminate) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#indeterminateprocess","title":"Indeterminate.Process","text":"<pre><code>func (p Indeterminate) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#invalid","title":"Invalid","text":"<p><code>struct</code></p> <pre><code>type Invalid struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid</p>"},{"location":"api/markup/css/pseudos/#invalidalterrules","title":"Invalid.AlterRules","text":"<pre><code>func (p Invalid) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#invalidisfunction","title":"Invalid.IsFunction","text":"<pre><code>func (p Invalid) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#invalidkey","title":"Invalid.Key","text":"<pre><code>func (p Invalid) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#invalidprocess","title":"Invalid.Process","text":"<pre><code>func (p Invalid) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#is","title":"Is","text":"<p><code>struct</code></p> <pre><code>type Is struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:is</p>"},{"location":"api/markup/css/pseudos/#isalterrules","title":"Is.AlterRules","text":"<pre><code>func (p Is) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#isisfunction","title":"Is.IsFunction","text":"<pre><code>func (p Is) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#iskey","title":"Is.Key","text":"<pre><code>func (p Is) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#isprocess","title":"Is.Process","text":"<pre><code>func (p Is) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#lang","title":"Lang","text":"<p><code>struct</code></p> <pre><code>type Lang struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:lang</p>"},{"location":"api/markup/css/pseudos/#langalterrules","title":"Lang.AlterRules","text":"<pre><code>func (p Lang) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#langisfunction","title":"Lang.IsFunction","text":"<pre><code>func (p Lang) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#langkey","title":"Lang.Key","text":"<pre><code>func (p Lang) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#langprocess","title":"Lang.Process","text":"<pre><code>func (p Lang) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#lastchild","title":"LastChild","text":"<p><code>struct</code></p> <pre><code>type LastChild struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:last-child</p>"},{"location":"api/markup/css/pseudos/#lastchildalterrules","title":"LastChild.AlterRules","text":"<pre><code>func (p LastChild) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#lastchildisfunction","title":"LastChild.IsFunction","text":"<pre><code>func (p LastChild) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#lastchildkey","title":"LastChild.Key","text":"<pre><code>func (p LastChild) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#lastchildprocess","title":"LastChild.Process","text":"<pre><code>func (p LastChild) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#lastoftype","title":"LastOfType","text":"<p><code>struct</code></p> <pre><code>type LastOfType struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:last-of-type</p>"},{"location":"api/markup/css/pseudos/#lastoftypealterrules","title":"LastOfType.AlterRules","text":"<pre><code>func (p LastOfType) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#lastoftypeisfunction","title":"LastOfType.IsFunction","text":"<pre><code>func (p LastOfType) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#lastoftypekey","title":"LastOfType.Key","text":"<pre><code>func (p LastOfType) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#lastoftypeprocess","title":"LastOfType.Process","text":"<pre><code>func (p LastOfType) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#left","title":"Left","text":"<p><code>struct</code></p> <pre><code>type Left struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:left</p>"},{"location":"api/markup/css/pseudos/#leftalterrules","title":"Left.AlterRules","text":"<pre><code>func (p Left) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#leftisfunction","title":"Left.IsFunction","text":"<pre><code>func (p Left) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#leftkey","title":"Left.Key","text":"<pre><code>func (p Left) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#leftprocess","title":"Left.Process","text":"<pre><code>func (p Left) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#link","title":"Link","text":"<p><code>struct</code></p> <pre><code>type Link struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:link</p>"},{"location":"api/markup/css/pseudos/#linkalterrules","title":"Link.AlterRules","text":"<pre><code>func (p Link) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#linkisfunction","title":"Link.IsFunction","text":"<pre><code>func (p Link) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#linkkey","title":"Link.Key","text":"<pre><code>func (p Link) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#linkprocess","title":"Link.Process","text":"<pre><code>func (p Link) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#locallink","title":"LocalLink","text":"<p><code>struct</code></p> <pre><code>type LocalLink struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:local-link</p>"},{"location":"api/markup/css/pseudos/#locallinkalterrules","title":"LocalLink.AlterRules","text":"<pre><code>func (p LocalLink) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#locallinkisfunction","title":"LocalLink.IsFunction","text":"<pre><code>func (p LocalLink) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#locallinkkey","title":"LocalLink.Key","text":"<pre><code>func (p LocalLink) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#locallinkprocess","title":"LocalLink.Process","text":"<pre><code>func (p LocalLink) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#modal","title":"Modal","text":"<p><code>struct</code></p> <pre><code>type Modal struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:modal</p>"},{"location":"api/markup/css/pseudos/#modalalterrules","title":"Modal.AlterRules","text":"<pre><code>func (p Modal) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#modalisfunction","title":"Modal.IsFunction","text":"<pre><code>func (p Modal) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#modalkey","title":"Modal.Key","text":"<pre><code>func (p Modal) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#modalprocess","title":"Modal.Process","text":"<pre><code>func (p Modal) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#not","title":"Not","text":"<p><code>struct</code></p> <pre><code>type Not struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:not</p>"},{"location":"api/markup/css/pseudos/#notalterrules","title":"Not.AlterRules","text":"<pre><code>func (p Not) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#notisfunction","title":"Not.IsFunction","text":"<pre><code>func (p Not) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#notkey","title":"Not.Key","text":"<pre><code>func (p Not) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#notprocess","title":"Not.Process","text":"<pre><code>func (p Not) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthchild","title":"NthChild","text":"<p><code>struct</code></p> <pre><code>type NthChild struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-child</p>"},{"location":"api/markup/css/pseudos/#nthchildalterrules","title":"NthChild.AlterRules","text":"<pre><code>func (p NthChild) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthchildisfunction","title":"NthChild.IsFunction","text":"<pre><code>func (p NthChild) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthchildkey","title":"NthChild.Key","text":"<pre><code>func (p NthChild) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthchildprocess","title":"NthChild.Process","text":"<pre><code>func (p NthChild) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthcol","title":"NthCol","text":"<p><code>struct</code></p> <pre><code>type NthCol struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-col</p>"},{"location":"api/markup/css/pseudos/#nthcolalterrules","title":"NthCol.AlterRules","text":"<pre><code>func (p NthCol) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthcolisfunction","title":"NthCol.IsFunction","text":"<pre><code>func (p NthCol) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthcolkey","title":"NthCol.Key","text":"<pre><code>func (p NthCol) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthcolprocess","title":"NthCol.Process","text":"<pre><code>func (p NthCol) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthlastchild","title":"NthLastChild","text":"<p><code>struct</code></p> <pre><code>type NthLastChild struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-last-child</p>"},{"location":"api/markup/css/pseudos/#nthlastchildalterrules","title":"NthLastChild.AlterRules","text":"<pre><code>func (p NthLastChild) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthlastchildisfunction","title":"NthLastChild.IsFunction","text":"<pre><code>func (p NthLastChild) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthlastchildkey","title":"NthLastChild.Key","text":"<pre><code>func (p NthLastChild) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthlastchildprocess","title":"NthLastChild.Process","text":"<pre><code>func (p NthLastChild) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthlastcol","title":"NthLastCol","text":"<p><code>struct</code></p> <pre><code>type NthLastCol struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-last-col</p>"},{"location":"api/markup/css/pseudos/#nthlastcolalterrules","title":"NthLastCol.AlterRules","text":"<pre><code>func (p NthLastCol) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthlastcolisfunction","title":"NthLastCol.IsFunction","text":"<pre><code>func (p NthLastCol) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthlastcolkey","title":"NthLastCol.Key","text":"<pre><code>func (p NthLastCol) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthlastcolprocess","title":"NthLastCol.Process","text":"<pre><code>func (p NthLastCol) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthlastoftype","title":"NthLastOfType","text":"<p><code>struct</code></p> <pre><code>type NthLastOfType struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-last-of-type</p>"},{"location":"api/markup/css/pseudos/#nthlastoftypealterrules","title":"NthLastOfType.AlterRules","text":"<pre><code>func (p NthLastOfType) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthlastoftypeisfunction","title":"NthLastOfType.IsFunction","text":"<pre><code>func (p NthLastOfType) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthlastoftypekey","title":"NthLastOfType.Key","text":"<pre><code>func (p NthLastOfType) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthlastoftypeprocess","title":"NthLastOfType.Process","text":"<pre><code>func (p NthLastOfType) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthoftype","title":"NthOfType","text":"<p><code>struct</code></p> <pre><code>type NthOfType struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-of-type</p>"},{"location":"api/markup/css/pseudos/#nthoftypealterrules","title":"NthOfType.AlterRules","text":"<pre><code>func (p NthOfType) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthoftypeisfunction","title":"NthOfType.IsFunction","text":"<pre><code>func (p NthOfType) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthoftypekey","title":"NthOfType.Key","text":"<pre><code>func (p NthOfType) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#nthoftypeprocess","title":"NthOfType.Process","text":"<pre><code>func (p NthOfType) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#onlychild","title":"OnlyChild","text":"<p><code>struct</code></p> <pre><code>type OnlyChild struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:only-child</p>"},{"location":"api/markup/css/pseudos/#onlychildalterrules","title":"OnlyChild.AlterRules","text":"<pre><code>func (p OnlyChild) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#onlychildisfunction","title":"OnlyChild.IsFunction","text":"<pre><code>func (p OnlyChild) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#onlychildkey","title":"OnlyChild.Key","text":"<pre><code>func (p OnlyChild) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#onlychildprocess","title":"OnlyChild.Process","text":"<pre><code>func (p OnlyChild) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#onlyoftype","title":"OnlyOfType","text":"<p><code>struct</code></p> <pre><code>type OnlyOfType struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:only-of-type</p>"},{"location":"api/markup/css/pseudos/#onlyoftypealterrules","title":"OnlyOfType.AlterRules","text":"<pre><code>func (p OnlyOfType) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#onlyoftypeisfunction","title":"OnlyOfType.IsFunction","text":"<pre><code>func (p OnlyOfType) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#onlyoftypekey","title":"OnlyOfType.Key","text":"<pre><code>func (p OnlyOfType) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#onlyoftypeprocess","title":"OnlyOfType.Process","text":"<pre><code>func (p OnlyOfType) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#optional","title":"Optional","text":"<p><code>struct</code></p> <pre><code>type Optional struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:optional</p>"},{"location":"api/markup/css/pseudos/#optionalalterrules","title":"Optional.AlterRules","text":"<pre><code>func (p Optional) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#optionalisfunction","title":"Optional.IsFunction","text":"<pre><code>func (p Optional) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#optionalkey","title":"Optional.Key","text":"<pre><code>func (p Optional) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#optionalprocess","title":"Optional.Process","text":"<pre><code>func (p Optional) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#outofrange","title":"OutOfRange","text":"<p><code>struct</code></p> <pre><code>type OutOfRange struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:out-of-range</p>"},{"location":"api/markup/css/pseudos/#outofrangealterrules","title":"OutOfRange.AlterRules","text":"<pre><code>func (p OutOfRange) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#outofrangeisfunction","title":"OutOfRange.IsFunction","text":"<pre><code>func (p OutOfRange) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#outofrangekey","title":"OutOfRange.Key","text":"<pre><code>func (p OutOfRange) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#outofrangeprocess","title":"OutOfRange.Process","text":"<pre><code>func (p OutOfRange) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#past","title":"Past","text":"<p><code>struct</code></p> <pre><code>type Past struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:past</p>"},{"location":"api/markup/css/pseudos/#pastalterrules","title":"Past.AlterRules","text":"<pre><code>func (p Past) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#pastisfunction","title":"Past.IsFunction","text":"<pre><code>func (p Past) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#pastkey","title":"Past.Key","text":"<pre><code>func (p Past) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#pastprocess","title":"Past.Process","text":"<pre><code>func (p Past) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#paused","title":"Paused","text":"<p><code>struct</code></p> <pre><code>type Paused struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:paused</p>"},{"location":"api/markup/css/pseudos/#pausedalterrules","title":"Paused.AlterRules","text":"<pre><code>func (p Paused) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#pausedisfunction","title":"Paused.IsFunction","text":"<pre><code>func (p Paused) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#pausedkey","title":"Paused.Key","text":"<pre><code>func (p Paused) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#pausedprocess","title":"Paused.Process","text":"<pre><code>func (p Paused) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#pictureinpicture","title":"PictureInPicture","text":"<p><code>struct</code></p> <pre><code>type PictureInPicture struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:picture-in-picture</p>"},{"location":"api/markup/css/pseudos/#pictureinpicturealterrules","title":"PictureInPicture.AlterRules","text":"<pre><code>func (p PictureInPicture) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#pictureinpictureisfunction","title":"PictureInPicture.IsFunction","text":"<pre><code>func (p PictureInPicture) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#pictureinpicturekey","title":"PictureInPicture.Key","text":"<pre><code>func (p PictureInPicture) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#pictureinpictureprocess","title":"PictureInPicture.Process","text":"<pre><code>func (p PictureInPicture) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#placeholdershown","title":"PlaceholderShown","text":"<p><code>struct</code></p> <pre><code>type PlaceholderShown struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:placeholder-shown</p>"},{"location":"api/markup/css/pseudos/#placeholdershownalterrules","title":"PlaceholderShown.AlterRules","text":"<pre><code>func (p PlaceholderShown) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#placeholdershownisfunction","title":"PlaceholderShown.IsFunction","text":"<pre><code>func (p PlaceholderShown) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#placeholdershownkey","title":"PlaceholderShown.Key","text":"<pre><code>func (p PlaceholderShown) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#placeholdershownprocess","title":"PlaceholderShown.Process","text":"<pre><code>func (p PlaceholderShown) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#playing","title":"Playing","text":"<p><code>struct</code></p> <pre><code>type Playing struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:playing</p>"},{"location":"api/markup/css/pseudos/#playingalterrules","title":"Playing.AlterRules","text":"<pre><code>func (p Playing) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#playingisfunction","title":"Playing.IsFunction","text":"<pre><code>func (p Playing) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#playingkey","title":"Playing.Key","text":"<pre><code>func (p Playing) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#playingprocess","title":"Playing.Process","text":"<pre><code>func (p Playing) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#pseudo","title":"Pseudo","text":"<p><code>interface</code></p> <pre><code>type Pseudo interface {\n    Key() string\n    IsFunction() bool\n    Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n    AlterRules(rules []rules.Rule) []rules.Rule\n}\n</code></pre>"},{"location":"api/markup/css/pseudos/#readonly","title":"ReadOnly","text":"<p><code>struct</code></p> <pre><code>type ReadOnly struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:read-only</p>"},{"location":"api/markup/css/pseudos/#readonlyalterrules","title":"ReadOnly.AlterRules","text":"<pre><code>func (p ReadOnly) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#readonlyisfunction","title":"ReadOnly.IsFunction","text":"<pre><code>func (p ReadOnly) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#readonlykey","title":"ReadOnly.Key","text":"<pre><code>func (p ReadOnly) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#readonlyprocess","title":"ReadOnly.Process","text":"<pre><code>func (p ReadOnly) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#readwrite","title":"ReadWrite","text":"<p><code>struct</code></p> <pre><code>type ReadWrite struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:read-write</p>"},{"location":"api/markup/css/pseudos/#readwritealterrules","title":"ReadWrite.AlterRules","text":"<pre><code>func (p ReadWrite) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#readwriteisfunction","title":"ReadWrite.IsFunction","text":"<pre><code>func (p ReadWrite) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#readwritekey","title":"ReadWrite.Key","text":"<pre><code>func (p ReadWrite) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#readwriteprocess","title":"ReadWrite.Process","text":"<pre><code>func (p ReadWrite) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#required","title":"Required","text":"<p><code>struct</code></p> <pre><code>type Required struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:required</p>"},{"location":"api/markup/css/pseudos/#requiredalterrules","title":"Required.AlterRules","text":"<pre><code>func (p Required) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#requiredisfunction","title":"Required.IsFunction","text":"<pre><code>func (p Required) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#requiredkey","title":"Required.Key","text":"<pre><code>func (p Required) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#requiredprocess","title":"Required.Process","text":"<pre><code>func (p Required) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#right","title":"Right","text":"<p><code>struct</code></p> <pre><code>type Right struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:right</p>"},{"location":"api/markup/css/pseudos/#rightalterrules","title":"Right.AlterRules","text":"<pre><code>func (p Right) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#rightisfunction","title":"Right.IsFunction","text":"<pre><code>func (p Right) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#rightkey","title":"Right.Key","text":"<pre><code>func (p Right) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#rightprocess","title":"Right.Process","text":"<pre><code>func (p Right) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#root","title":"Root","text":"<p><code>struct</code></p> <pre><code>type Root struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:root</p>"},{"location":"api/markup/css/pseudos/#rootalterrules","title":"Root.AlterRules","text":"<pre><code>func (p Root) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#rootisfunction","title":"Root.IsFunction","text":"<pre><code>func (p Root) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#rootkey","title":"Root.Key","text":"<pre><code>func (p Root) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#rootprocess","title":"Root.Process","text":"<pre><code>func (p Root) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#scope","title":"Scope","text":"<p><code>struct</code></p> <pre><code>type Scope struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:scope</p>"},{"location":"api/markup/css/pseudos/#scopealterrules","title":"Scope.AlterRules","text":"<pre><code>func (p Scope) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#scopeisfunction","title":"Scope.IsFunction","text":"<pre><code>func (p Scope) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#scopekey","title":"Scope.Key","text":"<pre><code>func (p Scope) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#scopeprocess","title":"Scope.Process","text":"<pre><code>func (p Scope) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#state","title":"State","text":"<p><code>struct</code></p> <pre><code>type State struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:state</p>"},{"location":"api/markup/css/pseudos/#statealterrules","title":"State.AlterRules","text":"<pre><code>func (p State) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#stateisfunction","title":"State.IsFunction","text":"<pre><code>func (p State) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#statekey","title":"State.Key","text":"<pre><code>func (p State) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#stateprocess","title":"State.Process","text":"<pre><code>func (p State) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#target","title":"Target","text":"<p><code>struct</code></p> <pre><code>type Target struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:target</p>"},{"location":"api/markup/css/pseudos/#targetalterrules","title":"Target.AlterRules","text":"<pre><code>func (p Target) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#targetisfunction","title":"Target.IsFunction","text":"<pre><code>func (p Target) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#targetkey","title":"Target.Key","text":"<pre><code>func (p Target) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#targetprocess","title":"Target.Process","text":"<pre><code>func (p Target) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#targetwithin","title":"TargetWithin","text":"<p><code>struct</code></p> <pre><code>type TargetWithin struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:target-within</p>"},{"location":"api/markup/css/pseudos/#targetwithinalterrules","title":"TargetWithin.AlterRules","text":"<pre><code>func (p TargetWithin) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#targetwithinisfunction","title":"TargetWithin.IsFunction","text":"<pre><code>func (p TargetWithin) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#targetwithinkey","title":"TargetWithin.Key","text":"<pre><code>func (p TargetWithin) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#targetwithinprocess","title":"TargetWithin.Process","text":"<pre><code>func (p TargetWithin) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#userinvalid","title":"UserInvalid","text":"<p><code>struct</code></p> <pre><code>type UserInvalid struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:user-invalid</p>"},{"location":"api/markup/css/pseudos/#userinvalidalterrules","title":"UserInvalid.AlterRules","text":"<pre><code>func (p UserInvalid) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#userinvalidisfunction","title":"UserInvalid.IsFunction","text":"<pre><code>func (p UserInvalid) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#userinvalidkey","title":"UserInvalid.Key","text":"<pre><code>func (p UserInvalid) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#userinvalidprocess","title":"UserInvalid.Process","text":"<pre><code>func (p UserInvalid) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#valid","title":"Valid","text":"<p><code>struct</code></p> <pre><code>type Valid struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:valid</p>"},{"location":"api/markup/css/pseudos/#validalterrules","title":"Valid.AlterRules","text":"<pre><code>func (p Valid) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#validisfunction","title":"Valid.IsFunction","text":"<pre><code>func (p Valid) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#validkey","title":"Valid.Key","text":"<pre><code>func (p Valid) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#validprocess","title":"Valid.Process","text":"<pre><code>func (p Valid) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#visited","title":"Visited","text":"<p><code>struct</code></p> <pre><code>type Visited struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:visited</p>"},{"location":"api/markup/css/pseudos/#visitedalterrules","title":"Visited.AlterRules","text":"<pre><code>func (p Visited) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#visitedisfunction","title":"Visited.IsFunction","text":"<pre><code>func (p Visited) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#visitedkey","title":"Visited.Key","text":"<pre><code>func (p Visited) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#visitedprocess","title":"Visited.Process","text":"<pre><code>func (p Visited) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/pseudos/#where","title":"Where","text":"<p><code>struct</code></p> <pre><code>type Where struct{}\n</code></pre> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/:where</p>"},{"location":"api/markup/css/pseudos/#wherealterrules","title":"Where.AlterRules","text":"<pre><code>func (p Where) AlterRules(rules []rules.Rule) []rules.Rule\n</code></pre>"},{"location":"api/markup/css/pseudos/#whereisfunction","title":"Where.IsFunction","text":"<pre><code>func (p Where) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/pseudos/#wherekey","title":"Where.Key","text":"<pre><code>func (p Where) Key() string\n</code></pre>"},{"location":"api/markup/css/pseudos/#whereprocess","title":"Where.Process","text":"<pre><code>func (p Where) Process(elm *document.Element, value rules.SelectorPart) ([]*document.Element, error)\n</code></pre>"},{"location":"api/markup/css/rules/","title":"package rules","text":"<pre><code>import \"kaiju/markup/css/rules\"\n</code></pre>"},{"location":"api/markup/css/rules/#constants","title":"Constants","text":""},{"location":"api/markup/css/rules/#readingtag","title":"ReadingTag","text":"<p><code>iota</code></p>"},{"location":"api/markup/css/rules/#readingid","title":"ReadingId","text":""},{"location":"api/markup/css/rules/#readingclass","title":"ReadingClass","text":""},{"location":"api/markup/css/rules/#readingchild","title":"ReadingChild","text":""},{"location":"api/markup/css/rules/#readingsibling","title":"ReadingSibling","text":""},{"location":"api/markup/css/rules/#readingadjacent","title":"ReadingAdjacent","text":""},{"location":"api/markup/css/rules/#readingpseudo","title":"ReadingPseudo","text":""},{"location":"api/markup/css/rules/#readingpseudofunction","title":"ReadingPseudoFunction","text":""},{"location":"api/markup/css/rules/#readingproperty","title":"ReadingProperty","text":""},{"location":"api/markup/css/rules/#readingpropertyvalue","title":"ReadingPropertyValue","text":""},{"location":"api/markup/css/rules/#readingpropertyfunction","title":"ReadingPropertyFunction","text":""},{"location":"api/markup/css/rules/#types","title":"Types","text":""},{"location":"api/markup/css/rules/#propertyvalue","title":"PropertyValue","text":"<p><code>struct</code></p> <pre><code>type PropertyValue struct {\n    Str  string\n    Args []string\n}\n</code></pre>"},{"location":"api/markup/css/rules/#propertyvalueisfunction","title":"PropertyValue.IsFunction","text":"<pre><code>func (p PropertyValue) IsFunction() bool\n</code></pre>"},{"location":"api/markup/css/rules/#rule","title":"Rule","text":"<p><code>struct</code></p> <pre><code>type Rule struct {\n    Property   string\n    Values     []PropertyValue\n    Invocation RuleInvoke\n}\n</code></pre>"},{"location":"api/markup/css/rules/#ruleinvoke","title":"RuleInvoke","text":"<p>int <pre><code>type RuleInvoke = int\n</code></pre></p> <p>const ( RuleInvokeImmediate RuleInvoke = iota RuleInvokeHover )</p>"},{"location":"api/markup/css/rules/#rulestate","title":"RuleState","text":"<p>int <pre><code>type RuleState = int\n</code></pre></p>"},{"location":"api/markup/css/rules/#selector","title":"Selector","text":"<p><code>struct</code></p> <pre><code>type Selector struct {\n    Parts []SelectorPart\n}\n</code></pre>"},{"location":"api/markup/css/rules/#selectorgroup","title":"SelectorGroup","text":"<p><code>struct</code></p> <pre><code>type SelectorGroup struct {\n    Selectors []Selector\n    Rules     []Rule\n}\n</code></pre>"},{"location":"api/markup/css/rules/#selectorgroupaddrule","title":"SelectorGroup.AddRule","text":"<pre><code>func (s *SelectorGroup) AddRule(r Rule)\n</code></pre>"},{"location":"api/markup/css/rules/#selectorpart","title":"SelectorPart","text":"<p><code>struct</code></p> <pre><code>type SelectorPart struct {\n    Name       string\n    Args       []string\n    SelectType RuleState\n}\n</code></pre>"},{"location":"api/markup/css/rules/#stylesheet","title":"StyleSheet","text":"<p><code>struct</code></p> <pre><code>type StyleSheet struct {\n    Groups     []SelectorGroup\n    CustomVars map[string][]string\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/markup/css/rules/#newstylesheet","title":"NewStyleSheet","text":"<pre><code>func NewStyleSheet() StyleSheet\n</code></pre>"},{"location":"api/markup/css/rules/#stylesheetparse","title":"StyleSheet.Parse","text":"<pre><code>func (s *StyleSheet) Parse(cssStr string)\n</code></pre>"},{"location":"api/markup/css/rules/#stylesheetparseinline","title":"StyleSheet.ParseInline","text":"<pre><code>func (s *StyleSheet) ParseInline(cssStr string) *SelectorGroup\n</code></pre>"},{"location":"api/markup/document/","title":"package document","text":"<pre><code>import \"kaiju/markup/document\"\n</code></pre>"},{"location":"api/markup/document/#functions","title":"Functions","text":""},{"location":"api/markup/document/#transformhtml","title":"TransformHTML","text":"<pre><code>func TransformHTML(htmlStr string, withData any) string\n</code></pre>"},{"location":"api/markup/document/#types","title":"Types","text":""},{"location":"api/markup/document/#document","title":"Document","text":"<p><code>struct</code></p> <pre><code>type Document struct {\n    Elements     []*Element\n    TopElements  []*Element\n    HeadElements []*Element\n\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/markup/document/#documentfromhtmlstring","title":"DocumentFromHTMLString","text":"<pre><code>func DocumentFromHTMLString(uiMan *ui.Manager, htmlStr string, withData any, funcMap map[string]func(*Element)) *Document\n</code></pre>"},{"location":"api/markup/document/#documentactivate","title":"Document.Activate","text":"<pre><code>func (d *Document) Activate()\n</code></pre>"},{"location":"api/markup/document/#documentaddchildelement","title":"Document.AddChildElement","text":"<pre><code>func (d *Document) AddChildElement(parent *Element, elm *Element)\n</code></pre>"},{"location":"api/markup/document/#documentapplystyle","title":"Document.ApplyStyle","text":"<pre><code>func (d *Document) ApplyStyle()\n</code></pre>"},{"location":"api/markup/document/#documentclean","title":"Document.Clean","text":"<pre><code>func (d *Document) Clean()\n</code></pre>"},{"location":"api/markup/document/#documentdeactivate","title":"Document.Deactivate","text":"<pre><code>func (d *Document) Deactivate()\n</code></pre>"},{"location":"api/markup/document/#documentdestroy","title":"Document.Destroy","text":"<pre><code>func (d *Document) Destroy()\n</code></pre>"},{"location":"api/markup/document/#documentgetelementbyid","title":"Document.GetElementById","text":"<pre><code>func (h *Document) GetElementById(id string) (*Element, bool)\n</code></pre>"},{"location":"api/markup/document/#documentgetelementsbyclass","title":"Document.GetElementsByClass","text":"<pre><code>func (h *Document) GetElementsByClass(class string) []*Element\n</code></pre>"},{"location":"api/markup/document/#documentgetelementsbygroup","title":"Document.GetElementsByGroup","text":"<pre><code>func (h *Document) GetElementsByGroup(group string) []*Element\n</code></pre>"},{"location":"api/markup/document/#documentgetelementsbytagname","title":"Document.GetElementsByTagName","text":"<pre><code>func (h *Document) GetElementsByTagName(tag string) []*Element\n</code></pre>"},{"location":"api/markup/document/#documentremoveelement","title":"Document.RemoveElement","text":"<pre><code>func (d *Document) RemoveElement(elm *Element)\n</code></pre>"},{"location":"api/markup/document/#documentsetupstylizer","title":"Document.SetupStylizer","text":"<pre><code>func (d *Document) SetupStylizer(style rules.StyleSheet, host *engine.Host,\n</code></pre> <p>styleReader func(rules.StyleSheet, Document, engine.Host))</p>"},{"location":"api/markup/document/#element","title":"Element","text":"<p><code>struct</code></p> <pre><code>type Element struct {\n    UI       *ui.UI\n    UIPanel  *ui.Panel\n    Parent   *Element\n    Children []*Element\n\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/markup/document/#newhtml","title":"NewHTML","text":"<pre><code>func NewHTML(htmlStr string) *Element\n</code></pre>"},{"location":"api/markup/document/#elementattribute","title":"Element.Attribute","text":"<pre><code>func (e *Element) Attribute(key string) string\n</code></pre>"},{"location":"api/markup/document/#elementbody","title":"Element.Body","text":"<pre><code>func (e *Element) Body() *Element\n</code></pre>"},{"location":"api/markup/document/#elementdata","title":"Element.Data","text":"<pre><code>func (e *Element) Data() string\n</code></pre>"},{"location":"api/markup/document/#elementenforcecolor","title":"Element.EnforceColor","text":"<pre><code>func (d *Element) EnforceColor(color matrix.Color)\n</code></pre>"},{"location":"api/markup/document/#elementfindelementbyid","title":"Element.FindElementById","text":"<pre><code>func (e *Element) FindElementById(id string) *Element\n</code></pre>"},{"location":"api/markup/document/#elementfindelementbytag","title":"Element.FindElementByTag","text":"<pre><code>func (e *Element) FindElementByTag(tag string) *Element\n</code></pre>"},{"location":"api/markup/document/#elementfindelementlabelbyid","title":"Element.FindElementLabelById","text":"<pre><code>func (e *Element) FindElementLabelById(id string) *ui.Label\n</code></pre>"},{"location":"api/markup/document/#elementfindelementsbytag","title":"Element.FindElementsByTag","text":"<pre><code>func (e *Element) FindElementsByTag(tag string) []*Element\n</code></pre>"},{"location":"api/markup/document/#elementhead","title":"Element.Head","text":"<pre><code>func (e *Element) Head() *Element\n</code></pre>"},{"location":"api/markup/document/#elementhtml","title":"Element.Html","text":"<pre><code>func (e *Element) Html() *Element\n</code></pre>"},{"location":"api/markup/document/#elementinnerlabel","title":"Element.InnerLabel","text":"<pre><code>func (d Element) InnerLabel() *ui.Label\n</code></pre>"},{"location":"api/markup/document/#elementisbutton","title":"Element.IsButton","text":"<pre><code>func (e *Element) IsButton() bool\n</code></pre>"},{"location":"api/markup/document/#elementisimage","title":"Element.IsImage","text":"<pre><code>func (e *Element) IsImage() bool\n</code></pre>"},{"location":"api/markup/document/#elementisinput","title":"Element.IsInput","text":"<pre><code>func (e *Element) IsInput() bool\n</code></pre>"},{"location":"api/markup/document/#elementisselect","title":"Element.IsSelect","text":"<pre><code>func (e *Element) IsSelect() bool\n</code></pre>"},{"location":"api/markup/document/#elementisselectoption","title":"Element.IsSelectOption","text":"<pre><code>func (e *Element) IsSelectOption() bool\n</code></pre>"},{"location":"api/markup/document/#elementistext","title":"Element.IsText","text":"<pre><code>func (e *Element) IsText() bool\n</code></pre>"},{"location":"api/markup/document/#elementroot","title":"Element.Root","text":"<pre><code>func (e *Element) Root() *Element\n</code></pre>"},{"location":"api/markup/document/#elementunenforcecolor","title":"Element.UnEnforceColor","text":"<pre><code>func (d *Element) UnEnforceColor()\n</code></pre>"},{"location":"api/markup/document/#templateindexedany","title":"TemplateIndexedAny","text":"<p><code>struct</code></p> <pre><code>type TemplateIndexedAny struct {\n    Idx   int\n    Value any\n}\n</code></pre>"},{"location":"api/markup/elements/","title":"package elements","text":"<pre><code>import \"kaiju/markup/elements\"\n</code></pre>"},{"location":"api/markup/elements/#variables","title":"Variables","text":""},{"location":"api/markup/elements/#elementmap","title":"ElementMap","text":"<pre><code>map[string]Element{\n    \"a\":          A{},\n    \"abbr\":       Abbr{},\n    \"address\":    Address{},\n    \"area\":       Area{},\n    \"article\":    Article{},\n    \"aside\":      Aside{},\n    \"audio\":      Audio{},\n    \"b\":          B{},\n    \"base\":       Base{},\n    \"bdi\":        Bdi{},\n    \"bdo\":        Bdo{},\n    \"blockquote\": Blockquote{},\n    \"body\":       Body{},\n    \"br\":         Br{},\n    \"button\":     Button{},\n    \"canvas\":     Canvas{},\n    \"caption\":    Caption{},\n    \"cite\":       Cite{},\n    \"code\":       Code{},\n    \"col\":        Col{},\n    \"colgroup\":   Colgroup{},\n    \"data\":       Data{},\n    \"datalist\":   Datalist{},\n    \"dd\":         Dd{},\n    \"del\":        Del{},\n    \"details\":    Details{},\n    \"dfn\":        Dfn{},\n    \"dialog\":     Dialog{},\n    \"div\":        Div{},\n    \"dl\":         Dl{},\n    \"dt\":         Dt{},\n    \"em\":         Em{},\n    \"embed\":      Embed{},\n    \"fieldset\":   Fieldset{},\n    \"figcaption\": Figcaption{},\n    \"figure\":     Figure{},\n    \"footer\":     Footer{},\n    \"form\":       Form{},\n    \"h1\":         H1{},\n    \"h2\":         H2{},\n    \"h3\":         H3{},\n    \"h4\":         H4{},\n    \"h5\":         H5{},\n    \"h6\":         H6{},\n    \"head\":       Head{},\n    \"header\":     Header{},\n    \"hgroup\":     Hgroup{},\n    \"hr\":         Hr{},\n    \"html\":       Html{},\n    \"i\":          I{},\n    \"iframe\":     Iframe{},\n    \"img\":        Img{},\n    \"input\":      Input{},\n    \"ins\":        Ins{},\n    \"kbd\":        Kbd{},\n    \"label\":      Label{},\n    \"legend\":     Legend{},\n    \"li\":         Li{},\n    \"link\":       Link{},\n    \"main\":       Main{},\n    \"map\":        Map{},\n    \"mark\":       Mark{},\n    \"menu\":       Menu{},\n    \"meta\":       Meta{},\n    \"meter\":      Meter{},\n    \"nav\":        Nav{},\n    \"noscript\":   Noscript{},\n    \"object\":     Object{},\n    \"ol\":         Ol{},\n    \"optgroup\":   Optgroup{},\n    \"option\":     Option{},\n    \"output\":     Output{},\n    \"p\":          P{},\n    \"picture\":    Picture{},\n    \"pre\":        Pre{},\n    \"progress\":   Progress{},\n    \"q\":          Q{},\n    \"rp\":         Rp{},\n    \"rt\":         Rt{},\n    \"ruby\":       Ruby{},\n    \"s\":          S{},\n    \"samp\":       Samp{},\n    \"script\":     Script{},\n    \"search\":     Search{},\n    \"section\":    Section{},\n    \"select\":     Select{},\n    \"slot\":       Slot{},\n    \"small\":      Small{},\n    \"source\":     Source{},\n    \"span\":       Span{},\n    \"strong\":     Strong{},\n    \"style\":      Style{},\n    \"sub\":        Sub{},\n    \"summary\":    Summary{},\n    \"sup\":        Sup{},\n    \"table\":      Table{},\n    \"tbody\":      Tbody{},\n    \"td\":         Td{},\n    \"template\":   Template{},\n    \"textarea\":   Textarea{},\n    \"tfoot\":      Tfoot{},\n    \"th\":         Th{},\n    \"thead\":      Thead{},\n    \"time\":       Time{},\n    \"title\":      Title{},\n    \"tr\":         Tr{},\n    \"track\":      Track{},\n    \"u\":          U{},\n    \"ul\":         Ul{},\n    \"var\":        Var{},\n    \"video\":      Video{},\n    \"wbr\":        Wbr{},\n}\n</code></pre>"},{"location":"api/markup/elements/#types","title":"Types","text":""},{"location":"api/markup/elements/#a","title":"A","text":"<p><code>struct</code></p> <pre><code>type A struct{}\n</code></pre>"},{"location":"api/markup/elements/#akey","title":"A.Key","text":"<pre><code>func (p A) Key() string\n</code></pre>"},{"location":"api/markup/elements/#abbr","title":"Abbr","text":"<p><code>struct</code></p> <pre><code>type Abbr struct{}\n</code></pre>"},{"location":"api/markup/elements/#abbrkey","title":"Abbr.Key","text":"<pre><code>func (p Abbr) Key() string\n</code></pre>"},{"location":"api/markup/elements/#address","title":"Address","text":"<p><code>struct</code></p> <pre><code>type Address struct{}\n</code></pre>"},{"location":"api/markup/elements/#addresskey","title":"Address.Key","text":"<pre><code>func (p Address) Key() string\n</code></pre>"},{"location":"api/markup/elements/#area","title":"Area","text":"<p><code>struct</code></p> <pre><code>type Area struct{}\n</code></pre>"},{"location":"api/markup/elements/#areakey","title":"Area.Key","text":"<pre><code>func (p Area) Key() string\n</code></pre>"},{"location":"api/markup/elements/#article","title":"Article","text":"<p><code>struct</code></p> <pre><code>type Article struct{}\n</code></pre>"},{"location":"api/markup/elements/#articlekey","title":"Article.Key","text":"<pre><code>func (p Article) Key() string\n</code></pre>"},{"location":"api/markup/elements/#aside","title":"Aside","text":"<p><code>struct</code></p> <pre><code>type Aside struct{}\n</code></pre>"},{"location":"api/markup/elements/#asidekey","title":"Aside.Key","text":"<pre><code>func (p Aside) Key() string\n</code></pre>"},{"location":"api/markup/elements/#audio","title":"Audio","text":"<p><code>struct</code></p> <pre><code>type Audio struct{}\n</code></pre>"},{"location":"api/markup/elements/#audiokey","title":"Audio.Key","text":"<pre><code>func (p Audio) Key() string\n</code></pre>"},{"location":"api/markup/elements/#b","title":"B","text":"<p><code>struct</code></p> <pre><code>type B struct{}\n</code></pre>"},{"location":"api/markup/elements/#bkey","title":"B.Key","text":"<pre><code>func (p B) Key() string\n</code></pre>"},{"location":"api/markup/elements/#base","title":"Base","text":"<p><code>struct</code></p> <pre><code>type Base struct{}\n</code></pre>"},{"location":"api/markup/elements/#basekey","title":"Base.Key","text":"<pre><code>func (p Base) Key() string\n</code></pre>"},{"location":"api/markup/elements/#bdi","title":"Bdi","text":"<p><code>struct</code></p> <pre><code>type Bdi struct{}\n</code></pre>"},{"location":"api/markup/elements/#bdikey","title":"Bdi.Key","text":"<pre><code>func (p Bdi) Key() string\n</code></pre>"},{"location":"api/markup/elements/#bdo","title":"Bdo","text":"<p><code>struct</code></p> <pre><code>type Bdo struct{}\n</code></pre>"},{"location":"api/markup/elements/#bdokey","title":"Bdo.Key","text":"<pre><code>func (p Bdo) Key() string\n</code></pre>"},{"location":"api/markup/elements/#blockquote","title":"Blockquote","text":"<p><code>struct</code></p> <pre><code>type Blockquote struct{}\n</code></pre>"},{"location":"api/markup/elements/#blockquotekey","title":"Blockquote.Key","text":"<pre><code>func (p Blockquote) Key() string\n</code></pre>"},{"location":"api/markup/elements/#body","title":"Body","text":"<p><code>struct</code></p> <pre><code>type Body struct{}\n</code></pre>"},{"location":"api/markup/elements/#bodykey","title":"Body.Key","text":"<pre><code>func (p Body) Key() string\n</code></pre>"},{"location":"api/markup/elements/#br","title":"Br","text":"<p><code>struct</code></p> <pre><code>type Br struct{}\n</code></pre>"},{"location":"api/markup/elements/#brkey","title":"Br.Key","text":"<pre><code>func (p Br) Key() string\n</code></pre>"},{"location":"api/markup/elements/#button","title":"Button","text":"<p><code>struct</code></p> <pre><code>type Button struct{}\n</code></pre>"},{"location":"api/markup/elements/#buttonkey","title":"Button.Key","text":"<pre><code>func (p Button) Key() string\n</code></pre>"},{"location":"api/markup/elements/#canvas","title":"Canvas","text":"<p><code>struct</code></p> <pre><code>type Canvas struct{}\n</code></pre>"},{"location":"api/markup/elements/#canvaskey","title":"Canvas.Key","text":"<pre><code>func (p Canvas) Key() string\n</code></pre>"},{"location":"api/markup/elements/#caption","title":"Caption","text":"<p><code>struct</code></p> <pre><code>type Caption struct{}\n</code></pre>"},{"location":"api/markup/elements/#captionkey","title":"Caption.Key","text":"<pre><code>func (p Caption) Key() string\n</code></pre>"},{"location":"api/markup/elements/#cite","title":"Cite","text":"<p><code>struct</code></p> <pre><code>type Cite struct{}\n</code></pre>"},{"location":"api/markup/elements/#citekey","title":"Cite.Key","text":"<pre><code>func (p Cite) Key() string\n</code></pre>"},{"location":"api/markup/elements/#code","title":"Code","text":"<p><code>struct</code></p> <pre><code>type Code struct{}\n</code></pre>"},{"location":"api/markup/elements/#codekey","title":"Code.Key","text":"<pre><code>func (p Code) Key() string\n</code></pre>"},{"location":"api/markup/elements/#col","title":"Col","text":"<p><code>struct</code></p> <pre><code>type Col struct{}\n</code></pre>"},{"location":"api/markup/elements/#colkey","title":"Col.Key","text":"<pre><code>func (p Col) Key() string\n</code></pre>"},{"location":"api/markup/elements/#colgroup","title":"Colgroup","text":"<p><code>struct</code></p> <pre><code>type Colgroup struct{}\n</code></pre>"},{"location":"api/markup/elements/#colgroupkey","title":"Colgroup.Key","text":"<pre><code>func (p Colgroup) Key() string\n</code></pre>"},{"location":"api/markup/elements/#data","title":"Data","text":"<p><code>struct</code></p> <pre><code>type Data struct{}\n</code></pre>"},{"location":"api/markup/elements/#datakey","title":"Data.Key","text":"<pre><code>func (p Data) Key() string\n</code></pre>"},{"location":"api/markup/elements/#datalist","title":"Datalist","text":"<p><code>struct</code></p> <pre><code>type Datalist struct{}\n</code></pre>"},{"location":"api/markup/elements/#datalistkey","title":"Datalist.Key","text":"<pre><code>func (p Datalist) Key() string\n</code></pre>"},{"location":"api/markup/elements/#dd","title":"Dd","text":"<p><code>struct</code></p> <pre><code>type Dd struct{}\n</code></pre>"},{"location":"api/markup/elements/#ddkey","title":"Dd.Key","text":"<pre><code>func (p Dd) Key() string\n</code></pre>"},{"location":"api/markup/elements/#del","title":"Del","text":"<p><code>struct</code></p> <pre><code>type Del struct{}\n</code></pre>"},{"location":"api/markup/elements/#delkey","title":"Del.Key","text":"<pre><code>func (p Del) Key() string\n</code></pre>"},{"location":"api/markup/elements/#details","title":"Details","text":"<p><code>struct</code></p> <pre><code>type Details struct{}\n</code></pre>"},{"location":"api/markup/elements/#detailskey","title":"Details.Key","text":"<pre><code>func (p Details) Key() string\n</code></pre>"},{"location":"api/markup/elements/#dfn","title":"Dfn","text":"<p><code>struct</code></p> <pre><code>type Dfn struct{}\n</code></pre>"},{"location":"api/markup/elements/#dfnkey","title":"Dfn.Key","text":"<pre><code>func (p Dfn) Key() string\n</code></pre>"},{"location":"api/markup/elements/#dialog","title":"Dialog","text":"<p><code>struct</code></p> <pre><code>type Dialog struct{}\n</code></pre>"},{"location":"api/markup/elements/#dialogkey","title":"Dialog.Key","text":"<pre><code>func (p Dialog) Key() string\n</code></pre>"},{"location":"api/markup/elements/#div","title":"Div","text":"<p><code>struct</code></p> <pre><code>type Div struct{}\n</code></pre>"},{"location":"api/markup/elements/#divkey","title":"Div.Key","text":"<pre><code>func (p Div) Key() string\n</code></pre>"},{"location":"api/markup/elements/#dl","title":"Dl","text":"<p><code>struct</code></p> <pre><code>type Dl struct{}\n</code></pre>"},{"location":"api/markup/elements/#dlkey","title":"Dl.Key","text":"<pre><code>func (p Dl) Key() string\n</code></pre>"},{"location":"api/markup/elements/#dt","title":"Dt","text":"<p><code>struct</code></p> <pre><code>type Dt struct{}\n</code></pre>"},{"location":"api/markup/elements/#dtkey","title":"Dt.Key","text":"<pre><code>func (p Dt) Key() string\n</code></pre>"},{"location":"api/markup/elements/#element","title":"Element","text":"<p><code>interface</code></p> <pre><code>type Element interface {\n    Key() string\n}\n</code></pre>"},{"location":"api/markup/elements/#em","title":"Em","text":"<p><code>struct</code></p> <pre><code>type Em struct{}\n</code></pre>"},{"location":"api/markup/elements/#emkey","title":"Em.Key","text":"<pre><code>func (p Em) Key() string\n</code></pre>"},{"location":"api/markup/elements/#embed","title":"Embed","text":"<p><code>struct</code></p> <pre><code>type Embed struct{}\n</code></pre>"},{"location":"api/markup/elements/#embedkey","title":"Embed.Key","text":"<pre><code>func (p Embed) Key() string\n</code></pre>"},{"location":"api/markup/elements/#fieldset","title":"Fieldset","text":"<p><code>struct</code></p> <pre><code>type Fieldset struct{}\n</code></pre>"},{"location":"api/markup/elements/#fieldsetkey","title":"Fieldset.Key","text":"<pre><code>func (p Fieldset) Key() string\n</code></pre>"},{"location":"api/markup/elements/#figcaption","title":"Figcaption","text":"<p><code>struct</code></p> <pre><code>type Figcaption struct{}\n</code></pre>"},{"location":"api/markup/elements/#figcaptionkey","title":"Figcaption.Key","text":"<pre><code>func (p Figcaption) Key() string\n</code></pre>"},{"location":"api/markup/elements/#figure","title":"Figure","text":"<p><code>struct</code></p> <pre><code>type Figure struct{}\n</code></pre>"},{"location":"api/markup/elements/#figurekey","title":"Figure.Key","text":"<pre><code>func (p Figure) Key() string\n</code></pre>"},{"location":"api/markup/elements/#footer","title":"Footer","text":"<p><code>struct</code></p> <pre><code>type Footer struct{}\n</code></pre>"},{"location":"api/markup/elements/#footerkey","title":"Footer.Key","text":"<pre><code>func (p Footer) Key() string\n</code></pre>"},{"location":"api/markup/elements/#form","title":"Form","text":"<p><code>struct</code></p> <pre><code>type Form struct{}\n</code></pre>"},{"location":"api/markup/elements/#formkey","title":"Form.Key","text":"<pre><code>func (p Form) Key() string\n</code></pre>"},{"location":"api/markup/elements/#h1","title":"H1","text":"<p><code>struct</code></p> <pre><code>type H1 struct{}\n</code></pre>"},{"location":"api/markup/elements/#h1key","title":"H1.Key","text":"<pre><code>func (p H1) Key() string\n</code></pre>"},{"location":"api/markup/elements/#h2","title":"H2","text":"<p><code>struct</code></p> <pre><code>type H2 struct{}\n</code></pre>"},{"location":"api/markup/elements/#h2key","title":"H2.Key","text":"<pre><code>func (p H2) Key() string\n</code></pre>"},{"location":"api/markup/elements/#h3","title":"H3","text":"<p><code>struct</code></p> <pre><code>type H3 struct{}\n</code></pre>"},{"location":"api/markup/elements/#h3key","title":"H3.Key","text":"<pre><code>func (p H3) Key() string\n</code></pre>"},{"location":"api/markup/elements/#h4","title":"H4","text":"<p><code>struct</code></p> <pre><code>type H4 struct{}\n</code></pre>"},{"location":"api/markup/elements/#h4key","title":"H4.Key","text":"<pre><code>func (p H4) Key() string\n</code></pre>"},{"location":"api/markup/elements/#h5","title":"H5","text":"<p><code>struct</code></p> <pre><code>type H5 struct{}\n</code></pre>"},{"location":"api/markup/elements/#h5key","title":"H5.Key","text":"<pre><code>func (p H5) Key() string\n</code></pre>"},{"location":"api/markup/elements/#h6","title":"H6","text":"<p><code>struct</code></p> <pre><code>type H6 struct{}\n</code></pre>"},{"location":"api/markup/elements/#h6key","title":"H6.Key","text":"<pre><code>func (p H6) Key() string\n</code></pre>"},{"location":"api/markup/elements/#head","title":"Head","text":"<p><code>struct</code></p> <pre><code>type Head struct{}\n</code></pre>"},{"location":"api/markup/elements/#headkey","title":"Head.Key","text":"<pre><code>func (p Head) Key() string\n</code></pre>"},{"location":"api/markup/elements/#header","title":"Header","text":"<p><code>struct</code></p> <pre><code>type Header struct{}\n</code></pre>"},{"location":"api/markup/elements/#headerkey","title":"Header.Key","text":"<pre><code>func (p Header) Key() string\n</code></pre>"},{"location":"api/markup/elements/#hgroup","title":"Hgroup","text":"<p><code>struct</code></p> <pre><code>type Hgroup struct{}\n</code></pre>"},{"location":"api/markup/elements/#hgroupkey","title":"Hgroup.Key","text":"<pre><code>func (p Hgroup) Key() string\n</code></pre>"},{"location":"api/markup/elements/#hr","title":"Hr","text":"<p><code>struct</code></p> <pre><code>type Hr struct{}\n</code></pre>"},{"location":"api/markup/elements/#hrkey","title":"Hr.Key","text":"<pre><code>func (p Hr) Key() string\n</code></pre>"},{"location":"api/markup/elements/#html","title":"Html","text":"<p><code>struct</code></p> <pre><code>type Html struct{}\n</code></pre>"},{"location":"api/markup/elements/#htmlkey","title":"Html.Key","text":"<pre><code>func (p Html) Key() string\n</code></pre>"},{"location":"api/markup/elements/#i","title":"I","text":"<p><code>struct</code></p> <pre><code>type I struct{}\n</code></pre>"},{"location":"api/markup/elements/#ikey","title":"I.Key","text":"<pre><code>func (p I) Key() string\n</code></pre>"},{"location":"api/markup/elements/#iframe","title":"Iframe","text":"<p><code>struct</code></p> <pre><code>type Iframe struct{}\n</code></pre>"},{"location":"api/markup/elements/#iframekey","title":"Iframe.Key","text":"<pre><code>func (p Iframe) Key() string\n</code></pre>"},{"location":"api/markup/elements/#img","title":"Img","text":"<p><code>struct</code></p> <pre><code>type Img struct{}\n</code></pre>"},{"location":"api/markup/elements/#imgkey","title":"Img.Key","text":"<pre><code>func (p Img) Key() string\n</code></pre>"},{"location":"api/markup/elements/#input","title":"Input","text":"<p><code>struct</code></p> <pre><code>type Input struct{}\n</code></pre>"},{"location":"api/markup/elements/#inputkey","title":"Input.Key","text":"<pre><code>func (p Input) Key() string\n</code></pre>"},{"location":"api/markup/elements/#ins","title":"Ins","text":"<p><code>struct</code></p> <pre><code>type Ins struct{}\n</code></pre>"},{"location":"api/markup/elements/#inskey","title":"Ins.Key","text":"<pre><code>func (p Ins) Key() string\n</code></pre>"},{"location":"api/markup/elements/#kbd","title":"Kbd","text":"<p><code>struct</code></p> <pre><code>type Kbd struct{}\n</code></pre>"},{"location":"api/markup/elements/#kbdkey","title":"Kbd.Key","text":"<pre><code>func (p Kbd) Key() string\n</code></pre>"},{"location":"api/markup/elements/#label","title":"Label","text":"<p><code>struct</code></p> <pre><code>type Label struct{}\n</code></pre>"},{"location":"api/markup/elements/#labelkey","title":"Label.Key","text":"<pre><code>func (p Label) Key() string\n</code></pre>"},{"location":"api/markup/elements/#legend","title":"Legend","text":"<p><code>struct</code></p> <pre><code>type Legend struct{}\n</code></pre>"},{"location":"api/markup/elements/#legendkey","title":"Legend.Key","text":"<pre><code>func (p Legend) Key() string\n</code></pre>"},{"location":"api/markup/elements/#li","title":"Li","text":"<p><code>struct</code></p> <pre><code>type Li struct{}\n</code></pre>"},{"location":"api/markup/elements/#likey","title":"Li.Key","text":"<pre><code>func (p Li) Key() string\n</code></pre>"},{"location":"api/markup/elements/#link","title":"Link","text":"<p><code>struct</code></p> <pre><code>type Link struct{}\n</code></pre>"},{"location":"api/markup/elements/#linkkey","title":"Link.Key","text":"<pre><code>func (p Link) Key() string\n</code></pre>"},{"location":"api/markup/elements/#main","title":"Main","text":"<p><code>struct</code></p> <pre><code>type Main struct{}\n</code></pre>"},{"location":"api/markup/elements/#mainkey","title":"Main.Key","text":"<pre><code>func (p Main) Key() string\n</code></pre>"},{"location":"api/markup/elements/#map","title":"Map","text":"<p><code>struct</code></p> <pre><code>type Map struct{}\n</code></pre>"},{"location":"api/markup/elements/#mapkey","title":"Map.Key","text":"<pre><code>func (p Map) Key() string\n</code></pre>"},{"location":"api/markup/elements/#mark","title":"Mark","text":"<p><code>struct</code></p> <pre><code>type Mark struct{}\n</code></pre>"},{"location":"api/markup/elements/#markkey","title":"Mark.Key","text":"<pre><code>func (p Mark) Key() string\n</code></pre>"},{"location":"api/markup/elements/#menu","title":"Menu","text":"<p><code>struct</code></p> <pre><code>type Menu struct{}\n</code></pre>"},{"location":"api/markup/elements/#menukey","title":"Menu.Key","text":"<pre><code>func (p Menu) Key() string\n</code></pre>"},{"location":"api/markup/elements/#meta","title":"Meta","text":"<p><code>struct</code></p> <pre><code>type Meta struct{}\n</code></pre>"},{"location":"api/markup/elements/#metakey","title":"Meta.Key","text":"<pre><code>func (p Meta) Key() string\n</code></pre>"},{"location":"api/markup/elements/#meter","title":"Meter","text":"<p><code>struct</code></p> <pre><code>type Meter struct{}\n</code></pre>"},{"location":"api/markup/elements/#meterkey","title":"Meter.Key","text":"<pre><code>func (p Meter) Key() string\n</code></pre>"},{"location":"api/markup/elements/#nav","title":"Nav","text":"<p><code>struct</code></p> <pre><code>type Nav struct{}\n</code></pre>"},{"location":"api/markup/elements/#navkey","title":"Nav.Key","text":"<pre><code>func (p Nav) Key() string\n</code></pre>"},{"location":"api/markup/elements/#noscript","title":"Noscript","text":"<p><code>struct</code></p> <pre><code>type Noscript struct{}\n</code></pre>"},{"location":"api/markup/elements/#noscriptkey","title":"Noscript.Key","text":"<pre><code>func (p Noscript) Key() string\n</code></pre>"},{"location":"api/markup/elements/#object","title":"Object","text":"<p><code>struct</code></p> <pre><code>type Object struct{}\n</code></pre>"},{"location":"api/markup/elements/#objectkey","title":"Object.Key","text":"<pre><code>func (p Object) Key() string\n</code></pre>"},{"location":"api/markup/elements/#ol","title":"Ol","text":"<p><code>struct</code></p> <pre><code>type Ol struct{}\n</code></pre>"},{"location":"api/markup/elements/#olkey","title":"Ol.Key","text":"<pre><code>func (p Ol) Key() string\n</code></pre>"},{"location":"api/markup/elements/#optgroup","title":"Optgroup","text":"<p><code>struct</code></p> <pre><code>type Optgroup struct{}\n</code></pre>"},{"location":"api/markup/elements/#optgroupkey","title":"Optgroup.Key","text":"<pre><code>func (p Optgroup) Key() string\n</code></pre>"},{"location":"api/markup/elements/#option","title":"Option","text":"<p><code>struct</code></p> <pre><code>type Option struct{}\n</code></pre>"},{"location":"api/markup/elements/#optionkey","title":"Option.Key","text":"<pre><code>func (p Option) Key() string\n</code></pre>"},{"location":"api/markup/elements/#output","title":"Output","text":"<p><code>struct</code></p> <pre><code>type Output struct{}\n</code></pre>"},{"location":"api/markup/elements/#outputkey","title":"Output.Key","text":"<pre><code>func (p Output) Key() string\n</code></pre>"},{"location":"api/markup/elements/#p","title":"P","text":"<p><code>struct</code></p> <pre><code>type P struct{}\n</code></pre>"},{"location":"api/markup/elements/#pkey","title":"P.Key","text":"<pre><code>func (p P) Key() string\n</code></pre>"},{"location":"api/markup/elements/#picture","title":"Picture","text":"<p><code>struct</code></p> <pre><code>type Picture struct{}\n</code></pre>"},{"location":"api/markup/elements/#picturekey","title":"Picture.Key","text":"<pre><code>func (p Picture) Key() string\n</code></pre>"},{"location":"api/markup/elements/#pre","title":"Pre","text":"<p><code>struct</code></p> <pre><code>type Pre struct{}\n</code></pre>"},{"location":"api/markup/elements/#prekey","title":"Pre.Key","text":"<pre><code>func (p Pre) Key() string\n</code></pre>"},{"location":"api/markup/elements/#progress","title":"Progress","text":"<p><code>struct</code></p> <pre><code>type Progress struct{}\n</code></pre>"},{"location":"api/markup/elements/#progresskey","title":"Progress.Key","text":"<pre><code>func (p Progress) Key() string\n</code></pre>"},{"location":"api/markup/elements/#q","title":"Q","text":"<p><code>struct</code></p> <pre><code>type Q struct{}\n</code></pre>"},{"location":"api/markup/elements/#qkey","title":"Q.Key","text":"<pre><code>func (p Q) Key() string\n</code></pre>"},{"location":"api/markup/elements/#rp","title":"Rp","text":"<p><code>struct</code></p> <pre><code>type Rp struct{}\n</code></pre>"},{"location":"api/markup/elements/#rpkey","title":"Rp.Key","text":"<pre><code>func (p Rp) Key() string\n</code></pre>"},{"location":"api/markup/elements/#rt","title":"Rt","text":"<p><code>struct</code></p> <pre><code>type Rt struct{}\n</code></pre>"},{"location":"api/markup/elements/#rtkey","title":"Rt.Key","text":"<pre><code>func (p Rt) Key() string\n</code></pre>"},{"location":"api/markup/elements/#ruby","title":"Ruby","text":"<p><code>struct</code></p> <pre><code>type Ruby struct{}\n</code></pre>"},{"location":"api/markup/elements/#rubykey","title":"Ruby.Key","text":"<pre><code>func (p Ruby) Key() string\n</code></pre>"},{"location":"api/markup/elements/#s","title":"S","text":"<p><code>struct</code></p> <pre><code>type S struct{}\n</code></pre>"},{"location":"api/markup/elements/#skey","title":"S.Key","text":"<pre><code>func (p S) Key() string\n</code></pre>"},{"location":"api/markup/elements/#samp","title":"Samp","text":"<p><code>struct</code></p> <pre><code>type Samp struct{}\n</code></pre>"},{"location":"api/markup/elements/#sampkey","title":"Samp.Key","text":"<pre><code>func (p Samp) Key() string\n</code></pre>"},{"location":"api/markup/elements/#script","title":"Script","text":"<p><code>struct</code></p> <pre><code>type Script struct{}\n</code></pre>"},{"location":"api/markup/elements/#scriptkey","title":"Script.Key","text":"<pre><code>func (p Script) Key() string\n</code></pre>"},{"location":"api/markup/elements/#search","title":"Search","text":"<p><code>struct</code></p> <pre><code>type Search struct{}\n</code></pre>"},{"location":"api/markup/elements/#searchkey","title":"Search.Key","text":"<pre><code>func (p Search) Key() string\n</code></pre>"},{"location":"api/markup/elements/#section","title":"Section","text":"<p><code>struct</code></p> <pre><code>type Section struct{}\n</code></pre>"},{"location":"api/markup/elements/#sectionkey","title":"Section.Key","text":"<pre><code>func (p Section) Key() string\n</code></pre>"},{"location":"api/markup/elements/#select","title":"Select","text":"<p><code>struct</code></p> <pre><code>type Select struct{}\n</code></pre>"},{"location":"api/markup/elements/#selectkey","title":"Select.Key","text":"<pre><code>func (p Select) Key() string\n</code></pre>"},{"location":"api/markup/elements/#slot","title":"Slot","text":"<p><code>struct</code></p> <pre><code>type Slot struct{}\n</code></pre>"},{"location":"api/markup/elements/#slotkey","title":"Slot.Key","text":"<pre><code>func (p Slot) Key() string\n</code></pre>"},{"location":"api/markup/elements/#small","title":"Small","text":"<p><code>struct</code></p> <pre><code>type Small struct{}\n</code></pre>"},{"location":"api/markup/elements/#smallkey","title":"Small.Key","text":"<pre><code>func (p Small) Key() string\n</code></pre>"},{"location":"api/markup/elements/#source","title":"Source","text":"<p><code>struct</code></p> <pre><code>type Source struct{}\n</code></pre>"},{"location":"api/markup/elements/#sourcekey","title":"Source.Key","text":"<pre><code>func (p Source) Key() string\n</code></pre>"},{"location":"api/markup/elements/#span","title":"Span","text":"<p><code>struct</code></p> <pre><code>type Span struct{}\n</code></pre>"},{"location":"api/markup/elements/#spankey","title":"Span.Key","text":"<pre><code>func (p Span) Key() string\n</code></pre>"},{"location":"api/markup/elements/#strong","title":"Strong","text":"<p><code>struct</code></p> <pre><code>type Strong struct{}\n</code></pre>"},{"location":"api/markup/elements/#strongkey","title":"Strong.Key","text":"<pre><code>func (p Strong) Key() string\n</code></pre>"},{"location":"api/markup/elements/#style","title":"Style","text":"<p><code>struct</code></p> <pre><code>type Style struct{}\n</code></pre>"},{"location":"api/markup/elements/#stylekey","title":"Style.Key","text":"<pre><code>func (p Style) Key() string\n</code></pre>"},{"location":"api/markup/elements/#sub","title":"Sub","text":"<p><code>struct</code></p> <pre><code>type Sub struct{}\n</code></pre>"},{"location":"api/markup/elements/#subkey","title":"Sub.Key","text":"<pre><code>func (p Sub) Key() string\n</code></pre>"},{"location":"api/markup/elements/#summary","title":"Summary","text":"<p><code>struct</code></p> <pre><code>type Summary struct{}\n</code></pre>"},{"location":"api/markup/elements/#summarykey","title":"Summary.Key","text":"<pre><code>func (p Summary) Key() string\n</code></pre>"},{"location":"api/markup/elements/#sup","title":"Sup","text":"<p><code>struct</code></p> <pre><code>type Sup struct{}\n</code></pre>"},{"location":"api/markup/elements/#supkey","title":"Sup.Key","text":"<pre><code>func (p Sup) Key() string\n</code></pre>"},{"location":"api/markup/elements/#table","title":"Table","text":"<p><code>struct</code></p> <pre><code>type Table struct{}\n</code></pre>"},{"location":"api/markup/elements/#tablekey","title":"Table.Key","text":"<pre><code>func (p Table) Key() string\n</code></pre>"},{"location":"api/markup/elements/#tbody","title":"Tbody","text":"<p><code>struct</code></p> <pre><code>type Tbody struct{}\n</code></pre>"},{"location":"api/markup/elements/#tbodykey","title":"Tbody.Key","text":"<pre><code>func (p Tbody) Key() string\n</code></pre>"},{"location":"api/markup/elements/#td","title":"Td","text":"<p><code>struct</code></p> <pre><code>type Td struct{}\n</code></pre>"},{"location":"api/markup/elements/#tdkey","title":"Td.Key","text":"<pre><code>func (p Td) Key() string\n</code></pre>"},{"location":"api/markup/elements/#template","title":"Template","text":"<p><code>struct</code></p> <pre><code>type Template struct{}\n</code></pre>"},{"location":"api/markup/elements/#templatekey","title":"Template.Key","text":"<pre><code>func (p Template) Key() string\n</code></pre>"},{"location":"api/markup/elements/#textarea","title":"Textarea","text":"<p><code>struct</code></p> <pre><code>type Textarea struct{}\n</code></pre>"},{"location":"api/markup/elements/#textareakey","title":"Textarea.Key","text":"<pre><code>func (p Textarea) Key() string\n</code></pre>"},{"location":"api/markup/elements/#tfoot","title":"Tfoot","text":"<p><code>struct</code></p> <pre><code>type Tfoot struct{}\n</code></pre>"},{"location":"api/markup/elements/#tfootkey","title":"Tfoot.Key","text":"<pre><code>func (p Tfoot) Key() string\n</code></pre>"},{"location":"api/markup/elements/#th","title":"Th","text":"<p><code>struct</code></p> <pre><code>type Th struct{}\n</code></pre>"},{"location":"api/markup/elements/#thkey","title":"Th.Key","text":"<pre><code>func (p Th) Key() string\n</code></pre>"},{"location":"api/markup/elements/#thead","title":"Thead","text":"<p><code>struct</code></p> <pre><code>type Thead struct{}\n</code></pre>"},{"location":"api/markup/elements/#theadkey","title":"Thead.Key","text":"<pre><code>func (p Thead) Key() string\n</code></pre>"},{"location":"api/markup/elements/#time","title":"Time","text":"<p><code>struct</code></p> <pre><code>type Time struct{}\n</code></pre>"},{"location":"api/markup/elements/#timekey","title":"Time.Key","text":"<pre><code>func (p Time) Key() string\n</code></pre>"},{"location":"api/markup/elements/#title","title":"Title","text":"<p><code>struct</code></p> <pre><code>type Title struct{}\n</code></pre>"},{"location":"api/markup/elements/#titlekey","title":"Title.Key","text":"<pre><code>func (p Title) Key() string\n</code></pre>"},{"location":"api/markup/elements/#tr","title":"Tr","text":"<p><code>struct</code></p> <pre><code>type Tr struct{}\n</code></pre>"},{"location":"api/markup/elements/#trkey","title":"Tr.Key","text":"<pre><code>func (p Tr) Key() string\n</code></pre>"},{"location":"api/markup/elements/#track","title":"Track","text":"<p><code>struct</code></p> <pre><code>type Track struct{}\n</code></pre>"},{"location":"api/markup/elements/#trackkey","title":"Track.Key","text":"<pre><code>func (p Track) Key() string\n</code></pre>"},{"location":"api/markup/elements/#u","title":"U","text":"<p><code>struct</code></p> <pre><code>type U struct{}\n</code></pre>"},{"location":"api/markup/elements/#ukey","title":"U.Key","text":"<pre><code>func (p U) Key() string\n</code></pre>"},{"location":"api/markup/elements/#ul","title":"Ul","text":"<p><code>struct</code></p> <pre><code>type Ul struct{}\n</code></pre>"},{"location":"api/markup/elements/#ulkey","title":"Ul.Key","text":"<pre><code>func (p Ul) Key() string\n</code></pre>"},{"location":"api/markup/elements/#var","title":"Var","text":"<p><code>struct</code></p> <pre><code>type Var struct{}\n</code></pre>"},{"location":"api/markup/elements/#varkey","title":"Var.Key","text":"<pre><code>func (p Var) Key() string\n</code></pre>"},{"location":"api/markup/elements/#video","title":"Video","text":"<p><code>struct</code></p> <pre><code>type Video struct{}\n</code></pre>"},{"location":"api/markup/elements/#videokey","title":"Video.Key","text":"<pre><code>func (p Video) Key() string\n</code></pre>"},{"location":"api/markup/elements/#wbr","title":"Wbr","text":"<p><code>struct</code></p> <pre><code>type Wbr struct{}\n</code></pre>"},{"location":"api/markup/elements/#wbrkey","title":"Wbr.Key","text":"<pre><code>func (p Wbr) Key() string\n</code></pre>"},{"location":"api/markup/spec_generator/","title":"package spec_generator","text":"<pre><code>import \"kaiju/markup/spec_generator\"\n</code></pre>"},{"location":"api/matrix/","title":"package matrix","text":"<pre><code>import \"kaiju/matrix\"\n</code></pre>"},{"location":"api/matrix/#constants","title":"Constants","text":""},{"location":"api/matrix/#mat4row0","title":"Mat4Row0","text":"<p><code>iota</code></p>"},{"location":"api/matrix/#mat4row1","title":"Mat4Row1","text":""},{"location":"api/matrix/#mat4row2","title":"Mat4Row2","text":""},{"location":"api/matrix/#mat4row3","title":"Mat4Row3","text":""},{"location":"api/matrix/#mat4col0","title":"Mat4Col0","text":"<p><code>iota</code></p>"},{"location":"api/matrix/#mat4col1","title":"Mat4Col1","text":""},{"location":"api/matrix/#mat4col2","title":"Mat4Col2","text":""},{"location":"api/matrix/#mat4col3","title":"Mat4Col3","text":""},{"location":"api/matrix/#mat4x0y0","title":"Mat4x0y0","text":"<p><code>x0y0</code></p>"},{"location":"api/matrix/#mat4x1y0","title":"Mat4x1y0","text":"<p><code>x1y0</code></p>"},{"location":"api/matrix/#mat4x2y0","title":"Mat4x2y0","text":"<p><code>x2y0</code></p>"},{"location":"api/matrix/#mat4x3y0","title":"Mat4x3y0","text":"<p><code>x3y0</code></p>"},{"location":"api/matrix/#mat4x0y1","title":"Mat4x0y1","text":"<p><code>x0y1</code></p>"},{"location":"api/matrix/#mat4x1y1","title":"Mat4x1y1","text":"<p><code>x1y1</code></p>"},{"location":"api/matrix/#mat4x2y1","title":"Mat4x2y1","text":"<p><code>x2y1</code></p>"},{"location":"api/matrix/#mat4x3y1","title":"Mat4x3y1","text":"<p><code>x3y1</code></p>"},{"location":"api/matrix/#mat4x0y2","title":"Mat4x0y2","text":"<p><code>x0y2</code></p>"},{"location":"api/matrix/#mat4x1y2","title":"Mat4x1y2","text":"<p><code>x1y2</code></p>"},{"location":"api/matrix/#mat4x2y2","title":"Mat4x2y2","text":"<p><code>x2y2</code></p>"},{"location":"api/matrix/#mat4x3y2","title":"Mat4x3y2","text":"<p><code>x3y2</code></p>"},{"location":"api/matrix/#mat4x0y3","title":"Mat4x0y3","text":"<p><code>x0y3</code></p>"},{"location":"api/matrix/#mat4x1y3","title":"Mat4x1y3","text":"<p><code>x1y3</code></p>"},{"location":"api/matrix/#mat4x2y3","title":"Mat4x2y3","text":"<p><code>x2y3</code></p>"},{"location":"api/matrix/#mat4x3y3","title":"Mat4x3y3","text":"<p><code>x3y3</code></p>"},{"location":"api/matrix/#transformworkgroup","title":"TransformWorkGroup","text":"<p><code>\"transform\"</code></p>"},{"location":"api/matrix/#transformresetworkgroup","title":"TransformResetWorkGroup","text":"<p><code>\"transformReset\"</code></p>"},{"location":"api/matrix/#functions","title":"Functions","text":""},{"location":"api/matrix/#absint","title":"AbsInt","text":"<pre><code>func AbsInt(a int) int\n</code></pre>"},{"location":"api/matrix/#approx","title":"Approx","text":"<pre><code>func Approx(a, b Float) bool\n</code></pre>"},{"location":"api/matrix/#approxto","title":"ApproxTo","text":"<pre><code>func ApproxTo(a, b, tolerance Float) bool\n</code></pre>"},{"location":"api/matrix/#isinf","title":"IsInf","text":"<pre><code>func IsInf(x Float, sign int) bool\n</code></pre>"},{"location":"api/matrix/#isnan","title":"IsNaN","text":"<pre><code>func IsNaN(x Float) bool\n</code></pre>"},{"location":"api/matrix/#quaternionapprox","title":"QuaternionApprox","text":"<pre><code>func QuaternionApprox(a, b Quaternion) bool\n</code></pre>"},{"location":"api/matrix/#vec2approx","title":"Vec2Approx","text":"<pre><code>func Vec2Approx(a, b Vec2) bool\n</code></pre>"},{"location":"api/matrix/#vec2approxto","title":"Vec2ApproxTo","text":"<pre><code>func Vec2ApproxTo(a, b Vec2, delta Float) bool\n</code></pre>"},{"location":"api/matrix/#vec2roughly","title":"Vec2Roughly","text":"<pre><code>func Vec2Roughly(a, b Vec2) bool\n</code></pre>"},{"location":"api/matrix/#vec3approx","title":"Vec3Approx","text":"<pre><code>func Vec3Approx(a, b Vec3) bool\n</code></pre>"},{"location":"api/matrix/#vec3approxto","title":"Vec3ApproxTo","text":"<pre><code>func Vec3ApproxTo(a, b Vec3, delta Float) bool\n</code></pre>"},{"location":"api/matrix/#vec4approx","title":"Vec4Approx","text":"<pre><code>func Vec4Approx(a, b Vec4) bool\n</code></pre>"},{"location":"api/matrix/#vec4approxto","title":"Vec4ApproxTo","text":"<pre><code>func Vec4ApproxTo(a, b Vec4, delta Float) bool\n</code></pre>"},{"location":"api/matrix/#types","title":"Types","text":""},{"location":"api/matrix/#color","title":"Color","text":"<p>Vec4 <pre><code>type Color Vec4\n</code></pre></p>"},{"location":"api/matrix/#coloraqua","title":"ColorAqua","text":"<pre><code>func ColorAqua() Color\n</code></pre>"},{"location":"api/matrix/#coloraquamarine","title":"ColorAquamarine","text":"<pre><code>func ColorAquamarine() Color\n</code></pre>"},{"location":"api/matrix/#colorazure","title":"ColorAzure","text":"<pre><code>func ColorAzure() Color\n</code></pre>"},{"location":"api/matrix/#colorbeige","title":"ColorBeige","text":"<pre><code>func ColorBeige() Color\n</code></pre>"},{"location":"api/matrix/#colorbisque","title":"ColorBisque","text":"<pre><code>func ColorBisque() Color\n</code></pre>"},{"location":"api/matrix/#colorblack","title":"ColorBlack","text":"<pre><code>func ColorBlack() Color\n</code></pre>"},{"location":"api/matrix/#colorblanchedalmond","title":"ColorBlanchedAlmond","text":"<pre><code>func ColorBlanchedAlmond() Color\n</code></pre>"},{"location":"api/matrix/#colorblue","title":"ColorBlue","text":"<pre><code>func ColorBlue() Color\n</code></pre>"},{"location":"api/matrix/#colorblueviolet","title":"ColorBlueViolet","text":"<pre><code>func ColorBlueViolet() Color\n</code></pre>"},{"location":"api/matrix/#colorbrown","title":"ColorBrown","text":"<pre><code>func ColorBrown() Color\n</code></pre>"},{"location":"api/matrix/#colorburlywood","title":"ColorBurlyWood","text":"<pre><code>func ColorBurlyWood() Color\n</code></pre>"},{"location":"api/matrix/#colorcadetblue","title":"ColorCadetBlue","text":"<pre><code>func ColorCadetBlue() Color\n</code></pre>"},{"location":"api/matrix/#colorchartreuse","title":"ColorChartreuse","text":"<pre><code>func ColorChartreuse() Color\n</code></pre>"},{"location":"api/matrix/#colorchocolate","title":"ColorChocolate","text":"<pre><code>func ColorChocolate() Color\n</code></pre>"},{"location":"api/matrix/#colorclear","title":"ColorClear","text":"<pre><code>func ColorClear() Color\n</code></pre>"},{"location":"api/matrix/#colorcoral","title":"ColorCoral","text":"<pre><code>func ColorCoral() Color\n</code></pre>"},{"location":"api/matrix/#colorcornsilk","title":"ColorCornSilk","text":"<pre><code>func ColorCornSilk() Color\n</code></pre>"},{"location":"api/matrix/#colorcornflowerblue","title":"ColorCornflowerBlue","text":"<pre><code>func ColorCornflowerBlue() Color\n</code></pre>"},{"location":"api/matrix/#colorcrimson","title":"ColorCrimson","text":"<pre><code>func ColorCrimson() Color\n</code></pre>"},{"location":"api/matrix/#colorcyan","title":"ColorCyan","text":"<pre><code>func ColorCyan() Color\n</code></pre>"},{"location":"api/matrix/#colordarkbg","title":"ColorDarkBG","text":"<pre><code>func ColorDarkBG() Color\n</code></pre>"},{"location":"api/matrix/#colordarkblue","title":"ColorDarkBlue","text":"<pre><code>func ColorDarkBlue() Color\n</code></pre>"},{"location":"api/matrix/#colordarkcyan","title":"ColorDarkCyan","text":"<pre><code>func ColorDarkCyan() Color\n</code></pre>"},{"location":"api/matrix/#colordarkgoldenrod","title":"ColorDarkGoldenrod","text":"<pre><code>func ColorDarkGoldenrod() Color\n</code></pre>"},{"location":"api/matrix/#colordarkgray","title":"ColorDarkGray","text":"<pre><code>func ColorDarkGray() Color\n</code></pre>"},{"location":"api/matrix/#colordarkgreen","title":"ColorDarkGreen","text":"<pre><code>func ColorDarkGreen() Color\n</code></pre>"},{"location":"api/matrix/#colordarkkhaki","title":"ColorDarkKhaki","text":"<pre><code>func ColorDarkKhaki() Color\n</code></pre>"},{"location":"api/matrix/#colordarkmagenta","title":"ColorDarkMagenta","text":"<pre><code>func ColorDarkMagenta() Color\n</code></pre>"},{"location":"api/matrix/#colordarkmodegraybg","title":"ColorDarkModeGrayBG","text":"<pre><code>func ColorDarkModeGrayBG() Color\n</code></pre>"},{"location":"api/matrix/#colordarkmodegrayfg","title":"ColorDarkModeGrayFG","text":"<pre><code>func ColorDarkModeGrayFG() Color\n</code></pre>"},{"location":"api/matrix/#colordarkolivegreen","title":"ColorDarkOliveGreen","text":"<pre><code>func ColorDarkOliveGreen() Color\n</code></pre>"},{"location":"api/matrix/#colordarkorange","title":"ColorDarkOrange","text":"<pre><code>func ColorDarkOrange() Color\n</code></pre>"},{"location":"api/matrix/#colordarkorchid","title":"ColorDarkOrchid","text":"<pre><code>func ColorDarkOrchid() Color\n</code></pre>"},{"location":"api/matrix/#colordarkred","title":"ColorDarkRed","text":"<pre><code>func ColorDarkRed() Color\n</code></pre>"},{"location":"api/matrix/#colordarksalmon","title":"ColorDarkSalmon","text":"<pre><code>func ColorDarkSalmon() Color\n</code></pre>"},{"location":"api/matrix/#colordarkseagreen","title":"ColorDarkSeaGreen","text":"<pre><code>func ColorDarkSeaGreen() Color\n</code></pre>"},{"location":"api/matrix/#colordarkslateblue","title":"ColorDarkSlateBlue","text":"<pre><code>func ColorDarkSlateBlue() Color\n</code></pre>"},{"location":"api/matrix/#colordarkslategray","title":"ColorDarkSlateGray","text":"<pre><code>func ColorDarkSlateGray() Color\n</code></pre>"},{"location":"api/matrix/#colordarkturquoise","title":"ColorDarkTurquoise","text":"<pre><code>func ColorDarkTurquoise() Color\n</code></pre>"},{"location":"api/matrix/#colordarkviolet","title":"ColorDarkViolet","text":"<pre><code>func ColorDarkViolet() Color\n</code></pre>"},{"location":"api/matrix/#colordeeppink","title":"ColorDeepPink","text":"<pre><code>func ColorDeepPink() Color\n</code></pre>"},{"location":"api/matrix/#colordeepskyblue","title":"ColorDeepSkyBlue","text":"<pre><code>func ColorDeepSkyBlue() Color\n</code></pre>"},{"location":"api/matrix/#colordimgray","title":"ColorDimGray","text":"<pre><code>func ColorDimGray() Color\n</code></pre>"},{"location":"api/matrix/#colordodgerblue","title":"ColorDodgerBlue","text":"<pre><code>func ColorDodgerBlue() Color\n</code></pre>"},{"location":"api/matrix/#colorfirebrick","title":"ColorFirebrick","text":"<pre><code>func ColorFirebrick() Color\n</code></pre>"},{"location":"api/matrix/#colorfloralwhite","title":"ColorFloralWhite","text":"<pre><code>func ColorFloralWhite() Color\n</code></pre>"},{"location":"api/matrix/#colorforestgreen","title":"ColorForestGreen","text":"<pre><code>func ColorForestGreen() Color\n</code></pre>"},{"location":"api/matrix/#colorfromcolor8","title":"ColorFromColor8","text":"<pre><code>func ColorFromColor8(c Color8) Color\n</code></pre>"},{"location":"api/matrix/#colorfromhexstring","title":"ColorFromHexString","text":"<pre><code>func ColorFromHexString(str string) (Color, error)\n</code></pre>"},{"location":"api/matrix/#colorfromvec3","title":"ColorFromVec3","text":"<pre><code>func ColorFromVec3(v Vec3) Color\n</code></pre>"},{"location":"api/matrix/#colorfromvec4","title":"ColorFromVec4","text":"<pre><code>func ColorFromVec4(v Vec4) Color\n</code></pre>"},{"location":"api/matrix/#colorfuchsia","title":"ColorFuchsia","text":"<pre><code>func ColorFuchsia() Color\n</code></pre>"},{"location":"api/matrix/#colorgainsboro","title":"ColorGainsboro","text":"<pre><code>func ColorGainsboro() Color\n</code></pre>"},{"location":"api/matrix/#colorghostwhite","title":"ColorGhostWhite","text":"<pre><code>func ColorGhostWhite() Color\n</code></pre>"},{"location":"api/matrix/#colorgold","title":"ColorGold","text":"<pre><code>func ColorGold() Color\n</code></pre>"},{"location":"api/matrix/#colorgoldenrod","title":"ColorGoldenrod","text":"<pre><code>func ColorGoldenrod() Color\n</code></pre>"},{"location":"api/matrix/#colorgray","title":"ColorGray","text":"<pre><code>func ColorGray() Color\n</code></pre>"},{"location":"api/matrix/#colorgreen","title":"ColorGreen","text":"<pre><code>func ColorGreen() Color\n</code></pre>"},{"location":"api/matrix/#colorgreenyellow","title":"ColorGreenYellow","text":"<pre><code>func ColorGreenYellow() Color\n</code></pre>"},{"location":"api/matrix/#colorhoneydew","title":"ColorHoneydew","text":"<pre><code>func ColorHoneydew() Color\n</code></pre>"},{"location":"api/matrix/#colorhotpink","title":"ColorHotPink","text":"<pre><code>func ColorHotPink() Color\n</code></pre>"},{"location":"api/matrix/#colorindianred","title":"ColorIndianRed","text":"<pre><code>func ColorIndianRed() Color\n</code></pre>"},{"location":"api/matrix/#colorindigo","title":"ColorIndigo","text":"<pre><code>func ColorIndigo() Color\n</code></pre>"},{"location":"api/matrix/#colorivory","title":"ColorIvory","text":"<pre><code>func ColorIvory() Color\n</code></pre>"},{"location":"api/matrix/#colorkhaki","title":"ColorKhaki","text":"<pre><code>func ColorKhaki() Color\n</code></pre>"},{"location":"api/matrix/#colorlavender","title":"ColorLavender","text":"<pre><code>func ColorLavender() Color\n</code></pre>"},{"location":"api/matrix/#colorlavenderblush","title":"ColorLavenderBlush","text":"<pre><code>func ColorLavenderBlush() Color\n</code></pre>"},{"location":"api/matrix/#colorlawngreen","title":"ColorLawnGreen","text":"<pre><code>func ColorLawnGreen() Color\n</code></pre>"},{"location":"api/matrix/#colorlemonchiffon","title":"ColorLemonChiffon","text":"<pre><code>func ColorLemonChiffon() Color\n</code></pre>"},{"location":"api/matrix/#colorlightblue","title":"ColorLightBlue","text":"<pre><code>func ColorLightBlue() Color\n</code></pre>"},{"location":"api/matrix/#colorlightcoral","title":"ColorLightCoral","text":"<pre><code>func ColorLightCoral() Color\n</code></pre>"},{"location":"api/matrix/#colorlightcyan","title":"ColorLightCyan","text":"<pre><code>func ColorLightCyan() Color\n</code></pre>"},{"location":"api/matrix/#colorlightgoldenrodyellow","title":"ColorLightGoldenrodYellow","text":"<pre><code>func ColorLightGoldenrodYellow() Color\n</code></pre>"},{"location":"api/matrix/#colorlightgreen","title":"ColorLightGreen","text":"<pre><code>func ColorLightGreen() Color\n</code></pre>"},{"location":"api/matrix/#colorlightgrey","title":"ColorLightGrey","text":"<pre><code>func ColorLightGrey() Color\n</code></pre>"},{"location":"api/matrix/#colorlightpink","title":"ColorLightPink","text":"<pre><code>func ColorLightPink() Color\n</code></pre>"},{"location":"api/matrix/#colorlightsalmon","title":"ColorLightSalmon","text":"<pre><code>func ColorLightSalmon() Color\n</code></pre>"},{"location":"api/matrix/#colorlightseagreen","title":"ColorLightSeaGreen","text":"<pre><code>func ColorLightSeaGreen() Color\n</code></pre>"},{"location":"api/matrix/#colorlightskyblue","title":"ColorLightSkyBlue","text":"<pre><code>func ColorLightSkyBlue() Color\n</code></pre>"},{"location":"api/matrix/#colorlightslategray","title":"ColorLightSlateGray","text":"<pre><code>func ColorLightSlateGray() Color\n</code></pre>"},{"location":"api/matrix/#colorlightsteelblue","title":"ColorLightSteelBlue","text":"<pre><code>func ColorLightSteelBlue() Color\n</code></pre>"},{"location":"api/matrix/#colorlightyellow","title":"ColorLightYellow","text":"<pre><code>func ColorLightYellow() Color\n</code></pre>"},{"location":"api/matrix/#colorlime","title":"ColorLime","text":"<pre><code>func ColorLime() Color\n</code></pre>"},{"location":"api/matrix/#colorlimegreen","title":"ColorLimeGreen","text":"<pre><code>func ColorLimeGreen() Color\n</code></pre>"},{"location":"api/matrix/#colorlinen","title":"ColorLinen","text":"<pre><code>func ColorLinen() Color\n</code></pre>"},{"location":"api/matrix/#colormagenta","title":"ColorMagenta","text":"<pre><code>func ColorMagenta() Color\n</code></pre>"},{"location":"api/matrix/#colormaroon","title":"ColorMaroon","text":"<pre><code>func ColorMaroon() Color\n</code></pre>"},{"location":"api/matrix/#colormediumaquamarine","title":"ColorMediumAquamarine","text":"<pre><code>func ColorMediumAquamarine() Color\n</code></pre>"},{"location":"api/matrix/#colormediumblue","title":"ColorMediumBlue","text":"<pre><code>func ColorMediumBlue() Color\n</code></pre>"},{"location":"api/matrix/#colormediumorchid","title":"ColorMediumOrchid","text":"<pre><code>func ColorMediumOrchid() Color\n</code></pre>"},{"location":"api/matrix/#colormediumpurple","title":"ColorMediumPurple","text":"<pre><code>func ColorMediumPurple() Color\n</code></pre>"},{"location":"api/matrix/#colormediumseagreen","title":"ColorMediumSeaGreen","text":"<pre><code>func ColorMediumSeaGreen() Color\n</code></pre>"},{"location":"api/matrix/#colormediumslateblue","title":"ColorMediumSlateBlue","text":"<pre><code>func ColorMediumSlateBlue() Color\n</code></pre>"},{"location":"api/matrix/#colormediumspringgreen","title":"ColorMediumSpringGreen","text":"<pre><code>func ColorMediumSpringGreen() Color\n</code></pre>"},{"location":"api/matrix/#colormediumturquoise","title":"ColorMediumTurquoise","text":"<pre><code>func ColorMediumTurquoise() Color\n</code></pre>"},{"location":"api/matrix/#colormediumvioletred","title":"ColorMediumVioletRed","text":"<pre><code>func ColorMediumVioletRed() Color\n</code></pre>"},{"location":"api/matrix/#colormidnightblue","title":"ColorMidnightBlue","text":"<pre><code>func ColorMidnightBlue() Color\n</code></pre>"},{"location":"api/matrix/#colormintcream","title":"ColorMintCream","text":"<pre><code>func ColorMintCream() Color\n</code></pre>"},{"location":"api/matrix/#colormistyrose","title":"ColorMistyRose","text":"<pre><code>func ColorMistyRose() Color\n</code></pre>"},{"location":"api/matrix/#colormix","title":"ColorMix","text":"<pre><code>func ColorMix(lhs, rhs Color, amount Float) Color\n</code></pre>"},{"location":"api/matrix/#colormoccasin","title":"ColorMoccasin","text":"<pre><code>func ColorMoccasin() Color\n</code></pre>"},{"location":"api/matrix/#colornavajowhite","title":"ColorNavajoWhite","text":"<pre><code>func ColorNavajoWhite() Color\n</code></pre>"},{"location":"api/matrix/#colornavy","title":"ColorNavy","text":"<pre><code>func ColorNavy() Color\n</code></pre>"},{"location":"api/matrix/#coloroldlace","title":"ColorOldLace","text":"<pre><code>func ColorOldLace() Color\n</code></pre>"},{"location":"api/matrix/#colorolive","title":"ColorOlive","text":"<pre><code>func ColorOlive() Color\n</code></pre>"},{"location":"api/matrix/#colorolivedrab","title":"ColorOliveDrab","text":"<pre><code>func ColorOliveDrab() Color\n</code></pre>"},{"location":"api/matrix/#colororange","title":"ColorOrange","text":"<pre><code>func ColorOrange() Color\n</code></pre>"},{"location":"api/matrix/#colororangered","title":"ColorOrangeRed","text":"<pre><code>func ColorOrangeRed() Color\n</code></pre>"},{"location":"api/matrix/#colororchid","title":"ColorOrchid","text":"<pre><code>func ColorOrchid() Color\n</code></pre>"},{"location":"api/matrix/#colorpalegoldenrod","title":"ColorPaleGoldenrod","text":"<pre><code>func ColorPaleGoldenrod() Color\n</code></pre>"},{"location":"api/matrix/#colorpalegreen","title":"ColorPaleGreen","text":"<pre><code>func ColorPaleGreen() Color\n</code></pre>"},{"location":"api/matrix/#colorpaleturquoise","title":"ColorPaleTurquoise","text":"<pre><code>func ColorPaleTurquoise() Color\n</code></pre>"},{"location":"api/matrix/#colorpalevioletred","title":"ColorPaleVioletred","text":"<pre><code>func ColorPaleVioletred() Color\n</code></pre>"},{"location":"api/matrix/#colorpapayawhip","title":"ColorPapayaWhip","text":"<pre><code>func ColorPapayaWhip() Color\n</code></pre>"},{"location":"api/matrix/#colorpeachpuff","title":"ColorPeachPuff","text":"<pre><code>func ColorPeachPuff() Color\n</code></pre>"},{"location":"api/matrix/#colorperu","title":"ColorPeru","text":"<pre><code>func ColorPeru() Color\n</code></pre>"},{"location":"api/matrix/#colorpink","title":"ColorPink","text":"<pre><code>func ColorPink() Color\n</code></pre>"},{"location":"api/matrix/#colorplum","title":"ColorPlum","text":"<pre><code>func ColorPlum() Color\n</code></pre>"},{"location":"api/matrix/#colorpowderblue","title":"ColorPowderBlue","text":"<pre><code>func ColorPowderBlue() Color\n</code></pre>"},{"location":"api/matrix/#colorpurple","title":"ColorPurple","text":"<pre><code>func ColorPurple() Color\n</code></pre>"},{"location":"api/matrix/#colorrgbaint","title":"ColorRGBAInt","text":"<pre><code>func ColorRGBAInt(r, g, b, a int) Color\n</code></pre>"},{"location":"api/matrix/#colorrgbint","title":"ColorRGBInt","text":"<pre><code>func ColorRGBInt(r, g, b int) Color\n</code></pre>"},{"location":"api/matrix/#colorred","title":"ColorRed","text":"<pre><code>func ColorRed() Color\n</code></pre>"},{"location":"api/matrix/#colorrosybrown","title":"ColorRosyBrown","text":"<pre><code>func ColorRosyBrown() Color\n</code></pre>"},{"location":"api/matrix/#colorroyalblue","title":"ColorRoyalBlue","text":"<pre><code>func ColorRoyalBlue() Color\n</code></pre>"},{"location":"api/matrix/#colorsaddlebrown","title":"ColorSaddleBrown","text":"<pre><code>func ColorSaddleBrown() Color\n</code></pre>"},{"location":"api/matrix/#colorsalmon","title":"ColorSalmon","text":"<pre><code>func ColorSalmon() Color\n</code></pre>"},{"location":"api/matrix/#colorsandybrown","title":"ColorSandyBrown","text":"<pre><code>func ColorSandyBrown() Color\n</code></pre>"},{"location":"api/matrix/#colorseagreen","title":"ColorSeaGreen","text":"<pre><code>func ColorSeaGreen() Color\n</code></pre>"},{"location":"api/matrix/#colorseashell","title":"ColorSeashell","text":"<pre><code>func ColorSeashell() Color\n</code></pre>"},{"location":"api/matrix/#colorsienna","title":"ColorSienna","text":"<pre><code>func ColorSienna() Color\n</code></pre>"},{"location":"api/matrix/#colorsilver","title":"ColorSilver","text":"<pre><code>func ColorSilver() Color\n</code></pre>"},{"location":"api/matrix/#colorsky","title":"ColorSky","text":"<pre><code>func ColorSky() Color\n</code></pre>"},{"location":"api/matrix/#colorskyblue","title":"ColorSkyBlue","text":"<pre><code>func ColorSkyBlue() Color\n</code></pre>"},{"location":"api/matrix/#colorslateblue","title":"ColorSlateBlue","text":"<pre><code>func ColorSlateBlue() Color\n</code></pre>"},{"location":"api/matrix/#colorslategray","title":"ColorSlateGray","text":"<pre><code>func ColorSlateGray() Color\n</code></pre>"},{"location":"api/matrix/#colorslategrey","title":"ColorSlateGrey","text":"<pre><code>func ColorSlateGrey() Color\n</code></pre>"},{"location":"api/matrix/#colorsnow","title":"ColorSnow","text":"<pre><code>func ColorSnow() Color\n</code></pre>"},{"location":"api/matrix/#colorspringgreen","title":"ColorSpringGreen","text":"<pre><code>func ColorSpringGreen() Color\n</code></pre>"},{"location":"api/matrix/#colorsteelblue","title":"ColorSteelBlue","text":"<pre><code>func ColorSteelBlue() Color\n</code></pre>"},{"location":"api/matrix/#colortan","title":"ColorTan","text":"<pre><code>func ColorTan() Color\n</code></pre>"},{"location":"api/matrix/#colorteal","title":"ColorTeal","text":"<pre><code>func ColorTeal() Color\n</code></pre>"},{"location":"api/matrix/#colorthistle","title":"ColorThistle","text":"<pre><code>func ColorThistle() Color\n</code></pre>"},{"location":"api/matrix/#colortomato","title":"ColorTomato","text":"<pre><code>func ColorTomato() Color\n</code></pre>"},{"location":"api/matrix/#colortransparent","title":"ColorTransparent","text":"<pre><code>func ColorTransparent() Color\n</code></pre>"},{"location":"api/matrix/#colorturquoise","title":"ColorTurquoise","text":"<pre><code>func ColorTurquoise() Color\n</code></pre>"},{"location":"api/matrix/#colorviolet","title":"ColorViolet","text":"<pre><code>func ColorViolet() Color\n</code></pre>"},{"location":"api/matrix/#colorwheat","title":"ColorWheat","text":"<pre><code>func ColorWheat() Color\n</code></pre>"},{"location":"api/matrix/#colorwhite","title":"ColorWhite","text":"<pre><code>func ColorWhite() Color\n</code></pre>"},{"location":"api/matrix/#colorwhitesmoke","title":"ColorWhiteSmoke","text":"<pre><code>func ColorWhiteSmoke() Color\n</code></pre>"},{"location":"api/matrix/#coloryellow","title":"ColorYellow","text":"<pre><code>func ColorYellow() Color\n</code></pre>"},{"location":"api/matrix/#coloryellowgreen","title":"ColorYellowGreen","text":"<pre><code>func ColorYellowGreen() Color\n</code></pre>"},{"location":"api/matrix/#colorzero","title":"ColorZero","text":"<pre><code>func ColorZero() Color\n</code></pre>"},{"location":"api/matrix/#newcolor","title":"NewColor","text":"<pre><code>func NewColor(r, g, b, a Float) Color\n</code></pre>"},{"location":"api/matrix/#colora","title":"Color.A","text":"<pre><code>func (c Color) A() Float\n</code></pre>"},{"location":"api/matrix/#colorascolor8","title":"Color.AsColor8","text":"<pre><code>func (c Color) AsColor8() Color8\n</code></pre>"},{"location":"api/matrix/#colorb","title":"Color.B","text":"<pre><code>func (c Color) B() Float\n</code></pre>"},{"location":"api/matrix/#colorequals","title":"Color.Equals","text":"<pre><code>func (lhs Color) Equals(rhs Color) bool\n</code></pre>"},{"location":"api/matrix/#colorg","title":"Color.G","text":"<pre><code>func (c Color) G() Float\n</code></pre>"},{"location":"api/matrix/#colorhex","title":"Color.Hex","text":"<pre><code>func (c Color) Hex() string\n</code></pre>"},{"location":"api/matrix/#coloriszero","title":"Color.IsZero","text":"<pre><code>func (c Color) IsZero() bool\n</code></pre>"},{"location":"api/matrix/#colormultiplyassign","title":"Color.MultiplyAssign","text":"<pre><code>func (c *Color) MultiplyAssign(other Color)\n</code></pre>"},{"location":"api/matrix/#colorpa","title":"Color.PA","text":"<pre><code>func (c *Color) PA() *Float\n</code></pre>"},{"location":"api/matrix/#colorpb","title":"Color.PB","text":"<pre><code>func (c *Color) PB() *Float\n</code></pre>"},{"location":"api/matrix/#colorpg","title":"Color.PG","text":"<pre><code>func (c *Color) PG() *Float\n</code></pre>"},{"location":"api/matrix/#colorpr","title":"Color.PR","text":"<pre><code>func (c *Color) PR() *Float\n</code></pre>"},{"location":"api/matrix/#colorr","title":"Color.R","text":"<pre><code>func (c Color) R() Float\n</code></pre>"},{"location":"api/matrix/#colorrgba","title":"Color.RGBA","text":"<pre><code>func (c Color) RGBA() (Float, Float, Float, Float)\n</code></pre>"},{"location":"api/matrix/#colorscalewithoutalpha","title":"Color.ScaleWithoutAlpha","text":"<pre><code>func (c Color) ScaleWithoutAlpha(scale Float) Color\n</code></pre>"},{"location":"api/matrix/#colorseta","title":"Color.SetA","text":"<pre><code>func (c *Color) SetA(a Float)\n</code></pre>"},{"location":"api/matrix/#colorsetb","title":"Color.SetB","text":"<pre><code>func (c *Color) SetB(b Float)\n</code></pre>"},{"location":"api/matrix/#colorsetg","title":"Color.SetG","text":"<pre><code>func (c *Color) SetG(g Float)\n</code></pre>"},{"location":"api/matrix/#colorsetr","title":"Color.SetR","text":"<pre><code>func (c *Color) SetR(r Float)\n</code></pre>"},{"location":"api/matrix/#color8","title":"Color8","text":"<p><code>struct</code></p> <pre><code>type Color8 struct {\n    R uint8\n    G uint8\n    B uint8\n    A uint8\n}\n</code></pre>"},{"location":"api/matrix/#color8fromcolor","title":"Color8FromColor","text":"<pre><code>func Color8FromColor(c Color) Color8\n</code></pre>"},{"location":"api/matrix/#color8fromhexstring","title":"Color8FromHexString","text":"<pre><code>func Color8FromHexString(str string) (Color8, error)\n</code></pre>"},{"location":"api/matrix/#newcolor8","title":"NewColor8","text":"<pre><code>func NewColor8(r, g, b, a uint8) Color8\n</code></pre>"},{"location":"api/matrix/#color8ascolor","title":"Color8.AsColor","text":"<pre><code>func (c Color8) AsColor() Color\n</code></pre>"},{"location":"api/matrix/#color8equal","title":"Color8.Equal","text":"<pre><code>func (c Color8) Equal(rhs Color8) bool\n</code></pre>"},{"location":"api/matrix/#color8hex","title":"Color8.Hex","text":"<pre><code>func (c Color8) Hex() string\n</code></pre>"},{"location":"api/matrix/#color8similar","title":"Color8.Similar","text":"<pre><code>func (lhs Color8) Similar(rhs Color8, tolerance uint8) bool\n</code></pre>"},{"location":"api/matrix/#colorcomponent","title":"ColorComponent","text":"<p>int <pre><code>type ColorComponent = int\n</code></pre></p> <p>const ( R ColorComponent = iota G B A )</p>"},{"location":"api/matrix/#float","title":"Float","text":"<p>float32 <pre><code>type Float = float32\n</code></pre></p>"},{"location":"api/matrix/#abs","title":"Abs","text":"<pre><code>func Abs(x Float) Float\n</code></pre>"},{"location":"api/matrix/#acos","title":"Acos","text":"<pre><code>func Acos(x Float) Float\n</code></pre>"},{"location":"api/matrix/#asin","title":"Asin","text":"<pre><code>func Asin(x Float) Float\n</code></pre>"},{"location":"api/matrix/#atan","title":"Atan","text":"<pre><code>func Atan(x Float) Float\n</code></pre>"},{"location":"api/matrix/#atan2","title":"Atan2","text":"<pre><code>func Atan2(y Float, x Float) Float\n</code></pre>"},{"location":"api/matrix/#ceil","title":"Ceil","text":"<pre><code>func Ceil(x Float) Float\n</code></pre>"},{"location":"api/matrix/#clamp","title":"Clamp","text":"<pre><code>func Clamp(current, minimum, maximum Float) Float\n</code></pre>"},{"location":"api/matrix/#cos","title":"Cos","text":"<pre><code>func Cos(x Float) Float\n</code></pre>"},{"location":"api/matrix/#deg2rad","title":"Deg2Rad","text":"<pre><code>func Deg2Rad(degree Float) Float\n</code></pre>"},{"location":"api/matrix/#floor","title":"Floor","text":"<pre><code>func Floor(x Float) Float\n</code></pre>"},{"location":"api/matrix/#inf","title":"Inf","text":"<pre><code>func Inf(sign int) Float\n</code></pre>"},{"location":"api/matrix/#log2","title":"Log2","text":"<pre><code>func Log2(x Float) Float\n</code></pre>"},{"location":"api/matrix/#max","title":"Max","text":"<pre><code>func Max(a Float, b Float) Float\n</code></pre>"},{"location":"api/matrix/#min","title":"Min","text":"<pre><code>func Min(a Float, b Float) Float\n</code></pre>"},{"location":"api/matrix/#mod","title":"Mod","text":"<pre><code>func Mod(x Float, y Float) Float\n</code></pre>"},{"location":"api/matrix/#pow","title":"Pow","text":"<pre><code>func Pow(x Float, y Float) Float\n</code></pre>"},{"location":"api/matrix/#rad2deg","title":"Rad2Deg","text":"<pre><code>func Rad2Deg(radian Float) Float\n</code></pre>"},{"location":"api/matrix/#round","title":"Round","text":"<pre><code>func Round(x Float) Float\n</code></pre>"},{"location":"api/matrix/#sin","title":"Sin","text":"<pre><code>func Sin(x Float) Float\n</code></pre>"},{"location":"api/matrix/#sqrt","title":"Sqrt","text":"<pre><code>func Sqrt(x Float) Float\n</code></pre>"},{"location":"api/matrix/#tan","title":"Tan","text":"<pre><code>func Tan(x Float) Float\n</code></pre>"},{"location":"api/matrix/#vec2dot","title":"Vec2Dot","text":"<pre><code>func Vec2Dot(v, other Vec2) Float\n</code></pre>"},{"location":"api/matrix/#vec3dot","title":"Vec3Dot","text":"<pre><code>func Vec3Dot(v, other Vec3) Float\n</code></pre>"},{"location":"api/matrix/#vec4dot","title":"Vec4Dot","text":"<pre><code>func Vec4Dot(a, b Vec4) Float\n</code></pre>"},{"location":"api/matrix/#mat3","title":"Mat3","text":"<p>[9]Float <pre><code>type Mat3 [9]Float\n</code></pre></p>"},{"location":"api/matrix/#mat3frommat4","title":"Mat3FromMat4","text":"<pre><code>func Mat3FromMat4(m Mat4) Mat3\n</code></pre>"},{"location":"api/matrix/#mat3identity","title":"Mat3Identity","text":"<pre><code>func Mat3Identity() Mat3\n</code></pre>"},{"location":"api/matrix/#mat3zero","title":"Mat3Zero","text":"<pre><code>func Mat3Zero() Mat3\n</code></pre>"},{"location":"api/matrix/#newmat3","title":"NewMat3","text":"<pre><code>func NewMat3() Mat3\n</code></pre>"},{"location":"api/matrix/#mat3columnvector","title":"Mat3.ColumnVector","text":"<pre><code>func (m Mat3) ColumnVector(col int) Vec3\n</code></pre>"},{"location":"api/matrix/#mat3multiply","title":"Mat3.Multiply","text":"<pre><code>func (m Mat3) Multiply(rhs Mat3) Mat3\n</code></pre>"},{"location":"api/matrix/#mat3multiplyassign","title":"Mat3.MultiplyAssign","text":"<pre><code>func (m *Mat3) MultiplyAssign(rhs Mat3)\n</code></pre>"},{"location":"api/matrix/#mat3multiplyvec3","title":"Mat3.MultiplyVec3","text":"<pre><code>func (m Mat3) MultiplyVec3(v Vec3) Vec3\n</code></pre>"},{"location":"api/matrix/#mat3reset","title":"Mat3.Reset","text":"<pre><code>func (m *Mat3) Reset()\n</code></pre>"},{"location":"api/matrix/#mat3rowvector","title":"Mat3.RowVector","text":"<pre><code>func (m Mat3) RowVector(row int) Vec3\n</code></pre>"},{"location":"api/matrix/#mat3tomat4","title":"Mat3.ToMat4","text":"<pre><code>func (m Mat3) ToMat4() Mat4\n</code></pre>"},{"location":"api/matrix/#mat3transpose","title":"Mat3.Transpose","text":"<pre><code>func (m Mat3) Transpose() Mat3\n</code></pre>"},{"location":"api/matrix/#mat4","title":"Mat4","text":"<p>[16]Float <pre><code>type Mat4 [16]Float\n</code></pre></p>"},{"location":"api/matrix/#mat4fromslice","title":"Mat4FromSlice","text":"<pre><code>func Mat4FromSlice(a []Float) Mat4\n</code></pre>"},{"location":"api/matrix/#mat4identity","title":"Mat4Identity","text":"<pre><code>func Mat4Identity() Mat4\n</code></pre>"},{"location":"api/matrix/#mat4lookat","title":"Mat4LookAt","text":"<pre><code>func Mat4LookAt(eye, center, up Vec3) Mat4\n</code></pre>"},{"location":"api/matrix/#mat4multiply","title":"Mat4Multiply","text":"<pre><code>func Mat4Multiply(a, b Mat4) Mat4\n</code></pre>"},{"location":"api/matrix/#mat4zero","title":"Mat4Zero","text":"<pre><code>func Mat4Zero() Mat4\n</code></pre>"},{"location":"api/matrix/#newmat4","title":"NewMat4","text":"<pre><code>func NewMat4() Mat4\n</code></pre>"},{"location":"api/matrix/#mat4addassign","title":"Mat4.AddAssign","text":"<pre><code>func (m *Mat4) AddAssign(rhs Mat4)\n</code></pre>"},{"location":"api/matrix/#mat4at","title":"Mat4.At","text":"<pre><code>func (m Mat4) At(rowIndex, colIndex int) Float\n</code></pre>"},{"location":"api/matrix/#mat4columnvector","title":"Mat4.ColumnVector","text":"<pre><code>func (m Mat4) ColumnVector(col int) Vec4\n</code></pre>"},{"location":"api/matrix/#mat4forward","title":"Mat4.Forward","text":"<pre><code>func (m Mat4) Forward() Vec3\n</code></pre>"},{"location":"api/matrix/#mat4inverse","title":"Mat4.Inverse","text":"<pre><code>func (m *Mat4) Inverse()\n</code></pre>"},{"location":"api/matrix/#mat4invert","title":"Mat4.Invert","text":"<pre><code>func (m Mat4) Invert() Mat4\n</code></pre>"},{"location":"api/matrix/#mat4mat4projtovulkan","title":"Mat4.Mat4ProjToVulkan","text":"<pre><code>func (m Mat4) Mat4ProjToVulkan() Mat4\n</code></pre>"},{"location":"api/matrix/#mat4mat4project","title":"Mat4.Mat4Project","text":"<pre><code>func (m Mat4) Mat4Project(pos Vec3, viewport Vec4) Vec3\n</code></pre>"},{"location":"api/matrix/#mat4mat4unproject","title":"Mat4.Mat4UnProject","text":"<pre><code>func (m Mat4) Mat4UnProject(pos Vec3, viewport Vec4) Vec3\n</code></pre>"},{"location":"api/matrix/#mat4multiplyassign","title":"Mat4.MultiplyAssign","text":"<pre><code>func (a *Mat4) MultiplyAssign(b Mat4)\n</code></pre>"},{"location":"api/matrix/#mat4negateassign","title":"Mat4.NegateAssign","text":"<pre><code>func (m *Mat4) NegateAssign()\n</code></pre>"},{"location":"api/matrix/#mat4orthographic","title":"Mat4.Orthographic","text":"<pre><code>func (m *Mat4) Orthographic(left, right, bottom, top, near, far Float)\n</code></pre>"},{"location":"api/matrix/#mat4perspective","title":"Mat4.Perspective","text":"<pre><code>func (m *Mat4) Perspective(fovy, aspect, nearVal, farVal Float)\n</code></pre>"},{"location":"api/matrix/#mat4position","title":"Mat4.Position","text":"<pre><code>func (m Mat4) Position() Vec3\n</code></pre>"},{"location":"api/matrix/#mat4reset","title":"Mat4.Reset","text":"<pre><code>func (m *Mat4) Reset()\n</code></pre>"},{"location":"api/matrix/#mat4right","title":"Mat4.Right","text":"<pre><code>func (m Mat4) Right() Vec3\n</code></pre>"},{"location":"api/matrix/#mat4rotate","title":"Mat4.Rotate","text":"<pre><code>func (m *Mat4) Rotate(rotate Vec3)\n</code></pre>"},{"location":"api/matrix/#mat4rotateangles","title":"Mat4.RotateAngles","text":"<pre><code>func (m *Mat4) RotateAngles(axis Vec3, angle Float)\n</code></pre>"},{"location":"api/matrix/#mat4rotatex","title":"Mat4.RotateX","text":"<pre><code>func (m *Mat4) RotateX(angles Float)\n</code></pre>"},{"location":"api/matrix/#mat4rotatey","title":"Mat4.RotateY","text":"<pre><code>func (m *Mat4) RotateY(angles Float)\n</code></pre>"},{"location":"api/matrix/#mat4rotatez","title":"Mat4.RotateZ","text":"<pre><code>func (m *Mat4) RotateZ(angles Float)\n</code></pre>"},{"location":"api/matrix/#mat4rowvector","title":"Mat4.RowVector","text":"<pre><code>func (m Mat4) RowVector(row int) Vec4\n</code></pre>"},{"location":"api/matrix/#mat4scale","title":"Mat4.Scale","text":"<pre><code>func (m *Mat4) Scale(scale Vec3)\n</code></pre>"},{"location":"api/matrix/#mat4settranslation","title":"Mat4.SetTranslation","text":"<pre><code>func (m *Mat4) SetTranslation(translation Vec3)\n</code></pre>"},{"location":"api/matrix/#mat4subtractassign","title":"Mat4.SubtractAssign","text":"<pre><code>func (m *Mat4) SubtractAssign(rhs Mat4)\n</code></pre>"},{"location":"api/matrix/#mat4toquaternion","title":"Mat4.ToQuaternion","text":"<pre><code>func (m Mat4) ToQuaternion() Quaternion\n</code></pre>"},{"location":"api/matrix/#mat4transformpoint","title":"Mat4.TransformPoint","text":"<pre><code>func (m Mat4) TransformPoint(point Vec3) Vec3\n</code></pre>"},{"location":"api/matrix/#mat4translate","title":"Mat4.Translate","text":"<pre><code>func (m *Mat4) Translate(translation Vec3)\n</code></pre>"},{"location":"api/matrix/#mat4transpose","title":"Mat4.Transpose","text":"<pre><code>func (m Mat4) Transpose() Mat4\n</code></pre>"},{"location":"api/matrix/#mat4transposeassign","title":"Mat4.TransposeAssign","text":"<pre><code>func (m *Mat4) TransposeAssign()\n</code></pre>"},{"location":"api/matrix/#mat4up","title":"Mat4.Up","text":"<pre><code>func (m Mat4) Up() Vec3\n</code></pre>"},{"location":"api/matrix/#mat4zero_1","title":"Mat4.Zero","text":"<pre><code>func (m *Mat4) Zero()\n</code></pre>"},{"location":"api/matrix/#quaternion","title":"Quaternion","text":"<p>[4]Float <pre><code>type Quaternion [4]Float\n</code></pre></p>"},{"location":"api/matrix/#newquaternion","title":"NewQuaternion","text":"<pre><code>func NewQuaternion(w, x, y, z Float) Quaternion\n</code></pre>"},{"location":"api/matrix/#quatanglebetween","title":"QuatAngleBetween","text":"<pre><code>func QuatAngleBetween(lhs, rhs Vec3) Quaternion\n</code></pre>"},{"location":"api/matrix/#quaternionaxisangle","title":"QuaternionAxisAngle","text":"<pre><code>func QuaternionAxisAngle(axis Vec3, angle Float) Quaternion\n</code></pre>"},{"location":"api/matrix/#quaternionfromarray","title":"QuaternionFromArray","text":"<pre><code>func QuaternionFromArray(xyzw [4]Float) Quaternion\n</code></pre>"},{"location":"api/matrix/#quaternionfromeuler","title":"QuaternionFromEuler","text":"<pre><code>func QuaternionFromEuler(v Vec3) Quaternion\n</code></pre>"},{"location":"api/matrix/#quaternionfrommat4","title":"QuaternionFromMat4","text":"<pre><code>func QuaternionFromMat4(m Mat4) Quaternion\n</code></pre>"},{"location":"api/matrix/#quaternionfromslice","title":"QuaternionFromSlice","text":"<pre><code>func QuaternionFromSlice(xyzw []Float) Quaternion\n</code></pre>"},{"location":"api/matrix/#quaternionfromvec4","title":"QuaternionFromVec4","text":"<pre><code>func QuaternionFromVec4(v Vec4) Quaternion\n</code></pre>"},{"location":"api/matrix/#quaternionfromxyzw","title":"QuaternionFromXYZW","text":"<pre><code>func QuaternionFromXYZW(xyzw [4]Float) Quaternion\n</code></pre>"},{"location":"api/matrix/#quaternionfromxyzwslice","title":"QuaternionFromXYZWSlice","text":"<pre><code>func QuaternionFromXYZWSlice(xyzw []Float) Quaternion\n</code></pre>"},{"location":"api/matrix/#quaternionidentity","title":"QuaternionIdentity","text":"<pre><code>func QuaternionIdentity() Quaternion\n</code></pre>"},{"location":"api/matrix/#quaternionlerp","title":"QuaternionLerp","text":"<pre><code>func QuaternionLerp(from, to Quaternion, factor Float) Quaternion\n</code></pre>"},{"location":"api/matrix/#quaternionlookat","title":"QuaternionLookAt","text":"<pre><code>func QuaternionLookAt(from, to Vec3) Quaternion\n</code></pre>"},{"location":"api/matrix/#quaternionslerp","title":"QuaternionSlerp","text":"<pre><code>func QuaternionSlerp(from, to Quaternion, factor Float) Quaternion\n</code></pre>"},{"location":"api/matrix/#quaternionaddassign","title":"Quaternion.AddAssign","text":"<pre><code>func (q *Quaternion) AddAssign(rhs Quaternion)\n</code></pre>"},{"location":"api/matrix/#quaternionconjugate","title":"Quaternion.Conjugate","text":"<pre><code>func (q *Quaternion) Conjugate()\n</code></pre>"},{"location":"api/matrix/#quaternioninverse","title":"Quaternion.Inverse","text":"<pre><code>func (q *Quaternion) Inverse()\n</code></pre>"},{"location":"api/matrix/#quaternionmultiply","title":"Quaternion.Multiply","text":"<pre><code>func (q Quaternion) Multiply(rhs Quaternion) Quaternion\n</code></pre>"},{"location":"api/matrix/#quaternionmultiplyassign","title":"Quaternion.MultiplyAssign","text":"<pre><code>func (q *Quaternion) MultiplyAssign(rhs Quaternion)\n</code></pre>"},{"location":"api/matrix/#quaternionmultiplyvec3","title":"Quaternion.MultiplyVec3","text":"<pre><code>func (q Quaternion) MultiplyVec3(rhs Vec3) Vec3\n</code></pre>"},{"location":"api/matrix/#quaternionnormal","title":"Quaternion.Normal","text":"<pre><code>func (q Quaternion) Normal() Quaternion\n</code></pre>"},{"location":"api/matrix/#quaternionnormalize","title":"Quaternion.Normalize","text":"<pre><code>func (q *Quaternion) Normalize()\n</code></pre>"},{"location":"api/matrix/#quaterniontoeuler","title":"Quaternion.ToEuler","text":"<pre><code>func (q Quaternion) ToEuler() Vec3\n</code></pre>"},{"location":"api/matrix/#quaterniontomat4","title":"Quaternion.ToMat4","text":"<pre><code>func (q Quaternion) ToMat4() Mat4\n</code></pre>"},{"location":"api/matrix/#quaternionw","title":"Quaternion.W","text":"<pre><code>func (q Quaternion) W() Float\n</code></pre>"},{"location":"api/matrix/#quaternionx","title":"Quaternion.X","text":"<pre><code>func (q Quaternion) X() Float\n</code></pre>"},{"location":"api/matrix/#quaterniony","title":"Quaternion.Y","text":"<pre><code>func (q Quaternion) Y() Float\n</code></pre>"},{"location":"api/matrix/#quaternionz","title":"Quaternion.Z","text":"<pre><code>func (q Quaternion) Z() Float\n</code></pre>"},{"location":"api/matrix/#quaternioncomponent","title":"QuaternionComponent","text":"<p>int <pre><code>type QuaternionComponent = int\n</code></pre></p> <p>const ( Qw QuaternionComponent = iota Qx Qy Qz )</p>"},{"location":"api/matrix/#transform","title":"Transform","text":"<p><code>struct</code></p> <pre><code>type Transform struct {\n    Identifier uint8 // Typically just used for bone index right now\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/matrix/#newrawtransform","title":"NewRawTransform","text":"<pre><code>func NewRawTransform() Transform\n</code></pre>"},{"location":"api/matrix/#newtransform","title":"NewTransform","text":"<pre><code>func NewTransform(workGroup *concurrent.WorkGroup) Transform\n</code></pre>"},{"location":"api/matrix/#transformcalcworldmatrix","title":"Transform.CalcWorldMatrix","text":"<pre><code>func (t *Transform) CalcWorldMatrix() Mat4\n</code></pre>"},{"location":"api/matrix/#transformcontainspoint","title":"Transform.ContainsPoint","text":"<pre><code>func (t *Transform) ContainsPoint(point Vec3) bool\n</code></pre>"},{"location":"api/matrix/#transformcontainspoint2d","title":"Transform.ContainsPoint2D","text":"<pre><code>func (t *Transform) ContainsPoint2D(point Vec2) bool\n</code></pre>"},{"location":"api/matrix/#transformcopy","title":"Transform.Copy","text":"<pre><code>func (t *Transform) Copy(other Transform)\n</code></pre>"},{"location":"api/matrix/#transformforward","title":"Transform.Forward","text":"<pre><code>func (t *Transform) Forward() Vec3\n</code></pre>"},{"location":"api/matrix/#transformisdirty","title":"Transform.IsDirty","text":"<pre><code>func (t *Transform) IsDirty() bool\n</code></pre>"},{"location":"api/matrix/#transformlookat","title":"Transform.LookAt","text":"<pre><code>func (t *Transform) LookAt(point Vec3)\n</code></pre>"},{"location":"api/matrix/#transformmatrix","title":"Transform.Matrix","text":"<pre><code>func (t *Transform) Matrix() Mat4\n</code></pre>"},{"location":"api/matrix/#transformparent","title":"Transform.Parent","text":"<pre><code>func (t *Transform) Parent() *Transform\n</code></pre>"},{"location":"api/matrix/#transformposition","title":"Transform.Position","text":"<pre><code>func (t *Transform) Position() Vec3\n</code></pre>"},{"location":"api/matrix/#transformresetdirty","title":"Transform.ResetDirty","text":"<pre><code>func (t *Transform) ResetDirty()\n</code></pre>"},{"location":"api/matrix/#transformright","title":"Transform.Right","text":"<pre><code>func (t *Transform) Right() Vec3\n</code></pre>"},{"location":"api/matrix/#transformrotation","title":"Transform.Rotation","text":"<pre><code>func (t *Transform) Rotation() Vec3\n</code></pre>"},{"location":"api/matrix/#transformscale","title":"Transform.Scale","text":"<pre><code>func (t *Transform) Scale() Vec3\n</code></pre>"},{"location":"api/matrix/#transformscalewithoutchildren","title":"Transform.ScaleWithoutChildren","text":"<pre><code>func (t *Transform) ScaleWithoutChildren(scale Vec3)\n</code></pre> <p>ScaleWithoutChildren will scale a transform without changing the world scale of the children of this transform. That is to say, it will update all the child transform scales to return to their original world scale after scaling this transform.</p>"},{"location":"api/matrix/#transformsetchildrenordered","title":"Transform.SetChildrenOrdered","text":"<pre><code>func (t *Transform) SetChildrenOrdered()\n</code></pre>"},{"location":"api/matrix/#transformsetchildrenunordered","title":"Transform.SetChildrenUnordered","text":"<pre><code>func (t *Transform) SetChildrenUnordered()\n</code></pre>"},{"location":"api/matrix/#transformsetdirty","title":"Transform.SetDirty","text":"<pre><code>func (t *Transform) SetDirty()\n</code></pre>"},{"location":"api/matrix/#transformsetparent","title":"Transform.SetParent","text":"<pre><code>func (t *Transform) SetParent(parent *Transform)\n</code></pre>"},{"location":"api/matrix/#transformsetposition","title":"Transform.SetPosition","text":"<pre><code>func (t *Transform) SetPosition(position Vec3)\n</code></pre>"},{"location":"api/matrix/#transformsetrotation","title":"Transform.SetRotation","text":"<pre><code>func (t *Transform) SetRotation(rotation Vec3)\n</code></pre>"},{"location":"api/matrix/#transformsetscale","title":"Transform.SetScale","text":"<pre><code>func (t *Transform) SetScale(scale Vec3)\n</code></pre>"},{"location":"api/matrix/#transformsetworldposition","title":"Transform.SetWorldPosition","text":"<pre><code>func (t *Transform) SetWorldPosition(position Vec3)\n</code></pre>"},{"location":"api/matrix/#transformsetworldrotation","title":"Transform.SetWorldRotation","text":"<pre><code>func (t *Transform) SetWorldRotation(rotation Vec3)\n</code></pre>"},{"location":"api/matrix/#transformsetworldscale","title":"Transform.SetWorldScale","text":"<pre><code>func (t *Transform) SetWorldScale(scale Vec3)\n</code></pre>"},{"location":"api/matrix/#transformstartlive","title":"Transform.StartLive","text":"<pre><code>func (t *Transform) StartLive()\n</code></pre>"},{"location":"api/matrix/#transformstoplive","title":"Transform.StopLive","text":"<pre><code>func (t *Transform) StopLive()\n</code></pre>"},{"location":"api/matrix/#transformup","title":"Transform.Up","text":"<pre><code>func (t *Transform) Up() Vec3\n</code></pre>"},{"location":"api/matrix/#transformupdatematrix","title":"Transform.UpdateMatrix","text":"<pre><code>func (t *Transform) UpdateMatrix()\n</code></pre>"},{"location":"api/matrix/#transformupdateworldmatrix","title":"Transform.UpdateWorldMatrix","text":"<pre><code>func (t *Transform) UpdateWorldMatrix()\n</code></pre>"},{"location":"api/matrix/#transformworkgroup_1","title":"Transform.WorkGroup","text":"<pre><code>func (t *Transform) WorkGroup() *concurrent.WorkGroup\n</code></pre>"},{"location":"api/matrix/#transformworldmatrix","title":"Transform.WorldMatrix","text":"<pre><code>func (t *Transform) WorldMatrix() Mat4\n</code></pre>"},{"location":"api/matrix/#transformworldposition","title":"Transform.WorldPosition","text":"<pre><code>func (t *Transform) WorldPosition() Vec3\n</code></pre>"},{"location":"api/matrix/#transformworldrotation","title":"Transform.WorldRotation","text":"<pre><code>func (t *Transform) WorldRotation() Vec3\n</code></pre>"},{"location":"api/matrix/#transformworldscale","title":"Transform.WorldScale","text":"<pre><code>func (t *Transform) WorldScale() Vec3\n</code></pre>"},{"location":"api/matrix/#transformworldtransform","title":"Transform.WorldTransform","text":"<pre><code>func (t *Transform) WorldTransform() (Vec3, Vec3, Vec3)\n</code></pre>"},{"location":"api/matrix/#vec2","title":"Vec2","text":"<p>[2]Float <pre><code>type Vec2 [2]Float\n</code></pre></p>"},{"location":"api/matrix/#newvec2","title":"NewVec2","text":"<pre><code>func NewVec2(x, y Float) Vec2\n</code></pre>"},{"location":"api/matrix/#vec2down","title":"Vec2Down","text":"<pre><code>func Vec2Down() Vec2\n</code></pre>"},{"location":"api/matrix/#vec2fromarray","title":"Vec2FromArray","text":"<pre><code>func Vec2FromArray(a [2]Float) Vec2\n</code></pre>"},{"location":"api/matrix/#vec2fromslice","title":"Vec2FromSlice","text":"<pre><code>func Vec2FromSlice(a []Float) Vec2\n</code></pre>"},{"location":"api/matrix/#vec2fromstring","title":"Vec2FromString","text":"<pre><code>func Vec2FromString(str string) Vec2\n</code></pre>"},{"location":"api/matrix/#vec2half","title":"Vec2Half","text":"<pre><code>func Vec2Half() Vec2\n</code></pre>"},{"location":"api/matrix/#vec2largest","title":"Vec2Largest","text":"<pre><code>func Vec2Largest() Vec2\n</code></pre>"},{"location":"api/matrix/#vec2left","title":"Vec2Left","text":"<pre><code>func Vec2Left() Vec2\n</code></pre>"},{"location":"api/matrix/#vec2lerp","title":"Vec2Lerp","text":"<pre><code>func Vec2Lerp(from, to Vec2, t Float) Vec2\n</code></pre>"},{"location":"api/matrix/#vec2max","title":"Vec2Max","text":"<pre><code>func Vec2Max(a, b Vec2) Vec2\n</code></pre>"},{"location":"api/matrix/#vec2maxabs","title":"Vec2MaxAbs","text":"<pre><code>func Vec2MaxAbs(a, b Vec2) Vec2\n</code></pre>"},{"location":"api/matrix/#vec2min","title":"Vec2Min","text":"<pre><code>func Vec2Min(a, b Vec2) Vec2\n</code></pre>"},{"location":"api/matrix/#vec2minabs","title":"Vec2MinAbs","text":"<pre><code>func Vec2MinAbs(a, b Vec2) Vec2\n</code></pre>"},{"location":"api/matrix/#vec2one","title":"Vec2One","text":"<pre><code>func Vec2One() Vec2\n</code></pre>"},{"location":"api/matrix/#vec2right","title":"Vec2Right","text":"<pre><code>func Vec2Right() Vec2\n</code></pre>"},{"location":"api/matrix/#vec2up","title":"Vec2Up","text":"<pre><code>func Vec2Up() Vec2\n</code></pre>"},{"location":"api/matrix/#vec2zero","title":"Vec2Zero","text":"<pre><code>func Vec2Zero() Vec2\n</code></pre>"},{"location":"api/matrix/#vec2abs","title":"Vec2.Abs","text":"<pre><code>func (v Vec2) Abs() Vec2\n</code></pre>"},{"location":"api/matrix/#vec2add","title":"Vec2.Add","text":"<pre><code>func (v Vec2) Add(other Vec2) Vec2\n</code></pre>"},{"location":"api/matrix/#vec2addassign","title":"Vec2.AddAssign","text":"<pre><code>func (v *Vec2) AddAssign(other Vec2)\n</code></pre>"},{"location":"api/matrix/#vec2angle","title":"Vec2.Angle","text":"<pre><code>func (v Vec2) Angle(other Vec2) Float\n</code></pre>"},{"location":"api/matrix/#vec2asvec2i","title":"Vec2.AsVec2i","text":"<pre><code>func (v Vec2) AsVec2i() Vec2i\n</code></pre>"},{"location":"api/matrix/#vec2asvec3","title":"Vec2.AsVec3","text":"<pre><code>func (v *Vec2) AsVec3() Vec3\n</code></pre>"},{"location":"api/matrix/#vec2distance","title":"Vec2.Distance","text":"<pre><code>func (v Vec2) Distance(other Vec2) Float\n</code></pre>"},{"location":"api/matrix/#vec2divide","title":"Vec2.Divide","text":"<pre><code>func (v Vec2) Divide(other Vec2) Vec2\n</code></pre>"},{"location":"api/matrix/#vec2divideassign","title":"Vec2.DivideAssign","text":"<pre><code>func (v *Vec2) DivideAssign(other Vec2)\n</code></pre>"},{"location":"api/matrix/#vec2equals","title":"Vec2.Equals","text":"<pre><code>func (v Vec2) Equals(other Vec2) bool\n</code></pre>"},{"location":"api/matrix/#vec2height","title":"Vec2.Height","text":"<pre><code>func (v Vec2) Height() Float\n</code></pre>"},{"location":"api/matrix/#vec2inverse","title":"Vec2.Inverse","text":"<pre><code>func (v *Vec2) Inverse()\n</code></pre>"},{"location":"api/matrix/#vec2largestaxis","title":"Vec2.LargestAxis","text":"<pre><code>func (v Vec2) LargestAxis() Float\n</code></pre>"},{"location":"api/matrix/#vec2largestaxisdelta","title":"Vec2.LargestAxisDelta","text":"<pre><code>func (v Vec2) LargestAxisDelta() Float\n</code></pre>"},{"location":"api/matrix/#vec2length","title":"Vec2.Length","text":"<pre><code>func (v Vec2) Length() Float\n</code></pre>"},{"location":"api/matrix/#vec2multiply","title":"Vec2.Multiply","text":"<pre><code>func (v Vec2) Multiply(other Vec2) Vec2\n</code></pre>"},{"location":"api/matrix/#vec2multiplyassign","title":"Vec2.MultiplyAssign","text":"<pre><code>func (v *Vec2) MultiplyAssign(other Vec2)\n</code></pre>"},{"location":"api/matrix/#vec2negative","title":"Vec2.Negative","text":"<pre><code>func (v Vec2) Negative() Vec2\n</code></pre>"},{"location":"api/matrix/#vec2normal","title":"Vec2.Normal","text":"<pre><code>func (v Vec2) Normal() Vec2\n</code></pre>"},{"location":"api/matrix/#vec2normalize","title":"Vec2.Normalize","text":"<pre><code>func (v *Vec2) Normalize()\n</code></pre>"},{"location":"api/matrix/#vec2px","title":"Vec2.PX","text":"<pre><code>func (v *Vec2) PX() *Float\n</code></pre>"},{"location":"api/matrix/#vec2py","title":"Vec2.PY","text":"<pre><code>func (v *Vec2) PY() *Float\n</code></pre>"},{"location":"api/matrix/#vec2scale","title":"Vec2.Scale","text":"<pre><code>func (v Vec2) Scale(scalar Float) Vec2\n</code></pre>"},{"location":"api/matrix/#vec2scaleassign","title":"Vec2.ScaleAssign","text":"<pre><code>func (v *Vec2) ScaleAssign(scalar Float)\n</code></pre>"},{"location":"api/matrix/#vec2setheight","title":"Vec2.SetHeight","text":"<pre><code>func (v *Vec2) SetHeight(y Float)\n</code></pre>"},{"location":"api/matrix/#vec2setwidth","title":"Vec2.SetWidth","text":"<pre><code>func (v *Vec2) SetWidth(x Float)\n</code></pre>"},{"location":"api/matrix/#vec2setx","title":"Vec2.SetX","text":"<pre><code>func (v *Vec2) SetX(x Float)\n</code></pre>"},{"location":"api/matrix/#vec2sety","title":"Vec2.SetY","text":"<pre><code>func (v *Vec2) SetY(y Float)\n</code></pre>"},{"location":"api/matrix/#vec2shrink","title":"Vec2.Shrink","text":"<pre><code>func (v Vec2) Shrink(scalar Float) Vec2\n</code></pre>"},{"location":"api/matrix/#vec2shrinkassign","title":"Vec2.ShrinkAssign","text":"<pre><code>func (v *Vec2) ShrinkAssign(scalar Float)\n</code></pre>"},{"location":"api/matrix/#vec2string","title":"Vec2.String","text":"<pre><code>func (v Vec2) String() string\n</code></pre>"},{"location":"api/matrix/#vec2subtract","title":"Vec2.Subtract","text":"<pre><code>func (v Vec2) Subtract(other Vec2) Vec2\n</code></pre>"},{"location":"api/matrix/#vec2subtractassign","title":"Vec2.SubtractAssign","text":"<pre><code>func (v *Vec2) SubtractAssign(other Vec2)\n</code></pre>"},{"location":"api/matrix/#vec2width","title":"Vec2.Width","text":"<pre><code>func (v Vec2) Width() Float\n</code></pre>"},{"location":"api/matrix/#vec2x","title":"Vec2.X","text":"<pre><code>func (v Vec2) X() Float\n</code></pre>"},{"location":"api/matrix/#vec2xy","title":"Vec2.XY","text":"<pre><code>func (v Vec2) XY() (Float, Float)\n</code></pre>"},{"location":"api/matrix/#vec2y","title":"Vec2.Y","text":"<pre><code>func (v Vec2) Y() Float\n</code></pre>"},{"location":"api/matrix/#vec2i","title":"Vec2i","text":"<p>[2]int32 <pre><code>type Vec2i [2]int32\n</code></pre></p>"},{"location":"api/matrix/#vec2ix","title":"Vec2i.X","text":"<pre><code>func (v Vec2i) X() int32\n</code></pre>"},{"location":"api/matrix/#vec2iy","title":"Vec2i.Y","text":"<pre><code>func (v Vec2i) Y() int32\n</code></pre>"},{"location":"api/matrix/#vec3","title":"Vec3","text":"<p>[3]Float <pre><code>type Vec3 [3]Float\n</code></pre></p>"},{"location":"api/matrix/#mat4toscreenspace","title":"Mat4ToScreenSpace","text":"<pre><code>func Mat4ToScreenSpace(pos Vec3, view, projection Mat4, viewport Vec4) Vec3\n</code></pre>"},{"location":"api/matrix/#newvec3","title":"NewVec3","text":"<pre><code>func NewVec3(x, y, z Float) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3backward","title":"Vec3Backward","text":"<pre><code>func Vec3Backward() Vec3\n</code></pre>"},{"location":"api/matrix/#vec3cross","title":"Vec3Cross","text":"<pre><code>func Vec3Cross(v, other Vec3) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3down","title":"Vec3Down","text":"<pre><code>func Vec3Down() Vec3\n</code></pre>"},{"location":"api/matrix/#vec3forward","title":"Vec3Forward","text":"<pre><code>func Vec3Forward() Vec3\n</code></pre>"},{"location":"api/matrix/#vec3fromarray","title":"Vec3FromArray","text":"<pre><code>func Vec3FromArray(a [3]Float) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3fromslice","title":"Vec3FromSlice","text":"<pre><code>func Vec3FromSlice(a []Float) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3fromstring","title":"Vec3FromString","text":"<pre><code>func Vec3FromString(str string) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3half","title":"Vec3Half","text":"<pre><code>func Vec3Half() Vec3\n</code></pre>"},{"location":"api/matrix/#vec3inf","title":"Vec3Inf","text":"<pre><code>func Vec3Inf(sign int) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3largest","title":"Vec3Largest","text":"<pre><code>func Vec3Largest() Vec3\n</code></pre>"},{"location":"api/matrix/#vec3left","title":"Vec3Left","text":"<pre><code>func Vec3Left() Vec3\n</code></pre>"},{"location":"api/matrix/#vec3lerp","title":"Vec3Lerp","text":"<pre><code>func Vec3Lerp(from, to Vec3, t Float) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3max","title":"Vec3Max","text":"<pre><code>func Vec3Max(v ...Vec3) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3maxabs","title":"Vec3MaxAbs","text":"<pre><code>func Vec3MaxAbs(v ...Vec3) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3min","title":"Vec3Min","text":"<pre><code>func Vec3Min(v ...Vec3) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3minabs","title":"Vec3MinAbs","text":"<pre><code>func Vec3MinAbs(v ...Vec3) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3one","title":"Vec3One","text":"<pre><code>func Vec3One() Vec3\n</code></pre>"},{"location":"api/matrix/#vec3right","title":"Vec3Right","text":"<pre><code>func Vec3Right() Vec3\n</code></pre>"},{"location":"api/matrix/#vec3up","title":"Vec3Up","text":"<pre><code>func Vec3Up() Vec3\n</code></pre>"},{"location":"api/matrix/#vec3zero","title":"Vec3Zero","text":"<pre><code>func Vec3Zero() Vec3\n</code></pre>"},{"location":"api/matrix/#vec3abs","title":"Vec3.Abs","text":"<pre><code>func (v Vec3) Abs() Vec3\n</code></pre>"},{"location":"api/matrix/#vec3add","title":"Vec3.Add","text":"<pre><code>func (v Vec3) Add(other Vec3) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3addassign","title":"Vec3.AddAssign","text":"<pre><code>func (v *Vec3) AddAssign(other Vec3)\n</code></pre>"},{"location":"api/matrix/#vec3angle","title":"Vec3.Angle","text":"<pre><code>func (v Vec3) Angle(other Vec3) Float\n</code></pre>"},{"location":"api/matrix/#vec3asaligned16","title":"Vec3.AsAligned16","text":"<pre><code>func (v Vec3) AsAligned16() [4]Float\n</code></pre>"},{"location":"api/matrix/#vec3asvec2","title":"Vec3.AsVec2","text":"<pre><code>func (v Vec3) AsVec2() Vec2\n</code></pre>"},{"location":"api/matrix/#vec3asvec3i","title":"Vec3.AsVec3i","text":"<pre><code>func (v Vec3) AsVec3i() Vec3i\n</code></pre>"},{"location":"api/matrix/#vec3asvec4","title":"Vec3.AsVec4","text":"<pre><code>func (v Vec3) AsVec4() Vec4\n</code></pre>"},{"location":"api/matrix/#vec3depth","title":"Vec3.Depth","text":"<pre><code>func (v Vec3) Depth() Float\n</code></pre>"},{"location":"api/matrix/#vec3distance","title":"Vec3.Distance","text":"<pre><code>func (v Vec3) Distance(other Vec3) Float\n</code></pre>"},{"location":"api/matrix/#vec3divide","title":"Vec3.Divide","text":"<pre><code>func (v Vec3) Divide(other Vec3) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3divideassign","title":"Vec3.DivideAssign","text":"<pre><code>func (v *Vec3) DivideAssign(other Vec3)\n</code></pre>"},{"location":"api/matrix/#vec3equals","title":"Vec3.Equals","text":"<pre><code>func (v Vec3) Equals(other Vec3) bool\n</code></pre>"},{"location":"api/matrix/#vec3height","title":"Vec3.Height","text":"<pre><code>func (v Vec3) Height() Float\n</code></pre>"},{"location":"api/matrix/#vec3inverse","title":"Vec3.Inverse","text":"<pre><code>func (v *Vec3) Inverse()\n</code></pre>"},{"location":"api/matrix/#vec3iszero","title":"Vec3.IsZero","text":"<pre><code>func (v Vec3) IsZero() bool\n</code></pre>"},{"location":"api/matrix/#vec3largestaxis","title":"Vec3.LargestAxis","text":"<pre><code>func (v Vec3) LargestAxis() Float\n</code></pre>"},{"location":"api/matrix/#vec3largestaxisdelta","title":"Vec3.LargestAxisDelta","text":"<pre><code>func (v Vec3) LargestAxisDelta() Float\n</code></pre>"},{"location":"api/matrix/#vec3length","title":"Vec3.Length","text":"<pre><code>func (v Vec3) Length() Float\n</code></pre>"},{"location":"api/matrix/#vec3longestaxis","title":"Vec3.LongestAxis","text":"<pre><code>func (v Vec3) LongestAxis() int\n</code></pre>"},{"location":"api/matrix/#vec3longestaxisvalue","title":"Vec3.LongestAxisValue","text":"<pre><code>func (v Vec3) LongestAxisValue() Float\n</code></pre>"},{"location":"api/matrix/#vec3multiply","title":"Vec3.Multiply","text":"<pre><code>func (v Vec3) Multiply(other Vec3) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3multiplyassign","title":"Vec3.MultiplyAssign","text":"<pre><code>func (v *Vec3) MultiplyAssign(other Vec3)\n</code></pre>"},{"location":"api/matrix/#vec3multiplymat3","title":"Vec3.MultiplyMat3","text":"<pre><code>func (v Vec3) MultiplyMat3(rhs Mat3) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3negative","title":"Vec3.Negative","text":"<pre><code>func (v Vec3) Negative() Vec3\n</code></pre>"},{"location":"api/matrix/#vec3normal","title":"Vec3.Normal","text":"<pre><code>func (v Vec3) Normal() Vec3\n</code></pre>"},{"location":"api/matrix/#vec3normalize","title":"Vec3.Normalize","text":"<pre><code>func (v *Vec3) Normalize()\n</code></pre>"},{"location":"api/matrix/#vec3orthogonal","title":"Vec3.Orthogonal","text":"<pre><code>func (v Vec3) Orthogonal() Vec3\n</code></pre>"},{"location":"api/matrix/#vec3px","title":"Vec3.PX","text":"<pre><code>func (v *Vec3) PX() *Float\n</code></pre>"},{"location":"api/matrix/#vec3py","title":"Vec3.PY","text":"<pre><code>func (v *Vec3) PY() *Float\n</code></pre>"},{"location":"api/matrix/#vec3pz","title":"Vec3.PZ","text":"<pre><code>func (v *Vec3) PZ() *Float\n</code></pre>"},{"location":"api/matrix/#vec3scale","title":"Vec3.Scale","text":"<pre><code>func (v Vec3) Scale(scalar Float) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3scaleassign","title":"Vec3.ScaleAssign","text":"<pre><code>func (v *Vec3) ScaleAssign(scalar Float)\n</code></pre>"},{"location":"api/matrix/#vec3setx","title":"Vec3.SetX","text":"<pre><code>func (v *Vec3) SetX(x Float)\n</code></pre>"},{"location":"api/matrix/#vec3sety","title":"Vec3.SetY","text":"<pre><code>func (v *Vec3) SetY(y Float)\n</code></pre>"},{"location":"api/matrix/#vec3setz","title":"Vec3.SetZ","text":"<pre><code>func (v *Vec3) SetZ(z Float)\n</code></pre>"},{"location":"api/matrix/#vec3shrink","title":"Vec3.Shrink","text":"<pre><code>func (v Vec3) Shrink(scalar Float) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3shrinkassign","title":"Vec3.ShrinkAssign","text":"<pre><code>func (v *Vec3) ShrinkAssign(scalar Float)\n</code></pre>"},{"location":"api/matrix/#vec3squaredistance","title":"Vec3.SquareDistance","text":"<pre><code>func (v Vec3) SquareDistance(b Vec3) Float\n</code></pre>"},{"location":"api/matrix/#vec3string","title":"Vec3.String","text":"<pre><code>func (v Vec3) String() string\n</code></pre>"},{"location":"api/matrix/#vec3subtract","title":"Vec3.Subtract","text":"<pre><code>func (v Vec3) Subtract(other Vec3) Vec3\n</code></pre>"},{"location":"api/matrix/#vec3subtractassign","title":"Vec3.SubtractAssign","text":"<pre><code>func (v *Vec3) SubtractAssign(other Vec3)\n</code></pre>"},{"location":"api/matrix/#vec3width","title":"Vec3.Width","text":"<pre><code>func (v Vec3) Width() Float\n</code></pre>"},{"location":"api/matrix/#vec3x","title":"Vec3.X","text":"<pre><code>func (v Vec3) X() Float\n</code></pre>"},{"location":"api/matrix/#vec3xyz","title":"Vec3.XYZ","text":"<pre><code>func (v Vec3) XYZ() (Float, Float, Float)\n</code></pre>"},{"location":"api/matrix/#vec3y","title":"Vec3.Y","text":"<pre><code>func (v Vec3) Y() Float\n</code></pre>"},{"location":"api/matrix/#vec3z","title":"Vec3.Z","text":"<pre><code>func (v Vec3) Z() Float\n</code></pre>"},{"location":"api/matrix/#vec3i","title":"Vec3i","text":"<p>[3]int32 <pre><code>type Vec3i [3]int32\n</code></pre></p>"},{"location":"api/matrix/#vec3ix","title":"Vec3i.X","text":"<pre><code>func (v Vec3i) X() int32\n</code></pre>"},{"location":"api/matrix/#vec3iy","title":"Vec3i.Y","text":"<pre><code>func (v Vec3i) Y() int32\n</code></pre>"},{"location":"api/matrix/#vec3iz","title":"Vec3i.Z","text":"<pre><code>func (v Vec3i) Z() int32\n</code></pre>"},{"location":"api/matrix/#vec4","title":"Vec4","text":"<p>[4]Float <pre><code>type Vec4 [4]Float\n</code></pre></p>"},{"location":"api/matrix/#mat4multiplyvec4","title":"Mat4MultiplyVec4","text":"<pre><code>func Mat4MultiplyVec4(a Mat4, b Vec4) Vec4\n</code></pre>"},{"location":"api/matrix/#newvec4","title":"NewVec4","text":"<pre><code>func NewVec4(x, y, z, w Float) Vec4\n</code></pre>"},{"location":"api/matrix/#vec4area","title":"Vec4Area","text":"<pre><code>func Vec4Area(xa, ya, xb, yb Float) Vec4\n</code></pre>"},{"location":"api/matrix/#vec4fromarray","title":"Vec4FromArray","text":"<pre><code>func Vec4FromArray(a [4]Float) Vec4\n</code></pre>"},{"location":"api/matrix/#vec4fromslice","title":"Vec4FromSlice","text":"<pre><code>func Vec4FromSlice(a []Float) Vec4\n</code></pre>"},{"location":"api/matrix/#vec4fromstring","title":"Vec4FromString","text":"<pre><code>func Vec4FromString(str string) Vec4\n</code></pre>"},{"location":"api/matrix/#vec4half","title":"Vec4Half","text":"<pre><code>func Vec4Half() Vec4\n</code></pre>"},{"location":"api/matrix/#vec4largest","title":"Vec4Largest","text":"<pre><code>func Vec4Largest() Vec4\n</code></pre>"},{"location":"api/matrix/#vec4lerp","title":"Vec4Lerp","text":"<pre><code>func Vec4Lerp(from, to Vec4, t Float) Vec4\n</code></pre>"},{"location":"api/matrix/#vec4max","title":"Vec4Max","text":"<pre><code>func Vec4Max(a, b Vec4) Vec4\n</code></pre>"},{"location":"api/matrix/#vec4maxabs","title":"Vec4MaxAbs","text":"<pre><code>func Vec4MaxAbs(a, b Vec4) Vec4\n</code></pre>"},{"location":"api/matrix/#vec4min","title":"Vec4Min","text":"<pre><code>func Vec4Min(a, b Vec4) Vec4\n</code></pre>"},{"location":"api/matrix/#vec4minabs","title":"Vec4MinAbs","text":"<pre><code>func Vec4MinAbs(a, b Vec4) Vec4\n</code></pre>"},{"location":"api/matrix/#vec4multiplymat4","title":"Vec4MultiplyMat4","text":"<pre><code>func Vec4MultiplyMat4(v Vec4, m Mat4) Vec4\n</code></pre>"},{"location":"api/matrix/#vec4one","title":"Vec4One","text":"<pre><code>func Vec4One() Vec4\n</code></pre>"},{"location":"api/matrix/#vec4zero","title":"Vec4Zero","text":"<pre><code>func Vec4Zero() Vec4\n</code></pre>"},{"location":"api/matrix/#vec4abs","title":"Vec4.Abs","text":"<pre><code>func (v Vec4) Abs() Vec4\n</code></pre>"},{"location":"api/matrix/#vec4add","title":"Vec4.Add","text":"<pre><code>func (v Vec4) Add(other Vec4) Vec4\n</code></pre>"},{"location":"api/matrix/#vec4addassign","title":"Vec4.AddAssign","text":"<pre><code>func (v *Vec4) AddAssign(other Vec4)\n</code></pre>"},{"location":"api/matrix/#vec4angle","title":"Vec4.Angle","text":"<pre><code>func (v Vec4) Angle(other Vec4) Float\n</code></pre>"},{"location":"api/matrix/#vec4areacontains","title":"Vec4.AreaContains","text":"<pre><code>func (v Vec4) AreaContains(x, y Float) bool\n</code></pre>"},{"location":"api/matrix/#vec4asvec3","title":"Vec4.AsVec3","text":"<pre><code>func (v Vec4) AsVec3() Vec3\n</code></pre>"},{"location":"api/matrix/#vec4asvec4i","title":"Vec4.AsVec4i","text":"<pre><code>func (v Vec4) AsVec4i() Vec4i\n</code></pre>"},{"location":"api/matrix/#vec4bottom","title":"Vec4.Bottom","text":"<pre><code>func (v Vec4) Bottom() Float\n</code></pre>"},{"location":"api/matrix/#vec4boxcontains","title":"Vec4.BoxContains","text":"<pre><code>func (v Vec4) BoxContains(x, y Float) bool\n</code></pre>"},{"location":"api/matrix/#vec4distance","title":"Vec4.Distance","text":"<pre><code>func (v Vec4) Distance(other Vec4) Float\n</code></pre>"},{"location":"api/matrix/#vec4divide","title":"Vec4.Divide","text":"<pre><code>func (v Vec4) Divide(other Vec4) Vec4\n</code></pre>"},{"location":"api/matrix/#vec4divideassign","title":"Vec4.DivideAssign","text":"<pre><code>func (v *Vec4) DivideAssign(other Vec4)\n</code></pre>"},{"location":"api/matrix/#vec4equals","title":"Vec4.Equals","text":"<pre><code>func (v Vec4) Equals(other Vec4) bool\n</code></pre>"},{"location":"api/matrix/#vec4height","title":"Vec4.Height","text":"<pre><code>func (v Vec4) Height() Float\n</code></pre>"},{"location":"api/matrix/#vec4inverse","title":"Vec4.Inverse","text":"<pre><code>func (v *Vec4) Inverse()\n</code></pre>"},{"location":"api/matrix/#vec4largestaxis","title":"Vec4.LargestAxis","text":"<pre><code>func (v Vec4) LargestAxis() Float\n</code></pre>"},{"location":"api/matrix/#vec4largestaxisdelta","title":"Vec4.LargestAxisDelta","text":"<pre><code>func (v Vec4) LargestAxisDelta() Float\n</code></pre>"},{"location":"api/matrix/#vec4left","title":"Vec4.Left","text":"<pre><code>func (v Vec4) Left() Float\n</code></pre>"},{"location":"api/matrix/#vec4length","title":"Vec4.Length","text":"<pre><code>func (v Vec4) Length() Float\n</code></pre>"},{"location":"api/matrix/#vec4multiply","title":"Vec4.Multiply","text":"<pre><code>func (v Vec4) Multiply(other Vec4) Vec4\n</code></pre>"},{"location":"api/matrix/#vec4multiplyassign","title":"Vec4.MultiplyAssign","text":"<pre><code>func (v *Vec4) MultiplyAssign(other Vec4)\n</code></pre>"},{"location":"api/matrix/#vec4negative","title":"Vec4.Negative","text":"<pre><code>func (v Vec4) Negative() Vec4\n</code></pre>"},{"location":"api/matrix/#vec4normal","title":"Vec4.Normal","text":"<pre><code>func (v Vec4) Normal() Vec4\n</code></pre>"},{"location":"api/matrix/#vec4normalize","title":"Vec4.Normalize","text":"<pre><code>func (v *Vec4) Normalize()\n</code></pre>"},{"location":"api/matrix/#vec4pw","title":"Vec4.PW","text":"<pre><code>func (v *Vec4) PW() *Float\n</code></pre>"},{"location":"api/matrix/#vec4px","title":"Vec4.PX","text":"<pre><code>func (v *Vec4) PX() *Float\n</code></pre>"},{"location":"api/matrix/#vec4py","title":"Vec4.PY","text":"<pre><code>func (v *Vec4) PY() *Float\n</code></pre>"},{"location":"api/matrix/#vec4pz","title":"Vec4.PZ","text":"<pre><code>func (v *Vec4) PZ() *Float\n</code></pre>"},{"location":"api/matrix/#vec4right","title":"Vec4.Right","text":"<pre><code>func (v Vec4) Right() Float\n</code></pre>"},{"location":"api/matrix/#vec4scale","title":"Vec4.Scale","text":"<pre><code>func (v Vec4) Scale(scalar Float) Vec4\n</code></pre>"},{"location":"api/matrix/#vec4scaleassign","title":"Vec4.ScaleAssign","text":"<pre><code>func (v *Vec4) ScaleAssign(scalar Float)\n</code></pre>"},{"location":"api/matrix/#vec4screenareacontains","title":"Vec4.ScreenAreaContains","text":"<pre><code>func (v Vec4) ScreenAreaContains(x, y Float) bool\n</code></pre>"},{"location":"api/matrix/#vec4setbottom","title":"Vec4.SetBottom","text":"<pre><code>func (v *Vec4) SetBottom(w Float)\n</code></pre>"},{"location":"api/matrix/#vec4setheight","title":"Vec4.SetHeight","text":"<pre><code>func (v *Vec4) SetHeight(w Float)\n</code></pre>"},{"location":"api/matrix/#vec4setleft","title":"Vec4.SetLeft","text":"<pre><code>func (v *Vec4) SetLeft(x Float)\n</code></pre>"},{"location":"api/matrix/#vec4setright","title":"Vec4.SetRight","text":"<pre><code>func (v *Vec4) SetRight(z Float)\n</code></pre>"},{"location":"api/matrix/#vec4settop","title":"Vec4.SetTop","text":"<pre><code>func (v *Vec4) SetTop(y Float)\n</code></pre>"},{"location":"api/matrix/#vec4setw","title":"Vec4.SetW","text":"<pre><code>func (v *Vec4) SetW(w Float)\n</code></pre>"},{"location":"api/matrix/#vec4setwidth","title":"Vec4.SetWidth","text":"<pre><code>func (v *Vec4) SetWidth(z Float)\n</code></pre>"},{"location":"api/matrix/#vec4setx","title":"Vec4.SetX","text":"<pre><code>func (v *Vec4) SetX(x Float)\n</code></pre>"},{"location":"api/matrix/#vec4sety","title":"Vec4.SetY","text":"<pre><code>func (v *Vec4) SetY(y Float)\n</code></pre>"},{"location":"api/matrix/#vec4setz","title":"Vec4.SetZ","text":"<pre><code>func (v *Vec4) SetZ(z Float)\n</code></pre>"},{"location":"api/matrix/#vec4shrink","title":"Vec4.Shrink","text":"<pre><code>func (v Vec4) Shrink(scalar Float) Vec4\n</code></pre>"},{"location":"api/matrix/#vec4shrinkassign","title":"Vec4.ShrinkAssign","text":"<pre><code>func (v *Vec4) ShrinkAssign(scalar Float)\n</code></pre>"},{"location":"api/matrix/#vec4string","title":"Vec4.String","text":"<pre><code>func (v Vec4) String() string\n</code></pre>"},{"location":"api/matrix/#vec4subtract","title":"Vec4.Subtract","text":"<pre><code>func (v Vec4) Subtract(other Vec4) Vec4\n</code></pre>"},{"location":"api/matrix/#vec4subtractassign","title":"Vec4.SubtractAssign","text":"<pre><code>func (v *Vec4) SubtractAssign(other Vec4)\n</code></pre>"},{"location":"api/matrix/#vec4top","title":"Vec4.Top","text":"<pre><code>func (v Vec4) Top() Float\n</code></pre>"},{"location":"api/matrix/#vec4w","title":"Vec4.W","text":"<pre><code>func (v Vec4) W() Float\n</code></pre>"},{"location":"api/matrix/#vec4width","title":"Vec4.Width","text":"<pre><code>func (v Vec4) Width() Float\n</code></pre>"},{"location":"api/matrix/#vec4x","title":"Vec4.X","text":"<pre><code>func (v Vec4) X() Float\n</code></pre>"},{"location":"api/matrix/#vec4xyzw","title":"Vec4.XYZW","text":"<pre><code>func (v Vec4) XYZW() (Float, Float, Float, Float)\n</code></pre>"},{"location":"api/matrix/#vec4y","title":"Vec4.Y","text":"<pre><code>func (v Vec4) Y() Float\n</code></pre>"},{"location":"api/matrix/#vec4z","title":"Vec4.Z","text":"<pre><code>func (v Vec4) Z() Float\n</code></pre>"},{"location":"api/matrix/#vec4i","title":"Vec4i","text":"<p>[4]int32 <pre><code>type Vec4i [4]int32\n</code></pre></p>"},{"location":"api/matrix/#vec4iw","title":"Vec4i.W","text":"<pre><code>func (v Vec4i) W() int32\n</code></pre>"},{"location":"api/matrix/#vec4ix","title":"Vec4i.X","text":"<pre><code>func (v Vec4i) X() int32\n</code></pre>"},{"location":"api/matrix/#vec4iy","title":"Vec4i.Y","text":"<pre><code>func (v Vec4i) Y() int32\n</code></pre>"},{"location":"api/matrix/#vec4iz","title":"Vec4i.Z","text":"<pre><code>func (v Vec4i) Z() int32\n</code></pre>"},{"location":"api/matrix/#vectorcomponent","title":"VectorComponent","text":"<p>int <pre><code>type VectorComponent = int\n</code></pre></p> <p>const ( Vx VectorComponent = iota Vy Vz Vw )</p>"},{"location":"api/pooling/","title":"package pooling","text":"<pre><code>import \"kaiju/pooling\"\n</code></pre>"},{"location":"api/pooling/#constants","title":"Constants","text":""},{"location":"api/pooling/#elementsinpool","title":"ElementsInPool","text":"<p><code>256</code></p>"},{"location":"api/pooling/#types","title":"Types","text":""},{"location":"api/pooling/#pool","title":"Pool","text":"<p><code>struct</code></p> <pre><code>type Pool[T any] struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/pooling/#poolgroup","title":"PoolGroup","text":"<p><code>struct</code></p> <pre><code>type PoolGroup[T any] struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/pooling/#poolgroupadd","title":"PoolGroup.Add","text":"<pre><code>func (p *PoolGroup[T]) Add() (elm *T, poolId PoolGroupId, elmId PoolIndex)\n</code></pre>"},{"location":"api/pooling/#poolgroupclear","title":"PoolGroup.Clear","text":"<pre><code>func (p *PoolGroup[T]) Clear()\n</code></pre>"},{"location":"api/pooling/#poolgroupcount","title":"PoolGroup.Count","text":"<pre><code>func (p *PoolGroup[T]) Count() int\n</code></pre>"},{"location":"api/pooling/#poolgroupeach","title":"PoolGroup.Each","text":"<pre><code>func (p *PoolGroup[T]) Each(each func(elm *T))\n</code></pre>"},{"location":"api/pooling/#poolgroupremove","title":"PoolGroup.Remove","text":"<pre><code>func (p *PoolGroup[T]) Remove(poolIndex PoolGroupId, elementId PoolIndex)\n</code></pre>"},{"location":"api/pooling/#poolgroupreserve","title":"PoolGroup.Reserve","text":"<pre><code>func (p *PoolGroup[T]) Reserve(additionalElements int)\n</code></pre>"},{"location":"api/pooling/#poolgroupid","title":"PoolGroupId","text":"<p>int <pre><code>type PoolGroupId = int\n</code></pre></p>"},{"location":"api/pooling/#poolindex","title":"PoolIndex","text":"<p>uint8 <pre><code>type PoolIndex = uint8\n</code></pre></p>"},{"location":"api/profiler/","title":"package profiler","text":"<pre><code>import \"kaiju/profiler\"\n</code></pre>"},{"location":"api/profiler/#functions","title":"Functions","text":""},{"location":"api/profiler/#setupconsole","title":"SetupConsole","text":"<pre><code>func SetupConsole(host *engine.Host)\n</code></pre>"},{"location":"api/profiler/#startdefaultprofiler","title":"StartDefaultProfiler","text":"<pre><code>func StartDefaultProfiler() error\n</code></pre>"},{"location":"api/profiler/#stopdefaultprofiler","title":"StopDefaultProfiler","text":"<pre><code>func StopDefaultProfiler()\n</code></pre>"},{"location":"api/rendering/","title":"package rendering","text":"<pre><code>import \"kaiju/rendering\"\n</code></pre>"},{"location":"api/rendering/#constants","title":"Constants","text":""},{"location":"api/rendering/#fontjustifyleft","title":"FontJustifyLeft","text":"<p><code>FontJustify(iota)</code></p>"},{"location":"api/rendering/#fontjustifycenter","title":"FontJustifyCenter","text":""},{"location":"api/rendering/#fontjustifyright","title":"FontJustifyRight","text":""},{"location":"api/rendering/#fontbaselinebottom","title":"FontBaselineBottom","text":"<p><code>FontBaseline(iota)</code></p>"},{"location":"api/rendering/#fontbaselinecenter","title":"FontBaselineCenter","text":""},{"location":"api/rendering/#fontbaselinetop","title":"FontBaselineTop","text":""},{"location":"api/rendering/#fontcondensedbold","title":"FontCondensedBold","text":"<p><code>FontFace(\"fonts/OpenSans_Condensed-Bold\")</code></p>"},{"location":"api/rendering/#fontcondensedbolditalic","title":"FontCondensedBoldItalic","text":"<p><code>FontFace(\"fonts/OpenSans_Condensed-BoldItalic\")</code></p>"},{"location":"api/rendering/#fontcondensedextrabold","title":"FontCondensedExtraBold","text":"<p><code>FontFace(\"fonts/OpenSans_Condensed-ExtraBold\")</code></p>"},{"location":"api/rendering/#fontcondensedextrabolditalic","title":"FontCondensedExtraBoldItalic","text":"<p><code>FontFace(\"fonts/OpenSans_Condensed-ExtraBoldItalic\")</code></p>"},{"location":"api/rendering/#fontcondenseditalic","title":"FontCondensedItalic","text":"<p><code>FontFace(\"fonts/OpenSans_Condensed-Italic\")</code></p>"},{"location":"api/rendering/#fontcondensedlight","title":"FontCondensedLight","text":"<p><code>FontFace(\"fonts/OpenSans_Condensed-Light\")</code></p>"},{"location":"api/rendering/#fontcondensedlightitalic","title":"FontCondensedLightItalic","text":"<p><code>FontFace(\"fonts/OpenSans_Condensed-LightItalic\")</code></p>"},{"location":"api/rendering/#fontcondensedmedium","title":"FontCondensedMedium","text":"<p><code>FontFace(\"fonts/OpenSans_Condensed-Medium\")</code></p>"},{"location":"api/rendering/#fontcondensedmediumitalic","title":"FontCondensedMediumItalic","text":"<p><code>FontFace(\"fonts/OpenSans_Condensed-MediumItalic\")</code></p>"},{"location":"api/rendering/#fontcondensedregular","title":"FontCondensedRegular","text":"<p><code>FontFace(\"fonts/OpenSans_Condensed-Regular\")</code></p>"},{"location":"api/rendering/#fontcondensedsemibold","title":"FontCondensedSemiBold","text":"<p><code>FontFace(\"fonts/OpenSans_Condensed-SemiBold\")</code></p>"},{"location":"api/rendering/#fontcondensedsemibolditalic","title":"FontCondensedSemiBoldItalic","text":"<p><code>FontFace(\"fonts/OpenSans_Condensed-SemiBoldItalic\")</code></p>"},{"location":"api/rendering/#fontsemicondensedbold","title":"FontSemiCondensedBold","text":"<p><code>FontFace(\"fonts/OpenSans_SemiCondensed-Bold\")</code></p>"},{"location":"api/rendering/#fontsemicondensedbolditalic","title":"FontSemiCondensedBoldItalic","text":"<p><code>FontFace(\"fonts/OpenSans_SemiCondensed-BoldItalic\")</code></p>"},{"location":"api/rendering/#fontsemicondensedextrabold","title":"FontSemiCondensedExtraBold","text":"<p><code>FontFace(\"fonts/OpenSans_SemiCondensed-ExtraBold\")</code></p>"},{"location":"api/rendering/#fontsemicondensedextrabolditalic","title":"FontSemiCondensedExtraBoldItalic","text":"<p><code>FontFace(\"fonts/OpenSans_SemiCondensed-ExtraBoldItalic\")</code></p>"},{"location":"api/rendering/#fontsemicondenseditalic","title":"FontSemiCondensedItalic","text":"<p><code>FontFace(\"fonts/OpenSans_SemiCondensed-Italic\")</code></p>"},{"location":"api/rendering/#fontsemicondensedlight","title":"FontSemiCondensedLight","text":"<p><code>FontFace(\"fonts/OpenSans_SemiCondensed-Light\")</code></p>"},{"location":"api/rendering/#fontsemicondensedlightitalic","title":"FontSemiCondensedLightItalic","text":"<p><code>FontFace(\"fonts/OpenSans_SemiCondensed-LightItalic\")</code></p>"},{"location":"api/rendering/#fontsemicondensedmedium","title":"FontSemiCondensedMedium","text":"<p><code>FontFace(\"fonts/OpenSans_SemiCondensed-Medium\")</code></p>"},{"location":"api/rendering/#fontsemicondensedmediumitalic","title":"FontSemiCondensedMediumItalic","text":"<p><code>FontFace(\"fonts/OpenSans_SemiCondensed-MediumItalic\")</code></p>"},{"location":"api/rendering/#fontsemicondensedregular","title":"FontSemiCondensedRegular","text":"<p><code>FontFace(\"fonts/OpenSans_SemiCondensed-Regular\")</code></p>"},{"location":"api/rendering/#fontsemicondensedsemibold","title":"FontSemiCondensedSemiBold","text":"<p><code>FontFace(\"fonts/OpenSans_SemiCondensed-SemiBold\")</code></p>"},{"location":"api/rendering/#fontsemicondensedsemibolditalic","title":"FontSemiCondensedSemiBoldItalic","text":"<p><code>FontFace(\"fonts/OpenSans_SemiCondensed-SemiBoldItalic\")</code></p>"},{"location":"api/rendering/#fontbold","title":"FontBold","text":"<p><code>FontFace(\"fonts/OpenSans-Bold\")</code></p>"},{"location":"api/rendering/#fontbolditalic","title":"FontBoldItalic","text":"<p><code>FontFace(\"fonts/OpenSans-BoldItalic\")</code></p>"},{"location":"api/rendering/#fontextrabold","title":"FontExtraBold","text":"<p><code>FontFace(\"fonts/OpenSans-ExtraBold\")</code></p>"},{"location":"api/rendering/#fontextrabolditalic","title":"FontExtraBoldItalic","text":"<p><code>FontFace(\"fonts/OpenSans-ExtraBoldItalic\")</code></p>"},{"location":"api/rendering/#fontitalic","title":"FontItalic","text":"<p><code>FontFace(\"fonts/OpenSans-Italic\")</code></p>"},{"location":"api/rendering/#fontlight","title":"FontLight","text":"<p><code>FontFace(\"fonts/OpenSans-Light\")</code></p>"},{"location":"api/rendering/#fontlightitalic","title":"FontLightItalic","text":"<p><code>FontFace(\"fonts/OpenSans-LightItalic\")</code></p>"},{"location":"api/rendering/#fontmedium","title":"FontMedium","text":"<p><code>FontFace(\"fonts/OpenSans-Medium\")</code></p>"},{"location":"api/rendering/#fontmediumitalic","title":"FontMediumItalic","text":"<p><code>FontFace(\"fonts/OpenSans-MediumItalic\")</code></p>"},{"location":"api/rendering/#fontregular","title":"FontRegular","text":"<p><code>FontFace(\"fonts/OpenSans-Regular\")</code></p>"},{"location":"api/rendering/#fontsemibold","title":"FontSemiBold","text":"<p><code>FontFace(\"fonts/OpenSans-SemiBold\")</code></p>"},{"location":"api/rendering/#fontsemibolditalic","title":"FontSemiBoldItalic","text":"<p><code>FontFace(\"fonts/OpenSans-SemiBoldItalic\")</code></p>"},{"location":"api/rendering/#defaultfontemsize","title":"DefaultFontEMSize","text":"<p>14.0</p>"},{"location":"api/rendering/#maxjoints","title":"MaxJoints","text":"<p><code>50</code></p>"},{"location":"api/rendering/#maxskininstances","title":"MaxSkinInstances","text":"<p><code>50</code></p>"},{"location":"api/rendering/#quaternionsize","title":"QuaternionSize","text":"<p>[int(unsafe](../int(unsafe).[Sizeof(matrix](../int(unsafe#Sizeof(matrix)</p>"},{"location":"api/rendering/#cubemapsides","title":"CubeMapSides","text":"<p><code>6</code></p>"},{"location":"api/rendering/#bytesinpixel","title":"BytesInPixel","text":"<p><code>4</code></p>"},{"location":"api/rendering/#maxcommandbuffers","title":"MaxCommandBuffers","text":"<p><code>15</code></p>"},{"location":"api/rendering/#functions","title":"Functions","text":""},{"location":"api/rendering/#texturekeys","title":"TextureKeys","text":"<pre><code>func TextureKeys(textures []*Texture) []string\n</code></pre>"},{"location":"api/rendering/#vertexfacenormal","title":"VertexFaceNormal","text":"<pre><code>func VertexFaceNormal(verts [3]Vertex) matrix.Vec3\n</code></pre>"},{"location":"api/rendering/#types","title":"Types","text":""},{"location":"api/rendering/#canvas","title":"Canvas","text":"<p><code>interface</code></p> <pre><code>type Canvas interface {\n    Create(renderer Renderer) error\n    Draw(renderer Renderer, drawings []ShaderDraw)\n    Pass(name string) *RenderPass\n    Color() *Texture\n    ShaderPipeline(name string) FuncPipeline\n    Destroy(renderer Renderer)\n}\n</code></pre>"},{"location":"api/rendering/#combinecanvas","title":"CombineCanvas","text":"<p><code>struct</code></p> <pre><code>type CombineCanvas struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#combinecanvascolor","title":"CombineCanvas.Color","text":"<pre><code>func (r *CombineCanvas) Color() *Texture\n</code></pre>"},{"location":"api/rendering/#combinecanvascreate","title":"CombineCanvas.Create","text":"<pre><code>func (r *CombineCanvas) Create(renderer Renderer) error\n</code></pre>"},{"location":"api/rendering/#combinecanvasdestroy","title":"CombineCanvas.Destroy","text":"<pre><code>func (r *CombineCanvas) Destroy(renderer Renderer)\n</code></pre>"},{"location":"api/rendering/#combinecanvasdraw","title":"CombineCanvas.Draw","text":"<pre><code>func (r *CombineCanvas) Draw(renderer Renderer, drawings []ShaderDraw)\n</code></pre>"},{"location":"api/rendering/#combinecanvaspass","title":"CombineCanvas.Pass","text":"<pre><code>func (r *CombineCanvas) Pass(name string) *RenderPass\n</code></pre>"},{"location":"api/rendering/#combinecanvasshaderpipeline","title":"CombineCanvas.ShaderPipeline","text":"<pre><code>func (r *CombineCanvas) ShaderPipeline(name string) FuncPipeline\n</code></pre>"},{"location":"api/rendering/#descriptorsetlayoutstructure","title":"DescriptorSetLayoutStructure","text":"<p><code>struct</code></p> <pre><code>type DescriptorSetLayoutStructure struct {\n    Types []DescriptorSetLayoutStructureType\n}\n</code></pre>"},{"location":"api/rendering/#descriptorsetlayoutstructuretype","title":"DescriptorSetLayoutStructureType","text":"<p><code>struct</code></p> <pre><code>type DescriptorSetLayoutStructureType struct {\n    Type           vk.DescriptorType\n    Flags          vk.ShaderStageFlagBits\n    Count, Binding uint32\n}\n</code></pre>"},{"location":"api/rendering/#drawinstance","title":"DrawInstance","text":"<p><code>interface</code></p> <pre><code>type DrawInstance interface {\n    Destroy()\n    IsDestroyed() bool\n    Activate()\n    Deactivate()\n    IsActive() bool\n    Size() int\n    SetModel(model matrix.Mat4)\n    UpdateModel()\n    DataPointer() unsafe.Pointer\n    // Returns true if it should write the data, otherwise false\n    UpdateNamedData(index, capacity int, name string) bool\n    NamedDataPointer(name string) unsafe.Pointer\n    NamedDataInstanceSize(name string) int\n    // Has unexported methods.\n}\n</code></pre>"},{"location":"api/rendering/#reflectduplicatedrawinstance","title":"ReflectDuplicateDrawInstance","text":"<pre><code>func ReflectDuplicateDrawInstance(target DrawInstance) DrawInstance\n</code></pre>"},{"location":"api/rendering/#drawinstancegroup","title":"DrawInstanceGroup","text":"<p><code>struct</code></p> <pre><code>type DrawInstanceGroup struct {\n    Mesh *Mesh\n    InstanceDriverData\n    Textures  []*Texture\n    Instances []DrawInstance\n\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#newdrawinstancegroup","title":"NewDrawInstanceGroup","text":"<pre><code>func NewDrawInstanceGroup(mesh *Mesh, dataSize int) DrawInstanceGroup\n</code></pre>"},{"location":"api/rendering/#drawinstancegroupaddinstance","title":"DrawInstanceGroup.AddInstance","text":"<pre><code>func (d *DrawInstanceGroup) AddInstance(instance DrawInstance, shader *Shader)\n</code></pre>"},{"location":"api/rendering/#drawinstancegroupalterpadding","title":"DrawInstanceGroup.AlterPadding","text":"<pre><code>func (d *DrawInstanceGroup) AlterPadding(blockSize int)\n</code></pre>"},{"location":"api/rendering/#drawinstancegroupanyvisible","title":"DrawInstanceGroup.AnyVisible","text":"<pre><code>func (d *DrawInstanceGroup) AnyVisible() bool\n</code></pre>"},{"location":"api/rendering/#drawinstancegroupdestroy","title":"DrawInstanceGroup.Destroy","text":"<pre><code>func (d *DrawInstanceGroup) Destroy(renderer Renderer)\n</code></pre>"},{"location":"api/rendering/#drawinstancegroupisempty","title":"DrawInstanceGroup.IsEmpty","text":"<pre><code>func (d *DrawInstanceGroup) IsEmpty() bool\n</code></pre>"},{"location":"api/rendering/#drawinstancegroupisready","title":"DrawInstanceGroup.IsReady","text":"<pre><code>func (d *DrawInstanceGroup) IsReady() bool\n</code></pre>"},{"location":"api/rendering/#drawinstancegrouptotalsize","title":"DrawInstanceGroup.TotalSize","text":"<pre><code>func (d *DrawInstanceGroup) TotalSize() int\n</code></pre>"},{"location":"api/rendering/#drawinstancegroupupdatedata","title":"DrawInstanceGroup.UpdateData","text":"<pre><code>func (d *DrawInstanceGroup) UpdateData(renderer Renderer)\n</code></pre>"},{"location":"api/rendering/#drawinstancegroupvisiblecount","title":"DrawInstanceGroup.VisibleCount","text":"<pre><code>func (d *DrawInstanceGroup) VisibleCount() int\n</code></pre>"},{"location":"api/rendering/#drawinstancegroupvisiblesize","title":"DrawInstanceGroup.VisibleSize","text":"<pre><code>func (d *DrawInstanceGroup) VisibleSize() int\n</code></pre>"},{"location":"api/rendering/#drawing","title":"Drawing","text":"<p><code>struct</code></p> <pre><code>type Drawing struct {\n    Renderer    Renderer\n    Shader      *Shader\n    Mesh        *Mesh\n    Textures    []*Texture\n    ShaderData  DrawInstance\n    Transform   *matrix.Transform\n    CanvasId    string\n    UseBlending bool\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#drawingisvalid","title":"Drawing.IsValid","text":"<pre><code>func (d *Drawing) IsValid() bool\n</code></pre>"},{"location":"api/rendering/#drawings","title":"Drawings","text":"<p><code>struct</code></p> <pre><code>type Drawings struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#newdrawings","title":"NewDrawings","text":"<pre><code>func NewDrawings() Drawings\n</code></pre>"},{"location":"api/rendering/#drawingsadddrawing","title":"Drawings.AddDrawing","text":"<pre><code>func (d *Drawings) AddDrawing(drawing *Drawing)\n</code></pre>"},{"location":"api/rendering/#drawingsadddrawings","title":"Drawings.AddDrawings","text":"<pre><code>func (d *Drawings) AddDrawings(drawings []Drawing, target Canvas)\n</code></pre>"},{"location":"api/rendering/#drawingsdestroy","title":"Drawings.Destroy","text":"<pre><code>func (d *Drawings) Destroy(renderer Renderer)\n</code></pre>"},{"location":"api/rendering/#drawingshasdrawings","title":"Drawings.HasDrawings","text":"<pre><code>func (d *Drawings) HasDrawings() bool\n</code></pre>"},{"location":"api/rendering/#drawingspreparepending","title":"Drawings.PreparePending","text":"<pre><code>func (d *Drawings) PreparePending()\n</code></pre>"},{"location":"api/rendering/#drawingsrender","title":"Drawings.Render","text":"<pre><code>func (d *Drawings) Render(renderer Renderer)\n</code></pre>"},{"location":"api/rendering/#fontbaseline","title":"FontBaseline","text":"<p>int <pre><code>type FontBaseline int\n</code></pre></p>"},{"location":"api/rendering/#fontcache","title":"FontCache","text":"<p><code>struct</code></p> <pre><code>type FontCache struct {\n    FaceMutex sync.RWMutex\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#newfontcache","title":"NewFontCache","text":"<pre><code>func NewFontCache(renderer Renderer, assetDb *assets.Database) FontCache\n</code></pre>"},{"location":"api/rendering/#fontcachedestroy","title":"FontCache.Destroy","text":"<pre><code>func (cache *FontCache) Destroy()\n</code></pre>"},{"location":"api/rendering/#fontcacheemsize","title":"FontCache.EMSize","text":"<pre><code>func (cache *FontCache) EMSize(face FontFace) float32\n</code></pre>"},{"location":"api/rendering/#fontcacheinit","title":"FontCache.Init","text":"<pre><code>func (cache *FontCache) Init(renderer Renderer, assetDb *assets.Database, caches RenderCaches)\n</code></pre>"},{"location":"api/rendering/#fontcachelinecountwithin","title":"FontCache.LineCountWithin","text":"<pre><code>func (cache *FontCache) LineCountWithin(face FontFace, text string, scale, maxWidth float32) int\n</code></pre>"},{"location":"api/rendering/#fontcachemeasurecharacter","title":"FontCache.MeasureCharacter","text":"<pre><code>func (cache FontCache) MeasureCharacter(face string, r rune, pixelSize float32) matrix.Vec2\n</code></pre>"},{"location":"api/rendering/#fontcachemeasurestring","title":"FontCache.MeasureString","text":"<pre><code>func (cache *FontCache) MeasureString(face FontFace, text string, scale float32) float32\n</code></pre>"},{"location":"api/rendering/#fontcachemeasurestringwithin","title":"FontCache.MeasureStringWithin","text":"<pre><code>func (cache *FontCache) MeasureStringWithin(face FontFace, text string, scale, maxWidth float32, lineHeight float32) matrix.Vec2\n</code></pre>"},{"location":"api/rendering/#fontcachepointoffsetwithin","title":"FontCache.PointOffsetWithin","text":"<pre><code>func (cache *FontCache) PointOffsetWithin(face FontFace, text string, point matrix.Vec2, scale, maxWidth float32) int\n</code></pre>"},{"location":"api/rendering/#fontcacherendermeshes","title":"FontCache.RenderMeshes","text":"<pre><code>func (cache *FontCache) RenderMeshes(caches RenderCaches,\n</code></pre> <p>text string, x, y, z, scale, maxWidth float32, fgColor, bgColor matrix.Color, justify FontJustify, baseline FontBaseline, rootScale matrix.Vec3, instanced, is3D bool, face FontFace, lineHeight float32) []Drawing</p>"},{"location":"api/rendering/#fontcachestringrectswithinnew","title":"FontCache.StringRectsWithinNew","text":"<pre><code>func (cache *FontCache) StringRectsWithinNew(face FontFace, text string, scale, maxWidth float32) []matrix.Vec4\n</code></pre>"},{"location":"api/rendering/#fontface","title":"FontFace","text":"<p>string <pre><code>type FontFace string\n</code></pre></p>"},{"location":"api/rendering/#fontfaceisbold","title":"FontFace.IsBold","text":"<pre><code>func (f FontFace) IsBold() bool\n</code></pre>"},{"location":"api/rendering/#fontfaceisextrabold","title":"FontFace.IsExtraBold","text":"<pre><code>func (f FontFace) IsExtraBold() bool\n</code></pre>"},{"location":"api/rendering/#fontfaceisitalic","title":"FontFace.IsItalic","text":"<pre><code>func (f FontFace) IsItalic() bool\n</code></pre>"},{"location":"api/rendering/#fontjustify","title":"FontJustify","text":"<p>int <pre><code>type FontJustify int\n</code></pre></p>"},{"location":"api/rendering/#funcpipeline","title":"FuncPipeline","text":"<p>func <pre><code>type FuncPipeline func(renderer Renderer, shader *Shader, shaderStages []vk.PipelineShaderStageCreateInfo) bool\n</code></pre></p>"},{"location":"api/rendering/#globalshaderdata","title":"GlobalShaderData","text":"<p><code>struct</code></p> <pre><code>type GlobalShaderData struct {\n    View           matrix.Mat4\n    Projection     matrix.Mat4\n    UIView         matrix.Mat4\n    UIProjection   matrix.Mat4\n    CameraPosition matrix.Vec3\n\n    UICameraPosition matrix.Vec3\n\n    ScreenSize matrix.Vec2\n    Time       float32\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#instancecopydata","title":"InstanceCopyData","text":"<p><code>struct</code></p> <pre><code>type InstanceCopyData struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#instancecopydatanew","title":"InstanceCopyDataNew","text":"<pre><code>func InstanceCopyDataNew(padding int) InstanceCopyData\n</code></pre>"},{"location":"api/rendering/#instancedriverdata","title":"InstanceDriverData","text":"<p><code>struct</code></p> <pre><code>type InstanceDriverData struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#instancegroupskinningdata","title":"InstanceGroupSkinningData","text":"<p><code>struct</code></p> <pre><code>type InstanceGroupSkinningData struct {\n}\n</code></pre>"},{"location":"api/rendering/#layoutbufferdescription","title":"LayoutBufferDescription","text":"<p><code>struct</code></p> <pre><code>type LayoutBufferDescription struct {\n    Name     string\n    Type     string\n    Capacity int\n}\n</code></pre>"},{"location":"api/rendering/#layoutbufferdescriptiontotalbytecapacity","title":"LayoutBufferDescription.TotalByteCapacity","text":"<pre><code>func (l *LayoutBufferDescription) TotalByteCapacity() int\n</code></pre>"},{"location":"api/rendering/#layoutbufferdescriptiontypesize","title":"LayoutBufferDescription.TypeSize","text":"<pre><code>func (l *LayoutBufferDescription) TypeSize() int\n</code></pre>"},{"location":"api/rendering/#mesh","title":"Mesh","text":"<p><code>struct</code></p> <pre><code>type Mesh struct {\n    MeshId MeshId\n\n    Details meshDetails\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#newmesh","title":"NewMesh","text":"<pre><code>func NewMesh(key string, verts []Vertex, indexes []uint32) *Mesh\n</code></pre>"},{"location":"api/rendering/#newmeshcube","title":"NewMeshCube","text":"<pre><code>func NewMeshCube(cache *MeshCache) *Mesh\n</code></pre>"},{"location":"api/rendering/#newmeshcubeinverse","title":"NewMeshCubeInverse","text":"<pre><code>func NewMeshCubeInverse(cache *MeshCache) *Mesh\n</code></pre>"},{"location":"api/rendering/#newmeshfrustum","title":"NewMeshFrustum","text":"<pre><code>func NewMeshFrustum(cache *MeshCache, key string, inverseProjection matrix.Mat4) *Mesh\n</code></pre>"},{"location":"api/rendering/#newmeshgrid","title":"NewMeshGrid","text":"<pre><code>func NewMeshGrid(cache *MeshCache, key string, points []matrix.Vec3, vertColor matrix.Color) *Mesh\n</code></pre>"},{"location":"api/rendering/#newmeshline","title":"NewMeshLine","text":"<pre><code>func NewMeshLine(cache *MeshCache, key string, p0, p1 matrix.Vec3, vertColor matrix.Color) *Mesh\n</code></pre>"},{"location":"api/rendering/#newmeshoffsetquad","title":"NewMeshOffsetQuad","text":"<pre><code>func NewMeshOffsetQuad(cache *MeshCache, key string, sideOffsets matrix.Vec4) *Mesh\n</code></pre>"},{"location":"api/rendering/#newmeshplane","title":"NewMeshPlane","text":"<pre><code>func NewMeshPlane(cache *MeshCache) *Mesh\n</code></pre>"},{"location":"api/rendering/#newmeshpoint","title":"NewMeshPoint","text":"<pre><code>func NewMeshPoint(cache *MeshCache, key string, position matrix.Vec3, vertColor matrix.Color) *Mesh\n</code></pre>"},{"location":"api/rendering/#newmeshquad","title":"NewMeshQuad","text":"<pre><code>func NewMeshQuad(cache *MeshCache) *Mesh\n</code></pre>"},{"location":"api/rendering/#newmeshscreenquad","title":"NewMeshScreenQuad","text":"<pre><code>func NewMeshScreenQuad(cache *MeshCache) *Mesh\n</code></pre>"},{"location":"api/rendering/#newmeshskyboxcube","title":"NewMeshSkyboxCube","text":"<pre><code>func NewMeshSkyboxCube(cache *MeshCache) *Mesh\n</code></pre>"},{"location":"api/rendering/#newmeshtexturablecube","title":"NewMeshTexturableCube","text":"<pre><code>func NewMeshTexturableCube(cache *MeshCache) *Mesh\n</code></pre>"},{"location":"api/rendering/#newmeshtriangle","title":"NewMeshTriangle","text":"<pre><code>func NewMeshTriangle(cache *MeshCache) *Mesh\n</code></pre>"},{"location":"api/rendering/#newmeshunitquad","title":"NewMeshUnitQuad","text":"<pre><code>func NewMeshUnitQuad(cache *MeshCache) *Mesh\n</code></pre>"},{"location":"api/rendering/#newmeshwirecube","title":"NewMeshWireCube","text":"<pre><code>func NewMeshWireCube(cache *MeshCache, key string, vertColor matrix.Color) *Mesh\n</code></pre>"},{"location":"api/rendering/#newmeshwirequad","title":"NewMeshWireQuad","text":"<pre><code>func NewMeshWireQuad(cache *MeshCache, key string, vertColor matrix.Color) *Mesh\n</code></pre>"},{"location":"api/rendering/#meshdelayedcreate","title":"Mesh.DelayedCreate","text":"<pre><code>func (m *Mesh) DelayedCreate(renderer Renderer)\n</code></pre>"},{"location":"api/rendering/#meshdestroy","title":"Mesh.Destroy","text":"<pre><code>func (m *Mesh) Destroy(renderer Renderer)\n</code></pre>"},{"location":"api/rendering/#meshisready","title":"Mesh.IsReady","text":"<pre><code>func (m Mesh) IsReady() bool\n</code></pre>"},{"location":"api/rendering/#meshkey","title":"Mesh.Key","text":"<pre><code>func (m Mesh) Key() string\n</code></pre>"},{"location":"api/rendering/#meshsetkey","title":"Mesh.SetKey","text":"<pre><code>func (m *Mesh) SetKey(key string)\n</code></pre>"},{"location":"api/rendering/#meshcache","title":"MeshCache","text":"<p><code>struct</code></p> <pre><code>type MeshCache struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#newmeshcache","title":"NewMeshCache","text":"<pre><code>func NewMeshCache(renderer Renderer, assetDatabase *assets.Database) MeshCache\n</code></pre>"},{"location":"api/rendering/#meshcacheaddmesh","title":"MeshCache.AddMesh","text":"<pre><code>func (m *MeshCache) AddMesh(mesh *Mesh) *Mesh\n</code></pre> <p>Try to add the mesh to the cache, if it already exists, return the existing mesh</p>"},{"location":"api/rendering/#meshcachecreatepending","title":"MeshCache.CreatePending","text":"<pre><code>func (m *MeshCache) CreatePending()\n</code></pre>"},{"location":"api/rendering/#meshcachedestroy","title":"MeshCache.Destroy","text":"<pre><code>func (m *MeshCache) Destroy()\n</code></pre>"},{"location":"api/rendering/#meshcachefindmesh","title":"MeshCache.FindMesh","text":"<pre><code>func (m *MeshCache) FindMesh(key string) (*Mesh, bool)\n</code></pre>"},{"location":"api/rendering/#meshcachemesh","title":"MeshCache.Mesh","text":"<pre><code>func (m *MeshCache) Mesh(key string, verts []Vertex, indexes []uint32) *Mesh\n</code></pre>"},{"location":"api/rendering/#meshcullmode","title":"MeshCullMode","text":"<p>int <pre><code>type MeshCullMode = int\n</code></pre></p> <p>const ( MeshCullModeBack MeshCullMode = iota MeshCullModeFront MeshCullModeNone )</p>"},{"location":"api/rendering/#meshdrawmode","title":"MeshDrawMode","text":"<p>int <pre><code>type MeshDrawMode = int\n</code></pre></p> <p>const ( MeshDrawModePoints MeshDrawMode = iota MeshDrawModeLines MeshDrawModeTriangles MeshDrawModePatches )</p>"},{"location":"api/rendering/#meshid","title":"MeshId","text":"<p><code>struct</code></p> <pre><code>type MeshId struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#meshidisvalid","title":"MeshId.IsValid","text":"<pre><code>func (m MeshId) IsValid() bool\n</code></pre>"},{"location":"api/rendering/#oitcanvas","title":"OITCanvas","text":"<p><code>struct</code></p> <pre><code>type OITCanvas struct {\n    ClearColor matrix.Color\n\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#oitcanvascolor","title":"OITCanvas.Color","text":"<pre><code>func (r *OITCanvas) Color() *Texture\n</code></pre>"},{"location":"api/rendering/#oitcanvascreate","title":"OITCanvas.Create","text":"<pre><code>func (r *OITCanvas) Create(renderer Renderer) error\n</code></pre>"},{"location":"api/rendering/#oitcanvasdestroy","title":"OITCanvas.Destroy","text":"<pre><code>func (r *OITCanvas) Destroy(renderer Renderer)\n</code></pre>"},{"location":"api/rendering/#oitcanvasdraw","title":"OITCanvas.Draw","text":"<pre><code>func (r *OITCanvas) Draw(renderer Renderer, drawings []ShaderDraw)\n</code></pre>"},{"location":"api/rendering/#oitcanvasinitialize","title":"OITCanvas.Initialize","text":"<pre><code>func (r *OITCanvas) Initialize(renderer Renderer, width, height float32)\n</code></pre>"},{"location":"api/rendering/#oitcanvaspass","title":"OITCanvas.Pass","text":"<pre><code>func (r *OITCanvas) Pass(name string) *RenderPass\n</code></pre>"},{"location":"api/rendering/#oitcanvasshaderpipeline","title":"OITCanvas.ShaderPipeline","text":"<pre><code>func (r *OITCanvas) ShaderPipeline(name string) FuncPipeline\n</code></pre>"},{"location":"api/rendering/#outlinecanvas","title":"OutlineCanvas","text":"<p><code>struct</code></p> <pre><code>type OutlineCanvas struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#outlinecanvascolor","title":"OutlineCanvas.Color","text":"<pre><code>func (r *OutlineCanvas) Color() *Texture\n</code></pre>"},{"location":"api/rendering/#outlinecanvascreate","title":"OutlineCanvas.Create","text":"<pre><code>func (r *OutlineCanvas) Create(renderer Renderer) error\n</code></pre>"},{"location":"api/rendering/#outlinecanvasdestroy","title":"OutlineCanvas.Destroy","text":"<pre><code>func (r *OutlineCanvas) Destroy(renderer Renderer)\n</code></pre>"},{"location":"api/rendering/#outlinecanvasdraw","title":"OutlineCanvas.Draw","text":"<pre><code>func (r *OutlineCanvas) Draw(renderer Renderer, drawings []ShaderDraw)\n</code></pre>"},{"location":"api/rendering/#outlinecanvaspass","title":"OutlineCanvas.Pass","text":"<pre><code>func (r *OutlineCanvas) Pass(name string) *RenderPass\n</code></pre>"},{"location":"api/rendering/#outlinecanvasshaderpipeline","title":"OutlineCanvas.ShaderPipeline","text":"<pre><code>func (r *OutlineCanvas) ShaderPipeline(name string) FuncPipeline\n</code></pre>"},{"location":"api/rendering/#rendercaches","title":"RenderCaches","text":"<p><code>interface</code></p> <pre><code>type RenderCaches interface {\n    ShaderCache() *ShaderCache\n    TextureCache() *TextureCache\n    MeshCache() *MeshCache\n    FontCache() *FontCache\n}\n</code></pre>"},{"location":"api/rendering/#renderpass","title":"RenderPass","text":"<p><code>struct</code></p> <pre><code>type RenderPass struct {\n    Handle vk.RenderPass\n    Buffer vk.Framebuffer\n\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#newrenderpass","title":"NewRenderPass","text":"<pre><code>func NewRenderPass(device vk.Device, dbg *debugVulkan, attachments []vk.AttachmentDescription, subPasses []vk.SubpassDescription, dependencies []vk.SubpassDependency) (RenderPass, error)\n</code></pre>"},{"location":"api/rendering/#renderpasscreateframebuffer","title":"RenderPass.CreateFrameBuffer","text":"<pre><code>func (p *RenderPass) CreateFrameBuffer(vr *Vulkan,\n</code></pre> <p>imageViews []vk.ImageView, width, height int) error</p>"},{"location":"api/rendering/#renderpassdestroy","title":"RenderPass.Destroy","text":"<pre><code>func (p *RenderPass) Destroy()\n</code></pre>"},{"location":"api/rendering/#rendertargetdraw","title":"RenderTargetDraw","text":"<p><code>struct</code></p> <pre><code>type RenderTargetDraw struct {\n    Target Canvas\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#renderer","title":"Renderer","text":"<p><code>interface</code></p> <pre><code>type Renderer interface {\n    Initialize(caches RenderCaches, width, height int32) error\n    ReadyFrame(camera cameras.Camera, uiCamera cameras.Camera, runtime float32) bool\n    CreateShader(shader *Shader, assetDatabase *assets.Database)\n    CreateMesh(mesh *Mesh, verts []Vertex, indices []uint32)\n    CreateTexture(texture *Texture, textureData *TextureData)\n    TextureReadPixel(texture *Texture, x, y int) matrix.Color\n    TextureWritePixels(texture *Texture, x, y, width, height int, pixels []byte)\n    Draw(drawings []RenderTargetDraw)\n    BlitTargets(targets ...RenderTargetDraw)\n    SwapFrame(width, height int32) bool\n    Resize(width, height int)\n    AddPreRun(preRun func())\n    DestroyGroup(group *DrawInstanceGroup)\n    DestroyTexture(texture *Texture)\n    DestroyShader(shader *Shader)\n    DestroyMesh(mesh *Mesh)\n    Destroy()\n    RegisterCanvas(name string, canvas Canvas)\n    Canvas(name string) (Canvas, bool)\n    DefaultCanvas() Canvas\n    WaitForRender()\n}\n</code></pre>"},{"location":"api/rendering/#renderingcontainer","title":"RenderingContainer","text":"<p><code>interface</code></p> <pre><code>type RenderingContainer interface {\n    GetDrawableSize() (int32, int32)\n    GetInstanceExtensions() []string\n    PlatformWindow() unsafe.Pointer\n    PlatformInstance() unsafe.Pointer\n}\n</code></pre>"},{"location":"api/rendering/#shader","title":"Shader","text":"<p><code>struct</code></p> <pre><code>type Shader struct {\n    Key        string\n    RenderId   ShaderId\n    VertPath   string\n    FragPath   string\n    GeomPath   string\n    CtrlPath   string\n    EvalPath   string\n    RenderPass *RenderPass\n    DriverData ShaderDriverData\n\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#newshader","title":"NewShader","text":"<pre><code>func NewShader(vertPath, fragPath, geomPath, ctrlPath, evalPath,\n</code></pre> <p>key string, renderPass RenderPass) Shader</p>"},{"location":"api/rendering/#shaderaddsubshader","title":"Shader.AddSubShader","text":"<pre><code>func (s *Shader) AddSubShader(key string, shader *Shader)\n</code></pre>"},{"location":"api/rendering/#shaderdelayedcreate","title":"Shader.DelayedCreate","text":"<pre><code>func (s *Shader) DelayedCreate(renderer Renderer, assetDatabase *assets.Database)\n</code></pre>"},{"location":"api/rendering/#shaderdestroy","title":"Shader.Destroy","text":"<pre><code>func (s *Shader) Destroy(renderer Renderer)\n</code></pre>"},{"location":"api/rendering/#shaderiscomposite","title":"Shader.IsComposite","text":"<pre><code>func (s *Shader) IsComposite() bool\n</code></pre>"},{"location":"api/rendering/#shaderremovesubshader","title":"Shader.RemoveSubShader","text":"<pre><code>func (s *Shader) RemoveSubShader(key string)\n</code></pre>"},{"location":"api/rendering/#shadersubshader","title":"Shader.SubShader","text":"<pre><code>func (s *Shader) SubShader(key string) *Shader\n</code></pre>"},{"location":"api/rendering/#shaderbuffer","title":"ShaderBuffer","text":"<p><code>struct</code></p> <pre><code>type ShaderBuffer struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#shadercache","title":"ShaderCache","text":"<p><code>struct</code></p> <pre><code>type ShaderCache struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#newshadercache","title":"NewShaderCache","text":"<pre><code>func NewShaderCache(renderer Renderer, assetDatabase *assets.Database) ShaderCache\n</code></pre>"},{"location":"api/rendering/#shadercachecreatepending","title":"ShaderCache.CreatePending","text":"<pre><code>func (s *ShaderCache) CreatePending()\n</code></pre>"},{"location":"api/rendering/#shadercachedestroy","title":"ShaderCache.Destroy","text":"<pre><code>func (s *ShaderCache) Destroy()\n</code></pre>"},{"location":"api/rendering/#shadercacheshader","title":"ShaderCache.Shader","text":"<pre><code>func (s *ShaderCache) Shader(vertPath, fragPath, geomPath, ctrlPath,\n</code></pre> <p>evalPath, key string, renderPass RenderPass) (shader Shader, isNew bool)</p>"},{"location":"api/rendering/#shadercacheshaderfromdefinition","title":"ShaderCache.ShaderFromDefinition","text":"<pre><code>func (s *ShaderCache) ShaderFromDefinition(definitionKey string) *Shader\n</code></pre>"},{"location":"api/rendering/#shaderdatabase","title":"ShaderDataBase","text":"<p><code>struct</code></p> <pre><code>type ShaderDataBase struct {\n    InitModel matrix.Mat4\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#newshaderdatabase","title":"NewShaderDataBase","text":"<pre><code>func NewShaderDataBase() ShaderDataBase\n</code></pre>"},{"location":"api/rendering/#shaderdatabaseactivate","title":"ShaderDataBase.Activate","text":"<pre><code>func (s *ShaderDataBase) Activate()\n</code></pre>"},{"location":"api/rendering/#shaderdatabasecanceldestroy","title":"ShaderDataBase.CancelDestroy","text":"<pre><code>func (s *ShaderDataBase) CancelDestroy()\n</code></pre>"},{"location":"api/rendering/#shaderdatabasedatapointer","title":"ShaderDataBase.DataPointer","text":"<pre><code>func (s *ShaderDataBase) DataPointer() unsafe.Pointer\n</code></pre>"},{"location":"api/rendering/#shaderdatabasedeactivate","title":"ShaderDataBase.Deactivate","text":"<pre><code>func (s *ShaderDataBase) Deactivate()\n</code></pre>"},{"location":"api/rendering/#shaderdatabasedestroy","title":"ShaderDataBase.Destroy","text":"<pre><code>func (s *ShaderDataBase) Destroy()\n</code></pre>"},{"location":"api/rendering/#shaderdatabaseisactive","title":"ShaderDataBase.IsActive","text":"<pre><code>func (s *ShaderDataBase) IsActive() bool\n</code></pre>"},{"location":"api/rendering/#shaderdatabaseisdestroyed","title":"ShaderDataBase.IsDestroyed","text":"<pre><code>func (s *ShaderDataBase) IsDestroyed() bool\n</code></pre>"},{"location":"api/rendering/#shaderdatabasemodel","title":"ShaderDataBase.Model","text":"<pre><code>func (s *ShaderDataBase) Model() matrix.Mat4\n</code></pre>"},{"location":"api/rendering/#shaderdatabasenameddatainstancesize","title":"ShaderDataBase.NamedDataInstanceSize","text":"<pre><code>func (s *ShaderDataBase) NamedDataInstanceSize(name string) int\n</code></pre>"},{"location":"api/rendering/#shaderdatabasenameddatapointer","title":"ShaderDataBase.NamedDataPointer","text":"<pre><code>func (s *ShaderDataBase) NamedDataPointer(name string) unsafe.Pointer\n</code></pre>"},{"location":"api/rendering/#shaderdatabasesetmodel","title":"ShaderDataBase.SetModel","text":"<pre><code>func (s *ShaderDataBase) SetModel(model matrix.Mat4)\n</code></pre>"},{"location":"api/rendering/#shaderdatabasesetup","title":"ShaderDataBase.Setup","text":"<pre><code>func (s *ShaderDataBase) Setup()\n</code></pre>"},{"location":"api/rendering/#shaderdatabasesize","title":"ShaderDataBase.Size","text":"<pre><code>func (s *ShaderDataBase) Size() int\n</code></pre>"},{"location":"api/rendering/#shaderdatabaseupdatemodel","title":"ShaderDataBase.UpdateModel","text":"<pre><code>func (s *ShaderDataBase) UpdateModel()\n</code></pre>"},{"location":"api/rendering/#shaderdatabaseupdatenameddata","title":"ShaderDataBase.UpdateNamedData","text":"<pre><code>func (s *ShaderDataBase) UpdateNamedData(index, capacity int, name string) bool\n</code></pre>"},{"location":"api/rendering/#shaderdatabasic","title":"ShaderDataBasic","text":"<p><code>struct</code></p> <pre><code>type ShaderDataBasic struct {\n    ShaderDataBase\n    Color matrix.Color\n}\n</code></pre>"},{"location":"api/rendering/#shaderdatabasicsize","title":"ShaderDataBasic.Size","text":"<pre><code>func (t ShaderDataBasic) Size() int\n</code></pre>"},{"location":"api/rendering/#shaderdef","title":"ShaderDef","text":"<p><code>struct</code></p> <pre><code>type ShaderDef struct {\n    CullMode     string\n    DrawMode     string\n    Vulkan       ShaderDefDriver\n    Canvas       string\n    RenderPass   string\n    Pipeline     string\n    LayoutGroups []ShaderLayoutGroup\n}\n</code></pre>"},{"location":"api/rendering/#shaderdeffromjson","title":"ShaderDefFromJson","text":"<pre><code>func ShaderDefFromJson(jsonStr string) (ShaderDef, error)\n</code></pre>"},{"location":"api/rendering/#shaderdefselectlayout","title":"ShaderDef.SelectLayout","text":"<pre><code>func (s *ShaderDef) SelectLayout(stage string) *ShaderLayoutGroup\n</code></pre>"},{"location":"api/rendering/#shaderdefstride","title":"ShaderDef.Stride","text":"<pre><code>func (sd ShaderDef) Stride() uint32\n</code></pre>"},{"location":"api/rendering/#shaderdeftoattributedescription","title":"ShaderDef.ToAttributeDescription","text":"<pre><code>func (sd ShaderDef) ToAttributeDescription(locationStart uint32) []vk.VertexInputAttributeDescription\n</code></pre>"},{"location":"api/rendering/#shaderdeftodescriptorsetlayoutstructure","title":"ShaderDef.ToDescriptorSetLayoutStructure","text":"<pre><code>func (sd ShaderDef) ToDescriptorSetLayoutStructure() DescriptorSetLayoutStructure\n</code></pre>"},{"location":"api/rendering/#shaderdefdriver","title":"ShaderDefDriver","text":"<p><code>struct</code></p> <pre><code>type ShaderDefDriver struct {\n    Vert string\n    Frag string\n    Geom string\n    Tesc string\n    Tese string\n}\n</code></pre>"},{"location":"api/rendering/#shaderdeffield","title":"ShaderDefField","text":"<p><code>struct</code></p> <pre><code>type ShaderDefField struct {\n    Name string\n    Type string\n}\n</code></pre>"},{"location":"api/rendering/#shaderdeffieldformat","title":"ShaderDefField.Format","text":"<pre><code>func (f ShaderDefField) Format() vk.Format\n</code></pre>"},{"location":"api/rendering/#shaderdeffieldvec4size","title":"ShaderDefField.Vec4Size","text":"<pre><code>func (f ShaderDefField) Vec4Size() uint32\n</code></pre>"},{"location":"api/rendering/#shaderdeflayout","title":"ShaderDefLayout","text":"<p><code>struct</code></p> <pre><code>type ShaderDefLayout struct {\n    Type    string\n    Flags   []string\n    Count   int\n    Binding int\n    Buffer  *LayoutBufferDescription\n}\n</code></pre>"},{"location":"api/rendering/#shaderdeflayoutdescriptorflags","title":"ShaderDefLayout.DescriptorFlags","text":"<pre><code>func (l ShaderDefLayout) DescriptorFlags() vk.ShaderStageFlagBits\n</code></pre>"},{"location":"api/rendering/#shaderdeflayoutdescriptortype","title":"ShaderDefLayout.DescriptorType","text":"<pre><code>func (l ShaderDefLayout) DescriptorType() vk.DescriptorType\n</code></pre>"},{"location":"api/rendering/#shaderdraw","title":"ShaderDraw","text":"<p><code>struct</code></p> <pre><code>type ShaderDraw struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#newshaderdraw","title":"NewShaderDraw","text":"<pre><code>func NewShaderDraw(shader *Shader) ShaderDraw\n</code></pre>"},{"location":"api/rendering/#shaderdrawaddinstancegroup","title":"ShaderDraw.AddInstanceGroup","text":"<pre><code>func (s *ShaderDraw) AddInstanceGroup(group DrawInstanceGroup)\n</code></pre>"},{"location":"api/rendering/#shaderdrawdestroy","title":"ShaderDraw.Destroy","text":"<pre><code>func (s *ShaderDraw) Destroy(renderer Renderer)\n</code></pre>"},{"location":"api/rendering/#shaderdrawfilter","title":"ShaderDraw.Filter","text":"<pre><code>func (s *ShaderDraw) Filter(filter func(*DrawInstanceGroup) bool) []*DrawInstanceGroup\n</code></pre>"},{"location":"api/rendering/#shaderdrawsolidgroups","title":"ShaderDraw.SolidGroups","text":"<pre><code>func (s *ShaderDraw) SolidGroups() []*DrawInstanceGroup\n</code></pre>"},{"location":"api/rendering/#shaderdrawtransparentgroups","title":"ShaderDraw.TransparentGroups","text":"<pre><code>func (s *ShaderDraw) TransparentGroups() []*DrawInstanceGroup\n</code></pre>"},{"location":"api/rendering/#shaderdriverdata","title":"ShaderDriverData","text":"<p><code>struct</code></p> <pre><code>type ShaderDriverData struct {\n    DescriptorSetLayoutStructure\n    CullMode              vk.CullModeFlagBits\n    DrawMode              MeshDrawMode\n    Stride                uint32\n    AttributeDescriptions []vk.VertexInputAttributeDescription\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#newshaderdriverdata","title":"NewShaderDriverData","text":"<pre><code>func NewShaderDriverData() ShaderDriverData\n</code></pre>"},{"location":"api/rendering/#shaderid","title":"ShaderId","text":"<p><code>struct</code></p> <pre><code>type ShaderId struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#shaderidisvalid","title":"ShaderId.IsValid","text":"<pre><code>func (s ShaderId) IsValid() bool\n</code></pre>"},{"location":"api/rendering/#shaderlayout","title":"ShaderLayout","text":"<p><code>struct</code></p> <pre><code>type ShaderLayout struct {\n    Location        int    // -1 if not set\n    Binding         int    // -1 if not set\n    Set             int    // -1 if not set\n    InputAttachment int    // -1 if not set\n    Type            string // float, vec3, mat4, etc.\n    Name            string\n    Source          string // in, out, uniform\n    Fields          []ShaderLayoutStructField\n}\n</code></pre>"},{"location":"api/rendering/#shaderlayoutcapacity","title":"ShaderLayout.Capacity","text":"<pre><code>func (l *ShaderLayout) Capacity() int\n</code></pre>"},{"location":"api/rendering/#shaderlayoutdescriptortype","title":"ShaderLayout.DescriptorType","text":"<pre><code>func (l *ShaderLayout) DescriptorType() vk.DescriptorType\n</code></pre>"},{"location":"api/rendering/#shaderlayoutfullname","title":"ShaderLayout.FullName","text":"<pre><code>func (l *ShaderLayout) FullName() string\n</code></pre>"},{"location":"api/rendering/#shaderlayoutisbuffer","title":"ShaderLayout.IsBuffer","text":"<pre><code>func (l *ShaderLayout) IsBuffer() bool\n</code></pre>"},{"location":"api/rendering/#shaderlayoutstride","title":"ShaderLayout.Stride","text":"<pre><code>func (l *ShaderLayout) Stride() int\n</code></pre>"},{"location":"api/rendering/#shaderlayoutgroup","title":"ShaderLayoutGroup","text":"<p><code>struct</code></p> <pre><code>type ShaderLayoutGroup struct {\n    Type    string\n    Layouts []ShaderLayout\n}\n</code></pre>"},{"location":"api/rendering/#shaderlayoutgroupdescriptorflag","title":"ShaderLayoutGroup.DescriptorFlag","text":"<pre><code>func (g *ShaderLayoutGroup) DescriptorFlag() vk.ShaderStageFlagBits\n</code></pre>"},{"location":"api/rendering/#shaderlayoutstructfield","title":"ShaderLayoutStructField","text":"<p><code>struct</code></p> <pre><code>type ShaderLayoutStructField struct {\n    Type string // float, vec3, mat4, etc.\n    Name string\n}\n</code></pre>"},{"location":"api/rendering/#shaderpipelinecolorblendattachments","title":"ShaderPipelineColorBlendAttachments","text":"<p><code>struct</code></p> <pre><code>type ShaderPipelineColorBlendAttachments struct {\n    BlendEnable         bool\n    SrcColorBlendFactor string\n    DstColorBlendFactor string\n    ColorBlendOp        string\n    SrcAlphaBlendFactor string\n    DstAlphaBlendFactor string\n    AlphaBlendOp        string\n    ColorWriteMaskR     bool\n    ColorWriteMaskG     bool\n    ColorWriteMaskB     bool\n    ColorWriteMaskA     bool\n}\n</code></pre>"},{"location":"api/rendering/#shaderpipelinedata","title":"ShaderPipelineData","text":"<p><code>struct</code></p> <pre><code>type ShaderPipelineData struct {\n    Name                    string\n    Topology                string\n    PrimitiveRestart        bool\n    DepthClampEnable        bool\n    RasterizerDiscardEnable bool\n    PolygonMode             string\n    CullMode                string\n    FrontFace               string\n    DepthBiasEnable         bool\n    DepthBiasConstantFactor float32\n    DepthBiasClamp          float32\n    DepthBiasSlopeFactor    float32\n    LineWidth               float32\n    RasterizationSamples    string\n    SampleShadingEnable     bool\n    MinSampleShading        float32\n    AlphaToCoverageEnable   bool\n    AlphaToOneEnable        bool\n    ColorBlendAttachments   []ShaderPipelineColorBlendAttachments\n    LogicOpEnable           bool\n    LogicOp                 string\n    BlendConstants0         float32\n    BlendConstants1         float32\n    BlendConstants2         float32\n    BlendConstants3         float32\n    DepthTestEnable         bool\n    DepthWriteEnable        bool\n    DepthCompareOp          string\n    DepthBoundsTestEnable   bool\n    StencilTestEnable       bool\n    FrontFailOp             string\n    FrontPassOp             string\n    FrontDepthFailOp        string\n    FrontCompareOp          string\n    FrontCompareMask        uint32\n    FrontWriteMask          uint32\n    FrontReference          uint32\n    BackFailOp              string\n    BackPassOp              string\n    BackDepthFailOp         string\n    BackCompareOp           string\n    BackCompareMask         uint32\n    BackWriteMask           uint32\n    BackReference           uint32\n    MinDepthBounds          float32\n    MaxDepthBounds          float32\n    PatchControlPoints      string\n    SubpassCount            uint32\n}\n</code></pre>"},{"location":"api/rendering/#shaderpipelinedatabackstencilopstatetovk","title":"ShaderPipelineData.BackStencilOpStateToVK","text":"<pre><code>func (s *ShaderPipelineData) BackStencilOpStateToVK() vk.StencilOpState\n</code></pre>"},{"location":"api/rendering/#shaderpipelinedatablendconstants","title":"ShaderPipelineData.BlendConstants","text":"<pre><code>func (s *ShaderPipelineData) BlendConstants() [4]float32\n</code></pre>"},{"location":"api/rendering/#shaderpipelinedataconstructpipeline","title":"ShaderPipelineData.ConstructPipeline","text":"<pre><code>func (s *ShaderPipelineData) ConstructPipeline(renderer Renderer, shader *Shader, shaderStages []vk.PipelineShaderStageCreateInfo) bool\n</code></pre>"},{"location":"api/rendering/#shaderpipelinedatacullmodetovk","title":"ShaderPipelineData.CullModeToVK","text":"<pre><code>func (s *ShaderPipelineData) CullModeToVK() vk.CullModeFlagBits\n</code></pre>"},{"location":"api/rendering/#shaderpipelinedatafrontfacetovk","title":"ShaderPipelineData.FrontFaceToVK","text":"<pre><code>func (s *ShaderPipelineData) FrontFaceToVK() vk.FrontFace\n</code></pre>"},{"location":"api/rendering/#shaderpipelinedatafrontstencilopstatetovk","title":"ShaderPipelineData.FrontStencilOpStateToVK","text":"<pre><code>func (s *ShaderPipelineData) FrontStencilOpStateToVK() vk.StencilOpState\n</code></pre> <p>TODO: This and the BackStencilOpStateToVK are duplicates because of a bad structure setup, please fix later</p>"},{"location":"api/rendering/#shaderpipelinedatalogicoptovk","title":"ShaderPipelineData.LogicOpToVK","text":"<pre><code>func (s *ShaderPipelineData) LogicOpToVK() vk.LogicOp\n</code></pre>"},{"location":"api/rendering/#shaderpipelinedatapatchcontrolpointstovk","title":"ShaderPipelineData.PatchControlPointsToVK","text":"<pre><code>func (s *ShaderPipelineData) PatchControlPointsToVK() uint32\n</code></pre>"},{"location":"api/rendering/#shaderpipelinedatapolygonmodetovk","title":"ShaderPipelineData.PolygonModeToVK","text":"<pre><code>func (s *ShaderPipelineData) PolygonModeToVK() vk.PolygonMode\n</code></pre>"},{"location":"api/rendering/#shaderpipelinedatarasterizationsamplestovk","title":"ShaderPipelineData.RasterizationSamplesToVK","text":"<pre><code>func (s *ShaderPipelineData) RasterizationSamplesToVK() vk.SampleCountFlagBits\n</code></pre>"},{"location":"api/rendering/#shaderpipelinedatatopologytovk","title":"ShaderPipelineData.TopologyToVK","text":"<pre><code>func (s *ShaderPipelineData) TopologyToVK() vk.PrimitiveTopology\n</code></pre>"},{"location":"api/rendering/#skinnedshaderdata","title":"SkinnedShaderData","text":"<p><code>struct</code></p> <pre><code>type SkinnedShaderData struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#textshaderdata","title":"TextShaderData","text":"<p><code>struct</code></p> <pre><code>type TextShaderData struct {\n    ShaderDataBase\n    UVs     matrix.Vec4\n    FgColor matrix.Color\n    BgColor matrix.Color\n    Scissor matrix.Vec4\n    PxRange matrix.Vec2\n}\n</code></pre>"},{"location":"api/rendering/#textshaderdatasize","title":"TextShaderData.Size","text":"<pre><code>func (s TextShaderData) Size() int\n</code></pre>"},{"location":"api/rendering/#texture","title":"Texture","text":"<p><code>struct</code></p> <pre><code>type Texture struct {\n    Key               string\n    TexturePixelCache []byte\n    RenderId          TextureId\n    Channels          int\n    Filter            int\n    MipLevels         int\n    Width             int\n    Height            int\n    CacheInvalid      bool\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#newtexture","title":"NewTexture","text":"<pre><code>func NewTexture(renderer Renderer, assetDb *assets.Database, textureKey string, filter TextureFilter) (*Texture, error)\n</code></pre>"},{"location":"api/rendering/#newtexturefrommemory","title":"NewTextureFromMemory","text":"<pre><code>func NewTextureFromMemory(key string, data []byte, width, height int, filter TextureFilter) (*Texture, error)\n</code></pre>"},{"location":"api/rendering/#texturedelayedcreate","title":"Texture.DelayedCreate","text":"<pre><code>func (t *Texture) DelayedCreate(renderer Renderer)\n</code></pre>"},{"location":"api/rendering/#texturedestroy","title":"Texture.Destroy","text":"<pre><code>func (t *Texture) Destroy(renderer Renderer)\n</code></pre>"},{"location":"api/rendering/#texturereadpixel","title":"Texture.ReadPixel","text":"<pre><code>func (t *Texture) ReadPixel(renderer Renderer, x, y int) matrix.Color\n</code></pre>"},{"location":"api/rendering/#texturesize","title":"Texture.Size","text":"<pre><code>func (t Texture) Size() matrix.Vec2\n</code></pre>"},{"location":"api/rendering/#texturewritepixels","title":"Texture.WritePixels","text":"<pre><code>func (t *Texture) WritePixels(renderer Renderer, x, y, width, height int, pixels []byte)\n</code></pre>"},{"location":"api/rendering/#texturecache","title":"TextureCache","text":"<p><code>struct</code></p> <pre><code>type TextureCache struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#newtexturecache","title":"NewTextureCache","text":"<pre><code>func NewTextureCache(renderer Renderer, assetDatabase *assets.Database) TextureCache\n</code></pre>"},{"location":"api/rendering/#texturecachecreatepending","title":"TextureCache.CreatePending","text":"<pre><code>func (t *TextureCache) CreatePending()\n</code></pre>"},{"location":"api/rendering/#texturecachedestroy","title":"TextureCache.Destroy","text":"<pre><code>func (t *TextureCache) Destroy()\n</code></pre>"},{"location":"api/rendering/#texturecachetexture","title":"TextureCache.Texture","text":"<pre><code>func (t *TextureCache) Texture(textureKey string, filter TextureFilter) (*Texture, error)\n</code></pre>"},{"location":"api/rendering/#texturecolorformat","title":"TextureColorFormat","text":"<p>int <pre><code>type TextureColorFormat int\n</code></pre></p> <p>const ( TextureColorFormatRgbaUnorm TextureColorFormat = iota TextureColorFormatRgbUnorm TextureColorFormatRgbaSrgb TextureColorFormatRgbSrgb TextureColorFormatLuminance )</p>"},{"location":"api/rendering/#texturedata","title":"TextureData","text":"<p><code>struct</code></p> <pre><code>type TextureData struct {\n    Mem            []byte\n    InternalFormat TextureInputType\n    Format         TextureColorFormat\n    Type           TextureMemType\n    Width          int\n    Height         int\n    InputType      TextureFileFormat\n}\n</code></pre>"},{"location":"api/rendering/#readrawtexturedata","title":"ReadRawTextureData","text":"<pre><code>func ReadRawTextureData(mem []byte, inputType TextureFileFormat) TextureData\n</code></pre>"},{"location":"api/rendering/#texturepixelsfromasset","title":"TexturePixelsFromAsset","text":"<pre><code>func TexturePixelsFromAsset(assetDb *assets.Database, textureKey string) (TextureData, error)\n</code></pre>"},{"location":"api/rendering/#texturefileformat","title":"TextureFileFormat","text":"<p>int <pre><code>type TextureFileFormat = int\n</code></pre></p> <p>const ( TextureFileFormatAstc TextureFileFormat = iota TextureFileFormatPng TextureFileFormatRaw )</p>"},{"location":"api/rendering/#texturefilter","title":"TextureFilter","text":"<p>int <pre><code>type TextureFilter = int\n</code></pre></p> <p>const ( TextureFilterLinear TextureFilter = iota TextureFilterNearest TextureFilterMax )</p>"},{"location":"api/rendering/#textureid","title":"TextureId","text":"<p><code>struct</code></p> <pre><code>type TextureId struct {\n    Image      vk.Image\n    Memory     vk.DeviceMemory\n    View       vk.ImageView\n    Sampler    vk.Sampler\n    Format     vk.Format\n    MipLevels  uint32\n    Layout     vk.ImageLayout\n    Access     vk.AccessFlags\n    Samples    vk.SampleCountFlagBits\n    Width      int\n    Height     int\n    LayerCount int\n}\n</code></pre>"},{"location":"api/rendering/#textureidisvalid","title":"TextureId.IsValid","text":"<pre><code>func (t TextureId) IsValid() bool\n</code></pre>"},{"location":"api/rendering/#textureinputtype","title":"TextureInputType","text":"<p>int <pre><code>type TextureInputType int\n</code></pre></p> <p>const ( TextureInputTypeCompressedRgbaAstc4x4 TextureInputType = iota TextureInputTypeCompressedRgbaAstc5x4 TextureInputTypeCompressedRgbaAstc5x5 TextureInputTypeCompressedRgbaAstc6x5 TextureInputTypeCompressedRgbaAstc6x6 TextureInputTypeCompressedRgbaAstc8x5 TextureInputTypeCompressedRgbaAstc8x6 TextureInputTypeCompressedRgbaAstc8x8 TextureInputTypeCompressedRgbaAstc10x5 TextureInputTypeCompressedRgbaAstc10x6 TextureInputTypeCompressedRgbaAstc10x8 TextureInputTypeCompressedRgbaAstc10x10 TextureInputTypeCompressedRgbaAstc12x10 TextureInputTypeCompressedRgbaAstc12x12 TextureInputTypeRgba8 TextureInputTypeRgb8 TextureInputTypeLuminance )</p>"},{"location":"api/rendering/#texturememtype","title":"TextureMemType","text":"<p>int <pre><code>type TextureMemType = int\n</code></pre></p> <p>const ( TextureMemTypeUnsignedByte TextureMemType = iota )</p>"},{"location":"api/rendering/#vertex","title":"Vertex","text":"<p><code>struct</code></p> <pre><code>type Vertex struct {\n    Position     matrix.Vec3\n    Normal       matrix.Vec3\n    Tangent      matrix.Vec4\n    UV0          matrix.Vec2\n    Color        matrix.Color\n    JointIds     matrix.Vec4i\n    JointWeights matrix.Vec4\n    MorphTarget  matrix.Vec3\n}\n</code></pre>"},{"location":"api/rendering/#vulkan","title":"Vulkan","text":"<p><code>struct</code></p> <pre><code>type Vulkan struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/rendering/#newvkrenderer","title":"NewVKRenderer","text":"<pre><code>func NewVKRenderer(window RenderingContainer, applicationName string) (*Vulkan, error)\n</code></pre>"},{"location":"api/rendering/#vulkanaddprerun","title":"Vulkan.AddPreRun","text":"<pre><code>func (vr *Vulkan) AddPreRun(preRun func())\n</code></pre>"},{"location":"api/rendering/#vulkanblittargets","title":"Vulkan.BlitTargets","text":"<pre><code>func (vr *Vulkan) BlitTargets(targets ...RenderTargetDraw)\n</code></pre>"},{"location":"api/rendering/#vulkancanvas","title":"Vulkan.Canvas","text":"<pre><code>func (vr *Vulkan) Canvas(name string) (Canvas, bool)\n</code></pre>"},{"location":"api/rendering/#vulkancopybuffer","title":"Vulkan.CopyBuffer","text":"<pre><code>func (vr *Vulkan) CopyBuffer(srcBuffer vk.Buffer, dstBuffer vk.Buffer, size vk.DeviceSize)\n</code></pre>"},{"location":"api/rendering/#vulkancreatebuffer","title":"Vulkan.CreateBuffer","text":"<pre><code>func (vr *Vulkan) CreateBuffer(size vk.DeviceSize, usage vk.BufferUsageFlags, properties vk.MemoryPropertyFlags, buffer *vk.Buffer, bufferMemory *vk.DeviceMemory) bool\n</code></pre>"},{"location":"api/rendering/#vulkancreateframebuffer","title":"Vulkan.CreateFrameBuffer","text":"<pre><code>func (vr *Vulkan) CreateFrameBuffer(renderPass *RenderPass, attachments []vk.ImageView, width, height uint32) (vk.Framebuffer, bool)\n</code></pre>"},{"location":"api/rendering/#vulkancreateimage","title":"Vulkan.CreateImage","text":"<pre><code>func (vr *Vulkan) CreateImage(width, height, mipLevels uint32, numSamples vk.SampleCountFlagBits, format vk.Format, tiling vk.ImageTiling, usage vk.ImageUsageFlags, properties vk.MemoryPropertyFlags, textureId *TextureId, layerCount int) bool\n</code></pre>"},{"location":"api/rendering/#vulkancreatemesh","title":"Vulkan.CreateMesh","text":"<pre><code>func (vr *Vulkan) CreateMesh(mesh *Mesh, verts []Vertex, indices []uint32)\n</code></pre>"},{"location":"api/rendering/#vulkancreateshader","title":"Vulkan.CreateShader","text":"<pre><code>func (vr *Vulkan) CreateShader(shader *Shader, assetDB *assets.Database)\n</code></pre>"},{"location":"api/rendering/#vulkancreatetexture","title":"Vulkan.CreateTexture","text":"<pre><code>func (vr *Vulkan) CreateTexture(texture *Texture, data *TextureData)\n</code></pre>"},{"location":"api/rendering/#vulkandefaultcanvas","title":"Vulkan.DefaultCanvas","text":"<pre><code>func (vr *Vulkan) DefaultCanvas() Canvas\n</code></pre>"},{"location":"api/rendering/#vulkandestroy","title":"Vulkan.Destroy","text":"<pre><code>func (vr *Vulkan) Destroy()\n</code></pre>"},{"location":"api/rendering/#vulkandestroygroup","title":"Vulkan.DestroyGroup","text":"<pre><code>func (vr *Vulkan) DestroyGroup(group *DrawInstanceGroup)\n</code></pre>"},{"location":"api/rendering/#vulkandestroymesh","title":"Vulkan.DestroyMesh","text":"<pre><code>func (vr *Vulkan) DestroyMesh(mesh *Mesh)\n</code></pre>"},{"location":"api/rendering/#vulkandestroyshader","title":"Vulkan.DestroyShader","text":"<pre><code>func (vr *Vulkan) DestroyShader(shader *Shader)\n</code></pre>"},{"location":"api/rendering/#vulkandestroytexture","title":"Vulkan.DestroyTexture","text":"<pre><code>func (vr *Vulkan) DestroyTexture(texture *Texture)\n</code></pre>"},{"location":"api/rendering/#vulkandraw","title":"Vulkan.Draw","text":"<pre><code>func (vr *Vulkan) Draw(drawings []RenderTargetDraw)\n</code></pre>"},{"location":"api/rendering/#vulkaninitialize","title":"Vulkan.Initialize","text":"<pre><code>func (vr *Vulkan) Initialize(caches RenderCaches, width, height int32) error\n</code></pre>"},{"location":"api/rendering/#vulkanmeshisready","title":"Vulkan.MeshIsReady","text":"<pre><code>func (vr *Vulkan) MeshIsReady(mesh Mesh) bool\n</code></pre>"},{"location":"api/rendering/#vulkanreadyframe","title":"Vulkan.ReadyFrame","text":"<pre><code>func (vr *Vulkan) ReadyFrame(camera cameras.Camera, uiCamera cameras.Camera, runtime float32) bool\n</code></pre>"},{"location":"api/rendering/#vulkanregistercanvas","title":"Vulkan.RegisterCanvas","text":"<pre><code>func (vr *Vulkan) RegisterCanvas(name string, canvas Canvas)\n</code></pre>"},{"location":"api/rendering/#vulkanresize","title":"Vulkan.Resize","text":"<pre><code>func (vr *Vulkan) Resize(width, height int)\n</code></pre>"},{"location":"api/rendering/#vulkanswapframe","title":"Vulkan.SwapFrame","text":"<pre><code>func (vr *Vulkan) SwapFrame(width, height int32) bool\n</code></pre>"},{"location":"api/rendering/#vulkantexturefromid","title":"Vulkan.TextureFromId","text":"<pre><code>func (vr *Vulkan) TextureFromId(texture *Texture, other TextureId)\n</code></pre>"},{"location":"api/rendering/#vulkantexturereadpixel","title":"Vulkan.TextureReadPixel","text":"<pre><code>func (vr *Vulkan) TextureReadPixel(texture *Texture, x, y int) matrix.Color\n</code></pre>"},{"location":"api/rendering/#vulkantexturewritepixels","title":"Vulkan.TextureWritePixels","text":"<pre><code>func (vr *Vulkan) TextureWritePixels(texture *Texture, x, y, width, height int, pixels []uint8)\n</code></pre>"},{"location":"api/rendering/#vulkanwaitforrender","title":"Vulkan.WaitForRender","text":"<pre><code>func (vr *Vulkan) WaitForRender()\n</code></pre>"},{"location":"api/rendering/loaders/","title":"package loaders","text":"<pre><code>import \"kaiju/rendering/loaders\"\n</code></pre>"},{"location":"api/rendering/loaders/#functions","title":"Functions","text":""},{"location":"api/rendering/loaders/#gltf","title":"GLTF","text":"<pre><code>func GLTF(path string, assetDB *assets.Database) (load_result.Result, error)\n</code></pre>"},{"location":"api/rendering/loaders/#obj","title":"OBJ","text":"<pre><code>func OBJ(objData string) load_result.Result\n</code></pre>"},{"location":"api/rendering/loaders/#tryselectresultmesh","title":"TrySelectResultMesh","text":"<pre><code>func TrySelectResultMesh(mesh *load_result.Mesh,\n</code></pre> <p>e *engine.Entity, ray collision.Ray) (matrix.Float, bool)</p>"},{"location":"api/rendering/loaders/#objtoraw","title":"ObjToRaw","text":"<pre><code>func ObjToRaw(objData string) []objBuilder\n</code></pre>"},{"location":"api/rendering/loaders/gltf/","title":"package gltf","text":"<pre><code>import \"kaiju/rendering/loaders/gltf\"\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#constants","title":"Constants","text":""},{"location":"api/rendering/loaders/gltf/#position","title":"POSITION","text":"<p><code>\"POSITION\"</code></p>"},{"location":"api/rendering/loaders/gltf/#normal","title":"NORMAL","text":"<p><code>\"NORMAL\"</code></p>"},{"location":"api/rendering/loaders/gltf/#tangent","title":"TANGENT","text":"<p><code>\"TANGENT\"</code></p>"},{"location":"api/rendering/loaders/gltf/#texcoord_0","title":"TEXCOORD_0","text":"<p><code>\"TEXCOORD_0\"</code></p>"},{"location":"api/rendering/loaders/gltf/#texcoord_1","title":"TEXCOORD_1","text":"<p><code>\"TEXCOORD_1\"</code></p>"},{"location":"api/rendering/loaders/gltf/#color_0","title":"COLOR_0","text":"<p><code>\"COLOR_0\"</code></p>"},{"location":"api/rendering/loaders/gltf/#color_1","title":"COLOR_1","text":"<p><code>\"COLOR_1\"</code></p>"},{"location":"api/rendering/loaders/gltf/#joints_0","title":"JOINTS_0","text":"<p><code>\"JOINTS_0\"</code></p>"},{"location":"api/rendering/loaders/gltf/#joints_1","title":"JOINTS_1","text":"<p><code>\"JOINTS_1\"</code></p>"},{"location":"api/rendering/loaders/gltf/#weights_0","title":"WEIGHTS_0","text":"<p><code>\"WEIGHTS_0\"</code></p>"},{"location":"api/rendering/loaders/gltf/#weights_1","title":"WEIGHTS_1","text":"<p><code>\"WEIGHTS_1\"</code></p>"},{"location":"api/rendering/loaders/gltf/#types","title":"Types","text":""},{"location":"api/rendering/loaders/gltf/#accessor","title":"Accessor","text":"<p><code>struct</code></p> <pre><code>type Accessor struct {\n    BufferView    int32         `json:\"bufferView\"`\n    ComponentType ComponentType `json:\"componentType\"`\n    Count         int32         `json:\"count\"`\n    Max           matrix.Vec3   `json:\"max\"`\n    Min           matrix.Vec3   `json:\"min\"`\n    Type          AccessorType  `json:\"type\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#accessortype","title":"AccessorType","text":"<p>string <pre><code>type AccessorType = string\n</code></pre></p> <p>const ( SCALAR AccessorType = \"SCALAR\" VEC2 AccessorType = \"VEC2\" VEC3 AccessorType = \"VEC3\" VEC4 AccessorType = \"VEC4\" MAT2 AccessorType = \"MAT2\" MAT3 AccessorType = \"MAT3\" MAT4 AccessorType = \"MAT4\" )</p>"},{"location":"api/rendering/loaders/gltf/#animation","title":"Animation","text":"<p><code>struct</code></p> <pre><code>type Animation struct {\n    Name     string             `json:\"name\"`\n    Channels []AnimationChannel `json:\"channels\"`\n    Samplers []AnimationSampler `json:\"samplers\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#animationchannel","title":"AnimationChannel","text":"<p><code>struct</code></p> <pre><code>type AnimationChannel struct {\n    Sampler int32         `json:\"sampler\"`\n    Target  ChannelTarget `json:\"target\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#animationsampler","title":"AnimationSampler","text":"<p><code>struct</code></p> <pre><code>type AnimationSampler struct {\n    Input            int32  `json:\"input\"`\n    InterpolationStr string `json:\"interpolation\"`\n    Output           int32  `json:\"output\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#animationsamplerinterpolation","title":"AnimationSampler.Interpolation","text":"<pre><code>func (a *AnimationSampler) Interpolation() load_result.AnimationInterpolation\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#asset","title":"Asset","text":"<p><code>struct</code></p> <pre><code>type Asset struct {\n    Generator string `json:\"generator\"`\n    Version   string `json:\"version\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#buffer","title":"Buffer","text":"<p><code>struct</code></p> <pre><code>type Buffer struct {\n    ByteLength int32  `json:\"byteLength\"`\n    URI        string `json:\"uri\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#bufferview","title":"BufferView","text":"<p><code>struct</code></p> <pre><code>type BufferView struct {\n    Buffer     int32 `json:\"buffer\"`\n    ByteLength int32 `json:\"byteLength\"`\n    ByteOffset int32 `json:\"byteOffset\"`\n    Target     int32 `json:\"target\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#channeltarget","title":"ChannelTarget","text":"<p><code>struct</code></p> <pre><code>type ChannelTarget struct {\n    Node    int32  `json:\"node\"`\n    PathStr string `json:\"path\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#channeltargetpath","title":"ChannelTarget.Path","text":"<pre><code>func (t *ChannelTarget) Path() load_result.AnimationPathType\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#componenttype","title":"ComponentType","text":"<p>int32 <pre><code>type ComponentType = int32\n</code></pre></p> <p>const ( BYTE ComponentType = 5120 UNSIGNED_BYTE ComponentType = 5121 SHORT ComponentType = 5122 UNSIGNED_SHORT ComponentType = 5123 UNSIGNED_INT ComponentType = 5125 FLOAT ComponentType = 5126 )</p>"},{"location":"api/rendering/loaders/gltf/#gltf","title":"GLTF","text":"<p><code>struct</code></p> <pre><code>type GLTF struct {\n    Asset          Asset        `json:\"asset\"`\n    ExtensionsUsed []string     `json:\"extensionsUsed\"`\n    Scene          int32        `json:\"scene\"`\n    Scenes         []Scene      `json:\"scenes\"`\n    Nodes          []Node       `json:\"nodes\"`\n    Animations     []Animation  `json:\"animations\"`\n    Materials      []Material   `json:\"materials\"`\n    Meshes         []Mesh       `json:\"meshes\"`\n    Skins          []Skin       `json:\"skins\"`\n    Textures       []Texture    `json:\"textures\"`\n    Images         []Image      `json:\"images\"`\n    Accessors      []Accessor   `json:\"accessors\"`\n    BufferViews    []BufferView `json:\"bufferViews\"`\n    Samplers       []Sampler    `json:\"samplers\"`\n    Buffers        []Buffer     `json:\"buffers\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#loadgltf","title":"LoadGLTF","text":"<pre><code>func LoadGLTF(jsonStr string) (GLTF, error)\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#image","title":"Image","text":"<p><code>struct</code></p> <pre><code>type Image struct {\n    Name     string `json:\"name\"`\n    URI      string `json:\"uri\"`\n    MimeType string `json:\"mimeType\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#material","title":"Material","text":"<p><code>struct</code></p> <pre><code>type Material struct {\n    Name                 string               `json:\"name\"`\n    DoubleSided          bool                 `json:\"doubleSided\"`\n    NormalTexture        *TextureId           `json:\"normalTexture\"`\n    OcclusionTexture     *TextureId           `json:\"occlusionTexture\"`\n    EmissiveTexture      *TextureId           `json:\"emissiveTexture\"`\n    PBRMetallicRoughness PBRMetallicRoughness `json:\"pbrMetallicRoughness\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#mesh","title":"Mesh","text":"<p><code>struct</code></p> <pre><code>type Mesh struct {\n    Name       string      `json:\"name\"`\n    Primitives []Primitive `json:\"primitives\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#node","title":"Node","text":"<p><code>struct</code></p> <pre><code>type Node struct {\n    Name        string       `json:\"name\"`\n    Children    []int32      `json:\"children\"`\n    Mesh        *int32       `json:\"mesh\"`\n    Camera      *int32       `json:\"camera\"`\n    Skin        *int32       `json:\"skin\"`\n    Matrix      *matrix.Mat4 `json:\"matrix\"`\n    Rotation    *matrix.Vec4 `json:\"rotation\"` // Vec4 because glTF XYZW on quat\n    Scale       *matrix.Vec3 `json:\"scale\"`\n    Translation *matrix.Vec3 `json:\"translation\"`\n    Weights     []float32    `json:\"weights\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#pbrmetallicroughness","title":"PBRMetallicRoughness","text":"<p><code>struct</code></p> <pre><code>type PBRMetallicRoughness struct {\n    BaseColorTexture         *TextureId    `json:\"baseColorTexture\"`\n    MetallicRoughnessTexture *TextureId    `json:\"metallicRoughnessTexture\"`\n    MetallicFactor           float32       `json:\"metallicFactor\"`\n    RoughnessFactor          float32       `json:\"roughnessFactor\"`\n    BaseColorFactor          *matrix.Color `json:\"baseColorFactor\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#primitive","title":"Primitive","text":"<p><code>struct</code></p> <pre><code>type Primitive struct {\n    Attributes map[string]uint32 `json:\"attributes\"`\n    Indices    int32             `json:\"indices\"`\n    Material   *int32            `json:\"material\"`\n    Mode       int32             `json:\"mode\"`\n    Targets    []Target          `json:\"targets\"`\n    Extensions interface{}       `json:\"extensions\"`\n    Extras     interface{}       `json:\"extras\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#sampler","title":"Sampler","text":"<p><code>struct</code></p> <pre><code>type Sampler struct {\n    MagFilter int32 `json:\"magFilter\"`\n    MinFilter int32 `json:\"minFilter\"`\n    WrapS     int32 `json:\"wrapS\"`\n    WrapT     int32 `json:\"wrapT\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#scene","title":"Scene","text":"<p><code>struct</code></p> <pre><code>type Scene struct {\n    Name  string  `json:\"name\"`\n    Nodes []int32 `json:\"nodes\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#skin","title":"Skin","text":"<p><code>struct</code></p> <pre><code>type Skin struct {\n    Name                string  `json:\"name\"`\n    InverseBindMatrices int32   `json:\"inverseBindMatrices\"`\n    Joints              []int32 `json:\"joints\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#target","title":"Target","text":"<p><code>struct</code></p> <pre><code>type Target struct {\n    POSITION   *int32 `json:\"POSITION\"`\n    NORMAL     *int32 `json:\"NORMAL\"`\n    TANGENT    *int32 `json:\"TANGENT\"`\n    TEXCOORD_0 *int32 `json:\"TEXCOORD_0\"`\n    TEXCOORD_1 *int32 `json:\"TEXCOORD_1\"`\n    COLOR_0    *int32 `json:\"COLOR_0\"`\n    COLOR_1    *int32 `json:\"COLOR_1\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#texture","title":"Texture","text":"<p><code>struct</code></p> <pre><code>type Texture struct {\n    Sampler int32 `json:\"sampler\"`\n    Source  int32 `json:\"source\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/gltf/#textureid","title":"TextureId","text":"<p><code>struct</code></p> <pre><code>type TextureId struct {\n    Index int32 `json:\"index\"`\n}\n</code></pre>"},{"location":"api/rendering/loaders/load_result/","title":"package load_result","text":"<pre><code>import \"kaiju/rendering/loaders/load_result\"\n</code></pre>"},{"location":"api/rendering/loaders/load_result/#types","title":"Types","text":""},{"location":"api/rendering/loaders/load_result/#animbone","title":"AnimBone","text":"<p><code>struct</code></p> <pre><code>type AnimBone struct {\n    NodeIndex     int\n    PathType      AnimationPathType\n    Interpolation AnimationInterpolation\n    // Could be Vec3 or Quaternion, doing this because Go doesn't have a union\n    Data [4]matrix.Float\n}\n</code></pre>"},{"location":"api/rendering/loaders/load_result/#animkeyframe","title":"AnimKeyFrame","text":"<p><code>struct</code></p> <pre><code>type AnimKeyFrame struct {\n    Bones []AnimBone\n    Time  float32\n}\n</code></pre>"},{"location":"api/rendering/loaders/load_result/#animation","title":"Animation","text":"<p><code>struct</code></p> <pre><code>type Animation struct {\n    Name   string\n    Frames []AnimKeyFrame\n}\n</code></pre>"},{"location":"api/rendering/loaders/load_result/#animationinterpolation","title":"AnimationInterpolation","text":"<p>int <pre><code>type AnimationInterpolation = int\n</code></pre></p> <p>const ( AnimInterpolateInvalid AnimationInterpolation = iota - 1 AnimInterpolateLinear AnimInterpolateStep AnimInterpolateCubicSpline )</p>"},{"location":"api/rendering/loaders/load_result/#animationpathtype","title":"AnimationPathType","text":"<p>int <pre><code>type AnimationPathType = int\n</code></pre></p> <p>const ( AnimPathInvalid AnimationPathType = iota - 1 AnimPathTranslation AnimPathRotation AnimPathScale AnimPathWeights )</p>"},{"location":"api/rendering/loaders/load_result/#joint","title":"Joint","text":"<p><code>struct</code></p> <pre><code>type Joint struct {\n    Id   int32\n    Skin matrix.Mat4\n}\n</code></pre>"},{"location":"api/rendering/loaders/load_result/#mesh","title":"Mesh","text":"<p><code>struct</code></p> <pre><code>type Mesh struct {\n    Name     string\n    MeshName string\n    Verts    []rendering.Vertex\n    Indexes  []uint32\n}\n</code></pre>"},{"location":"api/rendering/loaders/load_result/#meshgeneratebvh","title":"Mesh.GenerateBVH","text":"<pre><code>func (m *Mesh) GenerateBVH(t *matrix.Transform) *collision.BVH\n</code></pre>"},{"location":"api/rendering/loaders/load_result/#meshscaledradius","title":"Mesh.ScaledRadius","text":"<pre><code>func (mesh *Mesh) ScaledRadius(scale matrix.Vec3) matrix.Float\n</code></pre>"},{"location":"api/rendering/loaders/load_result/#node","title":"Node","text":"<p><code>struct</code></p> <pre><code>type Node struct {\n    Name      string\n    Parent    int\n    Transform matrix.Transform\n}\n</code></pre>"},{"location":"api/rendering/loaders/load_result/#result","title":"Result","text":"<p><code>struct</code></p> <pre><code>type Result struct {\n    Nodes      []Node\n    Meshes     []Mesh\n    Textures   []string\n    Animations []Animation\n    Joints     []Joint\n}\n</code></pre>"},{"location":"api/rendering/loaders/load_result/#newresult","title":"NewResult","text":"<pre><code>func NewResult() Result\n</code></pre>"},{"location":"api/rendering/loaders/load_result/#resultadd","title":"Result.Add","text":"<pre><code>func (r *Result) Add(name, meshName string, verts []rendering.Vertex,\n</code></pre> <p>indexes []uint32, textures []string)</p>"},{"location":"api/rendering/loaders/load_result/#resultisvalid","title":"Result.IsValid","text":"<pre><code>func (r *Result) IsValid() bool\n</code></pre>"},{"location":"api/rendering/vulkan/","title":"package vulkan","text":"<pre><code>import \"kaiju/rendering/vulkan\"\n</code></pre>"},{"location":"api/rendering/vulkan/#constants","title":"Constants","text":""},{"location":"api/rendering/vulkan/#noprototypes","title":"NoPrototypes","text":""},{"location":"api/rendering/vulkan/#as","title":"as","text":""},{"location":"api/rendering/vulkan/#defined","title":"defined","text":""},{"location":"api/rendering/vulkan/#in","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#noprototypes_1","title":"NoPrototypes","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#version10","title":"Version10","text":""},{"location":"api/rendering/vulkan/#as_1","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_1","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_1","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_1","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#version10_1","title":"Version10","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#apiversion10","title":"ApiVersion10","text":""},{"location":"api/rendering/vulkan/#as_2","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_2","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_2","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_2","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#apiversion10_1","title":"ApiVersion10","text":"<p><code>4194304</code></p>"},{"location":"api/rendering/vulkan/#headerversion","title":"HeaderVersion","text":""},{"location":"api/rendering/vulkan/#as_3","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_3","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_3","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_3","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#headerversion_1","title":"HeaderVersion","text":"<p><code>88</code></p>"},{"location":"api/rendering/vulkan/#lodclampnone","title":"LodClampNone","text":""},{"location":"api/rendering/vulkan/#as_4","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_4","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_4","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_4","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#lodclampnone_1","title":"LodClampNone","text":"<p>1000.0</p>"},{"location":"api/rendering/vulkan/#remainingmiplevels","title":"RemainingMipLevels","text":""},{"location":"api/rendering/vulkan/#as_5","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_5","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_5","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_5","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#remainingmiplevels_1","title":"RemainingMipLevels","text":"<p><code>(^uint32(0))</code></p>"},{"location":"api/rendering/vulkan/#remainingarraylayers","title":"RemainingArrayLayers","text":""},{"location":"api/rendering/vulkan/#as_6","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_6","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_6","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_6","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#remainingarraylayers_1","title":"RemainingArrayLayers","text":"<p><code>(^uint32(0))</code></p>"},{"location":"api/rendering/vulkan/#wholesize","title":"WholeSize","text":""},{"location":"api/rendering/vulkan/#as_7","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_7","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_7","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_7","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#wholesize_1","title":"WholeSize","text":"<p><code>(^uint64(0))</code></p>"},{"location":"api/rendering/vulkan/#attachmentunused","title":"AttachmentUnused","text":""},{"location":"api/rendering/vulkan/#as_8","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_8","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_8","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_8","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#attachmentunused_1","title":"AttachmentUnused","text":"<p><code>(^uint32(0))</code></p>"},{"location":"api/rendering/vulkan/#true","title":"True","text":""},{"location":"api/rendering/vulkan/#as_9","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_9","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_9","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_9","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#true_1","title":"True","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#false","title":"False","text":""},{"location":"api/rendering/vulkan/#as_10","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_10","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_10","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_10","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#false_1","title":"False","text":"<p><code>0</code></p>"},{"location":"api/rendering/vulkan/#queuefamilyignored","title":"QueueFamilyIgnored","text":""},{"location":"api/rendering/vulkan/#as_11","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_11","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_11","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_11","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#queuefamilyignored_1","title":"QueueFamilyIgnored","text":"<p><code>(^uint32(0))</code></p>"},{"location":"api/rendering/vulkan/#subpassexternal","title":"SubpassExternal","text":""},{"location":"api/rendering/vulkan/#as_12","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_12","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_12","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_12","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#subpassexternal_1","title":"SubpassExternal","text":"<p><code>(^uint32(0))</code></p>"},{"location":"api/rendering/vulkan/#maxphysicaldevicenamesize","title":"MaxPhysicalDeviceNameSize","text":""},{"location":"api/rendering/vulkan/#as_13","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_13","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_13","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_13","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#maxphysicaldevicenamesize_1","title":"MaxPhysicalDeviceNameSize","text":"<p><code>256</code></p>"},{"location":"api/rendering/vulkan/#uuidsize","title":"UuidSize","text":""},{"location":"api/rendering/vulkan/#as_14","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_14","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_14","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_14","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#uuidsize_1","title":"UuidSize","text":"<p><code>16</code></p>"},{"location":"api/rendering/vulkan/#maxmemorytypes","title":"MaxMemoryTypes","text":""},{"location":"api/rendering/vulkan/#as_15","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_15","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_15","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_15","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#maxmemorytypes_1","title":"MaxMemoryTypes","text":"<p><code>32</code></p>"},{"location":"api/rendering/vulkan/#maxmemoryheaps","title":"MaxMemoryHeaps","text":""},{"location":"api/rendering/vulkan/#as_16","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_16","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_16","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_16","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#maxmemoryheaps_1","title":"MaxMemoryHeaps","text":"<p><code>16</code></p>"},{"location":"api/rendering/vulkan/#maxextensionnamesize","title":"MaxExtensionNameSize","text":""},{"location":"api/rendering/vulkan/#as_17","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_17","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_17","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_17","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#maxextensionnamesize_1","title":"MaxExtensionNameSize","text":"<p><code>256</code></p>"},{"location":"api/rendering/vulkan/#maxdescriptionsize","title":"MaxDescriptionSize","text":""},{"location":"api/rendering/vulkan/#as_18","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_18","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_18","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_18","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#maxdescriptionsize_1","title":"MaxDescriptionSize","text":"<p><code>256</code></p>"},{"location":"api/rendering/vulkan/#version11","title":"Version11","text":""},{"location":"api/rendering/vulkan/#as_19","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_19","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_19","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_19","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#version11_1","title":"Version11","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#apiversion11","title":"ApiVersion11","text":""},{"location":"api/rendering/vulkan/#as_20","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_20","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_20","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_20","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#apiversion11_1","title":"ApiVersion11","text":"<p><code>4198400</code></p>"},{"location":"api/rendering/vulkan/#maxdevicegroupsize","title":"MaxDeviceGroupSize","text":""},{"location":"api/rendering/vulkan/#as_21","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_21","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_21","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_21","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#maxdevicegroupsize_1","title":"MaxDeviceGroupSize","text":"<p><code>32</code></p>"},{"location":"api/rendering/vulkan/#luidsize","title":"LuidSize","text":""},{"location":"api/rendering/vulkan/#as_22","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_22","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_22","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_22","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#luidsize_1","title":"LuidSize","text":"<p><code>8</code></p>"},{"location":"api/rendering/vulkan/#queuefamilyexternal","title":"QueueFamilyExternal","text":""},{"location":"api/rendering/vulkan/#as_23","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_23","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_23","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_23","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#queuefamilyexternal_1","title":"QueueFamilyExternal","text":"<p><code>(^uint32(0) - 1)</code></p>"},{"location":"api/rendering/vulkan/#khrsurface","title":"KhrSurface","text":""},{"location":"api/rendering/vulkan/#as_24","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_24","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_24","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_24","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrsurface_1","title":"KhrSurface","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrsurfacespecversion","title":"KhrSurfaceSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_25","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_25","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_25","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_25","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrsurfacespecversion_1","title":"KhrSurfaceSpecVersion","text":"<p><code>25</code></p>"},{"location":"api/rendering/vulkan/#khrsurfaceextensionname","title":"KhrSurfaceExtensionName","text":""},{"location":"api/rendering/vulkan/#as_26","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_26","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_26","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_26","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrsurfaceextensionname_1","title":"KhrSurfaceExtensionName","text":"<p><code>\"VK_KHR_surface\"</code></p>"},{"location":"api/rendering/vulkan/#khrswapchain","title":"KhrSwapchain","text":""},{"location":"api/rendering/vulkan/#as_27","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_27","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_27","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_27","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrswapchain_1","title":"KhrSwapchain","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrswapchainspecversion","title":"KhrSwapchainSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_28","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_28","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_28","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_28","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrswapchainspecversion_1","title":"KhrSwapchainSpecVersion","text":"<p><code>70</code></p>"},{"location":"api/rendering/vulkan/#khrswapchainextensionname","title":"KhrSwapchainExtensionName","text":""},{"location":"api/rendering/vulkan/#as_29","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_29","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_29","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_29","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrswapchainextensionname_1","title":"KhrSwapchainExtensionName","text":"<p><code>\"VK_KHR_swapchain\"</code></p>"},{"location":"api/rendering/vulkan/#khrdisplay","title":"KhrDisplay","text":""},{"location":"api/rendering/vulkan/#as_30","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_30","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_30","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_30","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdisplay_1","title":"KhrDisplay","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrdisplayspecversion","title":"KhrDisplaySpecVersion","text":""},{"location":"api/rendering/vulkan/#as_31","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_31","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_31","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_31","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdisplayspecversion_1","title":"KhrDisplaySpecVersion","text":"<p><code>21</code></p>"},{"location":"api/rendering/vulkan/#khrdisplayextensionname","title":"KhrDisplayExtensionName","text":""},{"location":"api/rendering/vulkan/#as_32","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_32","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_32","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_32","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdisplayextensionname_1","title":"KhrDisplayExtensionName","text":"<p><code>\"VK_KHR_display\"</code></p>"},{"location":"api/rendering/vulkan/#khrdisplayswapchain","title":"KhrDisplaySwapchain","text":""},{"location":"api/rendering/vulkan/#as_33","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_33","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_33","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_33","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdisplayswapchain_1","title":"KhrDisplaySwapchain","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrdisplayswapchainspecversion","title":"KhrDisplaySwapchainSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_34","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_34","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_34","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_34","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdisplayswapchainspecversion_1","title":"KhrDisplaySwapchainSpecVersion","text":"<p><code>9</code></p>"},{"location":"api/rendering/vulkan/#khrdisplayswapchainextensionname","title":"KhrDisplaySwapchainExtensionName","text":""},{"location":"api/rendering/vulkan/#as_35","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_35","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_35","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_35","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdisplayswapchainextensionname_1","title":"KhrDisplaySwapchainExtensionName","text":"<p><code>\"VK_KHR_display_swapchain\"</code></p>"},{"location":"api/rendering/vulkan/#khrsamplermirrorclamptoedge","title":"KhrSamplerMirrorClampToEdge","text":""},{"location":"api/rendering/vulkan/#as_36","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_36","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_36","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_36","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrsamplermirrorclamptoedge_1","title":"KhrSamplerMirrorClampToEdge","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrsamplermirrorclamptoedgespecversion","title":"KhrSamplerMirrorClampToEdgeSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_37","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_37","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_37","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_37","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrsamplermirrorclamptoedgespecversion_1","title":"KhrSamplerMirrorClampToEdgeSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrsamplermirrorclamptoedgeextensionname","title":"KhrSamplerMirrorClampToEdgeExtensionName","text":""},{"location":"api/rendering/vulkan/#as_38","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_38","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_38","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_38","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrsamplermirrorclamptoedgeextensionname_1","title":"KhrSamplerMirrorClampToEdgeExtensionName","text":"<p><code>\"VK_KHR_sampler_mirror_clamp_to_edge\"</code></p>"},{"location":"api/rendering/vulkan/#khrmultiview","title":"KhrMultiview","text":""},{"location":"api/rendering/vulkan/#as_39","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_39","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_39","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_39","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrmultiview_1","title":"KhrMultiview","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrmultiviewspecversion","title":"KhrMultiviewSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_40","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_40","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_40","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_40","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrmultiviewspecversion_1","title":"KhrMultiviewSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrmultiviewextensionname","title":"KhrMultiviewExtensionName","text":""},{"location":"api/rendering/vulkan/#as_41","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_41","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_41","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_41","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrmultiviewextensionname_1","title":"KhrMultiviewExtensionName","text":"<p><code>\"VK_KHR_multiview\"</code></p>"},{"location":"api/rendering/vulkan/#khrgetphysicaldeviceproperties2","title":"KhrGetPhysicalDeviceProperties2","text":""},{"location":"api/rendering/vulkan/#as_42","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_42","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_42","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_42","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrgetphysicaldeviceproperties2_1","title":"KhrGetPhysicalDeviceProperties2","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrgetphysicaldeviceproperties2specversion","title":"KhrGetPhysicalDeviceProperties2SpecVersion","text":""},{"location":"api/rendering/vulkan/#as_43","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_43","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_43","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_43","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrgetphysicaldeviceproperties2specversion_1","title":"KhrGetPhysicalDeviceProperties2SpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrgetphysicaldeviceproperties2extensionname","title":"KhrGetPhysicalDeviceProperties2ExtensionName","text":""},{"location":"api/rendering/vulkan/#as_44","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_44","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_44","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_44","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrgetphysicaldeviceproperties2extensionname_1","title":"KhrGetPhysicalDeviceProperties2ExtensionName","text":"<p><code>\"VK_KHR_get_physical_device_properties2\"</code></p>"},{"location":"api/rendering/vulkan/#khrdevicegroup","title":"KhrDeviceGroup","text":""},{"location":"api/rendering/vulkan/#as_45","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_45","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_45","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_45","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdevicegroup_1","title":"KhrDeviceGroup","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrdevicegroupspecversion","title":"KhrDeviceGroupSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_46","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_46","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_46","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_46","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdevicegroupspecversion_1","title":"KhrDeviceGroupSpecVersion","text":"<p><code>3</code></p>"},{"location":"api/rendering/vulkan/#khrdevicegroupextensionname","title":"KhrDeviceGroupExtensionName","text":""},{"location":"api/rendering/vulkan/#as_47","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_47","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_47","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_47","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdevicegroupextensionname_1","title":"KhrDeviceGroupExtensionName","text":"<p><code>\"VK_KHR_device_group\"</code></p>"},{"location":"api/rendering/vulkan/#khrshaderdrawparameters","title":"KhrShaderDrawParameters","text":""},{"location":"api/rendering/vulkan/#as_48","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_48","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_48","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_48","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrshaderdrawparameters_1","title":"KhrShaderDrawParameters","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrshaderdrawparametersspecversion","title":"KhrShaderDrawParametersSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_49","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_49","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_49","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_49","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrshaderdrawparametersspecversion_1","title":"KhrShaderDrawParametersSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrshaderdrawparametersextensionname","title":"KhrShaderDrawParametersExtensionName","text":""},{"location":"api/rendering/vulkan/#as_50","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_50","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_50","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_50","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrshaderdrawparametersextensionname_1","title":"KhrShaderDrawParametersExtensionName","text":"<p><code>\"VK_KHR_shader_draw_parameters\"</code></p>"},{"location":"api/rendering/vulkan/#khrmaintenance1","title":"KhrMaintenance1","text":""},{"location":"api/rendering/vulkan/#as_51","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_51","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_51","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_51","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrmaintenance1_1","title":"KhrMaintenance1","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrmaintenance1specversion","title":"KhrMaintenance1SpecVersion","text":""},{"location":"api/rendering/vulkan/#as_52","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_52","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_52","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_52","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrmaintenance1specversion_1","title":"KhrMaintenance1SpecVersion","text":"<p><code>2</code></p>"},{"location":"api/rendering/vulkan/#khrmaintenance1extensionname","title":"KhrMaintenance1ExtensionName","text":""},{"location":"api/rendering/vulkan/#as_53","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_53","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_53","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_53","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrmaintenance1extensionname_1","title":"KhrMaintenance1ExtensionName","text":"<p><code>\"VK_KHR_maintenance1\"</code></p>"},{"location":"api/rendering/vulkan/#khrdevicegroupcreation","title":"KhrDeviceGroupCreation","text":""},{"location":"api/rendering/vulkan/#as_54","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_54","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_54","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_54","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdevicegroupcreation_1","title":"KhrDeviceGroupCreation","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrdevicegroupcreationspecversion","title":"KhrDeviceGroupCreationSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_55","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_55","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_55","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_55","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdevicegroupcreationspecversion_1","title":"KhrDeviceGroupCreationSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrdevicegroupcreationextensionname","title":"KhrDeviceGroupCreationExtensionName","text":""},{"location":"api/rendering/vulkan/#as_56","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_56","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_56","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_56","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdevicegroupcreationextensionname_1","title":"KhrDeviceGroupCreationExtensionName","text":"<p><code>\"VK_KHR_device_group_creation\"</code></p>"},{"location":"api/rendering/vulkan/#khrexternalmemorycapabilities","title":"KhrExternalMemoryCapabilities","text":""},{"location":"api/rendering/vulkan/#as_57","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_57","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_57","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_57","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalmemorycapabilities_1","title":"KhrExternalMemoryCapabilities","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalmemorycapabilitiesspecversion","title":"KhrExternalMemoryCapabilitiesSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_58","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_58","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_58","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_58","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalmemorycapabilitiesspecversion_1","title":"KhrExternalMemoryCapabilitiesSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalmemorycapabilitiesextensionname","title":"KhrExternalMemoryCapabilitiesExtensionName","text":""},{"location":"api/rendering/vulkan/#as_59","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_59","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_59","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_59","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalmemorycapabilitiesextensionname_1","title":"KhrExternalMemoryCapabilitiesExtensionName","text":"<p><code>\"VK_KHR_external_memory_capabilities\"</code></p>"},{"location":"api/rendering/vulkan/#khrexternalmemory","title":"KhrExternalMemory","text":""},{"location":"api/rendering/vulkan/#as_60","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_60","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_60","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_60","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalmemory_1","title":"KhrExternalMemory","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalmemoryspecversion","title":"KhrExternalMemorySpecVersion","text":""},{"location":"api/rendering/vulkan/#as_61","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_61","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_61","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_61","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalmemoryspecversion_1","title":"KhrExternalMemorySpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalmemoryextensionname","title":"KhrExternalMemoryExtensionName","text":""},{"location":"api/rendering/vulkan/#as_62","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_62","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_62","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_62","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalmemoryextensionname_1","title":"KhrExternalMemoryExtensionName","text":"<p><code>\"VK_KHR_external_memory\"</code></p>"},{"location":"api/rendering/vulkan/#khrexternalmemoryfd","title":"KhrExternalMemoryFd","text":""},{"location":"api/rendering/vulkan/#as_63","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_63","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_63","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_63","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalmemoryfd_1","title":"KhrExternalMemoryFd","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalmemoryfdspecversion","title":"KhrExternalMemoryFdSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_64","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_64","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_64","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_64","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalmemoryfdspecversion_1","title":"KhrExternalMemoryFdSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalmemoryfdextensionname","title":"KhrExternalMemoryFdExtensionName","text":""},{"location":"api/rendering/vulkan/#as_65","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_65","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_65","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_65","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalmemoryfdextensionname_1","title":"KhrExternalMemoryFdExtensionName","text":"<p><code>\"VK_KHR_external_memory_fd\"</code></p>"},{"location":"api/rendering/vulkan/#khrexternalsemaphorecapabilities","title":"KhrExternalSemaphoreCapabilities","text":""},{"location":"api/rendering/vulkan/#as_66","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_66","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_66","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_66","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalsemaphorecapabilities_1","title":"KhrExternalSemaphoreCapabilities","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalsemaphorecapabilitiesspecversion","title":"KhrExternalSemaphoreCapabilitiesSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_67","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_67","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_67","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_67","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalsemaphorecapabilitiesspecversion_1","title":"KhrExternalSemaphoreCapabilitiesSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalsemaphorecapabilitiesextensionname","title":"KhrExternalSemaphoreCapabilitiesExtensionName","text":""},{"location":"api/rendering/vulkan/#as_68","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_68","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_68","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_68","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalsemaphorecapabilitiesextensionname_1","title":"KhrExternalSemaphoreCapabilitiesExtensionName","text":"<p><code>\"VK_KHR_external_semaphore_capabilities\"</code></p>"},{"location":"api/rendering/vulkan/#khrexternalsemaphore","title":"KhrExternalSemaphore","text":""},{"location":"api/rendering/vulkan/#as_69","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_69","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_69","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_69","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalsemaphore_1","title":"KhrExternalSemaphore","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalsemaphorespecversion","title":"KhrExternalSemaphoreSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_70","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_70","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_70","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_70","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalsemaphorespecversion_1","title":"KhrExternalSemaphoreSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalsemaphoreextensionname","title":"KhrExternalSemaphoreExtensionName","text":""},{"location":"api/rendering/vulkan/#as_71","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_71","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_71","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_71","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalsemaphoreextensionname_1","title":"KhrExternalSemaphoreExtensionName","text":"<p><code>\"VK_KHR_external_semaphore\"</code></p>"},{"location":"api/rendering/vulkan/#khrexternalsemaphorefd","title":"KhrExternalSemaphoreFd","text":""},{"location":"api/rendering/vulkan/#as_72","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_72","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_72","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_72","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalsemaphorefd_1","title":"KhrExternalSemaphoreFd","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalsemaphorefdspecversion","title":"KhrExternalSemaphoreFdSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_73","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_73","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_73","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_73","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalsemaphorefdspecversion_1","title":"KhrExternalSemaphoreFdSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalsemaphorefdextensionname","title":"KhrExternalSemaphoreFdExtensionName","text":""},{"location":"api/rendering/vulkan/#as_74","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_74","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_74","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_74","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalsemaphorefdextensionname_1","title":"KhrExternalSemaphoreFdExtensionName","text":"<p><code>\"VK_KHR_external_semaphore_fd\"</code></p>"},{"location":"api/rendering/vulkan/#khrpushdescriptor","title":"KhrPushDescriptor","text":""},{"location":"api/rendering/vulkan/#as_75","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_75","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_75","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_75","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrpushdescriptor_1","title":"KhrPushDescriptor","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrpushdescriptorspecversion","title":"KhrPushDescriptorSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_76","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_76","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_76","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_76","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrpushdescriptorspecversion_1","title":"KhrPushDescriptorSpecVersion","text":"<p><code>2</code></p>"},{"location":"api/rendering/vulkan/#khrpushdescriptorextensionname","title":"KhrPushDescriptorExtensionName","text":""},{"location":"api/rendering/vulkan/#as_77","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_77","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_77","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_77","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrpushdescriptorextensionname_1","title":"KhrPushDescriptorExtensionName","text":"<p><code>\"VK_KHR_push_descriptor\"</code></p>"},{"location":"api/rendering/vulkan/#khr16bitstorage","title":"Khr16bitStorage","text":""},{"location":"api/rendering/vulkan/#as_78","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_78","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_78","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_78","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khr16bitstorage_1","title":"Khr16bitStorage","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khr16bitstoragespecversion","title":"Khr16bitStorageSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_79","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_79","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_79","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_79","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khr16bitstoragespecversion_1","title":"Khr16bitStorageSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khr16bitstorageextensionname","title":"Khr16bitStorageExtensionName","text":""},{"location":"api/rendering/vulkan/#as_80","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_80","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_80","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_80","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khr16bitstorageextensionname_1","title":"Khr16bitStorageExtensionName","text":"<p><code>\"VK_KHR_16bit_storage\"</code></p>"},{"location":"api/rendering/vulkan/#khrincrementalpresent","title":"KhrIncrementalPresent","text":""},{"location":"api/rendering/vulkan/#as_81","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_81","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_81","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_81","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrincrementalpresent_1","title":"KhrIncrementalPresent","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrincrementalpresentspecversion","title":"KhrIncrementalPresentSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_82","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_82","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_82","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_82","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrincrementalpresentspecversion_1","title":"KhrIncrementalPresentSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrincrementalpresentextensionname","title":"KhrIncrementalPresentExtensionName","text":""},{"location":"api/rendering/vulkan/#as_83","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_83","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_83","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_83","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrincrementalpresentextensionname_1","title":"KhrIncrementalPresentExtensionName","text":"<p><code>\"VK_KHR_incremental_present\"</code></p>"},{"location":"api/rendering/vulkan/#khrdescriptorupdatetemplate","title":"KhrDescriptorUpdateTemplate","text":""},{"location":"api/rendering/vulkan/#as_84","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_84","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_84","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_84","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdescriptorupdatetemplate_1","title":"KhrDescriptorUpdateTemplate","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrdescriptorupdatetemplatespecversion","title":"KhrDescriptorUpdateTemplateSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_85","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_85","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_85","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_85","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdescriptorupdatetemplatespecversion_1","title":"KhrDescriptorUpdateTemplateSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrdescriptorupdatetemplateextensionname","title":"KhrDescriptorUpdateTemplateExtensionName","text":""},{"location":"api/rendering/vulkan/#as_86","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_86","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_86","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_86","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdescriptorupdatetemplateextensionname_1","title":"KhrDescriptorUpdateTemplateExtensionName","text":"<p><code>\"VK_KHR_descriptor_update_template\"</code></p>"},{"location":"api/rendering/vulkan/#khrcreaterenderpass2","title":"KhrCreateRenderpass2","text":""},{"location":"api/rendering/vulkan/#as_87","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_87","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_87","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_87","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrcreaterenderpass2_1","title":"KhrCreateRenderpass2","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrcreaterenderpass2specversion","title":"KhrCreateRenderpass2SpecVersion","text":""},{"location":"api/rendering/vulkan/#as_88","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_88","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_88","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_88","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrcreaterenderpass2specversion_1","title":"KhrCreateRenderpass2SpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrcreaterenderpass2extensionname","title":"KhrCreateRenderpass2ExtensionName","text":""},{"location":"api/rendering/vulkan/#as_89","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_89","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_89","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_89","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrcreaterenderpass2extensionname_1","title":"KhrCreateRenderpass2ExtensionName","text":"<p><code>\"VK_KHR_create_renderpass2\"</code></p>"},{"location":"api/rendering/vulkan/#khrsharedpresentableimage","title":"KhrSharedPresentableImage","text":""},{"location":"api/rendering/vulkan/#as_90","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_90","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_90","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_90","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrsharedpresentableimage_1","title":"KhrSharedPresentableImage","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrsharedpresentableimagespecversion","title":"KhrSharedPresentableImageSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_91","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_91","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_91","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_91","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrsharedpresentableimagespecversion_1","title":"KhrSharedPresentableImageSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrsharedpresentableimageextensionname","title":"KhrSharedPresentableImageExtensionName","text":""},{"location":"api/rendering/vulkan/#as_92","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_92","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_92","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_92","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrsharedpresentableimageextensionname_1","title":"KhrSharedPresentableImageExtensionName","text":"<p><code>\"VK_KHR_shared_presentable_image\"</code></p>"},{"location":"api/rendering/vulkan/#khrexternalfencecapabilities","title":"KhrExternalFenceCapabilities","text":""},{"location":"api/rendering/vulkan/#as_93","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_93","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_93","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_93","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalfencecapabilities_1","title":"KhrExternalFenceCapabilities","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalfencecapabilitiesspecversion","title":"KhrExternalFenceCapabilitiesSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_94","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_94","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_94","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_94","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalfencecapabilitiesspecversion_1","title":"KhrExternalFenceCapabilitiesSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalfencecapabilitiesextensionname","title":"KhrExternalFenceCapabilitiesExtensionName","text":""},{"location":"api/rendering/vulkan/#as_95","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_95","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_95","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_95","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalfencecapabilitiesextensionname_1","title":"KhrExternalFenceCapabilitiesExtensionName","text":"<p><code>\"VK_KHR_external_fence_capabilities\"</code></p>"},{"location":"api/rendering/vulkan/#khrexternalfence","title":"KhrExternalFence","text":""},{"location":"api/rendering/vulkan/#as_96","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_96","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_96","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_96","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalfence_1","title":"KhrExternalFence","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalfencespecversion","title":"KhrExternalFenceSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_97","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_97","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_97","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_97","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalfencespecversion_1","title":"KhrExternalFenceSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalfenceextensionname","title":"KhrExternalFenceExtensionName","text":""},{"location":"api/rendering/vulkan/#as_98","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_98","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_98","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_98","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalfenceextensionname_1","title":"KhrExternalFenceExtensionName","text":"<p><code>\"VK_KHR_external_fence\"</code></p>"},{"location":"api/rendering/vulkan/#khrexternalfencefd","title":"KhrExternalFenceFd","text":""},{"location":"api/rendering/vulkan/#as_99","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_99","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_99","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_99","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalfencefd_1","title":"KhrExternalFenceFd","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalfencefdspecversion","title":"KhrExternalFenceFdSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_100","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_100","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_100","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_100","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalfencefdspecversion_1","title":"KhrExternalFenceFdSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrexternalfencefdextensionname","title":"KhrExternalFenceFdExtensionName","text":""},{"location":"api/rendering/vulkan/#as_101","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_101","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_101","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_101","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrexternalfencefdextensionname_1","title":"KhrExternalFenceFdExtensionName","text":"<p><code>\"VK_KHR_external_fence_fd\"</code></p>"},{"location":"api/rendering/vulkan/#khrmaintenance2","title":"KhrMaintenance2","text":""},{"location":"api/rendering/vulkan/#as_102","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_102","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_102","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_102","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrmaintenance2_1","title":"KhrMaintenance2","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrmaintenance2specversion","title":"KhrMaintenance2SpecVersion","text":""},{"location":"api/rendering/vulkan/#as_103","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_103","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_103","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_103","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrmaintenance2specversion_1","title":"KhrMaintenance2SpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrmaintenance2extensionname","title":"KhrMaintenance2ExtensionName","text":""},{"location":"api/rendering/vulkan/#as_104","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_104","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_104","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_104","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrmaintenance2extensionname_1","title":"KhrMaintenance2ExtensionName","text":"<p><code>\"VK_KHR_maintenance2\"</code></p>"},{"location":"api/rendering/vulkan/#khrgetsurfacecapabilities2","title":"KhrGetSurfaceCapabilities2","text":""},{"location":"api/rendering/vulkan/#as_105","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_105","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_105","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_105","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrgetsurfacecapabilities2_1","title":"KhrGetSurfaceCapabilities2","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrgetsurfacecapabilities2specversion","title":"KhrGetSurfaceCapabilities2SpecVersion","text":""},{"location":"api/rendering/vulkan/#as_106","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_106","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_106","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_106","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrgetsurfacecapabilities2specversion_1","title":"KhrGetSurfaceCapabilities2SpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrgetsurfacecapabilities2extensionname","title":"KhrGetSurfaceCapabilities2ExtensionName","text":""},{"location":"api/rendering/vulkan/#as_107","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_107","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_107","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_107","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrgetsurfacecapabilities2extensionname_1","title":"KhrGetSurfaceCapabilities2ExtensionName","text":"<p><code>\"VK_KHR_get_surface_capabilities2\"</code></p>"},{"location":"api/rendering/vulkan/#khrvariablepointers","title":"KhrVariablePointers","text":""},{"location":"api/rendering/vulkan/#as_108","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_108","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_108","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_108","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrvariablepointers_1","title":"KhrVariablePointers","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrvariablepointersspecversion","title":"KhrVariablePointersSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_109","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_109","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_109","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_109","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrvariablepointersspecversion_1","title":"KhrVariablePointersSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrvariablepointersextensionname","title":"KhrVariablePointersExtensionName","text":""},{"location":"api/rendering/vulkan/#as_110","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_110","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_110","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_110","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrvariablepointersextensionname_1","title":"KhrVariablePointersExtensionName","text":"<p><code>\"VK_KHR_variable_pointers\"</code></p>"},{"location":"api/rendering/vulkan/#khrgetdisplayproperties2","title":"KhrGetDisplayProperties2","text":""},{"location":"api/rendering/vulkan/#as_111","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_111","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_111","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_111","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrgetdisplayproperties2_1","title":"KhrGetDisplayProperties2","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrgetdisplayproperties2specversion","title":"KhrGetDisplayProperties2SpecVersion","text":""},{"location":"api/rendering/vulkan/#as_112","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_112","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_112","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_112","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrgetdisplayproperties2specversion_1","title":"KhrGetDisplayProperties2SpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrgetdisplayproperties2extensionname","title":"KhrGetDisplayProperties2ExtensionName","text":""},{"location":"api/rendering/vulkan/#as_113","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_113","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_113","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_113","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrgetdisplayproperties2extensionname_1","title":"KhrGetDisplayProperties2ExtensionName","text":"<p><code>\"VK_KHR_get_display_properties2\"</code></p>"},{"location":"api/rendering/vulkan/#khrdedicatedallocation","title":"KhrDedicatedAllocation","text":""},{"location":"api/rendering/vulkan/#as_114","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_114","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_114","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_114","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdedicatedallocation_1","title":"KhrDedicatedAllocation","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrdedicatedallocationspecversion","title":"KhrDedicatedAllocationSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_115","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_115","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_115","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_115","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdedicatedallocationspecversion_1","title":"KhrDedicatedAllocationSpecVersion","text":"<p><code>3</code></p>"},{"location":"api/rendering/vulkan/#khrdedicatedallocationextensionname","title":"KhrDedicatedAllocationExtensionName","text":""},{"location":"api/rendering/vulkan/#as_116","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_116","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_116","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_116","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdedicatedallocationextensionname_1","title":"KhrDedicatedAllocationExtensionName","text":"<p><code>\"VK_KHR_dedicated_allocation\"</code></p>"},{"location":"api/rendering/vulkan/#khrstoragebufferstorageclass","title":"KhrStorageBufferStorageClass","text":""},{"location":"api/rendering/vulkan/#as_117","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_117","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_117","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_117","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrstoragebufferstorageclass_1","title":"KhrStorageBufferStorageClass","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrstoragebufferstorageclassspecversion","title":"KhrStorageBufferStorageClassSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_118","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_118","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_118","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_118","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrstoragebufferstorageclassspecversion_1","title":"KhrStorageBufferStorageClassSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrstoragebufferstorageclassextensionname","title":"KhrStorageBufferStorageClassExtensionName","text":""},{"location":"api/rendering/vulkan/#as_119","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_119","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_119","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_119","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrstoragebufferstorageclassextensionname_1","title":"KhrStorageBufferStorageClassExtensionName","text":"<p><code>\"VK_KHR_storage_buffer_storage_class\"</code></p>"},{"location":"api/rendering/vulkan/#khrrelaxedblocklayout","title":"KhrRelaxedBlockLayout","text":""},{"location":"api/rendering/vulkan/#as_120","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_120","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_120","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_120","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrrelaxedblocklayout_1","title":"KhrRelaxedBlockLayout","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrrelaxedblocklayoutspecversion","title":"KhrRelaxedBlockLayoutSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_121","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_121","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_121","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_121","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrrelaxedblocklayoutspecversion_1","title":"KhrRelaxedBlockLayoutSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrrelaxedblocklayoutextensionname","title":"KhrRelaxedBlockLayoutExtensionName","text":""},{"location":"api/rendering/vulkan/#as_122","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_122","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_122","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_122","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrrelaxedblocklayoutextensionname_1","title":"KhrRelaxedBlockLayoutExtensionName","text":"<p><code>\"VK_KHR_relaxed_block_layout\"</code></p>"},{"location":"api/rendering/vulkan/#khrgetmemoryrequirements2","title":"KhrGetMemoryRequirements2","text":""},{"location":"api/rendering/vulkan/#as_123","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_123","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_123","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_123","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrgetmemoryrequirements2_1","title":"KhrGetMemoryRequirements2","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrgetmemoryrequirements2specversion","title":"KhrGetMemoryRequirements2SpecVersion","text":""},{"location":"api/rendering/vulkan/#as_124","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_124","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_124","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_124","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrgetmemoryrequirements2specversion_1","title":"KhrGetMemoryRequirements2SpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrgetmemoryrequirements2extensionname","title":"KhrGetMemoryRequirements2ExtensionName","text":""},{"location":"api/rendering/vulkan/#as_125","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_125","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_125","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_125","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrgetmemoryrequirements2extensionname_1","title":"KhrGetMemoryRequirements2ExtensionName","text":"<p><code>\"VK_KHR_get_memory_requirements2\"</code></p>"},{"location":"api/rendering/vulkan/#khrimageformatlist","title":"KhrImageFormatList","text":""},{"location":"api/rendering/vulkan/#as_126","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_126","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_126","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_126","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrimageformatlist_1","title":"KhrImageFormatList","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrimageformatlistspecversion","title":"KhrImageFormatListSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_127","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_127","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_127","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_127","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrimageformatlistspecversion_1","title":"KhrImageFormatListSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrimageformatlistextensionname","title":"KhrImageFormatListExtensionName","text":""},{"location":"api/rendering/vulkan/#as_128","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_128","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_128","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_128","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrimageformatlistextensionname_1","title":"KhrImageFormatListExtensionName","text":"<p><code>\"VK_KHR_image_format_list\"</code></p>"},{"location":"api/rendering/vulkan/#khrsamplerycbcrconversion","title":"KhrSamplerYcbcrConversion","text":""},{"location":"api/rendering/vulkan/#as_129","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_129","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_129","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_129","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrsamplerycbcrconversion_1","title":"KhrSamplerYcbcrConversion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrsamplerycbcrconversionspecversion","title":"KhrSamplerYcbcrConversionSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_130","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_130","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_130","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_130","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrsamplerycbcrconversionspecversion_1","title":"KhrSamplerYcbcrConversionSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrsamplerycbcrconversionextensionname","title":"KhrSamplerYcbcrConversionExtensionName","text":""},{"location":"api/rendering/vulkan/#as_131","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_131","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_131","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_131","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrsamplerycbcrconversionextensionname_1","title":"KhrSamplerYcbcrConversionExtensionName","text":"<p><code>\"VK_KHR_sampler_ycbcr_conversion\"</code></p>"},{"location":"api/rendering/vulkan/#khrbindmemory2","title":"KhrBindMemory2","text":""},{"location":"api/rendering/vulkan/#as_132","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_132","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_132","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_132","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrbindmemory2_1","title":"KhrBindMemory2","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrbindmemory2specversion","title":"KhrBindMemory2SpecVersion","text":""},{"location":"api/rendering/vulkan/#as_133","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_133","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_133","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_133","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrbindmemory2specversion_1","title":"KhrBindMemory2SpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrbindmemory2extensionname","title":"KhrBindMemory2ExtensionName","text":""},{"location":"api/rendering/vulkan/#as_134","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_134","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_134","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_134","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrbindmemory2extensionname_1","title":"KhrBindMemory2ExtensionName","text":"<p><code>\"VK_KHR_bind_memory2\"</code></p>"},{"location":"api/rendering/vulkan/#khrmaintenance3","title":"KhrMaintenance3","text":""},{"location":"api/rendering/vulkan/#as_135","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_135","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_135","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_135","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrmaintenance3_1","title":"KhrMaintenance3","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrmaintenance3specversion","title":"KhrMaintenance3SpecVersion","text":""},{"location":"api/rendering/vulkan/#as_136","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_136","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_136","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_136","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrmaintenance3specversion_1","title":"KhrMaintenance3SpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrmaintenance3extensionname","title":"KhrMaintenance3ExtensionName","text":""},{"location":"api/rendering/vulkan/#as_137","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_137","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_137","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_137","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrmaintenance3extensionname_1","title":"KhrMaintenance3ExtensionName","text":"<p><code>\"VK_KHR_maintenance3\"</code></p>"},{"location":"api/rendering/vulkan/#khrdrawindirectcount","title":"KhrDrawIndirectCount","text":""},{"location":"api/rendering/vulkan/#as_138","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_138","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_138","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_138","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdrawindirectcount_1","title":"KhrDrawIndirectCount","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrdrawindirectcountspecversion","title":"KhrDrawIndirectCountSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_139","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_139","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_139","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_139","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdrawindirectcountspecversion_1","title":"KhrDrawIndirectCountSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrdrawindirectcountextensionname","title":"KhrDrawIndirectCountExtensionName","text":""},{"location":"api/rendering/vulkan/#as_140","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_140","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_140","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_140","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdrawindirectcountextensionname_1","title":"KhrDrawIndirectCountExtensionName","text":"<p><code>\"VK_KHR_draw_indirect_count\"</code></p>"},{"location":"api/rendering/vulkan/#khr8bitstorage","title":"Khr8bitStorage","text":""},{"location":"api/rendering/vulkan/#as_141","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_141","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_141","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_141","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khr8bitstorage_1","title":"Khr8bitStorage","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khr8bitstoragespecversion","title":"Khr8bitStorageSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_142","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_142","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_142","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_142","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khr8bitstoragespecversion_1","title":"Khr8bitStorageSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khr8bitstorageextensionname","title":"Khr8bitStorageExtensionName","text":""},{"location":"api/rendering/vulkan/#as_143","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_143","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_143","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_143","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khr8bitstorageextensionname_1","title":"Khr8bitStorageExtensionName","text":"<p><code>\"VK_KHR_8bit_storage\"</code></p>"},{"location":"api/rendering/vulkan/#khrshaderatomicint64","title":"KhrShaderAtomicInt64","text":""},{"location":"api/rendering/vulkan/#as_144","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_144","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_144","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_144","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrshaderatomicint64_1","title":"KhrShaderAtomicInt64","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrshaderatomicint64specversion","title":"KhrShaderAtomicInt64SpecVersion","text":""},{"location":"api/rendering/vulkan/#as_145","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_145","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_145","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_145","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrshaderatomicint64specversion_1","title":"KhrShaderAtomicInt64SpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrshaderatomicint64extensionname","title":"KhrShaderAtomicInt64ExtensionName","text":""},{"location":"api/rendering/vulkan/#as_146","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_146","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_146","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_146","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrshaderatomicint64extensionname_1","title":"KhrShaderAtomicInt64ExtensionName","text":"<p><code>\"VK_KHR_shader_atomic_int64\"</code></p>"},{"location":"api/rendering/vulkan/#khrdriverproperties","title":"KhrDriverProperties","text":""},{"location":"api/rendering/vulkan/#as_147","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_147","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_147","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_147","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdriverproperties_1","title":"KhrDriverProperties","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#maxdrivernamesize","title":"MaxDriverNameSize","text":""},{"location":"api/rendering/vulkan/#as_148","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_148","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_148","title":"in","text":""},{"location":"api/rendering/vulkan/#https","title":"https","text":""},{"location":"api/rendering/vulkan/#maxdrivernamesize_1","title":"MaxDriverNameSize","text":"<p><code>256</code></p>"},{"location":"api/rendering/vulkan/#maxdriverinfosize","title":"MaxDriverInfoSize","text":""},{"location":"api/rendering/vulkan/#as_149","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_149","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_149","title":"in","text":""},{"location":"api/rendering/vulkan/#https_1","title":"https","text":""},{"location":"api/rendering/vulkan/#maxdriverinfosize_1","title":"MaxDriverInfoSize","text":"<p><code>256</code></p>"},{"location":"api/rendering/vulkan/#khrdriverpropertiesspecversion","title":"KhrDriverPropertiesSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_150","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_150","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_150","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_148","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdriverpropertiesspecversion_1","title":"KhrDriverPropertiesSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrdriverpropertiesextensionname","title":"KhrDriverPropertiesExtensionName","text":""},{"location":"api/rendering/vulkan/#as_151","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_151","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_151","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_149","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrdriverpropertiesextensionname_1","title":"KhrDriverPropertiesExtensionName","text":"<p><code>\"VK_KHR_driver_properties\"</code></p>"},{"location":"api/rendering/vulkan/#khrvulkanmemorymodel","title":"KhrVulkanMemoryModel","text":""},{"location":"api/rendering/vulkan/#as_152","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_152","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_152","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_150","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrvulkanmemorymodel_1","title":"KhrVulkanMemoryModel","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#khrvulkanmemorymodelspecversion","title":"KhrVulkanMemoryModelSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_153","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_153","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_153","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_151","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrvulkanmemorymodelspecversion_1","title":"KhrVulkanMemoryModelSpecVersion","text":"<p><code>2</code></p>"},{"location":"api/rendering/vulkan/#khrvulkanmemorymodelextensionname","title":"KhrVulkanMemoryModelExtensionName","text":""},{"location":"api/rendering/vulkan/#as_154","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_154","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_154","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_152","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#khrvulkanmemorymodelextensionname_1","title":"KhrVulkanMemoryModelExtensionName","text":"<p><code>\"VK_KHR_vulkan_memory_model\"</code></p>"},{"location":"api/rendering/vulkan/#extdebugreport","title":"ExtDebugReport","text":""},{"location":"api/rendering/vulkan/#as_155","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_155","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_155","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_153","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdebugreport_1","title":"ExtDebugReport","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extdebugreportspecversion","title":"ExtDebugReportSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_156","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_156","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_156","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_154","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdebugreportspecversion_1","title":"ExtDebugReportSpecVersion","text":"<p><code>9</code></p>"},{"location":"api/rendering/vulkan/#extdebugreportextensionname","title":"ExtDebugReportExtensionName","text":""},{"location":"api/rendering/vulkan/#as_157","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_157","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_157","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_155","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdebugreportextensionname_1","title":"ExtDebugReportExtensionName","text":"<p><code>\"VK_EXT_debug_report\"</code></p>"},{"location":"api/rendering/vulkan/#nvglslshader","title":"NvGlslShader","text":""},{"location":"api/rendering/vulkan/#as_158","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_158","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_158","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_156","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvglslshader_1","title":"NvGlslShader","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvglslshaderspecversion","title":"NvGlslShaderSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_159","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_159","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_159","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_157","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvglslshaderspecversion_1","title":"NvGlslShaderSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvglslshaderextensionname","title":"NvGlslShaderExtensionName","text":""},{"location":"api/rendering/vulkan/#as_160","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_160","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_160","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_158","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvglslshaderextensionname_1","title":"NvGlslShaderExtensionName","text":"<p><code>\"VK_NV_glsl_shader\"</code></p>"},{"location":"api/rendering/vulkan/#extdepthrangeunrestricted","title":"ExtDepthRangeUnrestricted","text":""},{"location":"api/rendering/vulkan/#as_161","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_161","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_161","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_159","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdepthrangeunrestricted_1","title":"ExtDepthRangeUnrestricted","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extdepthrangeunrestrictedspecversion","title":"ExtDepthRangeUnrestrictedSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_162","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_162","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_162","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_160","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdepthrangeunrestrictedspecversion_1","title":"ExtDepthRangeUnrestrictedSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extdepthrangeunrestrictedextensionname","title":"ExtDepthRangeUnrestrictedExtensionName","text":""},{"location":"api/rendering/vulkan/#as_163","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_163","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_163","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_161","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdepthrangeunrestrictedextensionname_1","title":"ExtDepthRangeUnrestrictedExtensionName","text":"<p><code>\"VK_EXT_depth_range_unrestricted\"</code></p>"},{"location":"api/rendering/vulkan/#imgfiltercubic","title":"ImgFilterCubic","text":""},{"location":"api/rendering/vulkan/#as_164","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_164","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_164","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_162","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#imgfiltercubic_1","title":"ImgFilterCubic","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#imgfiltercubicspecversion","title":"ImgFilterCubicSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_165","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_165","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_165","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_163","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#imgfiltercubicspecversion_1","title":"ImgFilterCubicSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#imgfiltercubicextensionname","title":"ImgFilterCubicExtensionName","text":""},{"location":"api/rendering/vulkan/#as_166","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_166","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_166","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_164","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#imgfiltercubicextensionname_1","title":"ImgFilterCubicExtensionName","text":"<p><code>\"VK_IMG_filter_cubic\"</code></p>"},{"location":"api/rendering/vulkan/#amdrasterizationorder","title":"AmdRasterizationOrder","text":""},{"location":"api/rendering/vulkan/#as_167","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_167","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_167","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_165","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdrasterizationorder_1","title":"AmdRasterizationOrder","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdrasterizationorderspecversion","title":"AmdRasterizationOrderSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_168","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_168","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_168","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_166","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdrasterizationorderspecversion_1","title":"AmdRasterizationOrderSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdrasterizationorderextensionname","title":"AmdRasterizationOrderExtensionName","text":""},{"location":"api/rendering/vulkan/#as_169","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_169","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_169","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_167","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdrasterizationorderextensionname_1","title":"AmdRasterizationOrderExtensionName","text":"<p><code>\"VK_AMD_rasterization_order\"</code></p>"},{"location":"api/rendering/vulkan/#amdshadertrinaryminmax","title":"AmdShaderTrinaryMinmax","text":""},{"location":"api/rendering/vulkan/#as_170","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_170","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_170","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_168","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshadertrinaryminmax_1","title":"AmdShaderTrinaryMinmax","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdshadertrinaryminmaxspecversion","title":"AmdShaderTrinaryMinmaxSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_171","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_171","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_171","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_169","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshadertrinaryminmaxspecversion_1","title":"AmdShaderTrinaryMinmaxSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdshadertrinaryminmaxextensionname","title":"AmdShaderTrinaryMinmaxExtensionName","text":""},{"location":"api/rendering/vulkan/#as_172","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_172","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_172","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_170","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshadertrinaryminmaxextensionname_1","title":"AmdShaderTrinaryMinmaxExtensionName","text":"<p><code>\"VK_AMD_shader_trinary_minmax\"</code></p>"},{"location":"api/rendering/vulkan/#amdshaderexplicitvertexparameter","title":"AmdShaderExplicitVertexParameter","text":""},{"location":"api/rendering/vulkan/#as_173","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_173","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_173","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_171","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshaderexplicitvertexparameter_1","title":"AmdShaderExplicitVertexParameter","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdshaderexplicitvertexparameterspecversion","title":"AmdShaderExplicitVertexParameterSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_174","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_174","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_174","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_172","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshaderexplicitvertexparameterspecversion_1","title":"AmdShaderExplicitVertexParameterSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdshaderexplicitvertexparameterextensionname","title":"AmdShaderExplicitVertexParameterExtensionName","text":""},{"location":"api/rendering/vulkan/#as_175","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_175","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_175","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_173","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshaderexplicitvertexparameterextensionname_1","title":"AmdShaderExplicitVertexParameterExtensionName","text":"<p><code>\"VK_AMD_shader_explicit_vertex_parameter\"</code></p>"},{"location":"api/rendering/vulkan/#extdebugmarker","title":"ExtDebugMarker","text":""},{"location":"api/rendering/vulkan/#as_176","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_176","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_176","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_174","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdebugmarker_1","title":"ExtDebugMarker","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extdebugmarkerspecversion","title":"ExtDebugMarkerSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_177","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_177","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_177","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_175","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdebugmarkerspecversion_1","title":"ExtDebugMarkerSpecVersion","text":"<p><code>4</code></p>"},{"location":"api/rendering/vulkan/#extdebugmarkerextensionname","title":"ExtDebugMarkerExtensionName","text":""},{"location":"api/rendering/vulkan/#as_178","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_178","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_178","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_176","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdebugmarkerextensionname_1","title":"ExtDebugMarkerExtensionName","text":"<p><code>\"VK_EXT_debug_marker\"</code></p>"},{"location":"api/rendering/vulkan/#amdgcnshader","title":"AmdGcnShader","text":""},{"location":"api/rendering/vulkan/#as_179","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_179","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_179","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_177","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdgcnshader_1","title":"AmdGcnShader","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdgcnshaderspecversion","title":"AmdGcnShaderSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_180","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_180","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_180","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_178","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdgcnshaderspecversion_1","title":"AmdGcnShaderSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdgcnshaderextensionname","title":"AmdGcnShaderExtensionName","text":""},{"location":"api/rendering/vulkan/#as_181","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_181","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_181","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_179","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdgcnshaderextensionname_1","title":"AmdGcnShaderExtensionName","text":"<p><code>\"VK_AMD_gcn_shader\"</code></p>"},{"location":"api/rendering/vulkan/#nvdedicatedallocation","title":"NvDedicatedAllocation","text":""},{"location":"api/rendering/vulkan/#as_182","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_182","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_182","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_180","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvdedicatedallocation_1","title":"NvDedicatedAllocation","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvdedicatedallocationspecversion","title":"NvDedicatedAllocationSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_183","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_183","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_183","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_181","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvdedicatedallocationspecversion_1","title":"NvDedicatedAllocationSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvdedicatedallocationextensionname","title":"NvDedicatedAllocationExtensionName","text":""},{"location":"api/rendering/vulkan/#as_184","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_184","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_184","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_182","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvdedicatedallocationextensionname_1","title":"NvDedicatedAllocationExtensionName","text":"<p><code>\"VK_NV_dedicated_allocation\"</code></p>"},{"location":"api/rendering/vulkan/#exttransformfeedback","title":"ExtTransformFeedback","text":""},{"location":"api/rendering/vulkan/#as_185","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_185","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_185","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_183","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#exttransformfeedback_1","title":"ExtTransformFeedback","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#exttransformfeedbackspecversion","title":"ExtTransformFeedbackSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_186","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_186","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_186","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_184","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#exttransformfeedbackspecversion_1","title":"ExtTransformFeedbackSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#exttransformfeedbackextensionname","title":"ExtTransformFeedbackExtensionName","text":""},{"location":"api/rendering/vulkan/#as_187","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_187","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_187","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_185","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#exttransformfeedbackextensionname_1","title":"ExtTransformFeedbackExtensionName","text":"<p><code>\"VK_EXT_transform_feedback\"</code></p>"},{"location":"api/rendering/vulkan/#amddrawindirectcount","title":"AmdDrawIndirectCount","text":""},{"location":"api/rendering/vulkan/#as_188","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_188","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_188","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_186","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amddrawindirectcount_1","title":"AmdDrawIndirectCount","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amddrawindirectcountspecversion","title":"AmdDrawIndirectCountSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_189","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_189","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_189","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_187","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amddrawindirectcountspecversion_1","title":"AmdDrawIndirectCountSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amddrawindirectcountextensionname","title":"AmdDrawIndirectCountExtensionName","text":""},{"location":"api/rendering/vulkan/#as_190","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_190","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_190","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_188","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amddrawindirectcountextensionname_1","title":"AmdDrawIndirectCountExtensionName","text":"<p><code>\"VK_AMD_draw_indirect_count\"</code></p>"},{"location":"api/rendering/vulkan/#amdnegativeviewportheight","title":"AmdNegativeViewportHeight","text":""},{"location":"api/rendering/vulkan/#as_191","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_191","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_191","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_189","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdnegativeviewportheight_1","title":"AmdNegativeViewportHeight","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdnegativeviewportheightspecversion","title":"AmdNegativeViewportHeightSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_192","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_192","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_192","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_190","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdnegativeviewportheightspecversion_1","title":"AmdNegativeViewportHeightSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdnegativeviewportheightextensionname","title":"AmdNegativeViewportHeightExtensionName","text":""},{"location":"api/rendering/vulkan/#as_193","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_193","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_193","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_191","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdnegativeviewportheightextensionname_1","title":"AmdNegativeViewportHeightExtensionName","text":"<p><code>\"VK_AMD_negative_viewport_height\"</code></p>"},{"location":"api/rendering/vulkan/#amdgpushaderhalffloat","title":"AmdGpuShaderHalfFloat","text":""},{"location":"api/rendering/vulkan/#as_194","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_194","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_194","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_192","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdgpushaderhalffloat_1","title":"AmdGpuShaderHalfFloat","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdgpushaderhalffloatspecversion","title":"AmdGpuShaderHalfFloatSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_195","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_195","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_195","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_193","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdgpushaderhalffloatspecversion_1","title":"AmdGpuShaderHalfFloatSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdgpushaderhalffloatextensionname","title":"AmdGpuShaderHalfFloatExtensionName","text":""},{"location":"api/rendering/vulkan/#as_196","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_196","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_196","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_194","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdgpushaderhalffloatextensionname_1","title":"AmdGpuShaderHalfFloatExtensionName","text":"<p><code>\"VK_AMD_gpu_shader_half_float\"</code></p>"},{"location":"api/rendering/vulkan/#amdshaderballot","title":"AmdShaderBallot","text":""},{"location":"api/rendering/vulkan/#as_197","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_197","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_197","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_195","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshaderballot_1","title":"AmdShaderBallot","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdshaderballotspecversion","title":"AmdShaderBallotSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_198","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_198","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_198","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_196","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshaderballotspecversion_1","title":"AmdShaderBallotSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdshaderballotextensionname","title":"AmdShaderBallotExtensionName","text":""},{"location":"api/rendering/vulkan/#as_199","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_199","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_199","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_197","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshaderballotextensionname_1","title":"AmdShaderBallotExtensionName","text":"<p><code>\"VK_AMD_shader_ballot\"</code></p>"},{"location":"api/rendering/vulkan/#amdtexturegatherbiaslod","title":"AmdTextureGatherBiasLod","text":""},{"location":"api/rendering/vulkan/#as_200","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_200","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_200","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_198","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdtexturegatherbiaslod_1","title":"AmdTextureGatherBiasLod","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdtexturegatherbiaslodspecversion","title":"AmdTextureGatherBiasLodSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_201","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_201","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_201","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_199","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdtexturegatherbiaslodspecversion_1","title":"AmdTextureGatherBiasLodSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdtexturegatherbiaslodextensionname","title":"AmdTextureGatherBiasLodExtensionName","text":""},{"location":"api/rendering/vulkan/#as_202","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_202","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_202","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_200","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdtexturegatherbiaslodextensionname_1","title":"AmdTextureGatherBiasLodExtensionName","text":"<p><code>\"VK_AMD_texture_gather_bias_lod\"</code></p>"},{"location":"api/rendering/vulkan/#amdshaderinfo","title":"AmdShaderInfo","text":""},{"location":"api/rendering/vulkan/#as_203","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_203","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_203","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_201","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshaderinfo_1","title":"AmdShaderInfo","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdshaderinfospecversion","title":"AmdShaderInfoSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_204","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_204","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_204","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_202","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshaderinfospecversion_1","title":"AmdShaderInfoSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdshaderinfoextensionname","title":"AmdShaderInfoExtensionName","text":""},{"location":"api/rendering/vulkan/#as_205","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_205","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_205","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_203","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshaderinfoextensionname_1","title":"AmdShaderInfoExtensionName","text":"<p><code>\"VK_AMD_shader_info\"</code></p>"},{"location":"api/rendering/vulkan/#amdshaderimageloadstorelod","title":"AmdShaderImageLoadStoreLod","text":""},{"location":"api/rendering/vulkan/#as_206","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_206","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_206","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_204","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshaderimageloadstorelod_1","title":"AmdShaderImageLoadStoreLod","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdshaderimageloadstorelodspecversion","title":"AmdShaderImageLoadStoreLodSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_207","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_207","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_207","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_205","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshaderimageloadstorelodspecversion_1","title":"AmdShaderImageLoadStoreLodSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdshaderimageloadstorelodextensionname","title":"AmdShaderImageLoadStoreLodExtensionName","text":""},{"location":"api/rendering/vulkan/#as_208","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_208","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_208","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_206","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshaderimageloadstorelodextensionname_1","title":"AmdShaderImageLoadStoreLodExtensionName","text":"<p><code>\"VK_AMD_shader_image_load_store_lod\"</code></p>"},{"location":"api/rendering/vulkan/#nvcornersampledimage","title":"NvCornerSampledImage","text":""},{"location":"api/rendering/vulkan/#as_209","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_209","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_209","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_207","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvcornersampledimage_1","title":"NvCornerSampledImage","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvcornersampledimagespecversion","title":"NvCornerSampledImageSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_210","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_210","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_210","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_208","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvcornersampledimagespecversion_1","title":"NvCornerSampledImageSpecVersion","text":"<p><code>2</code></p>"},{"location":"api/rendering/vulkan/#nvcornersampledimageextensionname","title":"NvCornerSampledImageExtensionName","text":""},{"location":"api/rendering/vulkan/#as_211","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_211","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_211","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_209","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvcornersampledimageextensionname_1","title":"NvCornerSampledImageExtensionName","text":"<p><code>\"VK_NV_corner_sampled_image\"</code></p>"},{"location":"api/rendering/vulkan/#imgformatpvrtc","title":"ImgFormatPvrtc","text":""},{"location":"api/rendering/vulkan/#as_212","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_212","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_212","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_210","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#imgformatpvrtc_1","title":"ImgFormatPvrtc","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#imgformatpvrtcspecversion","title":"ImgFormatPvrtcSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_213","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_213","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_213","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_211","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#imgformatpvrtcspecversion_1","title":"ImgFormatPvrtcSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#imgformatpvrtcextensionname","title":"ImgFormatPvrtcExtensionName","text":""},{"location":"api/rendering/vulkan/#as_214","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_214","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_214","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_212","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#imgformatpvrtcextensionname_1","title":"ImgFormatPvrtcExtensionName","text":"<p><code>\"VK_IMG_format_pvrtc\"</code></p>"},{"location":"api/rendering/vulkan/#nvexternalmemorycapabilities","title":"NvExternalMemoryCapabilities","text":""},{"location":"api/rendering/vulkan/#as_215","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_215","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_215","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_213","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvexternalmemorycapabilities_1","title":"NvExternalMemoryCapabilities","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvexternalmemorycapabilitiesspecversion","title":"NvExternalMemoryCapabilitiesSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_216","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_216","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_216","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_214","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvexternalmemorycapabilitiesspecversion_1","title":"NvExternalMemoryCapabilitiesSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvexternalmemorycapabilitiesextensionname","title":"NvExternalMemoryCapabilitiesExtensionName","text":""},{"location":"api/rendering/vulkan/#as_217","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_217","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_217","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_215","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvexternalmemorycapabilitiesextensionname_1","title":"NvExternalMemoryCapabilitiesExtensionName","text":"<p><code>\"VK_NV_external_memory_capabilities\"</code></p>"},{"location":"api/rendering/vulkan/#nvexternalmemory","title":"NvExternalMemory","text":""},{"location":"api/rendering/vulkan/#as_218","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_218","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_218","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_216","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvexternalmemory_1","title":"NvExternalMemory","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvexternalmemoryspecversion","title":"NvExternalMemorySpecVersion","text":""},{"location":"api/rendering/vulkan/#as_219","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_219","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_219","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_217","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvexternalmemoryspecversion_1","title":"NvExternalMemorySpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvexternalmemoryextensionname","title":"NvExternalMemoryExtensionName","text":""},{"location":"api/rendering/vulkan/#as_220","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_220","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_220","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_218","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvexternalmemoryextensionname_1","title":"NvExternalMemoryExtensionName","text":"<p><code>\"VK_NV_external_memory\"</code></p>"},{"location":"api/rendering/vulkan/#extvalidationflags","title":"ExtValidationFlags","text":""},{"location":"api/rendering/vulkan/#as_221","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_221","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_221","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_219","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extvalidationflags_1","title":"ExtValidationFlags","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extvalidationflagsspecversion","title":"ExtValidationFlagsSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_222","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_222","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_222","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_220","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extvalidationflagsspecversion_1","title":"ExtValidationFlagsSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extvalidationflagsextensionname","title":"ExtValidationFlagsExtensionName","text":""},{"location":"api/rendering/vulkan/#as_223","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_223","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_223","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_221","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extvalidationflagsextensionname_1","title":"ExtValidationFlagsExtensionName","text":"<p><code>\"VK_EXT_validation_flags\"</code></p>"},{"location":"api/rendering/vulkan/#extshadersubgroupballot","title":"ExtShaderSubgroupBallot","text":""},{"location":"api/rendering/vulkan/#as_224","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_224","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_224","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_222","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extshadersubgroupballot_1","title":"ExtShaderSubgroupBallot","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extshadersubgroupballotspecversion","title":"ExtShaderSubgroupBallotSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_225","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_225","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_225","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_223","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extshadersubgroupballotspecversion_1","title":"ExtShaderSubgroupBallotSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extshadersubgroupballotextensionname","title":"ExtShaderSubgroupBallotExtensionName","text":""},{"location":"api/rendering/vulkan/#as_226","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_226","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_226","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_224","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extshadersubgroupballotextensionname_1","title":"ExtShaderSubgroupBallotExtensionName","text":"<p><code>\"VK_EXT_shader_subgroup_ballot\"</code></p>"},{"location":"api/rendering/vulkan/#extshadersubgroupvote","title":"ExtShaderSubgroupVote","text":""},{"location":"api/rendering/vulkan/#as_227","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_227","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_227","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_225","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extshadersubgroupvote_1","title":"ExtShaderSubgroupVote","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extshadersubgroupvotespecversion","title":"ExtShaderSubgroupVoteSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_228","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_228","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_228","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_226","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extshadersubgroupvotespecversion_1","title":"ExtShaderSubgroupVoteSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extshadersubgroupvoteextensionname","title":"ExtShaderSubgroupVoteExtensionName","text":""},{"location":"api/rendering/vulkan/#as_229","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_229","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_229","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_227","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extshadersubgroupvoteextensionname_1","title":"ExtShaderSubgroupVoteExtensionName","text":"<p><code>\"VK_EXT_shader_subgroup_vote\"</code></p>"},{"location":"api/rendering/vulkan/#extastcdecodemode","title":"ExtAstcDecodeMode","text":""},{"location":"api/rendering/vulkan/#as_230","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_230","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_230","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_228","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extastcdecodemode_1","title":"ExtAstcDecodeMode","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extastcdecodemodespecversion","title":"ExtAstcDecodeModeSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_231","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_231","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_231","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_229","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extastcdecodemodespecversion_1","title":"ExtAstcDecodeModeSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extastcdecodemodeextensionname","title":"ExtAstcDecodeModeExtensionName","text":""},{"location":"api/rendering/vulkan/#as_232","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_232","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_232","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_230","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extastcdecodemodeextensionname_1","title":"ExtAstcDecodeModeExtensionName","text":"<p><code>\"VK_EXT_astc_decode_mode\"</code></p>"},{"location":"api/rendering/vulkan/#extconditionalrendering","title":"ExtConditionalRendering","text":""},{"location":"api/rendering/vulkan/#as_233","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_233","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_233","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_231","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extconditionalrendering_1","title":"ExtConditionalRendering","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extconditionalrenderingspecversion","title":"ExtConditionalRenderingSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_234","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_234","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_234","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_232","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extconditionalrenderingspecversion_1","title":"ExtConditionalRenderingSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extconditionalrenderingextensionname","title":"ExtConditionalRenderingExtensionName","text":""},{"location":"api/rendering/vulkan/#as_235","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_235","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_235","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_233","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extconditionalrenderingextensionname_1","title":"ExtConditionalRenderingExtensionName","text":"<p><code>\"VK_EXT_conditional_rendering\"</code></p>"},{"location":"api/rendering/vulkan/#nvxdevicegeneratedcommands","title":"NvxDeviceGeneratedCommands","text":""},{"location":"api/rendering/vulkan/#as_236","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_236","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_236","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_234","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvxdevicegeneratedcommands_1","title":"NvxDeviceGeneratedCommands","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvxdevicegeneratedcommandsspecversion","title":"NvxDeviceGeneratedCommandsSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_237","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_237","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_237","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_235","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvxdevicegeneratedcommandsspecversion_1","title":"NvxDeviceGeneratedCommandsSpecVersion","text":"<p><code>3</code></p>"},{"location":"api/rendering/vulkan/#nvxdevicegeneratedcommandsextensionname","title":"NvxDeviceGeneratedCommandsExtensionName","text":""},{"location":"api/rendering/vulkan/#as_238","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_238","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_238","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_236","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvxdevicegeneratedcommandsextensionname_1","title":"NvxDeviceGeneratedCommandsExtensionName","text":"<p><code>\"VK_NVX_device_generated_commands\"</code></p>"},{"location":"api/rendering/vulkan/#nvclipspacewscaling","title":"NvClipSpaceWScaling","text":""},{"location":"api/rendering/vulkan/#as_239","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_239","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_239","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_237","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvclipspacewscaling_1","title":"NvClipSpaceWScaling","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvclipspacewscalingspecversion","title":"NvClipSpaceWScalingSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_240","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_240","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_240","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_238","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvclipspacewscalingspecversion_1","title":"NvClipSpaceWScalingSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvclipspacewscalingextensionname","title":"NvClipSpaceWScalingExtensionName","text":""},{"location":"api/rendering/vulkan/#as_241","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_241","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_241","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_239","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvclipspacewscalingextensionname_1","title":"NvClipSpaceWScalingExtensionName","text":"<p><code>\"VK_NV_clip_space_w_scaling\"</code></p>"},{"location":"api/rendering/vulkan/#extdirectmodedisplay","title":"ExtDirectModeDisplay","text":""},{"location":"api/rendering/vulkan/#as_242","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_242","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_242","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_240","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdirectmodedisplay_1","title":"ExtDirectModeDisplay","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extdirectmodedisplayspecversion","title":"ExtDirectModeDisplaySpecVersion","text":""},{"location":"api/rendering/vulkan/#as_243","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_243","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_243","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_241","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdirectmodedisplayspecversion_1","title":"ExtDirectModeDisplaySpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extdirectmodedisplayextensionname","title":"ExtDirectModeDisplayExtensionName","text":""},{"location":"api/rendering/vulkan/#as_244","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_244","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_244","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_242","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdirectmodedisplayextensionname_1","title":"ExtDirectModeDisplayExtensionName","text":"<p><code>\"VK_EXT_direct_mode_display\"</code></p>"},{"location":"api/rendering/vulkan/#extdisplaysurfacecounter","title":"ExtDisplaySurfaceCounter","text":""},{"location":"api/rendering/vulkan/#as_245","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_245","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_245","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_243","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdisplaysurfacecounter_1","title":"ExtDisplaySurfaceCounter","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extdisplaysurfacecounterspecversion","title":"ExtDisplaySurfaceCounterSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_246","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_246","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_246","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_244","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdisplaysurfacecounterspecversion_1","title":"ExtDisplaySurfaceCounterSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extdisplaysurfacecounterextensionname","title":"ExtDisplaySurfaceCounterExtensionName","text":""},{"location":"api/rendering/vulkan/#as_247","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_247","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_247","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_245","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdisplaysurfacecounterextensionname_1","title":"ExtDisplaySurfaceCounterExtensionName","text":"<p><code>\"VK_EXT_display_surface_counter\"</code></p>"},{"location":"api/rendering/vulkan/#extdisplaycontrol","title":"ExtDisplayControl","text":""},{"location":"api/rendering/vulkan/#as_248","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_248","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_248","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_246","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdisplaycontrol_1","title":"ExtDisplayControl","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extdisplaycontrolspecversion","title":"ExtDisplayControlSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_249","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_249","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_249","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_247","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdisplaycontrolspecversion_1","title":"ExtDisplayControlSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extdisplaycontrolextensionname","title":"ExtDisplayControlExtensionName","text":""},{"location":"api/rendering/vulkan/#as_250","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_250","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_250","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_248","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdisplaycontrolextensionname_1","title":"ExtDisplayControlExtensionName","text":"<p><code>\"VK_EXT_display_control\"</code></p>"},{"location":"api/rendering/vulkan/#googledisplaytiming","title":"GoogleDisplayTiming","text":""},{"location":"api/rendering/vulkan/#as_251","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_251","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_251","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_249","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#googledisplaytiming_1","title":"GoogleDisplayTiming","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#googledisplaytimingspecversion","title":"GoogleDisplayTimingSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_252","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_252","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_252","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_250","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#googledisplaytimingspecversion_1","title":"GoogleDisplayTimingSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#googledisplaytimingextensionname","title":"GoogleDisplayTimingExtensionName","text":""},{"location":"api/rendering/vulkan/#as_253","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_253","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_253","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_251","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#googledisplaytimingextensionname_1","title":"GoogleDisplayTimingExtensionName","text":"<p><code>\"VK_GOOGLE_display_timing\"</code></p>"},{"location":"api/rendering/vulkan/#nvsamplemaskoverridecoverage","title":"NvSampleMaskOverrideCoverage","text":""},{"location":"api/rendering/vulkan/#as_254","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_254","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_254","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_252","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvsamplemaskoverridecoverage_1","title":"NvSampleMaskOverrideCoverage","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvsamplemaskoverridecoveragespecversion","title":"NvSampleMaskOverrideCoverageSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_255","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_255","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_255","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_253","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvsamplemaskoverridecoveragespecversion_1","title":"NvSampleMaskOverrideCoverageSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvsamplemaskoverridecoverageextensionname","title":"NvSampleMaskOverrideCoverageExtensionName","text":""},{"location":"api/rendering/vulkan/#as_256","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_256","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_256","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_254","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvsamplemaskoverridecoverageextensionname_1","title":"NvSampleMaskOverrideCoverageExtensionName","text":"<p><code>\"VK_NV_sample_mask_override_coverage\"</code></p>"},{"location":"api/rendering/vulkan/#nvgeometryshaderpassthrough","title":"NvGeometryShaderPassthrough","text":""},{"location":"api/rendering/vulkan/#as_257","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_257","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_257","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_255","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvgeometryshaderpassthrough_1","title":"NvGeometryShaderPassthrough","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvgeometryshaderpassthroughspecversion","title":"NvGeometryShaderPassthroughSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_258","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_258","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_258","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_256","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvgeometryshaderpassthroughspecversion_1","title":"NvGeometryShaderPassthroughSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvgeometryshaderpassthroughextensionname","title":"NvGeometryShaderPassthroughExtensionName","text":""},{"location":"api/rendering/vulkan/#as_259","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_259","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_259","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_257","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvgeometryshaderpassthroughextensionname_1","title":"NvGeometryShaderPassthroughExtensionName","text":"<p><code>\"VK_NV_geometry_shader_passthrough\"</code></p>"},{"location":"api/rendering/vulkan/#nvviewportarray2","title":"NvViewportArray2","text":""},{"location":"api/rendering/vulkan/#as_260","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_260","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_260","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_258","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvviewportarray2_1","title":"NvViewportArray2","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvviewportarray2specversion","title":"NvViewportArray2SpecVersion","text":""},{"location":"api/rendering/vulkan/#as_261","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_261","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_261","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_259","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvviewportarray2specversion_1","title":"NvViewportArray2SpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvviewportarray2extensionname","title":"NvViewportArray2ExtensionName","text":""},{"location":"api/rendering/vulkan/#as_262","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_262","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_262","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_260","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvviewportarray2extensionname_1","title":"NvViewportArray2ExtensionName","text":"<p><code>\"VK_NV_viewport_array2\"</code></p>"},{"location":"api/rendering/vulkan/#nvxmultiviewperviewattributes","title":"NvxMultiviewPerViewAttributes","text":""},{"location":"api/rendering/vulkan/#as_263","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_263","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_263","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_261","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvxmultiviewperviewattributes_1","title":"NvxMultiviewPerViewAttributes","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvxmultiviewperviewattributesspecversion","title":"NvxMultiviewPerViewAttributesSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_264","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_264","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_264","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_262","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvxmultiviewperviewattributesspecversion_1","title":"NvxMultiviewPerViewAttributesSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvxmultiviewperviewattributesextensionname","title":"NvxMultiviewPerViewAttributesExtensionName","text":""},{"location":"api/rendering/vulkan/#as_265","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_265","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_265","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_263","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvxmultiviewperviewattributesextensionname_1","title":"NvxMultiviewPerViewAttributesExtensionName","text":"<p><code>\"VK_NVX_multiview_per_view_attributes\"</code></p>"},{"location":"api/rendering/vulkan/#nvviewportswizzle","title":"NvViewportSwizzle","text":""},{"location":"api/rendering/vulkan/#as_266","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_266","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_266","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_264","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvviewportswizzle_1","title":"NvViewportSwizzle","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvviewportswizzlespecversion","title":"NvViewportSwizzleSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_267","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_267","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_267","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_265","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvviewportswizzlespecversion_1","title":"NvViewportSwizzleSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvviewportswizzleextensionname","title":"NvViewportSwizzleExtensionName","text":""},{"location":"api/rendering/vulkan/#as_268","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_268","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_268","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_266","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvviewportswizzleextensionname_1","title":"NvViewportSwizzleExtensionName","text":"<p><code>\"VK_NV_viewport_swizzle\"</code></p>"},{"location":"api/rendering/vulkan/#extdiscardrectangles","title":"ExtDiscardRectangles","text":""},{"location":"api/rendering/vulkan/#as_269","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_269","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_269","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_267","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdiscardrectangles_1","title":"ExtDiscardRectangles","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extdiscardrectanglesspecversion","title":"ExtDiscardRectanglesSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_270","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_270","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_270","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_268","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdiscardrectanglesspecversion_1","title":"ExtDiscardRectanglesSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extdiscardrectanglesextensionname","title":"ExtDiscardRectanglesExtensionName","text":""},{"location":"api/rendering/vulkan/#as_271","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_271","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_271","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_269","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdiscardrectanglesextensionname_1","title":"ExtDiscardRectanglesExtensionName","text":"<p><code>\"VK_EXT_discard_rectangles\"</code></p>"},{"location":"api/rendering/vulkan/#extconservativerasterization","title":"ExtConservativeRasterization","text":""},{"location":"api/rendering/vulkan/#as_272","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_272","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_272","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_270","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extconservativerasterization_1","title":"ExtConservativeRasterization","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extconservativerasterizationspecversion","title":"ExtConservativeRasterizationSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_273","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_273","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_273","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_271","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extconservativerasterizationspecversion_1","title":"ExtConservativeRasterizationSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extconservativerasterizationextensionname","title":"ExtConservativeRasterizationExtensionName","text":""},{"location":"api/rendering/vulkan/#as_274","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_274","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_274","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_272","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extconservativerasterizationextensionname_1","title":"ExtConservativeRasterizationExtensionName","text":"<p><code>\"VK_EXT_conservative_rasterization\"</code></p>"},{"location":"api/rendering/vulkan/#extswapchaincolorspace","title":"ExtSwapchainColorspace","text":""},{"location":"api/rendering/vulkan/#as_275","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_275","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_275","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_273","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extswapchaincolorspace_1","title":"ExtSwapchainColorspace","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extswapchaincolorspacespecversion","title":"ExtSwapchainColorSpaceSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_276","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_276","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_276","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_274","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extswapchaincolorspacespecversion_1","title":"ExtSwapchainColorSpaceSpecVersion","text":"<p><code>3</code></p>"},{"location":"api/rendering/vulkan/#extswapchaincolorspaceextensionname","title":"ExtSwapchainColorSpaceExtensionName","text":""},{"location":"api/rendering/vulkan/#as_277","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_277","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_277","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_275","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extswapchaincolorspaceextensionname_1","title":"ExtSwapchainColorSpaceExtensionName","text":"<p><code>\"VK_EXT_swapchain_colorspace\"</code></p>"},{"location":"api/rendering/vulkan/#exthdrmetadata","title":"ExtHdrMetadata","text":""},{"location":"api/rendering/vulkan/#as_278","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_278","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_278","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_276","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#exthdrmetadata_1","title":"ExtHdrMetadata","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#exthdrmetadataspecversion","title":"ExtHdrMetadataSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_279","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_279","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_279","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_277","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#exthdrmetadataspecversion_1","title":"ExtHdrMetadataSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#exthdrmetadataextensionname","title":"ExtHdrMetadataExtensionName","text":""},{"location":"api/rendering/vulkan/#as_280","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_280","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_280","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_278","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#exthdrmetadataextensionname_1","title":"ExtHdrMetadataExtensionName","text":"<p><code>\"VK_EXT_hdr_metadata\"</code></p>"},{"location":"api/rendering/vulkan/#extexternalmemorydmabuf","title":"ExtExternalMemoryDmaBuf","text":""},{"location":"api/rendering/vulkan/#as_281","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_281","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_281","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_279","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extexternalmemorydmabuf_1","title":"ExtExternalMemoryDmaBuf","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extexternalmemorydmabufspecversion","title":"ExtExternalMemoryDmaBufSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_282","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_282","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_282","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_280","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extexternalmemorydmabufspecversion_1","title":"ExtExternalMemoryDmaBufSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extexternalmemorydmabufextensionname","title":"ExtExternalMemoryDmaBufExtensionName","text":""},{"location":"api/rendering/vulkan/#as_283","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_283","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_283","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_281","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extexternalmemorydmabufextensionname_1","title":"ExtExternalMemoryDmaBufExtensionName","text":"<p><code>\"VK_EXT_external_memory_dma_buf\"</code></p>"},{"location":"api/rendering/vulkan/#extqueuefamilyforeign","title":"ExtQueueFamilyForeign","text":""},{"location":"api/rendering/vulkan/#as_284","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_284","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_284","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_282","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extqueuefamilyforeign_1","title":"ExtQueueFamilyForeign","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extqueuefamilyforeignspecversion","title":"ExtQueueFamilyForeignSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_285","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_285","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_285","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_283","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extqueuefamilyforeignspecversion_1","title":"ExtQueueFamilyForeignSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extqueuefamilyforeignextensionname","title":"ExtQueueFamilyForeignExtensionName","text":""},{"location":"api/rendering/vulkan/#as_286","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_286","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_286","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_284","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extqueuefamilyforeignextensionname_1","title":"ExtQueueFamilyForeignExtensionName","text":"<p><code>\"VK_EXT_queue_family_foreign\"</code></p>"},{"location":"api/rendering/vulkan/#queuefamilyforeign","title":"QueueFamilyForeign","text":""},{"location":"api/rendering/vulkan/#as_287","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_287","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_287","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_285","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#queuefamilyforeign_1","title":"QueueFamilyForeign","text":"<p><code>(^uint32(0) - 2)</code></p>"},{"location":"api/rendering/vulkan/#extdebugutils","title":"ExtDebugUtils","text":""},{"location":"api/rendering/vulkan/#as_288","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_288","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_288","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_286","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdebugutils_1","title":"ExtDebugUtils","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extdebugutilsspecversion","title":"ExtDebugUtilsSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_289","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_289","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_289","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_287","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdebugutilsspecversion_1","title":"ExtDebugUtilsSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extdebugutilsextensionname","title":"ExtDebugUtilsExtensionName","text":""},{"location":"api/rendering/vulkan/#as_290","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_290","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_290","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_288","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdebugutilsextensionname_1","title":"ExtDebugUtilsExtensionName","text":"<p><code>\"VK_EXT_debug_utils\"</code></p>"},{"location":"api/rendering/vulkan/#extsamplerfilterminmax","title":"ExtSamplerFilterMinmax","text":""},{"location":"api/rendering/vulkan/#as_291","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_291","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_291","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_289","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extsamplerfilterminmax_1","title":"ExtSamplerFilterMinmax","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extsamplerfilterminmaxspecversion","title":"ExtSamplerFilterMinmaxSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_292","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_292","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_292","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_290","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extsamplerfilterminmaxspecversion_1","title":"ExtSamplerFilterMinmaxSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extsamplerfilterminmaxextensionname","title":"ExtSamplerFilterMinmaxExtensionName","text":""},{"location":"api/rendering/vulkan/#as_293","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_293","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_293","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_291","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extsamplerfilterminmaxextensionname_1","title":"ExtSamplerFilterMinmaxExtensionName","text":"<p><code>\"VK_EXT_sampler_filter_minmax\"</code></p>"},{"location":"api/rendering/vulkan/#amdgpushaderint16","title":"AmdGpuShaderInt16","text":""},{"location":"api/rendering/vulkan/#as_294","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_294","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_294","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_292","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdgpushaderint16_1","title":"AmdGpuShaderInt16","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdgpushaderint16specversion","title":"AmdGpuShaderInt16SpecVersion","text":""},{"location":"api/rendering/vulkan/#as_295","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_295","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_295","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_293","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdgpushaderint16specversion_1","title":"AmdGpuShaderInt16SpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdgpushaderint16extensionname","title":"AmdGpuShaderInt16ExtensionName","text":""},{"location":"api/rendering/vulkan/#as_296","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_296","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_296","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_294","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdgpushaderint16extensionname_1","title":"AmdGpuShaderInt16ExtensionName","text":"<p><code>\"VK_AMD_gpu_shader_int16\"</code></p>"},{"location":"api/rendering/vulkan/#amdmixedattachmentsamples","title":"AmdMixedAttachmentSamples","text":""},{"location":"api/rendering/vulkan/#as_297","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_297","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_297","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_295","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdmixedattachmentsamples_1","title":"AmdMixedAttachmentSamples","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdmixedattachmentsamplesspecversion","title":"AmdMixedAttachmentSamplesSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_298","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_298","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_298","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_296","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdmixedattachmentsamplesspecversion_1","title":"AmdMixedAttachmentSamplesSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdmixedattachmentsamplesextensionname","title":"AmdMixedAttachmentSamplesExtensionName","text":""},{"location":"api/rendering/vulkan/#as_299","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_299","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_299","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_297","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdmixedattachmentsamplesextensionname_1","title":"AmdMixedAttachmentSamplesExtensionName","text":"<p><code>\"VK_AMD_mixed_attachment_samples\"</code></p>"},{"location":"api/rendering/vulkan/#amdshaderfragmentmask","title":"AmdShaderFragmentMask","text":""},{"location":"api/rendering/vulkan/#as_300","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_300","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_300","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_298","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshaderfragmentmask_1","title":"AmdShaderFragmentMask","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdshaderfragmentmaskspecversion","title":"AmdShaderFragmentMaskSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_301","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_301","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_301","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_299","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshaderfragmentmaskspecversion_1","title":"AmdShaderFragmentMaskSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdshaderfragmentmaskextensionname","title":"AmdShaderFragmentMaskExtensionName","text":""},{"location":"api/rendering/vulkan/#as_302","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_302","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_302","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_300","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshaderfragmentmaskextensionname_1","title":"AmdShaderFragmentMaskExtensionName","text":"<p><code>\"VK_AMD_shader_fragment_mask\"</code></p>"},{"location":"api/rendering/vulkan/#extinlineuniformblock","title":"ExtInlineUniformBlock","text":""},{"location":"api/rendering/vulkan/#as_303","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_303","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_303","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_301","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extinlineuniformblock_1","title":"ExtInlineUniformBlock","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extinlineuniformblockspecversion","title":"ExtInlineUniformBlockSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_304","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_304","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_304","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_302","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extinlineuniformblockspecversion_1","title":"ExtInlineUniformBlockSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extinlineuniformblockextensionname","title":"ExtInlineUniformBlockExtensionName","text":""},{"location":"api/rendering/vulkan/#as_305","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_305","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_305","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_303","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extinlineuniformblockextensionname_1","title":"ExtInlineUniformBlockExtensionName","text":"<p><code>\"VK_EXT_inline_uniform_block\"</code></p>"},{"location":"api/rendering/vulkan/#extshaderstencilexport","title":"ExtShaderStencilExport","text":""},{"location":"api/rendering/vulkan/#as_306","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_306","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_306","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_304","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extshaderstencilexport_1","title":"ExtShaderStencilExport","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extshaderstencilexportspecversion","title":"ExtShaderStencilExportSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_307","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_307","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_307","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_305","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extshaderstencilexportspecversion_1","title":"ExtShaderStencilExportSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extshaderstencilexportextensionname","title":"ExtShaderStencilExportExtensionName","text":""},{"location":"api/rendering/vulkan/#as_308","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_308","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_308","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_306","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extshaderstencilexportextensionname_1","title":"ExtShaderStencilExportExtensionName","text":"<p><code>\"VK_EXT_shader_stencil_export\"</code></p>"},{"location":"api/rendering/vulkan/#extsamplelocations","title":"ExtSampleLocations","text":""},{"location":"api/rendering/vulkan/#as_309","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_309","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_309","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_307","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extsamplelocations_1","title":"ExtSampleLocations","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extsamplelocationsspecversion","title":"ExtSampleLocationsSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_310","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_310","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_310","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_308","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extsamplelocationsspecversion_1","title":"ExtSampleLocationsSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extsamplelocationsextensionname","title":"ExtSampleLocationsExtensionName","text":""},{"location":"api/rendering/vulkan/#as_311","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_311","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_311","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_309","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extsamplelocationsextensionname_1","title":"ExtSampleLocationsExtensionName","text":"<p><code>\"VK_EXT_sample_locations\"</code></p>"},{"location":"api/rendering/vulkan/#extblendoperationadvanced","title":"ExtBlendOperationAdvanced","text":""},{"location":"api/rendering/vulkan/#as_312","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_312","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_312","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_310","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extblendoperationadvanced_1","title":"ExtBlendOperationAdvanced","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extblendoperationadvancedspecversion","title":"ExtBlendOperationAdvancedSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_313","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_313","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_313","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_311","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extblendoperationadvancedspecversion_1","title":"ExtBlendOperationAdvancedSpecVersion","text":"<p><code>2</code></p>"},{"location":"api/rendering/vulkan/#extblendoperationadvancedextensionname","title":"ExtBlendOperationAdvancedExtensionName","text":""},{"location":"api/rendering/vulkan/#as_314","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_314","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_314","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_312","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extblendoperationadvancedextensionname_1","title":"ExtBlendOperationAdvancedExtensionName","text":"<p><code>\"VK_EXT_blend_operation_advanced\"</code></p>"},{"location":"api/rendering/vulkan/#nvfragmentcoveragetocolor","title":"NvFragmentCoverageToColor","text":""},{"location":"api/rendering/vulkan/#as_315","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_315","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_315","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_313","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvfragmentcoveragetocolor_1","title":"NvFragmentCoverageToColor","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvfragmentcoveragetocolorspecversion","title":"NvFragmentCoverageToColorSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_316","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_316","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_316","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_314","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvfragmentcoveragetocolorspecversion_1","title":"NvFragmentCoverageToColorSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvfragmentcoveragetocolorextensionname","title":"NvFragmentCoverageToColorExtensionName","text":""},{"location":"api/rendering/vulkan/#as_317","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_317","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_317","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_315","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvfragmentcoveragetocolorextensionname_1","title":"NvFragmentCoverageToColorExtensionName","text":"<p><code>\"VK_NV_fragment_coverage_to_color\"</code></p>"},{"location":"api/rendering/vulkan/#nvframebuffermixedsamples","title":"NvFramebufferMixedSamples","text":""},{"location":"api/rendering/vulkan/#as_318","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_318","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_318","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_316","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvframebuffermixedsamples_1","title":"NvFramebufferMixedSamples","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvframebuffermixedsamplesspecversion","title":"NvFramebufferMixedSamplesSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_319","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_319","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_319","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_317","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvframebuffermixedsamplesspecversion_1","title":"NvFramebufferMixedSamplesSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvframebuffermixedsamplesextensionname","title":"NvFramebufferMixedSamplesExtensionName","text":""},{"location":"api/rendering/vulkan/#as_320","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_320","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_320","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_318","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvframebuffermixedsamplesextensionname_1","title":"NvFramebufferMixedSamplesExtensionName","text":"<p><code>\"VK_NV_framebuffer_mixed_samples\"</code></p>"},{"location":"api/rendering/vulkan/#nvfillrectangle","title":"NvFillRectangle","text":""},{"location":"api/rendering/vulkan/#as_321","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_321","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_321","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_319","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvfillrectangle_1","title":"NvFillRectangle","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvfillrectanglespecversion","title":"NvFillRectangleSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_322","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_322","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_322","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_320","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvfillrectanglespecversion_1","title":"NvFillRectangleSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvfillrectangleextensionname","title":"NvFillRectangleExtensionName","text":""},{"location":"api/rendering/vulkan/#as_323","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_323","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_323","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_321","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvfillrectangleextensionname_1","title":"NvFillRectangleExtensionName","text":"<p><code>\"VK_NV_fill_rectangle\"</code></p>"},{"location":"api/rendering/vulkan/#extpostdepthcoverage","title":"ExtPostDepthCoverage","text":""},{"location":"api/rendering/vulkan/#as_324","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_324","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_324","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_322","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extpostdepthcoverage_1","title":"ExtPostDepthCoverage","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extpostdepthcoveragespecversion","title":"ExtPostDepthCoverageSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_325","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_325","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_325","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_323","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extpostdepthcoveragespecversion_1","title":"ExtPostDepthCoverageSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extpostdepthcoverageextensionname","title":"ExtPostDepthCoverageExtensionName","text":""},{"location":"api/rendering/vulkan/#as_326","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_326","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_326","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_324","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extpostdepthcoverageextensionname_1","title":"ExtPostDepthCoverageExtensionName","text":"<p><code>\"VK_EXT_post_depth_coverage\"</code></p>"},{"location":"api/rendering/vulkan/#extimagedrmformatmodifier","title":"ExtImageDrmFormatModifier","text":""},{"location":"api/rendering/vulkan/#as_327","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_327","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_327","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_325","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extimagedrmformatmodifier_1","title":"ExtImageDrmFormatModifier","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extextension159specversion","title":"ExtExtension159SpecVersion","text":""},{"location":"api/rendering/vulkan/#as_328","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_328","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_328","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_326","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extextension159specversion_1","title":"ExtExtension159SpecVersion","text":"<p><code>0</code></p>"},{"location":"api/rendering/vulkan/#extextension159extensionname","title":"ExtExtension159ExtensionName","text":""},{"location":"api/rendering/vulkan/#as_329","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_329","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_329","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_327","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extextension159extensionname_1","title":"ExtExtension159ExtensionName","text":"<p><code>\"VK_EXT_extension_159\"</code></p>"},{"location":"api/rendering/vulkan/#extimagedrmformatmodifierspecversion","title":"ExtImageDrmFormatModifierSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_330","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_330","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_330","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_328","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extimagedrmformatmodifierspecversion_1","title":"ExtImageDrmFormatModifierSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extimagedrmformatmodifierextensionname","title":"ExtImageDrmFormatModifierExtensionName","text":""},{"location":"api/rendering/vulkan/#as_331","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_331","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_331","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_329","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extimagedrmformatmodifierextensionname_1","title":"ExtImageDrmFormatModifierExtensionName","text":"<p><code>\"VK_EXT_image_drm_format_modifier\"</code></p>"},{"location":"api/rendering/vulkan/#extvalidationcache","title":"ExtValidationCache","text":""},{"location":"api/rendering/vulkan/#as_332","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_332","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_332","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_330","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extvalidationcache_1","title":"ExtValidationCache","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extvalidationcachespecversion","title":"ExtValidationCacheSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_333","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_333","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_333","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_331","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extvalidationcachespecversion_1","title":"ExtValidationCacheSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extvalidationcacheextensionname","title":"ExtValidationCacheExtensionName","text":""},{"location":"api/rendering/vulkan/#as_334","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_334","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_334","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_332","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extvalidationcacheextensionname_1","title":"ExtValidationCacheExtensionName","text":"<p><code>\"VK_EXT_validation_cache\"</code></p>"},{"location":"api/rendering/vulkan/#extdescriptorindexing","title":"ExtDescriptorIndexing","text":""},{"location":"api/rendering/vulkan/#as_335","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_335","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_335","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_333","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdescriptorindexing_1","title":"ExtDescriptorIndexing","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extdescriptorindexingspecversion","title":"ExtDescriptorIndexingSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_336","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_336","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_336","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_334","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdescriptorindexingspecversion_1","title":"ExtDescriptorIndexingSpecVersion","text":"<p><code>2</code></p>"},{"location":"api/rendering/vulkan/#extdescriptorindexingextensionname","title":"ExtDescriptorIndexingExtensionName","text":""},{"location":"api/rendering/vulkan/#as_337","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_337","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_337","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_335","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extdescriptorindexingextensionname_1","title":"ExtDescriptorIndexingExtensionName","text":"<p><code>\"VK_EXT_descriptor_indexing\"</code></p>"},{"location":"api/rendering/vulkan/#extshaderviewportindexlayer","title":"ExtShaderViewportIndexLayer","text":""},{"location":"api/rendering/vulkan/#as_338","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_338","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_338","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_336","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extshaderviewportindexlayer_1","title":"ExtShaderViewportIndexLayer","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extshaderviewportindexlayerspecversion","title":"ExtShaderViewportIndexLayerSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_339","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_339","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_339","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_337","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extshaderviewportindexlayerspecversion_1","title":"ExtShaderViewportIndexLayerSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extshaderviewportindexlayerextensionname","title":"ExtShaderViewportIndexLayerExtensionName","text":""},{"location":"api/rendering/vulkan/#as_340","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_340","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_340","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_338","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extshaderviewportindexlayerextensionname_1","title":"ExtShaderViewportIndexLayerExtensionName","text":"<p><code>\"VK_EXT_shader_viewport_index_layer\"</code></p>"},{"location":"api/rendering/vulkan/#nvshadingrateimage","title":"NvShadingRateImage","text":""},{"location":"api/rendering/vulkan/#as_341","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_341","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_341","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_339","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvshadingrateimage_1","title":"NvShadingRateImage","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvshadingrateimagespecversion","title":"NvShadingRateImageSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_342","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_342","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_342","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_340","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvshadingrateimagespecversion_1","title":"NvShadingRateImageSpecVersion","text":"<p><code>3</code></p>"},{"location":"api/rendering/vulkan/#nvshadingrateimageextensionname","title":"NvShadingRateImageExtensionName","text":""},{"location":"api/rendering/vulkan/#as_343","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_343","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_343","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_341","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvshadingrateimageextensionname_1","title":"NvShadingRateImageExtensionName","text":"<p><code>\"VK_NV_shading_rate_image\"</code></p>"},{"location":"api/rendering/vulkan/#nvxraytracing","title":"NvxRaytracing","text":""},{"location":"api/rendering/vulkan/#as_344","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_344","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_344","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_342","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvxraytracing_1","title":"NvxRaytracing","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvxraytracingspecversion","title":"NvxRaytracingSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_345","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_345","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_345","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_343","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvxraytracingspecversion_1","title":"NvxRaytracingSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvxraytracingextensionname","title":"NvxRaytracingExtensionName","text":""},{"location":"api/rendering/vulkan/#as_346","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_346","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_346","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_344","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvxraytracingextensionname_1","title":"NvxRaytracingExtensionName","text":"<p><code>\"VK_NVX_raytracing\"</code></p>"},{"location":"api/rendering/vulkan/#nvrepresentativefragmenttest","title":"NvRepresentativeFragmentTest","text":""},{"location":"api/rendering/vulkan/#as_347","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_347","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_347","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_345","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvrepresentativefragmenttest_1","title":"NvRepresentativeFragmentTest","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvrepresentativefragmenttestspecversion","title":"NvRepresentativeFragmentTestSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_348","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_348","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_348","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_346","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvrepresentativefragmenttestspecversion_1","title":"NvRepresentativeFragmentTestSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvrepresentativefragmenttestextensionname","title":"NvRepresentativeFragmentTestExtensionName","text":""},{"location":"api/rendering/vulkan/#as_349","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_349","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_349","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_347","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvrepresentativefragmenttestextensionname_1","title":"NvRepresentativeFragmentTestExtensionName","text":"<p><code>\"VK_NV_representative_fragment_test\"</code></p>"},{"location":"api/rendering/vulkan/#extglobalpriority","title":"ExtGlobalPriority","text":""},{"location":"api/rendering/vulkan/#as_350","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_350","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_350","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_348","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extglobalpriority_1","title":"ExtGlobalPriority","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extglobalpriorityspecversion","title":"ExtGlobalPrioritySpecVersion","text":""},{"location":"api/rendering/vulkan/#as_351","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_351","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_351","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_349","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extglobalpriorityspecversion_1","title":"ExtGlobalPrioritySpecVersion","text":"<p><code>2</code></p>"},{"location":"api/rendering/vulkan/#extglobalpriorityextensionname","title":"ExtGlobalPriorityExtensionName","text":""},{"location":"api/rendering/vulkan/#as_352","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_352","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_352","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_350","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extglobalpriorityextensionname_1","title":"ExtGlobalPriorityExtensionName","text":"<p><code>\"VK_EXT_global_priority\"</code></p>"},{"location":"api/rendering/vulkan/#extexternalmemoryhost","title":"ExtExternalMemoryHost","text":""},{"location":"api/rendering/vulkan/#as_353","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_353","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_353","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_351","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extexternalmemoryhost_1","title":"ExtExternalMemoryHost","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extexternalmemoryhostspecversion","title":"ExtExternalMemoryHostSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_354","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_354","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_354","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_352","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extexternalmemoryhostspecversion_1","title":"ExtExternalMemoryHostSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extexternalmemoryhostextensionname","title":"ExtExternalMemoryHostExtensionName","text":""},{"location":"api/rendering/vulkan/#as_355","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_355","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_355","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_353","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extexternalmemoryhostextensionname_1","title":"ExtExternalMemoryHostExtensionName","text":"<p><code>\"VK_EXT_external_memory_host\"</code></p>"},{"location":"api/rendering/vulkan/#amdbuffermarker","title":"AmdBufferMarker","text":""},{"location":"api/rendering/vulkan/#as_356","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_356","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_356","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_354","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdbuffermarker_1","title":"AmdBufferMarker","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdbuffermarkerspecversion","title":"AmdBufferMarkerSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_357","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_357","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_357","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_355","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdbuffermarkerspecversion_1","title":"AmdBufferMarkerSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdbuffermarkerextensionname","title":"AmdBufferMarkerExtensionName","text":""},{"location":"api/rendering/vulkan/#as_358","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_358","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_358","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_356","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdbuffermarkerextensionname_1","title":"AmdBufferMarkerExtensionName","text":"<p><code>\"VK_AMD_buffer_marker\"</code></p>"},{"location":"api/rendering/vulkan/#extcalibratedtimestamps","title":"ExtCalibratedTimestamps","text":""},{"location":"api/rendering/vulkan/#as_359","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_359","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_359","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_357","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extcalibratedtimestamps_1","title":"ExtCalibratedTimestamps","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extcalibratedtimestampsspecversion","title":"ExtCalibratedTimestampsSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_360","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_360","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_360","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_358","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extcalibratedtimestampsspecversion_1","title":"ExtCalibratedTimestampsSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extcalibratedtimestampsextensionname","title":"ExtCalibratedTimestampsExtensionName","text":""},{"location":"api/rendering/vulkan/#as_361","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_361","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_361","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_359","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extcalibratedtimestampsextensionname_1","title":"ExtCalibratedTimestampsExtensionName","text":"<p><code>\"VK_EXT_calibrated_timestamps\"</code></p>"},{"location":"api/rendering/vulkan/#amdshadercoreproperties","title":"AmdShaderCoreProperties","text":""},{"location":"api/rendering/vulkan/#as_362","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_362","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_362","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_360","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshadercoreproperties_1","title":"AmdShaderCoreProperties","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdshadercorepropertiesspecversion","title":"AmdShaderCorePropertiesSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_363","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_363","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_363","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_361","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshadercorepropertiesspecversion_1","title":"AmdShaderCorePropertiesSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#amdshadercorepropertiesextensionname","title":"AmdShaderCorePropertiesExtensionName","text":""},{"location":"api/rendering/vulkan/#as_364","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_364","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_364","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_362","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#amdshadercorepropertiesextensionname_1","title":"AmdShaderCorePropertiesExtensionName","text":"<p><code>\"VK_AMD_shader_core_properties\"</code></p>"},{"location":"api/rendering/vulkan/#extvertexattributedivisor","title":"ExtVertexAttributeDivisor","text":""},{"location":"api/rendering/vulkan/#as_365","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_365","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_365","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_363","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extvertexattributedivisor_1","title":"ExtVertexAttributeDivisor","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extvertexattributedivisorspecversion","title":"ExtVertexAttributeDivisorSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_366","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_366","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_366","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_364","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extvertexattributedivisorspecversion_1","title":"ExtVertexAttributeDivisorSpecVersion","text":"<p><code>3</code></p>"},{"location":"api/rendering/vulkan/#extvertexattributedivisorextensionname","title":"ExtVertexAttributeDivisorExtensionName","text":""},{"location":"api/rendering/vulkan/#as_367","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_367","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_367","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_365","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extvertexattributedivisorextensionname_1","title":"ExtVertexAttributeDivisorExtensionName","text":"<p><code>\"VK_EXT_vertex_attribute_divisor\"</code></p>"},{"location":"api/rendering/vulkan/#nvshadersubgrouppartitioned","title":"NvShaderSubgroupPartitioned","text":""},{"location":"api/rendering/vulkan/#as_368","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_368","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_368","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_366","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvshadersubgrouppartitioned_1","title":"NvShaderSubgroupPartitioned","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvshadersubgrouppartitionedspecversion","title":"NvShaderSubgroupPartitionedSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_369","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_369","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_369","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_367","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvshadersubgrouppartitionedspecversion_1","title":"NvShaderSubgroupPartitionedSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvshadersubgrouppartitionedextensionname","title":"NvShaderSubgroupPartitionedExtensionName","text":""},{"location":"api/rendering/vulkan/#as_370","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_370","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_370","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_368","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvshadersubgrouppartitionedextensionname_1","title":"NvShaderSubgroupPartitionedExtensionName","text":"<p><code>\"VK_NV_shader_subgroup_partitioned\"</code></p>"},{"location":"api/rendering/vulkan/#nvcomputeshaderderivatives","title":"NvComputeShaderDerivatives","text":""},{"location":"api/rendering/vulkan/#as_371","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_371","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_371","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_369","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvcomputeshaderderivatives_1","title":"NvComputeShaderDerivatives","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvcomputeshaderderivativesspecversion","title":"NvComputeShaderDerivativesSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_372","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_372","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_372","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_370","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvcomputeshaderderivativesspecversion_1","title":"NvComputeShaderDerivativesSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvcomputeshaderderivativesextensionname","title":"NvComputeShaderDerivativesExtensionName","text":""},{"location":"api/rendering/vulkan/#as_373","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_373","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_373","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_371","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvcomputeshaderderivativesextensionname_1","title":"NvComputeShaderDerivativesExtensionName","text":"<p><code>\"VK_NV_compute_shader_derivatives\"</code></p>"},{"location":"api/rendering/vulkan/#nvmeshshader","title":"NvMeshShader","text":""},{"location":"api/rendering/vulkan/#as_374","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_374","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_374","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_372","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvmeshshader_1","title":"NvMeshShader","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvmeshshaderspecversion","title":"NvMeshShaderSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_375","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_375","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_375","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_373","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvmeshshaderspecversion_1","title":"NvMeshShaderSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvmeshshaderextensionname","title":"NvMeshShaderExtensionName","text":""},{"location":"api/rendering/vulkan/#as_376","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_376","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_376","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_374","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvmeshshaderextensionname_1","title":"NvMeshShaderExtensionName","text":"<p><code>\"VK_NV_mesh_shader\"</code></p>"},{"location":"api/rendering/vulkan/#nvfragmentshaderbarycentric","title":"NvFragmentShaderBarycentric","text":""},{"location":"api/rendering/vulkan/#as_377","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_377","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_377","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_375","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvfragmentshaderbarycentric_1","title":"NvFragmentShaderBarycentric","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvfragmentshaderbarycentricspecversion","title":"NvFragmentShaderBarycentricSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_378","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_378","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_378","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_376","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvfragmentshaderbarycentricspecversion_1","title":"NvFragmentShaderBarycentricSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvfragmentshaderbarycentricextensionname","title":"NvFragmentShaderBarycentricExtensionName","text":""},{"location":"api/rendering/vulkan/#as_379","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_379","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_379","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_377","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvfragmentshaderbarycentricextensionname_1","title":"NvFragmentShaderBarycentricExtensionName","text":"<p><code>\"VK_NV_fragment_shader_barycentric\"</code></p>"},{"location":"api/rendering/vulkan/#nvshaderimagefootprint","title":"NvShaderImageFootprint","text":""},{"location":"api/rendering/vulkan/#as_380","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_380","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_380","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_378","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvshaderimagefootprint_1","title":"NvShaderImageFootprint","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvshaderimagefootprintspecversion","title":"NvShaderImageFootprintSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_381","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_381","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_381","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_379","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvshaderimagefootprintspecversion_1","title":"NvShaderImageFootprintSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvshaderimagefootprintextensionname","title":"NvShaderImageFootprintExtensionName","text":""},{"location":"api/rendering/vulkan/#as_382","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_382","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_382","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_380","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvshaderimagefootprintextensionname_1","title":"NvShaderImageFootprintExtensionName","text":"<p><code>\"VK_NV_shader_image_footprint\"</code></p>"},{"location":"api/rendering/vulkan/#nvscissorexclusive","title":"NvScissorExclusive","text":""},{"location":"api/rendering/vulkan/#as_383","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_383","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_383","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_381","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvscissorexclusive_1","title":"NvScissorExclusive","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvscissorexclusivespecversion","title":"NvScissorExclusiveSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_384","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_384","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_384","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_382","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvscissorexclusivespecversion_1","title":"NvScissorExclusiveSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvscissorexclusiveextensionname","title":"NvScissorExclusiveExtensionName","text":""},{"location":"api/rendering/vulkan/#as_385","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_385","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_385","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_383","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvscissorexclusiveextensionname_1","title":"NvScissorExclusiveExtensionName","text":"<p><code>\"VK_NV_scissor_exclusive\"</code></p>"},{"location":"api/rendering/vulkan/#nvdevicediagnosticcheckpoints","title":"NvDeviceDiagnosticCheckpoints","text":""},{"location":"api/rendering/vulkan/#as_386","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_386","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_386","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_384","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvdevicediagnosticcheckpoints_1","title":"NvDeviceDiagnosticCheckpoints","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#nvdevicediagnosticcheckpointsspecversion","title":"NvDeviceDiagnosticCheckpointsSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_387","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_387","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_387","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_385","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvdevicediagnosticcheckpointsspecversion_1","title":"NvDeviceDiagnosticCheckpointsSpecVersion","text":"<p><code>2</code></p>"},{"location":"api/rendering/vulkan/#nvdevicediagnosticcheckpointsextensionname","title":"NvDeviceDiagnosticCheckpointsExtensionName","text":""},{"location":"api/rendering/vulkan/#as_388","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_388","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_388","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_386","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#nvdevicediagnosticcheckpointsextensionname_1","title":"NvDeviceDiagnosticCheckpointsExtensionName","text":"<p><code>\"VK_NV_device_diagnostic_checkpoints\"</code></p>"},{"location":"api/rendering/vulkan/#extpcibusinfo","title":"ExtPciBusInfo","text":""},{"location":"api/rendering/vulkan/#as_389","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_389","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_389","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_387","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extpcibusinfo_1","title":"ExtPciBusInfo","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extpcibusinfospecversion","title":"ExtPciBusInfoSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_390","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_390","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_390","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_388","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extpcibusinfospecversion_1","title":"ExtPciBusInfoSpecVersion","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#extpcibusinfoextensionname","title":"ExtPciBusInfoExtensionName","text":""},{"location":"api/rendering/vulkan/#as_391","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_391","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_391","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_389","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#extpcibusinfoextensionname_1","title":"ExtPciBusInfoExtensionName","text":"<p><code>\"VK_EXT_pci_bus_info\"</code></p>"},{"location":"api/rendering/vulkan/#googlehlslfunctionality1","title":"GoogleHlslFunctionality1","text":""},{"location":"api/rendering/vulkan/#as_392","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_392","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_392","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_390","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#googlehlslfunctionality1_1","title":"GoogleHlslFunctionality1","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#googlehlslfunctionality1specversion","title":"GoogleHlslFunctionality1SpecVersion","text":""},{"location":"api/rendering/vulkan/#as_393","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_393","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_393","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_391","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#googlehlslfunctionality1specversion_1","title":"GoogleHlslFunctionality1SpecVersion","text":"<p><code>0</code></p>"},{"location":"api/rendering/vulkan/#googlehlslfunctionality1extensionname","title":"GoogleHlslFunctionality1ExtensionName","text":""},{"location":"api/rendering/vulkan/#as_394","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_394","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_394","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_392","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#googlehlslfunctionality1extensionname_1","title":"GoogleHlslFunctionality1ExtensionName","text":"<p><code>\"VK_GOOGLE_hlsl_functionality1\"</code></p>"},{"location":"api/rendering/vulkan/#googledecoratestring","title":"GoogleDecorateString","text":""},{"location":"api/rendering/vulkan/#as_395","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_395","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_395","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_393","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#googledecoratestring_1","title":"GoogleDecorateString","text":"<p><code>1</code></p>"},{"location":"api/rendering/vulkan/#googledecoratestringspecversion","title":"GoogleDecorateStringSpecVersion","text":""},{"location":"api/rendering/vulkan/#as_396","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_396","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_396","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_394","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#googledecoratestringspecversion_1","title":"GoogleDecorateStringSpecVersion","text":"<p><code>0</code></p>"},{"location":"api/rendering/vulkan/#googledecoratestringextensionname","title":"GoogleDecorateStringExtensionName","text":""},{"location":"api/rendering/vulkan/#as_397","title":"as","text":""},{"location":"api/rendering/vulkan/#defined_397","title":"defined","text":""},{"location":"api/rendering/vulkan/#in_397","title":"in","text":""},{"location":"api/rendering/vulkan/#vulkan_395","title":"vulkan","text":""},{"location":"api/rendering/vulkan/#googledecoratestringextensionname_1","title":"GoogleDecorateStringExtensionName","text":"<p><code>\"VK_GOOGLE_decorate_string\"</code></p>"},{"location":"api/rendering/vulkan/#variables","title":"Variables","text":""},{"location":"api/rendering/vulkan/#uint32","title":"uint32","text":"<p><code>1&lt;&lt;32 - 1 // also ^uint32(0)</code></p>"},{"location":"api/rendering/vulkan/#uint64","title":"uint64","text":"<p><code>1&lt;&lt;64 - 1 // also ^uint64(0)</code></p>"},{"location":"api/rendering/vulkan/#functions","title":"Functions","text":""},{"location":"api/rendering/vulkan/#cmdbeginquery","title":"CmdBeginQuery","text":"<pre><code>func CmdBeginQuery(commandBuffer CommandBuffer, queryPool QueryPool, query uint32, flags QueryControlFlags)\n</code></pre> <p>CmdBeginQuery function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdBeginQuery.html</p>"},{"location":"api/rendering/vulkan/#cmdbeginrenderpass","title":"CmdBeginRenderPass","text":"<pre><code>func CmdBeginRenderPass(commandBuffer CommandBuffer, pRenderPassBegin *RenderPassBeginInfo, contents SubpassContents)\n</code></pre> <p>CmdBeginRenderPass function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdBeginRenderPass.html</p>"},{"location":"api/rendering/vulkan/#cmdbinddescriptorsets","title":"CmdBindDescriptorSets","text":"<pre><code>func CmdBindDescriptorSets(commandBuffer CommandBuffer, pipelineBindPoint PipelineBindPoint, layout PipelineLayout, firstSet uint32, descriptorSetCount uint32, pDescriptorSets *DescriptorSet, dynamicOffsetCount uint32, pDynamicOffsets *uint32)\n</code></pre> <p>CmdBindDescriptorSets function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdBindDescriptorSets.html</p>"},{"location":"api/rendering/vulkan/#cmdbindindexbuffer","title":"CmdBindIndexBuffer","text":"<pre><code>func CmdBindIndexBuffer(commandBuffer CommandBuffer, buffer Buffer, offset DeviceSize, indexType IndexType)\n</code></pre> <p>CmdBindIndexBuffer function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdBindIndexBuffer.html</p>"},{"location":"api/rendering/vulkan/#cmdbindpipeline","title":"CmdBindPipeline","text":"<pre><code>func CmdBindPipeline(commandBuffer CommandBuffer, pipelineBindPoint PipelineBindPoint, pipeline Pipeline)\n</code></pre> <p>CmdBindPipeline function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdBindPipeline.html</p>"},{"location":"api/rendering/vulkan/#cmdbindvertexbuffers","title":"CmdBindVertexBuffers","text":"<pre><code>func CmdBindVertexBuffers(commandBuffer CommandBuffer, firstBinding uint32, bindingCount uint32, pBuffers *Buffer, pOffsets *DeviceSize)\n</code></pre> <p>CmdBindVertexBuffers function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdBindVertexBuffers.html</p>"},{"location":"api/rendering/vulkan/#cmdblitimage","title":"CmdBlitImage","text":"<pre><code>func CmdBlitImage(commandBuffer CommandBuffer, srcImage Image, srcImageLayout ImageLayout, dstImage Image, dstImageLayout ImageLayout, regionCount uint32, pRegions *ImageBlit, filter Filter)\n</code></pre> <p>CmdBlitImage function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdBlitImage.html</p>"},{"location":"api/rendering/vulkan/#cmdclearattachments","title":"CmdClearAttachments","text":"<pre><code>func CmdClearAttachments(commandBuffer CommandBuffer, attachmentCount uint32, pAttachments *ClearAttachment, rectCount uint32, pRects *ClearRect)\n</code></pre> <p>CmdClearAttachments function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdClearAttachments.html</p>"},{"location":"api/rendering/vulkan/#cmdclearcolorimage","title":"CmdClearColorImage","text":"<pre><code>func CmdClearColorImage(commandBuffer CommandBuffer, image Image, imageLayout ImageLayout, pColor *ClearColorValue, rangeCount uint32, pRanges *ImageSubresourceRange)\n</code></pre> <p>CmdClearColorImage function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdClearColorImage.html</p>"},{"location":"api/rendering/vulkan/#cmdcleardepthstencilimage","title":"CmdClearDepthStencilImage","text":"<pre><code>func CmdClearDepthStencilImage(commandBuffer CommandBuffer, image Image, imageLayout ImageLayout, pDepthStencil *ClearDepthStencilValue, rangeCount uint32, pRanges *ImageSubresourceRange)\n</code></pre> <p>CmdClearDepthStencilImage function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdClearDepthStencilImage.html</p>"},{"location":"api/rendering/vulkan/#cmdcopybuffer","title":"CmdCopyBuffer","text":"<pre><code>func CmdCopyBuffer(commandBuffer CommandBuffer, srcBuffer Buffer, dstBuffer Buffer, regionCount uint32, pRegions *BufferCopy)\n</code></pre> <p>CmdCopyBuffer function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdCopyBuffer.html</p>"},{"location":"api/rendering/vulkan/#cmdcopybuffertoimage","title":"CmdCopyBufferToImage","text":"<pre><code>func CmdCopyBufferToImage(commandBuffer CommandBuffer, srcBuffer Buffer, dstImage Image, dstImageLayout ImageLayout, regionCount uint32, pRegions *BufferImageCopy)\n</code></pre> <p>CmdCopyBufferToImage function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdCopyBufferToImage.html</p>"},{"location":"api/rendering/vulkan/#cmdcopyimage","title":"CmdCopyImage","text":"<pre><code>func CmdCopyImage(commandBuffer CommandBuffer, srcImage Image, srcImageLayout ImageLayout, dstImage Image, dstImageLayout ImageLayout, regionCount uint32, pRegions *ImageCopy)\n</code></pre> <p>CmdCopyImage function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdCopyImage.html</p>"},{"location":"api/rendering/vulkan/#cmdcopyimagetobuffer","title":"CmdCopyImageToBuffer","text":"<pre><code>func CmdCopyImageToBuffer(commandBuffer CommandBuffer, srcImage Image, srcImageLayout ImageLayout, dstBuffer Buffer, regionCount uint32, pRegions *BufferImageCopy)\n</code></pre> <p>CmdCopyImageToBuffer function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdCopyImageToBuffer.html</p>"},{"location":"api/rendering/vulkan/#cmdcopyquerypoolresults","title":"CmdCopyQueryPoolResults","text":"<pre><code>func CmdCopyQueryPoolResults(commandBuffer CommandBuffer, queryPool QueryPool, firstQuery uint32, queryCount uint32, dstBuffer Buffer, dstOffset DeviceSize, stride DeviceSize, flags QueryResultFlags)\n</code></pre> <p>CmdCopyQueryPoolResults function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdCopyQueryPoolResults.html</p>"},{"location":"api/rendering/vulkan/#cmddispatch","title":"CmdDispatch","text":"<pre><code>func CmdDispatch(commandBuffer CommandBuffer, x uint32, y uint32, z uint32)\n</code></pre> <p>CmdDispatch function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdDispatch.html</p>"},{"location":"api/rendering/vulkan/#cmddispatchindirect","title":"CmdDispatchIndirect","text":"<pre><code>func CmdDispatchIndirect(commandBuffer CommandBuffer, buffer Buffer, offset DeviceSize)\n</code></pre> <p>CmdDispatchIndirect function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdDispatchIndirect.html</p>"},{"location":"api/rendering/vulkan/#cmddraw","title":"CmdDraw","text":"<pre><code>func CmdDraw(commandBuffer CommandBuffer, vertexCount uint32, instanceCount uint32, firstVertex uint32, firstInstance uint32)\n</code></pre> <p>CmdDraw function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdDraw.html</p>"},{"location":"api/rendering/vulkan/#cmddrawindexed","title":"CmdDrawIndexed","text":"<pre><code>func CmdDrawIndexed(commandBuffer CommandBuffer, indexCount uint32, instanceCount uint32, firstIndex uint32, vertexOffset int32, firstInstance uint32)\n</code></pre> <p>CmdDrawIndexed function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdDrawIndexed.html</p>"},{"location":"api/rendering/vulkan/#cmddrawindexedindirect","title":"CmdDrawIndexedIndirect","text":"<pre><code>func CmdDrawIndexedIndirect(commandBuffer CommandBuffer, buffer Buffer, offset DeviceSize, drawCount uint32, stride uint32)\n</code></pre> <p>CmdDrawIndexedIndirect function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdDrawIndexedIndirect.html</p>"},{"location":"api/rendering/vulkan/#cmddrawindirect","title":"CmdDrawIndirect","text":"<pre><code>func CmdDrawIndirect(commandBuffer CommandBuffer, buffer Buffer, offset DeviceSize, drawCount uint32, stride uint32)\n</code></pre> <p>CmdDrawIndirect function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdDrawIndirect.html</p>"},{"location":"api/rendering/vulkan/#cmdendquery","title":"CmdEndQuery","text":"<pre><code>func CmdEndQuery(commandBuffer CommandBuffer, queryPool QueryPool, query uint32)\n</code></pre> <p>CmdEndQuery function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdEndQuery.html</p>"},{"location":"api/rendering/vulkan/#cmdendrenderpass","title":"CmdEndRenderPass","text":"<pre><code>func CmdEndRenderPass(commandBuffer CommandBuffer)\n</code></pre> <p>CmdEndRenderPass function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdEndRenderPass.html</p>"},{"location":"api/rendering/vulkan/#cmdexecutecommands","title":"CmdExecuteCommands","text":"<pre><code>func CmdExecuteCommands(commandBuffer CommandBuffer, commandBufferCount uint32, pCommandBuffers *CommandBuffer)\n</code></pre> <p>CmdExecuteCommands function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdExecuteCommands.html</p>"},{"location":"api/rendering/vulkan/#cmdfillbuffer","title":"CmdFillBuffer","text":"<pre><code>func CmdFillBuffer(commandBuffer CommandBuffer, dstBuffer Buffer, dstOffset DeviceSize, size DeviceSize, data uint32)\n</code></pre> <p>CmdFillBuffer function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdFillBuffer.html</p>"},{"location":"api/rendering/vulkan/#cmdnextsubpass","title":"CmdNextSubpass","text":"<pre><code>func CmdNextSubpass(commandBuffer CommandBuffer, contents SubpassContents)\n</code></pre> <p>CmdNextSubpass function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdNextSubpass.html</p>"},{"location":"api/rendering/vulkan/#cmdpipelinebarrier","title":"CmdPipelineBarrier","text":"<pre><code>func CmdPipelineBarrier(commandBuffer CommandBuffer, srcStageMask PipelineStageFlags, dstStageMask PipelineStageFlags, dependencyFlags DependencyFlags, memoryBarrierCount uint32, pMemoryBarriers *MemoryBarrier, bufferMemoryBarrierCount uint32, pBufferMemoryBarriers *BufferMemoryBarrier, imageMemoryBarrierCount uint32, pImageMemoryBarriers *ImageMemoryBarrier)\n</code></pre> <p>CmdPipelineBarrier function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdPipelineBarrier.html</p>"},{"location":"api/rendering/vulkan/#cmdpushconstants","title":"CmdPushConstants","text":"<pre><code>func CmdPushConstants(commandBuffer CommandBuffer, layout PipelineLayout, stageFlags ShaderStageFlags, offset uint32, size uint32, pValues unsafe.Pointer)\n</code></pre> <p>CmdPushConstants function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdPushConstants.html</p>"},{"location":"api/rendering/vulkan/#cmdresetevent","title":"CmdResetEvent","text":"<pre><code>func CmdResetEvent(commandBuffer CommandBuffer, event Event, stageMask PipelineStageFlags)\n</code></pre> <p>CmdResetEvent function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdResetEvent.html</p>"},{"location":"api/rendering/vulkan/#cmdresetquerypool","title":"CmdResetQueryPool","text":"<pre><code>func CmdResetQueryPool(commandBuffer CommandBuffer, queryPool QueryPool, firstQuery uint32, queryCount uint32)\n</code></pre> <p>CmdResetQueryPool function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdResetQueryPool.html</p>"},{"location":"api/rendering/vulkan/#cmdresolveimage","title":"CmdResolveImage","text":"<pre><code>func CmdResolveImage(commandBuffer CommandBuffer, srcImage Image, srcImageLayout ImageLayout, dstImage Image, dstImageLayout ImageLayout, regionCount uint32, pRegions *ImageResolve)\n</code></pre> <p>CmdResolveImage function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdResolveImage.html</p>"},{"location":"api/rendering/vulkan/#cmdsetblendconstants","title":"CmdSetBlendConstants","text":"<pre><code>func CmdSetBlendConstants(commandBuffer CommandBuffer, blendConstants *[4]float32)\n</code></pre> <p>CmdSetBlendConstants function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdSetBlendConstants.html</p>"},{"location":"api/rendering/vulkan/#cmdsetdepthbias","title":"CmdSetDepthBias","text":"<pre><code>func CmdSetDepthBias(commandBuffer CommandBuffer, depthBiasConstantFactor float32, depthBiasClamp float32, depthBiasSlopeFactor float32)\n</code></pre> <p>CmdSetDepthBias function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdSetDepthBias.html</p>"},{"location":"api/rendering/vulkan/#cmdsetdepthbounds","title":"CmdSetDepthBounds","text":"<pre><code>func CmdSetDepthBounds(commandBuffer CommandBuffer, minDepthBounds float32, maxDepthBounds float32)\n</code></pre> <p>CmdSetDepthBounds function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdSetDepthBounds.html</p>"},{"location":"api/rendering/vulkan/#cmdsetevent","title":"CmdSetEvent","text":"<pre><code>func CmdSetEvent(commandBuffer CommandBuffer, event Event, stageMask PipelineStageFlags)\n</code></pre> <p>CmdSetEvent function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdSetEvent.html</p>"},{"location":"api/rendering/vulkan/#cmdsetlinewidth","title":"CmdSetLineWidth","text":"<pre><code>func CmdSetLineWidth(commandBuffer CommandBuffer, lineWidth float32)\n</code></pre> <p>CmdSetLineWidth function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdSetLineWidth.html</p>"},{"location":"api/rendering/vulkan/#cmdsetscissor","title":"CmdSetScissor","text":"<pre><code>func CmdSetScissor(commandBuffer CommandBuffer, firstScissor uint32, scissorCount uint32, pScissors *Rect2D)\n</code></pre> <p>CmdSetScissor function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdSetScissor.html</p>"},{"location":"api/rendering/vulkan/#cmdsetstencilcomparemask","title":"CmdSetStencilCompareMask","text":"<pre><code>func CmdSetStencilCompareMask(commandBuffer CommandBuffer, faceMask StencilFaceFlags, compareMask uint32)\n</code></pre> <p>CmdSetStencilCompareMask function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdSetStencilCompareMask.html</p>"},{"location":"api/rendering/vulkan/#cmdsetstencilreference","title":"CmdSetStencilReference","text":"<pre><code>func CmdSetStencilReference(commandBuffer CommandBuffer, faceMask StencilFaceFlags, reference uint32)\n</code></pre> <p>CmdSetStencilReference function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdSetStencilReference.html</p>"},{"location":"api/rendering/vulkan/#cmdsetstencilwritemask","title":"CmdSetStencilWriteMask","text":"<pre><code>func CmdSetStencilWriteMask(commandBuffer CommandBuffer, faceMask StencilFaceFlags, writeMask uint32)\n</code></pre> <p>CmdSetStencilWriteMask function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdSetStencilWriteMask.html</p>"},{"location":"api/rendering/vulkan/#cmdsetviewport","title":"CmdSetViewport","text":"<pre><code>func CmdSetViewport(commandBuffer CommandBuffer, firstViewport uint32, viewportCount uint32, pViewports *Viewport)\n</code></pre> <p>CmdSetViewport function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdSetViewport.html</p>"},{"location":"api/rendering/vulkan/#cmdupdatebuffer","title":"CmdUpdateBuffer","text":"<pre><code>func CmdUpdateBuffer(commandBuffer CommandBuffer, dstBuffer Buffer, dstOffset DeviceSize, dataSize DeviceSize, pData *uint32)\n</code></pre> <p>CmdUpdateBuffer function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdUpdateBuffer.html</p>"},{"location":"api/rendering/vulkan/#cmdwaitevents","title":"CmdWaitEvents","text":"<pre><code>func CmdWaitEvents(commandBuffer CommandBuffer, eventCount uint32, pEvents *Event, srcStageMask PipelineStageFlags, dstStageMask PipelineStageFlags, memoryBarrierCount uint32, pMemoryBarriers *MemoryBarrier, bufferMemoryBarrierCount uint32, pBufferMemoryBarriers *BufferMemoryBarrier, imageMemoryBarrierCount uint32, pImageMemoryBarriers *ImageMemoryBarrier)\n</code></pre> <p>CmdWaitEvents function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdWaitEvents.html</p>"},{"location":"api/rendering/vulkan/#cmdwritetimestamp","title":"CmdWriteTimestamp","text":"<pre><code>func CmdWriteTimestamp(commandBuffer CommandBuffer, pipelineStage PipelineStageFlagBits, queryPool QueryPool, query uint32)\n</code></pre> <p>CmdWriteTimestamp function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCmdWriteTimestamp.html</p>"},{"location":"api/rendering/vulkan/#debugreportmessage","title":"DebugReportMessage","text":"<pre><code>func DebugReportMessage(instance Instance, flags DebugReportFlags, objectType DebugReportObjectType, object uint64, location uint, messageCode int32, pLayerPrefix *string, pMessage *string)\n</code></pre> <p>DebugReportMessage function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDebugReportMessageEXT.html</p>"},{"location":"api/rendering/vulkan/#destroybuffer","title":"DestroyBuffer","text":"<pre><code>func DestroyBuffer(device Device, buffer Buffer, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyBuffer function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyBuffer.html</p>"},{"location":"api/rendering/vulkan/#destroybufferview","title":"DestroyBufferView","text":"<pre><code>func DestroyBufferView(device Device, bufferView BufferView, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyBufferView function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyBufferView.html</p>"},{"location":"api/rendering/vulkan/#destroycommandpool","title":"DestroyCommandPool","text":"<pre><code>func DestroyCommandPool(device Device, commandPool CommandPool, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyCommandPool function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyCommandPool.html</p>"},{"location":"api/rendering/vulkan/#destroydebugreportcallback","title":"DestroyDebugReportCallback","text":"<pre><code>func DestroyDebugReportCallback(instance Instance, callback DebugReportCallback, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyDebugReportCallback function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyDebugReportCallbackEXT.html</p>"},{"location":"api/rendering/vulkan/#destroydescriptorpool","title":"DestroyDescriptorPool","text":"<pre><code>func DestroyDescriptorPool(device Device, descriptorPool DescriptorPool, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyDescriptorPool function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyDescriptorPool.html</p>"},{"location":"api/rendering/vulkan/#destroydescriptorsetlayout","title":"DestroyDescriptorSetLayout","text":"<pre><code>func DestroyDescriptorSetLayout(device Device, descriptorSetLayout DescriptorSetLayout, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyDescriptorSetLayout function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyDescriptorSetLayout.html</p>"},{"location":"api/rendering/vulkan/#destroydevice","title":"DestroyDevice","text":"<pre><code>func DestroyDevice(device Device, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyDevice function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyDevice.html</p>"},{"location":"api/rendering/vulkan/#destroyevent","title":"DestroyEvent","text":"<pre><code>func DestroyEvent(device Device, event Event, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyEvent function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyEvent.html</p>"},{"location":"api/rendering/vulkan/#destroyfence","title":"DestroyFence","text":"<pre><code>func DestroyFence(device Device, fence Fence, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyFence function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyFence.html</p>"},{"location":"api/rendering/vulkan/#destroyframebuffer","title":"DestroyFramebuffer","text":"<pre><code>func DestroyFramebuffer(device Device, framebuffer Framebuffer, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyFramebuffer function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyFramebuffer.html</p>"},{"location":"api/rendering/vulkan/#destroyimage","title":"DestroyImage","text":"<pre><code>func DestroyImage(device Device, image Image, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyImage function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyImage.html</p>"},{"location":"api/rendering/vulkan/#destroyimageview","title":"DestroyImageView","text":"<pre><code>func DestroyImageView(device Device, imageView ImageView, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyImageView function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyImageView.html</p>"},{"location":"api/rendering/vulkan/#destroyinstance","title":"DestroyInstance","text":"<pre><code>func DestroyInstance(instance Instance, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyInstance function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyInstance.html</p>"},{"location":"api/rendering/vulkan/#destroypipeline","title":"DestroyPipeline","text":"<pre><code>func DestroyPipeline(device Device, pipeline Pipeline, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyPipeline function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyPipeline.html</p>"},{"location":"api/rendering/vulkan/#destroypipelinecache","title":"DestroyPipelineCache","text":"<pre><code>func DestroyPipelineCache(device Device, pipelineCache PipelineCache, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyPipelineCache function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyPipelineCache.html</p>"},{"location":"api/rendering/vulkan/#destroypipelinelayout","title":"DestroyPipelineLayout","text":"<pre><code>func DestroyPipelineLayout(device Device, pipelineLayout PipelineLayout, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyPipelineLayout function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyPipelineLayout.html</p>"},{"location":"api/rendering/vulkan/#destroyquerypool","title":"DestroyQueryPool","text":"<pre><code>func DestroyQueryPool(device Device, queryPool QueryPool, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyQueryPool function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyQueryPool.html</p>"},{"location":"api/rendering/vulkan/#destroyrenderpass","title":"DestroyRenderPass","text":"<pre><code>func DestroyRenderPass(device Device, renderPass RenderPass, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyRenderPass function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyRenderPass.html</p>"},{"location":"api/rendering/vulkan/#destroysampler","title":"DestroySampler","text":"<pre><code>func DestroySampler(device Device, sampler Sampler, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroySampler function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroySampler.html</p>"},{"location":"api/rendering/vulkan/#destroysemaphore","title":"DestroySemaphore","text":"<pre><code>func DestroySemaphore(device Device, semaphore Semaphore, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroySemaphore function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroySemaphore.html</p>"},{"location":"api/rendering/vulkan/#destroyshadermodule","title":"DestroyShaderModule","text":"<pre><code>func DestroyShaderModule(device Device, shaderModule ShaderModule, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroyShaderModule function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDestroyShaderModule.html</p>"},{"location":"api/rendering/vulkan/#destroysurface","title":"DestroySurface","text":"<pre><code>func DestroySurface(instance Instance, surface Surface, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroySurface function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDestroySurfaceKHR</p>"},{"location":"api/rendering/vulkan/#destroyswapchain","title":"DestroySwapchain","text":"<pre><code>func DestroySwapchain(device Device, swapchain Swapchain, pAllocator *AllocationCallbacks)\n</code></pre> <p>DestroySwapchain function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDestroySwapchainKHR</p>"},{"location":"api/rendering/vulkan/#error","title":"Error","text":"<pre><code>func Error(result Result) error\n</code></pre>"},{"location":"api/rendering/vulkan/#freecommandbuffers","title":"FreeCommandBuffers","text":"<pre><code>func FreeCommandBuffers(device Device, commandPool CommandPool, commandBufferCount uint32, pCommandBuffers *CommandBuffer)\n</code></pre> <p>FreeCommandBuffers function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkFreeCommandBuffers.html</p>"},{"location":"api/rendering/vulkan/#freememory","title":"FreeMemory","text":"<pre><code>func FreeMemory(device Device, memory DeviceMemory, pAllocator *AllocationCallbacks)\n</code></pre> <p>FreeMemory function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkFreeMemory.html</p>"},{"location":"api/rendering/vulkan/#getbuffermemoryrequirements","title":"GetBufferMemoryRequirements","text":"<pre><code>func GetBufferMemoryRequirements(device Device, buffer Buffer, pMemoryRequirements *MemoryRequirements)\n</code></pre> <p>GetBufferMemoryRequirements function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetBufferMemoryRequirements.html</p>"},{"location":"api/rendering/vulkan/#getdevicememorycommitment","title":"GetDeviceMemoryCommitment","text":"<pre><code>func GetDeviceMemoryCommitment(device Device, memory DeviceMemory, pCommittedMemoryInBytes *DeviceSize)\n</code></pre> <p>GetDeviceMemoryCommitment function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetDeviceMemoryCommitment.html</p>"},{"location":"api/rendering/vulkan/#getdevicequeue","title":"GetDeviceQueue","text":"<pre><code>func GetDeviceQueue(device Device, queueFamilyIndex uint32, queueIndex uint32, pQueue *Queue)\n</code></pre> <p>GetDeviceQueue function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetDeviceQueue.html</p>"},{"location":"api/rendering/vulkan/#getimagememoryrequirements","title":"GetImageMemoryRequirements","text":"<pre><code>func GetImageMemoryRequirements(device Device, image Image, pMemoryRequirements *MemoryRequirements)\n</code></pre> <p>GetImageMemoryRequirements function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetImageMemoryRequirements.html</p>"},{"location":"api/rendering/vulkan/#getimagesparsememoryrequirements","title":"GetImageSparseMemoryRequirements","text":"<pre><code>func GetImageSparseMemoryRequirements(device Device, image Image, pSparseMemoryRequirementCount *uint32, pSparseMemoryRequirements *SparseImageMemoryRequirements)\n</code></pre> <p>GetImageSparseMemoryRequirements function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetImageSparseMemoryRequirements.html</p>"},{"location":"api/rendering/vulkan/#getimagesubresourcelayout","title":"GetImageSubresourceLayout","text":"<pre><code>func GetImageSubresourceLayout(device Device, image Image, pSubresource *ImageSubresource, pLayout *SubresourceLayout)\n</code></pre> <p>GetImageSubresourceLayout function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetImageSubresourceLayout.html</p>"},{"location":"api/rendering/vulkan/#getphysicaldevicefeatures","title":"GetPhysicalDeviceFeatures","text":"<pre><code>func GetPhysicalDeviceFeatures(physicalDevice PhysicalDevice, pFeatures *PhysicalDeviceFeatures)\n</code></pre> <p>GetPhysicalDeviceFeatures function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetPhysicalDeviceFeatures.html</p>"},{"location":"api/rendering/vulkan/#getphysicaldeviceformatproperties","title":"GetPhysicalDeviceFormatProperties","text":"<pre><code>func GetPhysicalDeviceFormatProperties(physicalDevice PhysicalDevice, format Format, pFormatProperties *FormatProperties)\n</code></pre> <p>GetPhysicalDeviceFormatProperties function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetPhysicalDeviceFormatProperties.html</p>"},{"location":"api/rendering/vulkan/#getphysicaldevicememoryproperties","title":"GetPhysicalDeviceMemoryProperties","text":"<pre><code>func GetPhysicalDeviceMemoryProperties(physicalDevice PhysicalDevice, pMemoryProperties *PhysicalDeviceMemoryProperties)\n</code></pre> <p>GetPhysicalDeviceMemoryProperties function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetPhysicalDeviceMemoryProperties.html</p>"},{"location":"api/rendering/vulkan/#getphysicaldeviceproperties","title":"GetPhysicalDeviceProperties","text":"<pre><code>func GetPhysicalDeviceProperties(physicalDevice PhysicalDevice, pProperties *PhysicalDeviceProperties)\n</code></pre> <p>GetPhysicalDeviceProperties function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetPhysicalDeviceProperties.html</p>"},{"location":"api/rendering/vulkan/#getphysicaldevicequeuefamilyproperties","title":"GetPhysicalDeviceQueueFamilyProperties","text":"<pre><code>func GetPhysicalDeviceQueueFamilyProperties(physicalDevice PhysicalDevice, pQueueFamilyPropertyCount *uint32, pQueueFamilyProperties *QueueFamilyProperties)\n</code></pre> <p>GetPhysicalDeviceQueueFamilyProperties function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetPhysicalDeviceQueueFamilyProperties.html</p>"},{"location":"api/rendering/vulkan/#getphysicaldevicesparseimageformatproperties","title":"GetPhysicalDeviceSparseImageFormatProperties","text":"<pre><code>func GetPhysicalDeviceSparseImageFormatProperties(physicalDevice PhysicalDevice, format Format, kind ImageType, samples SampleCountFlagBits, usage ImageUsageFlags, tiling ImageTiling, pPropertyCount *uint32, pProperties *SparseImageFormatProperties)\n</code></pre> <p>GetPhysicalDeviceSparseImageFormatProperties function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetPhysicalDeviceSparseImageFormatProperties.html</p>"},{"location":"api/rendering/vulkan/#getrenderareagranularity","title":"GetRenderAreaGranularity","text":"<pre><code>func GetRenderAreaGranularity(device Device, renderPass RenderPass, pGranularity *Extent2D)\n</code></pre> <p>GetRenderAreaGranularity function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetRenderAreaGranularity.html</p>"},{"location":"api/rendering/vulkan/#init","title":"Init","text":"<pre><code>func Init() error\n</code></pre> <p>Init checks for Vulkan support on the platform and obtains PFNs for global Vulkan API functions. Either SetGetInstanceProcAddr or SetDefaultGetInstanceProcAddr must have been called prior to calling Init.</p>"},{"location":"api/rendering/vulkan/#initinstance","title":"InitInstance","text":"<pre><code>func InitInstance(instance Instance) error\n</code></pre> <p>InitInstance obtains instance PFNs for Vulkan API functions, this is necessary on OS X using MoltenVK, but for the other platforms it's an option.</p>"},{"location":"api/rendering/vulkan/#makeversion","title":"MakeVersion","text":"<pre><code>func MakeVersion(major, minor, patch int) uint32\n</code></pre>"},{"location":"api/rendering/vulkan/#memcopy","title":"Memcopy","text":"<pre><code>func Memcopy(dst unsafe.Pointer, src []byte) int\n</code></pre> <p>Memcopy is like a Go's built-in copy function, it copies data from src slice, but into a destination pointer. Useful to copy data into device memory.</p>"},{"location":"api/rendering/vulkan/#setdefaultgetinstanceprocaddr","title":"SetDefaultGetInstanceProcAddr","text":"<pre><code>func SetDefaultGetInstanceProcAddr() error\n</code></pre> <p>SetDefaultGetInstanceProcAddr looks for the Vulkan library in the system-specific default location and returns an error if it cannot be located. This function functions the same way as SetGetInstanceProcAddr but without relying on a separate windowing library to load Vulkan.</p>"},{"location":"api/rendering/vulkan/#setgetinstanceprocaddr","title":"SetGetInstanceProcAddr","text":"<pre><code>func SetGetInstanceProcAddr(getProcAddr unsafe.Pointer)\n</code></pre> <p>SetGetInstanceProcAddr sets the GetInstanceProcAddr function pointer used to load Vulkan symbols. The function can be retrieved from GLFW using GetInstanceProcAddress or from SDL2 using VulkanGetVkGetInstanceProcAddr. This function must be called before Init().</p>"},{"location":"api/rendering/vulkan/#tostring","title":"ToString","text":"<pre><code>func ToString(buf []byte) string\n</code></pre>"},{"location":"api/rendering/vulkan/#typetouintptrt-uintpointerable","title":"TypeToUintPtr[T UintPointerAble]","text":"<pre><code>func TypeToUintPtr[T UintPointerAble](t T) uintptr\n</code></pre>"},{"location":"api/rendering/vulkan/#unmapmemory","title":"UnmapMemory","text":"<pre><code>func UnmapMemory(device Device, memory DeviceMemory)\n</code></pre> <p>UnmapMemory function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkUnmapMemory.html</p>"},{"location":"api/rendering/vulkan/#updatedescriptorsets","title":"UpdateDescriptorSets","text":"<pre><code>func UpdateDescriptorSets(device Device, descriptorWriteCount uint32, pDescriptorWrites *WriteDescriptorSet, descriptorCopyCount uint32, pDescriptorCopies *CopyDescriptorSet)\n</code></pre> <p>UpdateDescriptorSets function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkUpdateDescriptorSets.html</p>"},{"location":"api/rendering/vulkan/#types","title":"Types","text":""},{"location":"api/rendering/vulkan/#accelerationstructurecreateinfonvx","title":"AccelerationStructureCreateInfoNVX","text":"<p><code>struct</code></p> <pre><code>type AccelerationStructureCreateInfoNVX struct {\n    SType         StructureType\n    PNext         unsafe.Pointer\n    Type          AccelerationStructureTypeNVX\n    Flags         BuildAccelerationStructureFlagsNVX\n    CompactedSize DeviceSize\n    InstanceCount uint32\n    GeometryCount uint32\n    PGeometries   *GeometryNVX\n}\n</code></pre> <p>AccelerationStructureCreateInfoNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkAccelerationStructureCreateInfoNVX</p>"},{"location":"api/rendering/vulkan/#accelerationstructurememoryrequirementsinfonvx","title":"AccelerationStructureMemoryRequirementsInfoNVX","text":"<p><code>struct</code></p> <pre><code>type AccelerationStructureMemoryRequirementsInfoNVX struct {\n    SType                 StructureType\n    PNext                 unsafe.Pointer\n    AccelerationStructure AccelerationStructureNVX\n}\n</code></pre> <p>AccelerationStructureMemoryRequirementsInfoNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkAccelerationStructureMemoryRequirementsInfoNVX</p>"},{"location":"api/rendering/vulkan/#accelerationstructurenvx","title":"AccelerationStructureNVX","text":"<p>C.VkAccelerationStructureNVX <pre><code>type AccelerationStructureNVX C.VkAccelerationStructureNVX\n</code></pre></p> <p>AccelerationStructureNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkAccelerationStructureNVX</p>"},{"location":"api/rendering/vulkan/#accelerationstructuretypenvx","title":"AccelerationStructureTypeNVX","text":"<p>int32 <pre><code>type AccelerationStructureTypeNVX int32\n</code></pre></p> <p>AccelerationStructureTypeNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkAccelerationStructureTypeNVX</p> <p>const ( AccelerationStructureTypeTopLevelNvx AccelerationStructureTypeNVX = iota AccelerationStructureTypeBottomLevelNvx AccelerationStructureTypeNVX = 1 AccelerationStructureTypeBeginRangeNvx AccelerationStructureTypeNVX = 0 AccelerationStructureTypeEndRangeNvx AccelerationStructureTypeNVX = 1 AccelerationStructureTypeRangeSizeNvx AccelerationStructureTypeNVX = 2 AccelerationStructureTypeMaxEnumNvx AccelerationStructureTypeNVX = 2147483647 ) AccelerationStructureTypeNVX enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkAccelerationStructureTypeNVX</p>"},{"location":"api/rendering/vulkan/#accessflagbits","title":"AccessFlagBits","text":"<p>int32 <pre><code>type AccessFlagBits int32\n</code></pre></p> <p>AccessFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkAccessFlagBits.html</p> <p>const ( AccessIndirectCommandReadBit AccessFlagBits = 1 AccessIndexReadBit AccessFlagBits = 2 AccessVertexAttributeReadBit AccessFlagBits = 4 AccessUniformReadBit AccessFlagBits = 8 AccessInputAttachmentReadBit AccessFlagBits = 16 AccessShaderReadBit AccessFlagBits = 32 AccessShaderWriteBit AccessFlagBits = 64 AccessColorAttachmentReadBit AccessFlagBits = 128 AccessColorAttachmentWriteBit AccessFlagBits = 256 AccessDepthStencilAttachmentReadBit AccessFlagBits = 512 AccessDepthStencilAttachmentWriteBit AccessFlagBits = 1024 AccessTransferReadBit AccessFlagBits = 2048 AccessTransferWriteBit AccessFlagBits = 4096 AccessHostReadBit AccessFlagBits = 8192 AccessHostWriteBit AccessFlagBits = 16384 AccessMemoryReadBit AccessFlagBits = 32768 AccessMemoryWriteBit AccessFlagBits = 65536 AccessTransformFeedbackWriteBit AccessFlagBits = 33554432 AccessTransformFeedbackCounterReadBit AccessFlagBits = 67108864 AccessTransformFeedbackCounterWriteBit AccessFlagBits = 134217728 AccessConditionalRenderingReadBit AccessFlagBits = 1048576 AccessCommandProcessReadBitNvx AccessFlagBits = 131072 AccessCommandProcessWriteBitNvx AccessFlagBits = 262144 AccessColorAttachmentReadNoncoherentBit AccessFlagBits = 524288 AccessShadingRateImageReadBitNv AccessFlagBits = 8388608 AccessAccelerationStructureReadBitNvx AccessFlagBits = 2097152 AccessAccelerationStructureWriteBitNvx AccessFlagBits = 4194304 AccessFlagBitsMaxEnum AccessFlagBits = 2147483647 ) AccessFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkAccessFlagBits.html</p>"},{"location":"api/rendering/vulkan/#accessflags","title":"AccessFlags","text":"<p>uint32 <pre><code>type AccessFlags uint32\n</code></pre></p> <p>AccessFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkAccessFlags.html</p>"},{"location":"api/rendering/vulkan/#acquirenextimageinfo","title":"AcquireNextImageInfo","text":"<p><code>struct</code></p> <pre><code>type AcquireNextImageInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    Swapchain  Swapchain\n    Timeout    uint64\n    Semaphore  Semaphore\n    Fence      Fence\n    DeviceMask uint32\n}\n</code></pre> <p>AcquireNextImageInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkAcquireNextImageInfoKHR</p>"},{"location":"api/rendering/vulkan/#allocationcallbacks","title":"AllocationCallbacks","text":"<p>C.VkAllocationCallbacks <pre><code>type AllocationCallbacks C.VkAllocationCallbacks\n</code></pre></p> <p>AllocationCallbacks as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkAllocationCallbacks.html</p>"},{"location":"api/rendering/vulkan/#applicationinfo","title":"ApplicationInfo","text":"<p><code>struct</code></p> <pre><code>type ApplicationInfo struct {\n    SType              StructureType\n    PNext              unsafe.Pointer\n    PApplicationName   *C.char\n    ApplicationVersion uint32\n    PEngineName        *C.char\n    EngineVersion      uint32\n    ApiVersion         uint32\n}\n</code></pre> <p>ApplicationInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkApplicationInfo.html</p>"},{"location":"api/rendering/vulkan/#attachmentdescription","title":"AttachmentDescription","text":"<p><code>struct</code></p> <pre><code>type AttachmentDescription struct {\n    Flags          AttachmentDescriptionFlags\n    Format         Format\n    Samples        SampleCountFlagBits\n    LoadOp         AttachmentLoadOp\n    StoreOp        AttachmentStoreOp\n    StencilLoadOp  AttachmentLoadOp\n    StencilStoreOp AttachmentStoreOp\n    InitialLayout  ImageLayout\n    FinalLayout    ImageLayout\n}\n</code></pre> <p>AttachmentDescription as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkAttachmentDescription.html</p>"},{"location":"api/rendering/vulkan/#attachmentdescription2","title":"AttachmentDescription2","text":"<p><code>struct</code></p> <pre><code>type AttachmentDescription2 struct {\n    SType          StructureType\n    PNext          unsafe.Pointer\n    Flags          AttachmentDescriptionFlags\n    Format         Format\n    Samples        SampleCountFlagBits\n    LoadOp         AttachmentLoadOp\n    StoreOp        AttachmentStoreOp\n    StencilLoadOp  AttachmentLoadOp\n    StencilStoreOp AttachmentStoreOp\n    InitialLayout  ImageLayout\n    FinalLayout    ImageLayout\n}\n</code></pre> <p>AttachmentDescription2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkAttachmentDescription2KHR</p>"},{"location":"api/rendering/vulkan/#attachmentdescriptionflagbits","title":"AttachmentDescriptionFlagBits","text":"<p>int32 <pre><code>type AttachmentDescriptionFlagBits int32\n</code></pre></p> <p>AttachmentDescriptionFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkAttachmentDescriptionFlagBits.html</p> <p>const ( AttachmentDescriptionMayAliasBit AttachmentDescriptionFlagBits = 1 AttachmentDescriptionFlagBitsMaxEnum AttachmentDescriptionFlagBits = 2147483647 ) AttachmentDescriptionFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkAttachmentDescriptionFlagBits.html</p>"},{"location":"api/rendering/vulkan/#attachmentdescriptionflags","title":"AttachmentDescriptionFlags","text":"<p>uint32 <pre><code>type AttachmentDescriptionFlags uint32\n</code></pre></p> <p>AttachmentDescriptionFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkAttachmentDescriptionFlags.html</p>"},{"location":"api/rendering/vulkan/#attachmentloadop","title":"AttachmentLoadOp","text":"<p>int32 <pre><code>type AttachmentLoadOp int32\n</code></pre></p> <p>AttachmentLoadOp as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkAttachmentLoadOp.html</p> <p>const ( AttachmentLoadOpLoad AttachmentLoadOp = iota AttachmentLoadOpClear AttachmentLoadOp = 1 AttachmentLoadOpDontCare AttachmentLoadOp = 2 AttachmentLoadOpBeginRange AttachmentLoadOp = 0 AttachmentLoadOpEndRange AttachmentLoadOp = 2 AttachmentLoadOpRangeSize AttachmentLoadOp = 3 AttachmentLoadOpMaxEnum AttachmentLoadOp = 2147483647 ) AttachmentLoadOp enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkAttachmentLoadOp.html</p>"},{"location":"api/rendering/vulkan/#attachmentreference","title":"AttachmentReference","text":"<p><code>struct</code></p> <pre><code>type AttachmentReference struct {\n    Attachment uint32\n    Layout     ImageLayout\n}\n</code></pre> <p>AttachmentReference as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkAttachmentReference.html</p>"},{"location":"api/rendering/vulkan/#attachmentreference2","title":"AttachmentReference2","text":"<p><code>struct</code></p> <pre><code>type AttachmentReference2 struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    Attachment uint32\n    Layout     ImageLayout\n    AspectMask ImageAspectFlags\n}\n</code></pre> <p>AttachmentReference2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkAttachmentReference2KHR</p>"},{"location":"api/rendering/vulkan/#attachmentsamplelocations","title":"AttachmentSampleLocations","text":"<p><code>struct</code></p> <pre><code>type AttachmentSampleLocations struct {\n    AttachmentIndex     uint32\n    SampleLocationsInfo SampleLocationsInfo\n}\n</code></pre> <p>AttachmentSampleLocations as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkAttachmentSampleLocationsEXT.html</p>"},{"location":"api/rendering/vulkan/#attachmentstoreop","title":"AttachmentStoreOp","text":"<p>int32 <pre><code>type AttachmentStoreOp int32\n</code></pre></p> <p>AttachmentStoreOp as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkAttachmentStoreOp.html</p> <p>const ( AttachmentStoreOpStore AttachmentStoreOp = iota AttachmentStoreOpDontCare AttachmentStoreOp = 1 AttachmentStoreOpBeginRange AttachmentStoreOp = 0 AttachmentStoreOpEndRange AttachmentStoreOp = 1 AttachmentStoreOpRangeSize AttachmentStoreOp = 2 AttachmentStoreOpMaxEnum AttachmentStoreOp = 2147483647 ) AttachmentStoreOp enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkAttachmentStoreOp.html</p>"},{"location":"api/rendering/vulkan/#baseinstructure","title":"BaseInStructure","text":"<p><code>struct</code></p> <pre><code>type BaseInStructure struct {\n    SType StructureType\n    PNext *BaseInStructure\n}\n</code></pre> <p>BaseInStructure as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBaseInStructure.html</p>"},{"location":"api/rendering/vulkan/#baseoutstructure","title":"BaseOutStructure","text":"<p><code>struct</code></p> <pre><code>type BaseOutStructure struct {\n    SType StructureType\n    PNext *BaseOutStructure\n}\n</code></pre> <p>BaseOutStructure as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBaseOutStructure.html</p>"},{"location":"api/rendering/vulkan/#bindaccelerationstructurememoryinfonvx","title":"BindAccelerationStructureMemoryInfoNVX","text":"<p><code>struct</code></p> <pre><code>type BindAccelerationStructureMemoryInfoNVX struct {\n    SType                 StructureType\n    PNext                 unsafe.Pointer\n    AccelerationStructure AccelerationStructureNVX\n    Memory                DeviceMemory\n    MemoryOffset          DeviceSize\n    DeviceIndexCount      uint32\n    PDeviceIndices        *uint32\n}\n</code></pre> <p>BindAccelerationStructureMemoryInfoNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkBindAccelerationStructureMemoryInfoNVX</p>"},{"location":"api/rendering/vulkan/#bindbuffermemorydevicegroupinfo","title":"BindBufferMemoryDeviceGroupInfo","text":"<p><code>struct</code></p> <pre><code>type BindBufferMemoryDeviceGroupInfo struct {\n    SType            StructureType\n    PNext            unsafe.Pointer\n    DeviceIndexCount uint32\n    PDeviceIndices   *uint32\n}\n</code></pre> <p>BindBufferMemoryDeviceGroupInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBindBufferMemoryDeviceGroupInfo.html</p>"},{"location":"api/rendering/vulkan/#bindbuffermemoryinfo","title":"BindBufferMemoryInfo","text":"<p><code>struct</code></p> <pre><code>type BindBufferMemoryInfo struct {\n    SType        StructureType\n    PNext        unsafe.Pointer\n    Buffer       Buffer\n    Memory       DeviceMemory\n    MemoryOffset DeviceSize\n}\n</code></pre> <p>BindBufferMemoryInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBindBufferMemoryInfo.html</p>"},{"location":"api/rendering/vulkan/#bindimagememorydevicegroupinfo","title":"BindImageMemoryDeviceGroupInfo","text":"<p><code>struct</code></p> <pre><code>type BindImageMemoryDeviceGroupInfo struct {\n    SType                        StructureType\n    PNext                        unsafe.Pointer\n    DeviceIndexCount             uint32\n    PDeviceIndices               *uint32\n    SplitInstanceBindRegionCount uint32\n    PSplitInstanceBindRegions    *Rect2D\n}\n</code></pre> <p>BindImageMemoryDeviceGroupInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBindImageMemoryDeviceGroupInfo.html</p>"},{"location":"api/rendering/vulkan/#bindimagememoryinfo","title":"BindImageMemoryInfo","text":"<p><code>struct</code></p> <pre><code>type BindImageMemoryInfo struct {\n    SType        StructureType\n    PNext        unsafe.Pointer\n    Image        Image\n    Memory       DeviceMemory\n    MemoryOffset DeviceSize\n}\n</code></pre> <p>BindImageMemoryInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBindImageMemoryInfo.html</p>"},{"location":"api/rendering/vulkan/#bindimagememoryswapchaininfo","title":"BindImageMemorySwapchainInfo","text":"<p><code>struct</code></p> <pre><code>type BindImageMemorySwapchainInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    Swapchain  Swapchain\n    ImageIndex uint32\n}\n</code></pre> <p>BindImageMemorySwapchainInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkBindImageMemorySwapchainInfoKHR</p>"},{"location":"api/rendering/vulkan/#bindimageplanememoryinfo","title":"BindImagePlaneMemoryInfo","text":"<p><code>struct</code></p> <pre><code>type BindImagePlaneMemoryInfo struct {\n    SType       StructureType\n    PNext       unsafe.Pointer\n    PlaneAspect ImageAspectFlagBits\n}\n</code></pre> <p>BindImagePlaneMemoryInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBindImagePlaneMemoryInfo.html</p>"},{"location":"api/rendering/vulkan/#bindsparseinfo","title":"BindSparseInfo","text":"<p><code>struct</code></p> <pre><code>type BindSparseInfo struct {\n    SType                StructureType\n    PNext                unsafe.Pointer\n    WaitSemaphoreCount   uint32\n    PWaitSemaphores      *Semaphore\n    BufferBindCount      uint32\n    PBufferBinds         *SparseBufferMemoryBindInfo\n    ImageOpaqueBindCount uint32\n    PImageOpaqueBinds    *SparseImageOpaqueMemoryBindInfo\n    ImageBindCount       uint32\n    PImageBinds          *SparseImageMemoryBindInfo\n    SignalSemaphoreCount uint32\n    PSignalSemaphores    *Semaphore\n}\n</code></pre> <p>BindSparseInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBindSparseInfo.html</p>"},{"location":"api/rendering/vulkan/#blendfactor","title":"BlendFactor","text":"<p>int32 <pre><code>type BlendFactor int32\n</code></pre></p> <p>BlendFactor as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBlendFactor.html</p> <p>const ( BlendFactorZero BlendFactor = iota BlendFactorOne BlendFactor = 1 BlendFactorSrcColor BlendFactor = 2 BlendFactorOneMinusSrcColor BlendFactor = 3 BlendFactorDstColor BlendFactor = 4 BlendFactorOneMinusDstColor BlendFactor = 5 BlendFactorSrcAlpha BlendFactor = 6 BlendFactorOneMinusSrcAlpha BlendFactor = 7 BlendFactorDstAlpha BlendFactor = 8 BlendFactorOneMinusDstAlpha BlendFactor = 9 BlendFactorConstantColor BlendFactor = 10 BlendFactorOneMinusConstantColor BlendFactor = 11 BlendFactorConstantAlpha BlendFactor = 12 BlendFactorOneMinusConstantAlpha BlendFactor = 13 BlendFactorSrcAlphaSaturate BlendFactor = 14 BlendFactorSrc1Color BlendFactor = 15 BlendFactorOneMinusSrc1Color BlendFactor = 16 BlendFactorSrc1Alpha BlendFactor = 17 BlendFactorOneMinusSrc1Alpha BlendFactor = 18 BlendFactorBeginRange BlendFactor = 0 BlendFactorEndRange BlendFactor = 18 BlendFactorRangeSize BlendFactor = 19 BlendFactorMaxEnum BlendFactor = 2147483647 ) BlendFactor enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBlendFactor.html</p>"},{"location":"api/rendering/vulkan/#blendop","title":"BlendOp","text":"<p>int32 <pre><code>type BlendOp int32\n</code></pre></p> <p>BlendOp as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBlendOp.html</p> <p>const ( BlendOpAdd BlendOp = iota BlendOpSubtract BlendOp = 1 BlendOpReverseSubtract BlendOp = 2 BlendOpMin BlendOp = 3 BlendOpMax BlendOp = 4 BlendOpZero BlendOp = 1000148000 BlendOpSrc BlendOp = 1000148001 BlendOpDst BlendOp = 1000148002 BlendOpSrcOver BlendOp = 1000148003 BlendOpDstOver BlendOp = 1000148004 BlendOpSrcIn BlendOp = 1000148005 BlendOpDstIn BlendOp = 1000148006 BlendOpSrcOut BlendOp = 1000148007 BlendOpDstOut BlendOp = 1000148008 BlendOpSrcAtop BlendOp = 1000148009 BlendOpDstAtop BlendOp = 1000148010 BlendOpXor BlendOp = 1000148011 BlendOpMultiply BlendOp = 1000148012 BlendOpScreen BlendOp = 1000148013 BlendOpOverlay BlendOp = 1000148014 BlendOpDarken BlendOp = 1000148015 BlendOpLighten BlendOp = 1000148016 BlendOpColordodge BlendOp = 1000148017 BlendOpColorburn BlendOp = 1000148018 BlendOpHardlight BlendOp = 1000148019 BlendOpSoftlight BlendOp = 1000148020 BlendOpDifference BlendOp = 1000148021 BlendOpExclusion BlendOp = 1000148022 BlendOpInvert BlendOp = 1000148023 BlendOpInvertRgb BlendOp = 1000148024 BlendOpLineardodge BlendOp = 1000148025 BlendOpLinearburn BlendOp = 1000148026 BlendOpVividlight BlendOp = 1000148027 BlendOpLinearlight BlendOp = 1000148028 BlendOpPinlight BlendOp = 1000148029 BlendOpHardmix BlendOp = 1000148030 BlendOpHslHue BlendOp = 1000148031 BlendOpHslSaturation BlendOp = 1000148032 BlendOpHslColor BlendOp = 1000148033 BlendOpHslLuminosity BlendOp = 1000148034 BlendOpPlus BlendOp = 1000148035 BlendOpPlusClamped BlendOp = 1000148036 BlendOpPlusClampedAlpha BlendOp = 1000148037 BlendOpPlusDarker BlendOp = 1000148038 BlendOpMinus BlendOp = 1000148039 BlendOpMinusClamped BlendOp = 1000148040 BlendOpContrast BlendOp = 1000148041 BlendOpInvertOvg BlendOp = 1000148042 BlendOpRed BlendOp = 1000148043 BlendOpGreen BlendOp = 1000148044 BlendOpBlue BlendOp = 1000148045 BlendOpBeginRange BlendOp = 0 BlendOpEndRange BlendOp = 4 BlendOpRangeSize BlendOp = 5 BlendOpMaxEnum BlendOp = 2147483647 ) BlendOp enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBlendOp.html</p>"},{"location":"api/rendering/vulkan/#blendoverlap","title":"BlendOverlap","text":"<p>int32 <pre><code>type BlendOverlap int32\n</code></pre></p> <p>BlendOverlap as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBlendOverlapEXT.html</p> <p>const ( BlendOverlapUncorrelated BlendOverlap = iota BlendOverlapDisjoint BlendOverlap = 1 BlendOverlapConjoint BlendOverlap = 2 BlendOverlapBeginRange BlendOverlap = 0 BlendOverlapEndRange BlendOverlap = 2 BlendOverlapRangeSize BlendOverlap = 3 BlendOverlapMaxEnum BlendOverlap = 2147483647 ) BlendOverlap enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBlendOverlapEXT.html</p>"},{"location":"api/rendering/vulkan/#bool32","title":"Bool32","text":"<p>uint32 <pre><code>type Bool32 uint32\n</code></pre></p> <p>Bool32 type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBool32.html</p>"},{"location":"api/rendering/vulkan/#bool32b","title":"Bool32.B","text":"<pre><code>func (b Bool32) B() bool\n</code></pre>"},{"location":"api/rendering/vulkan/#bordercolor","title":"BorderColor","text":"<p>int32 <pre><code>type BorderColor int32\n</code></pre></p> <p>BorderColor as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBorderColor.html</p> <p>const ( BorderColorFloatTransparentBlack BorderColor = iota BorderColorIntTransparentBlack BorderColor = 1 BorderColorFloatOpaqueBlack BorderColor = 2 BorderColorIntOpaqueBlack BorderColor = 3 BorderColorFloatOpaqueWhite BorderColor = 4 BorderColorIntOpaqueWhite BorderColor = 5 BorderColorBeginRange BorderColor = 0 BorderColorEndRange BorderColor = 5 BorderColorRangeSize BorderColor = 6 BorderColorMaxEnum BorderColor = 2147483647 ) BorderColor enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBorderColor.html</p>"},{"location":"api/rendering/vulkan/#buffer","title":"Buffer","text":"<p>C.VkBuffer <pre><code>type Buffer C.VkBuffer\n</code></pre></p> <p>Buffer as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBuffer.html</p>"},{"location":"api/rendering/vulkan/#buffercopy","title":"BufferCopy","text":"<p><code>struct</code></p> <pre><code>type BufferCopy struct {\n    SrcOffset DeviceSize\n    DstOffset DeviceSize\n    Size      DeviceSize\n}\n</code></pre> <p>BufferCopy as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBufferCopy.html</p>"},{"location":"api/rendering/vulkan/#buffercreateflagbits","title":"BufferCreateFlagBits","text":"<p>int32 <pre><code>type BufferCreateFlagBits int32\n</code></pre></p> <p>BufferCreateFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBufferCreateFlagBits.html</p> <p>const ( BufferCreateSparseBindingBit BufferCreateFlagBits = 1 BufferCreateSparseResidencyBit BufferCreateFlagBits = 2 BufferCreateSparseAliasedBit BufferCreateFlagBits = 4 BufferCreateProtectedBit BufferCreateFlagBits = 8 BufferCreateFlagBitsMaxEnum BufferCreateFlagBits = 2147483647 ) BufferCreateFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBufferCreateFlagBits.html</p>"},{"location":"api/rendering/vulkan/#buffercreateflags","title":"BufferCreateFlags","text":"<p>uint32 <pre><code>type BufferCreateFlags uint32\n</code></pre></p> <p>BufferCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBufferCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#buffercreateinfo","title":"BufferCreateInfo","text":"<p><code>struct</code></p> <pre><code>type BufferCreateInfo struct {\n    SType                 StructureType\n    PNext                 unsafe.Pointer\n    Flags                 BufferCreateFlags\n    Size                  DeviceSize\n    Usage                 BufferUsageFlags\n    SharingMode           SharingMode\n    QueueFamilyIndexCount uint32\n    PQueueFamilyIndices   *uint32\n}\n</code></pre> <p>BufferCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBufferCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#bufferimagecopy","title":"BufferImageCopy","text":"<p><code>struct</code></p> <pre><code>type BufferImageCopy struct {\n    BufferOffset      DeviceSize\n    BufferRowLength   uint32\n    BufferImageHeight uint32\n    ImageSubresource  ImageSubresourceLayers\n    ImageOffset       Offset3D\n    ImageExtent       Extent3D\n}\n</code></pre> <p>BufferImageCopy as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBufferImageCopy.html</p>"},{"location":"api/rendering/vulkan/#buffermemorybarrier","title":"BufferMemoryBarrier","text":"<p><code>struct</code></p> <pre><code>type BufferMemoryBarrier struct {\n    SType               StructureType\n    PNext               unsafe.Pointer\n    SrcAccessMask       AccessFlags\n    DstAccessMask       AccessFlags\n    SrcQueueFamilyIndex uint32\n    DstQueueFamilyIndex uint32\n    Buffer              Buffer\n    Offset              DeviceSize\n    Size                DeviceSize\n}\n</code></pre> <p>BufferMemoryBarrier as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBufferMemoryBarrier.html</p>"},{"location":"api/rendering/vulkan/#buffermemoryrequirementsinfo2","title":"BufferMemoryRequirementsInfo2","text":"<p><code>struct</code></p> <pre><code>type BufferMemoryRequirementsInfo2 struct {\n    SType  StructureType\n    PNext  unsafe.Pointer\n    Buffer Buffer\n}\n</code></pre> <p>BufferMemoryRequirementsInfo2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBufferMemoryRequirementsInfo2.html</p>"},{"location":"api/rendering/vulkan/#bufferusageflagbits","title":"BufferUsageFlagBits","text":"<p>int32 <pre><code>type BufferUsageFlagBits int32\n</code></pre></p> <p>BufferUsageFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBufferUsageFlagBits.html</p> <p>const ( BufferUsageTransferSrcBit BufferUsageFlagBits = 1 BufferUsageTransferDstBit BufferUsageFlagBits = 2 BufferUsageUniformTexelBufferBit BufferUsageFlagBits = 4 BufferUsageStorageTexelBufferBit BufferUsageFlagBits = 8 BufferUsageUniformBufferBit BufferUsageFlagBits = 16 BufferUsageStorageBufferBit BufferUsageFlagBits = 32 BufferUsageIndexBufferBit BufferUsageFlagBits = 64 BufferUsageVertexBufferBit BufferUsageFlagBits = 128 BufferUsageIndirectBufferBit BufferUsageFlagBits = 256 BufferUsageTransformFeedbackBufferBit BufferUsageFlagBits = 2048 BufferUsageTransformFeedbackCounterBufferBit BufferUsageFlagBits = 4096 BufferUsageConditionalRenderingBit BufferUsageFlagBits = 512 BufferUsageRaytracingBitNvx BufferUsageFlagBits = 1024 BufferUsageFlagBitsMaxEnum BufferUsageFlagBits = 2147483647 ) BufferUsageFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBufferUsageFlagBits.html</p>"},{"location":"api/rendering/vulkan/#bufferusageflags","title":"BufferUsageFlags","text":"<p>uint32 <pre><code>type BufferUsageFlags uint32\n</code></pre></p> <p>BufferUsageFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBufferUsageFlags.html</p>"},{"location":"api/rendering/vulkan/#bufferview","title":"BufferView","text":"<p>C.VkBufferView <pre><code>type BufferView C.VkBufferView\n</code></pre></p> <p>BufferView as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBufferView.html</p>"},{"location":"api/rendering/vulkan/#bufferviewcreateflags","title":"BufferViewCreateFlags","text":"<p>uint32 <pre><code>type BufferViewCreateFlags uint32\n</code></pre></p> <p>BufferViewCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBufferViewCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#bufferviewcreateinfo","title":"BufferViewCreateInfo","text":"<p><code>struct</code></p> <pre><code>type BufferViewCreateInfo struct {\n    SType  StructureType\n    PNext  unsafe.Pointer\n    Flags  BufferViewCreateFlags\n    Buffer Buffer\n    Format Format\n    Offset DeviceSize\n    Range  DeviceSize\n}\n</code></pre> <p>BufferViewCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkBufferViewCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#buildaccelerationstructureflagbitsnvx","title":"BuildAccelerationStructureFlagBitsNVX","text":"<p>int32 <pre><code>type BuildAccelerationStructureFlagBitsNVX int32\n</code></pre></p> <p>BuildAccelerationStructureFlagBitsNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkBuildAccelerationStructureFlagBitsNVX</p> <p>const ( BuildAccelerationStructureAllowUpdateBitNvx BuildAccelerationStructureFlagBitsNVX = 1 BuildAccelerationStructureAllowCompactionBitNvx BuildAccelerationStructureFlagBitsNVX = 2 BuildAccelerationStructurePreferFastTraceBitNvx BuildAccelerationStructureFlagBitsNVX = 4 BuildAccelerationStructurePreferFastBuildBitNvx BuildAccelerationStructureFlagBitsNVX = 8 BuildAccelerationStructureLowMemoryBitNvx BuildAccelerationStructureFlagBitsNVX = 16 BuildAccelerationStructureFlagBitsMaxEnumNvx BuildAccelerationStructureFlagBitsNVX = 2147483647 ) BuildAccelerationStructureFlagBitsNVX enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkBuildAccelerationStructureFlagBitsNVX</p>"},{"location":"api/rendering/vulkan/#buildaccelerationstructureflagsnvx","title":"BuildAccelerationStructureFlagsNVX","text":"<p>uint32 <pre><code>type BuildAccelerationStructureFlagsNVX uint32\n</code></pre></p> <p>BuildAccelerationStructureFlagsNVX type as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkBuildAccelerationStructureFlagsNVX</p>"},{"location":"api/rendering/vulkan/#calibratedtimestampinfo","title":"CalibratedTimestampInfo","text":"<p><code>struct</code></p> <pre><code>type CalibratedTimestampInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    TimeDomain TimeDomain\n}\n</code></pre> <p>CalibratedTimestampInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCalibratedTimestampInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#char","title":"Char","text":"<p>C.char <pre><code>type Char = C.char\n</code></pre></p>"},{"location":"api/rendering/vulkan/#checkpointdatanv","title":"CheckpointDataNV","text":"<p><code>struct</code></p> <pre><code>type CheckpointDataNV struct {\n    SType             StructureType\n    PNext             unsafe.Pointer\n    Stage             PipelineStageFlagBits\n    PCheckpointMarker unsafe.Pointer\n}\n</code></pre> <p>CheckpointDataNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCheckpointDataNV.html</p>"},{"location":"api/rendering/vulkan/#chromalocation","title":"ChromaLocation","text":"<p>int32 <pre><code>type ChromaLocation int32\n</code></pre></p> <p>ChromaLocation as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkChromaLocation.html</p> <p>const ( ChromaLocationCositedEven ChromaLocation = iota ChromaLocationMidpoint ChromaLocation = 1 ChromaLocationBeginRange ChromaLocation = 0 ChromaLocationEndRange ChromaLocation = 1 ChromaLocationRangeSize ChromaLocation = 2 ChromaLocationMaxEnum ChromaLocation = 2147483647 ) ChromaLocation enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkChromaLocation.html</p>"},{"location":"api/rendering/vulkan/#clearattachment","title":"ClearAttachment","text":"<p><code>struct</code></p> <pre><code>type ClearAttachment struct {\n    AspectMask      ImageAspectFlags\n    ColorAttachment uint32\n    ClearValue      ClearValue\n}\n</code></pre> <p>ClearAttachment as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkClearAttachment.html</p>"},{"location":"api/rendering/vulkan/#clearcolorvalue","title":"ClearColorValue","text":"<p>[sizeofClearColorValue]byte <pre><code>type ClearColorValue [sizeofClearColorValue]byte\n</code></pre></p>"},{"location":"api/rendering/vulkan/#cleardepthstencilvalue","title":"ClearDepthStencilValue","text":"<p><code>struct</code></p> <pre><code>type ClearDepthStencilValue struct {\n    Depth   float32\n    Stencil uint32\n}\n</code></pre> <p>ClearDepthStencilValue as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkClearDepthStencilValue.html</p>"},{"location":"api/rendering/vulkan/#clearrect","title":"ClearRect","text":"<p><code>struct</code></p> <pre><code>type ClearRect struct {\n    Rect           Rect2D\n    BaseArrayLayer uint32\n    LayerCount     uint32\n}\n</code></pre> <p>ClearRect as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkClearRect.html</p>"},{"location":"api/rendering/vulkan/#clearvalue","title":"ClearValue","text":"<p>[sizeofClearValue]byte <pre><code>type ClearValue [sizeofClearValue]byte\n</code></pre></p>"},{"location":"api/rendering/vulkan/#newcleardepthstencil","title":"NewClearDepthStencil","text":"<pre><code>func NewClearDepthStencil(depth float32, stencil uint32) ClearValue\n</code></pre>"},{"location":"api/rendering/vulkan/#newclearvalue","title":"NewClearValue","text":"<pre><code>func NewClearValue(color []float32) ClearValue\n</code></pre>"},{"location":"api/rendering/vulkan/#clearvaluesetcolor","title":"ClearValue.SetColor","text":"<pre><code>func (cv *ClearValue) SetColor(color []float32)\n</code></pre>"},{"location":"api/rendering/vulkan/#clearvaluesetdepthstencil","title":"ClearValue.SetDepthStencil","text":"<pre><code>func (cv *ClearValue) SetDepthStencil(depth float32, stencil uint32)\n</code></pre>"},{"location":"api/rendering/vulkan/#cmdprocesscommandsinfonvx","title":"CmdProcessCommandsInfoNVX","text":"<p><code>struct</code></p> <pre><code>type CmdProcessCommandsInfoNVX struct {\n    SType                      StructureType\n    PNext                      unsafe.Pointer\n    ObjectTable                ObjectTableNVX\n    IndirectCommandsLayout     IndirectCommandsLayoutNVX\n    IndirectCommandsTokenCount uint32\n    PIndirectCommandsTokens    *IndirectCommandsTokenNVX\n    MaxSequencesCount          uint32\n    TargetCommandBuffer        CommandBuffer\n    SequencesCountBuffer       Buffer\n    SequencesCountOffset       DeviceSize\n    SequencesIndexBuffer       Buffer\n    SequencesIndexOffset       DeviceSize\n}\n</code></pre> <p>CmdProcessCommandsInfoNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkCmdProcessCommandsInfoNVX</p>"},{"location":"api/rendering/vulkan/#cmdreservespaceforcommandsinfonvx","title":"CmdReserveSpaceForCommandsInfoNVX","text":"<p><code>struct</code></p> <pre><code>type CmdReserveSpaceForCommandsInfoNVX struct {\n    SType                  StructureType\n    PNext                  unsafe.Pointer\n    ObjectTable            ObjectTableNVX\n    IndirectCommandsLayout IndirectCommandsLayoutNVX\n    MaxSequencesCount      uint32\n}\n</code></pre> <p>CmdReserveSpaceForCommandsInfoNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkCmdReserveSpaceForCommandsInfoNVX</p>"},{"location":"api/rendering/vulkan/#coarsesamplelocationnv","title":"CoarseSampleLocationNV","text":"<p><code>struct</code></p> <pre><code>type CoarseSampleLocationNV struct {\n    PixelX uint32\n    PixelY uint32\n    Sample uint32\n}\n</code></pre> <p>CoarseSampleLocationNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCoarseSampleLocationNV.html</p>"},{"location":"api/rendering/vulkan/#coarsesampleordercustomnv","title":"CoarseSampleOrderCustomNV","text":"<p><code>struct</code></p> <pre><code>type CoarseSampleOrderCustomNV struct {\n    ShadingRate         ShadingRatePaletteEntryNV\n    SampleCount         uint32\n    SampleLocationCount uint32\n    PSampleLocations    *CoarseSampleLocationNV\n}\n</code></pre> <p>CoarseSampleOrderCustomNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCoarseSampleOrderCustomNV.html</p>"},{"location":"api/rendering/vulkan/#coarsesampleordertypenv","title":"CoarseSampleOrderTypeNV","text":"<p>int32 <pre><code>type CoarseSampleOrderTypeNV int32\n</code></pre></p> <p>CoarseSampleOrderTypeNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCoarseSampleOrderTypeNV.html</p> <p>const ( CoarseSampleOrderTypeDefaultNv CoarseSampleOrderTypeNV = iota CoarseSampleOrderTypeCustomNv CoarseSampleOrderTypeNV = 1 CoarseSampleOrderTypePixelMajorNv CoarseSampleOrderTypeNV = 2 CoarseSampleOrderTypeSampleMajorNv CoarseSampleOrderTypeNV = 3 CoarseSampleOrderTypeBeginRangeNv CoarseSampleOrderTypeNV = 0 CoarseSampleOrderTypeEndRangeNv CoarseSampleOrderTypeNV = 3 CoarseSampleOrderTypeRangeSizeNv CoarseSampleOrderTypeNV = 4 CoarseSampleOrderTypeMaxEnumNv CoarseSampleOrderTypeNV = 2147483647 ) CoarseSampleOrderTypeNV enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCoarseSampleOrderTypeNV.html</p>"},{"location":"api/rendering/vulkan/#colorcomponentflagbits","title":"ColorComponentFlagBits","text":"<p>int32 <pre><code>type ColorComponentFlagBits int32\n</code></pre></p> <p>ColorComponentFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkColorComponentFlagBits.html</p> <p>const ( ColorComponentRBit ColorComponentFlagBits = 1 ColorComponentGBit ColorComponentFlagBits = 2 ColorComponentBBit ColorComponentFlagBits = 4 ColorComponentABit ColorComponentFlagBits = 8 ColorComponentFlagBitsMaxEnum ColorComponentFlagBits = 2147483647 ) ColorComponentFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkColorComponentFlagBits.html</p>"},{"location":"api/rendering/vulkan/#colorcomponentflags","title":"ColorComponentFlags","text":"<p>uint32 <pre><code>type ColorComponentFlags uint32\n</code></pre></p> <p>ColorComponentFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkColorComponentFlags.html</p>"},{"location":"api/rendering/vulkan/#colorspace","title":"ColorSpace","text":"<p>int32 <pre><code>type ColorSpace int32\n</code></pre></p> <p>ColorSpace as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkColorSpaceKHR</p> <p>const ( ColorSpaceSrgbNonlinear ColorSpace = iota ColorSpaceDisplayP3Nonlinear ColorSpace = 1000104001 ColorSpaceExtendedSrgbLinear ColorSpace = 1000104002 ColorSpaceDciP3Linear ColorSpace = 1000104003 ColorSpaceDciP3Nonlinear ColorSpace = 1000104004 ColorSpaceBt709Linear ColorSpace = 1000104005 ColorSpaceBt709Nonlinear ColorSpace = 1000104006 ColorSpaceBt2020Linear ColorSpace = 1000104007 ColorSpaceHdr10St2084 ColorSpace = 1000104008 ColorSpaceDolbyvision ColorSpace = 1000104009 ColorSpaceHdr10Hlg ColorSpace = 1000104010 ColorSpaceAdobergbLinear ColorSpace = 1000104011 ColorSpaceAdobergbNonlinear ColorSpace = 1000104012 ColorSpacePassThrough ColorSpace = 1000104013 ColorSpaceExtendedSrgbNonlinear ColorSpace = 1000104014 ColorspaceSrgbNonlinear ColorSpace = 0 ColorSpaceBeginRange ColorSpace = 0 ColorSpaceEndRange ColorSpace = 0 ColorSpaceRangeSize ColorSpace = 1 ColorSpaceMaxEnum ColorSpace = 2147483647 ) ColorSpace enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkColorSpaceKHR</p>"},{"location":"api/rendering/vulkan/#commandbuffer","title":"CommandBuffer","text":"<p>C.VkCommandBuffer <pre><code>type CommandBuffer C.VkCommandBuffer\n</code></pre></p> <p>CommandBuffer as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandBuffer.html</p>"},{"location":"api/rendering/vulkan/#commandbufferallocateinfo","title":"CommandBufferAllocateInfo","text":"<p><code>struct</code></p> <pre><code>type CommandBufferAllocateInfo struct {\n    SType              StructureType\n    PNext              unsafe.Pointer\n    CommandPool        CommandPool\n    Level              CommandBufferLevel\n    CommandBufferCount uint32\n}\n</code></pre> <p>CommandBufferAllocateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandBufferAllocateInfo.html</p>"},{"location":"api/rendering/vulkan/#commandbufferbegininfo","title":"CommandBufferBeginInfo","text":"<p><code>struct</code></p> <pre><code>type CommandBufferBeginInfo struct {\n    SType            StructureType\n    PNext            unsafe.Pointer\n    Flags            CommandBufferUsageFlags\n    PInheritanceInfo *CommandBufferInheritanceInfo\n}\n</code></pre> <p>CommandBufferBeginInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandBufferBeginInfo.html</p>"},{"location":"api/rendering/vulkan/#commandbufferinheritanceconditionalrenderinginfo","title":"CommandBufferInheritanceConditionalRenderingInfo","text":"<p><code>struct</code></p> <pre><code>type CommandBufferInheritanceConditionalRenderingInfo struct {\n    SType                      StructureType\n    PNext                      unsafe.Pointer\n    ConditionalRenderingEnable Bool32\n}\n</code></pre> <p>CommandBufferInheritanceConditionalRenderingInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandBufferInheritanceConditionalRenderingInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#commandbufferinheritanceinfo","title":"CommandBufferInheritanceInfo","text":"<p><code>struct</code></p> <pre><code>type CommandBufferInheritanceInfo struct {\n    SType                StructureType\n    PNext                unsafe.Pointer\n    RenderPass           RenderPass\n    Subpass              uint32\n    Framebuffer          Framebuffer\n    OcclusionQueryEnable Bool32\n    QueryFlags           QueryControlFlags\n    PipelineStatistics   QueryPipelineStatisticFlags\n}\n</code></pre> <p>CommandBufferInheritanceInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandBufferInheritanceInfo.html</p>"},{"location":"api/rendering/vulkan/#commandbufferlevel","title":"CommandBufferLevel","text":"<p>int32 <pre><code>type CommandBufferLevel int32\n</code></pre></p> <p>CommandBufferLevel as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandBufferLevel.html</p> <p>const ( CommandBufferLevelPrimary CommandBufferLevel = iota CommandBufferLevelSecondary CommandBufferLevel = 1 CommandBufferLevelBeginRange CommandBufferLevel = 0 CommandBufferLevelEndRange CommandBufferLevel = 1 CommandBufferLevelRangeSize CommandBufferLevel = 2 CommandBufferLevelMaxEnum CommandBufferLevel = 2147483647 ) CommandBufferLevel enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandBufferLevel.html</p>"},{"location":"api/rendering/vulkan/#commandbufferresetflagbits","title":"CommandBufferResetFlagBits","text":"<p>int32 <pre><code>type CommandBufferResetFlagBits int32\n</code></pre></p> <p>CommandBufferResetFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandBufferResetFlagBits.html</p> <p>const ( CommandBufferResetReleaseResourcesBit CommandBufferResetFlagBits = 1 CommandBufferResetFlagBitsMaxEnum CommandBufferResetFlagBits = 2147483647 ) CommandBufferResetFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandBufferResetFlagBits.html</p>"},{"location":"api/rendering/vulkan/#commandbufferresetflags","title":"CommandBufferResetFlags","text":"<p>uint32 <pre><code>type CommandBufferResetFlags uint32\n</code></pre></p> <p>CommandBufferResetFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandBufferResetFlags.html</p>"},{"location":"api/rendering/vulkan/#commandbufferusageflagbits","title":"CommandBufferUsageFlagBits","text":"<p>int32 <pre><code>type CommandBufferUsageFlagBits int32\n</code></pre></p> <p>CommandBufferUsageFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandBufferUsageFlagBits.html</p> <p>const ( CommandBufferUsageOneTimeSubmitBit CommandBufferUsageFlagBits = 1 CommandBufferUsageRenderPassContinueBit CommandBufferUsageFlagBits = 2 CommandBufferUsageSimultaneousUseBit CommandBufferUsageFlagBits = 4 CommandBufferUsageFlagBitsMaxEnum CommandBufferUsageFlagBits = 2147483647 ) CommandBufferUsageFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandBufferUsageFlagBits.html</p>"},{"location":"api/rendering/vulkan/#commandbufferusageflags","title":"CommandBufferUsageFlags","text":"<p>uint32 <pre><code>type CommandBufferUsageFlags uint32\n</code></pre></p> <p>CommandBufferUsageFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandBufferUsageFlags.html</p>"},{"location":"api/rendering/vulkan/#commandpool","title":"CommandPool","text":"<p>C.VkCommandPool <pre><code>type CommandPool C.VkCommandPool\n</code></pre></p> <p>CommandPool as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandPool.html</p>"},{"location":"api/rendering/vulkan/#commandpoolcreateflagbits","title":"CommandPoolCreateFlagBits","text":"<p>int32 <pre><code>type CommandPoolCreateFlagBits int32\n</code></pre></p> <p>CommandPoolCreateFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandPoolCreateFlagBits.html</p> <p>const ( CommandPoolCreateTransientBit CommandPoolCreateFlagBits = 1 CommandPoolCreateResetCommandBufferBit CommandPoolCreateFlagBits = 2 CommandPoolCreateProtectedBit CommandPoolCreateFlagBits = 4 CommandPoolCreateFlagBitsMaxEnum CommandPoolCreateFlagBits = 2147483647 ) CommandPoolCreateFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandPoolCreateFlagBits.html</p>"},{"location":"api/rendering/vulkan/#commandpoolcreateflags","title":"CommandPoolCreateFlags","text":"<p>uint32 <pre><code>type CommandPoolCreateFlags uint32\n</code></pre></p> <p>CommandPoolCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandPoolCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#commandpoolcreateinfo","title":"CommandPoolCreateInfo","text":"<p><code>struct</code></p> <pre><code>type CommandPoolCreateInfo struct {\n    SType            StructureType\n    PNext            unsafe.Pointer\n    Flags            CommandPoolCreateFlags\n    QueueFamilyIndex uint32\n}\n</code></pre> <p>CommandPoolCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandPoolCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#commandpoolresetflagbits","title":"CommandPoolResetFlagBits","text":"<p>int32 <pre><code>type CommandPoolResetFlagBits int32\n</code></pre></p> <p>CommandPoolResetFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandPoolResetFlagBits.html</p> <p>const ( CommandPoolResetReleaseResourcesBit CommandPoolResetFlagBits = 1 CommandPoolResetFlagBitsMaxEnum CommandPoolResetFlagBits = 2147483647 ) CommandPoolResetFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandPoolResetFlagBits.html</p>"},{"location":"api/rendering/vulkan/#commandpoolresetflags","title":"CommandPoolResetFlags","text":"<p>uint32 <pre><code>type CommandPoolResetFlags uint32\n</code></pre></p> <p>CommandPoolResetFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandPoolResetFlags.html</p>"},{"location":"api/rendering/vulkan/#commandpooltrimflags","title":"CommandPoolTrimFlags","text":"<p>uint32 <pre><code>type CommandPoolTrimFlags uint32\n</code></pre></p> <p>CommandPoolTrimFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCommandPoolTrimFlags.html</p>"},{"location":"api/rendering/vulkan/#compareop","title":"CompareOp","text":"<p>int32 <pre><code>type CompareOp int32\n</code></pre></p> <p>CompareOp as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCompareOp.html</p> <p>const ( CompareOpNever CompareOp = iota CompareOpLess CompareOp = 1 CompareOpEqual CompareOp = 2 CompareOpLessOrEqual CompareOp = 3 CompareOpGreater CompareOp = 4 CompareOpNotEqual CompareOp = 5 CompareOpGreaterOrEqual CompareOp = 6 CompareOpAlways CompareOp = 7 CompareOpBeginRange CompareOp = 0 CompareOpEndRange CompareOp = 7 CompareOpRangeSize CompareOp = 8 CompareOpMaxEnum CompareOp = 2147483647 ) CompareOp enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCompareOp.html</p>"},{"location":"api/rendering/vulkan/#componentmapping","title":"ComponentMapping","text":"<p><code>struct</code></p> <pre><code>type ComponentMapping struct {\n    R ComponentSwizzle\n    G ComponentSwizzle\n    B ComponentSwizzle\n    A ComponentSwizzle\n}\n</code></pre> <p>ComponentMapping as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkComponentMapping.html</p>"},{"location":"api/rendering/vulkan/#componentswizzle","title":"ComponentSwizzle","text":"<p>int32 <pre><code>type ComponentSwizzle int32\n</code></pre></p> <p>ComponentSwizzle as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkComponentSwizzle.html</p> <p>const ( ComponentSwizzleIdentity ComponentSwizzle = iota ComponentSwizzleZero ComponentSwizzle = 1 ComponentSwizzleOne ComponentSwizzle = 2 ComponentSwizzleR ComponentSwizzle = 3 ComponentSwizzleG ComponentSwizzle = 4 ComponentSwizzleB ComponentSwizzle = 5 ComponentSwizzleA ComponentSwizzle = 6 ComponentSwizzleBeginRange ComponentSwizzle = 0 ComponentSwizzleEndRange ComponentSwizzle = 6 ComponentSwizzleRangeSize ComponentSwizzle = 7 ComponentSwizzleMaxEnum ComponentSwizzle = 2147483647 ) ComponentSwizzle enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkComponentSwizzle.html</p>"},{"location":"api/rendering/vulkan/#compositealphaflagbits","title":"CompositeAlphaFlagBits","text":"<p>int32 <pre><code>type CompositeAlphaFlagBits int32\n</code></pre></p> <p>CompositeAlphaFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkCompositeAlphaFlagBitsKHR</p> <p>const ( CompositeAlphaOpaqueBit CompositeAlphaFlagBits = 1 CompositeAlphaPreMultipliedBit CompositeAlphaFlagBits = 2 CompositeAlphaPostMultipliedBit CompositeAlphaFlagBits = 4 CompositeAlphaInheritBit CompositeAlphaFlagBits = 8 CompositeAlphaFlagBitsMaxEnum CompositeAlphaFlagBits = 2147483647 ) CompositeAlphaFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkCompositeAlphaFlagBitsKHR</p>"},{"location":"api/rendering/vulkan/#compositealphaflags","title":"CompositeAlphaFlags","text":"<p>uint32 <pre><code>type CompositeAlphaFlags uint32\n</code></pre></p> <p>CompositeAlphaFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkCompositeAlphaFlagsKHR</p>"},{"location":"api/rendering/vulkan/#computepipelinecreateinfo","title":"ComputePipelineCreateInfo","text":"<p><code>struct</code></p> <pre><code>type ComputePipelineCreateInfo struct {\n    SType              StructureType\n    PNext              unsafe.Pointer\n    Flags              PipelineCreateFlags\n    Stage              PipelineShaderStageCreateInfo\n    Layout             PipelineLayout\n    BasePipelineHandle Pipeline\n    BasePipelineIndex  int32\n}\n</code></pre> <p>ComputePipelineCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkComputePipelineCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#conditionalrenderingbegininfo","title":"ConditionalRenderingBeginInfo","text":"<p><code>struct</code></p> <pre><code>type ConditionalRenderingBeginInfo struct {\n    SType  StructureType\n    PNext  unsafe.Pointer\n    Buffer Buffer\n    Offset DeviceSize\n    Flags  ConditionalRenderingFlags\n}\n</code></pre> <p>ConditionalRenderingBeginInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkConditionalRenderingBeginInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#conditionalrenderingflagbits","title":"ConditionalRenderingFlagBits","text":"<p>int32 <pre><code>type ConditionalRenderingFlagBits int32\n</code></pre></p> <p>ConditionalRenderingFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkConditionalRenderingFlagBitsEXT.html</p> <p>const ( ConditionalRenderingInvertedBit ConditionalRenderingFlagBits = 1 ConditionalRenderingFlagBitsMaxEnum ConditionalRenderingFlagBits = 2147483647 ) ConditionalRenderingFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkConditionalRenderingFlagBitsEXT.html</p>"},{"location":"api/rendering/vulkan/#conditionalrenderingflags","title":"ConditionalRenderingFlags","text":"<p>uint32 <pre><code>type ConditionalRenderingFlags uint32\n</code></pre></p> <p>ConditionalRenderingFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkConditionalRenderingFlagsEXT.html</p>"},{"location":"api/rendering/vulkan/#conformanceversion","title":"ConformanceVersion","text":"<p><code>struct</code></p> <pre><code>type ConformanceVersion struct {\n    Major    byte\n    Minor    byte\n    Subminor byte\n    Patch    byte\n}\n</code></pre> <p>ConformanceVersion as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkConformanceVersionKHR</p>"},{"location":"api/rendering/vulkan/#conservativerasterizationmode","title":"ConservativeRasterizationMode","text":"<p>int32 <pre><code>type ConservativeRasterizationMode int32\n</code></pre></p> <p>ConservativeRasterizationMode as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkConservativeRasterizationModeEXT.html</p> <p>const ( ConservativeRasterizationModeDisabled ConservativeRasterizationMode = iota ConservativeRasterizationModeOverestimate ConservativeRasterizationMode = 1 ConservativeRasterizationModeUnderestimate ConservativeRasterizationMode = 2 ConservativeRasterizationModeBeginRange ConservativeRasterizationMode = 0 ConservativeRasterizationModeEndRange ConservativeRasterizationMode = 2 ConservativeRasterizationModeRangeSize ConservativeRasterizationMode = 3 ConservativeRasterizationModeMaxEnum ConservativeRasterizationMode = 2147483647 ) ConservativeRasterizationMode enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkConservativeRasterizationModeEXT.html</p>"},{"location":"api/rendering/vulkan/#copyaccelerationstructuremodenvx","title":"CopyAccelerationStructureModeNVX","text":"<p>int32 <pre><code>type CopyAccelerationStructureModeNVX int32\n</code></pre></p> <p>CopyAccelerationStructureModeNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkCopyAccelerationStructureModeNVX</p> <p>const ( CopyAccelerationStructureModeCloneNvx CopyAccelerationStructureModeNVX = iota CopyAccelerationStructureModeCompactNvx CopyAccelerationStructureModeNVX = 1 CopyAccelerationStructureModeBeginRangeNvx CopyAccelerationStructureModeNVX = 0 CopyAccelerationStructureModeEndRangeNvx CopyAccelerationStructureModeNVX = 1 CopyAccelerationStructureModeRangeSizeNvx CopyAccelerationStructureModeNVX = 2 CopyAccelerationStructureModeMaxEnumNvx CopyAccelerationStructureModeNVX = 2147483647 ) CopyAccelerationStructureModeNVX enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkCopyAccelerationStructureModeNVX</p>"},{"location":"api/rendering/vulkan/#copydescriptorset","title":"CopyDescriptorSet","text":"<p><code>struct</code></p> <pre><code>type CopyDescriptorSet struct {\n    SType           StructureType\n    PNext           unsafe.Pointer\n    SrcSet          DescriptorSet\n    SrcBinding      uint32\n    SrcArrayElement uint32\n    DstSet          DescriptorSet\n    DstBinding      uint32\n    DstArrayElement uint32\n    DescriptorCount uint32\n}\n</code></pre> <p>CopyDescriptorSet as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCopyDescriptorSet.html</p>"},{"location":"api/rendering/vulkan/#coveragemodulationmodenv","title":"CoverageModulationModeNV","text":"<p>int32 <pre><code>type CoverageModulationModeNV int32\n</code></pre></p> <p>CoverageModulationModeNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCoverageModulationModeNV.html</p> <p>const ( CoverageModulationModeNoneNv CoverageModulationModeNV = iota CoverageModulationModeRgbNv CoverageModulationModeNV = 1 CoverageModulationModeAlphaNv CoverageModulationModeNV = 2 CoverageModulationModeRgbaNv CoverageModulationModeNV = 3 CoverageModulationModeBeginRangeNv CoverageModulationModeNV = 0 CoverageModulationModeEndRangeNv CoverageModulationModeNV = 3 CoverageModulationModeRangeSizeNv CoverageModulationModeNV = 4 CoverageModulationModeMaxEnumNv CoverageModulationModeNV = 2147483647 ) CoverageModulationModeNV enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCoverageModulationModeNV.html</p>"},{"location":"api/rendering/vulkan/#cullmodeflagbits","title":"CullModeFlagBits","text":"<p>int32 <pre><code>type CullModeFlagBits int32\n</code></pre></p> <p>CullModeFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCullModeFlagBits.html</p> <p>const ( CullModeNone CullModeFlagBits = iota CullModeFrontBit CullModeFlagBits = 1 CullModeBackBit CullModeFlagBits = 2 CullModeFrontAndBack CullModeFlagBits = 3 CullModeFlagBitsMaxEnum CullModeFlagBits = 2147483647 ) CullModeFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCullModeFlagBits.html</p>"},{"location":"api/rendering/vulkan/#cullmodeflags","title":"CullModeFlags","text":"<p>uint32 <pre><code>type CullModeFlags uint32\n</code></pre></p> <p>CullModeFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkCullModeFlags.html</p>"},{"location":"api/rendering/vulkan/#debugmarkermarkerinfo","title":"DebugMarkerMarkerInfo","text":"<p><code>struct</code></p> <pre><code>type DebugMarkerMarkerInfo struct {\n    SType       StructureType\n    PNext       unsafe.Pointer\n    PMarkerName *C.char\n    Color       [4]float32\n}\n</code></pre> <p>DebugMarkerMarkerInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugMarkerMarkerInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#debugmarkerobjectnameinfo","title":"DebugMarkerObjectNameInfo","text":"<p><code>struct</code></p> <pre><code>type DebugMarkerObjectNameInfo struct {\n    SType       StructureType\n    PNext       unsafe.Pointer\n    ObjectType  DebugReportObjectType\n    Object      uint64\n    PObjectName *C.char\n}\n</code></pre> <p>DebugMarkerObjectNameInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugMarkerObjectNameInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#debugmarkerobjecttaginfo","title":"DebugMarkerObjectTagInfo","text":"<p><code>struct</code></p> <pre><code>type DebugMarkerObjectTagInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    ObjectType DebugReportObjectType\n    Object     uint64\n    TagName    uint64\n    TagSize    uint\n    PTag       unsafe.Pointer\n}\n</code></pre> <p>DebugMarkerObjectTagInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugMarkerObjectTagInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#debugreportcallback","title":"DebugReportCallback","text":"<p>C.VkDebugReportCallbackEXT <pre><code>type DebugReportCallback C.VkDebugReportCallbackEXT\n</code></pre></p> <p>DebugReportCallback as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugReportCallbackEXT.html</p>"},{"location":"api/rendering/vulkan/#debugreportcallbackcreateinfo","title":"DebugReportCallbackCreateInfo","text":"<p><code>struct</code></p> <pre><code>type DebugReportCallbackCreateInfo struct {\n    SType       StructureType\n    PNext       unsafe.Pointer\n    Flags       DebugReportFlags\n    PfnCallback DebugReportCallbackFunc\n    PUserData   unsafe.Pointer\n}\n</code></pre> <p>DebugReportCallbackCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugReportCallbackCreateInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#debugreportcallbackfunc","title":"DebugReportCallbackFunc","text":"<p>func <pre><code>type DebugReportCallbackFunc func(flags DebugReportFlags, objectType DebugReportObjectType, object uint64, location uint, messageCode int32, pLayerPrefix string, pMessage string, pUserData unsafe.Pointer) Bool32\n</code></pre></p> <p>DebugReportCallbackFunc type as declared in vulkan/vulkan_core.h:6207</p>"},{"location":"api/rendering/vulkan/#debugreportflagbits","title":"DebugReportFlagBits","text":"<p>int32 <pre><code>type DebugReportFlagBits int32\n</code></pre></p> <p>DebugReportFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugReportFlagBitsEXT.html</p> <p>const ( DebugReportInformationBit DebugReportFlagBits = 1 DebugReportWarningBit DebugReportFlagBits = 2 DebugReportPerformanceWarningBit DebugReportFlagBits = 4 DebugReportErrorBit DebugReportFlagBits = 8 DebugReportDebugBit DebugReportFlagBits = 16 DebugReportFlagBitsMaxEnum DebugReportFlagBits = 2147483647 ) DebugReportFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugReportFlagBitsEXT.html</p>"},{"location":"api/rendering/vulkan/#debugreportflags","title":"DebugReportFlags","text":"<p>uint32 <pre><code>type DebugReportFlags uint32\n</code></pre></p> <p>DebugReportFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugReportFlagsEXT.html</p>"},{"location":"api/rendering/vulkan/#debugreportobjecttype","title":"DebugReportObjectType","text":"<p>int32 <pre><code>type DebugReportObjectType int32\n</code></pre></p> <p>DebugReportObjectType as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugReportObjectTypeEXT.html</p> <p>const ( DebugReportObjectTypeUnknown DebugReportObjectType = iota DebugReportObjectTypeInstance DebugReportObjectType = 1 DebugReportObjectTypePhysicalDevice DebugReportObjectType = 2 DebugReportObjectTypeDevice DebugReportObjectType = 3 DebugReportObjectTypeQueue DebugReportObjectType = 4 DebugReportObjectTypeSemaphore DebugReportObjectType = 5 DebugReportObjectTypeCommandBuffer DebugReportObjectType = 6 DebugReportObjectTypeFence DebugReportObjectType = 7 DebugReportObjectTypeDeviceMemory DebugReportObjectType = 8 DebugReportObjectTypeBuffer DebugReportObjectType = 9 DebugReportObjectTypeImage DebugReportObjectType = 10 DebugReportObjectTypeEvent DebugReportObjectType = 11 DebugReportObjectTypeQueryPool DebugReportObjectType = 12 DebugReportObjectTypeBufferView DebugReportObjectType = 13 DebugReportObjectTypeImageView DebugReportObjectType = 14 DebugReportObjectTypeShaderModule DebugReportObjectType = 15 DebugReportObjectTypePipelineCache DebugReportObjectType = 16 DebugReportObjectTypePipelineLayout DebugReportObjectType = 17 DebugReportObjectTypeRenderPass DebugReportObjectType = 18 DebugReportObjectTypePipeline DebugReportObjectType = 19 DebugReportObjectTypeDescriptorSetLayout DebugReportObjectType = 20 DebugReportObjectTypeSampler DebugReportObjectType = 21 DebugReportObjectTypeDescriptorPool DebugReportObjectType = 22 DebugReportObjectTypeDescriptorSet DebugReportObjectType = 23 DebugReportObjectTypeFramebuffer DebugReportObjectType = 24 DebugReportObjectTypeCommandPool DebugReportObjectType = 25 DebugReportObjectTypeSurfaceKhr DebugReportObjectType = 26 DebugReportObjectTypeSwapchainKhr DebugReportObjectType = 27 DebugReportObjectTypeDebugReportCallbackExt DebugReportObjectType = 28 DebugReportObjectTypeDisplayKhr DebugReportObjectType = 29 DebugReportObjectTypeDisplayModeKhr DebugReportObjectType = 30 DebugReportObjectTypeObjectTableNvx DebugReportObjectType = 31 DebugReportObjectTypeIndirectCommandsLayoutNvx DebugReportObjectType = 32 DebugReportObjectTypeValidationCacheExt DebugReportObjectType = 33 DebugReportObjectTypeSamplerYcbcrConversion DebugReportObjectType = 1000156000 DebugReportObjectTypeDescriptorUpdateTemplate DebugReportObjectType = 1000085000 DebugReportObjectTypeAccelerationStructureNvx DebugReportObjectType = 1000165000 DebugReportObjectTypeDebugReport DebugReportObjectType = 28 DebugReportObjectTypeValidationCache DebugReportObjectType = 33 DebugReportObjectTypeDescriptorUpdateTemplateKhr DebugReportObjectType = 1000085000 DebugReportObjectTypeSamplerYcbcrConversionKhr DebugReportObjectType = 1000156000 DebugReportObjectTypeBeginRange DebugReportObjectType = 0 DebugReportObjectTypeEndRange DebugReportObjectType = 33 DebugReportObjectTypeRangeSize DebugReportObjectType = 34 DebugReportObjectTypeMaxEnum DebugReportObjectType = 2147483647 ) DebugReportObjectType enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugReportObjectTypeEXT.html</p>"},{"location":"api/rendering/vulkan/#debugutilslabel","title":"DebugUtilsLabel","text":"<p><code>struct</code></p> <pre><code>type DebugUtilsLabel struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    PLabelName *C.char\n    Color      [4]float32\n}\n</code></pre> <p>DebugUtilsLabel as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugUtilsLabelEXT.html</p>"},{"location":"api/rendering/vulkan/#debugutilsmessageseverityflagbits","title":"DebugUtilsMessageSeverityFlagBits","text":"<p>int32 <pre><code>type DebugUtilsMessageSeverityFlagBits int32\n</code></pre></p> <p>DebugUtilsMessageSeverityFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugUtilsMessageSeverityFlagBitsEXT.html</p> <p>const ( DebugUtilsMessageSeverityVerboseBit DebugUtilsMessageSeverityFlagBits = 1 DebugUtilsMessageSeverityInfoBit DebugUtilsMessageSeverityFlagBits = 16 DebugUtilsMessageSeverityWarningBit DebugUtilsMessageSeverityFlagBits = 256 DebugUtilsMessageSeverityErrorBit DebugUtilsMessageSeverityFlagBits = 4096 DebugUtilsMessageSeverityFlagBitsMaxEnum DebugUtilsMessageSeverityFlagBits = 2147483647 ) DebugUtilsMessageSeverityFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugUtilsMessageSeverityFlagBitsEXT.html</p>"},{"location":"api/rendering/vulkan/#debugutilsmessageseverityflags","title":"DebugUtilsMessageSeverityFlags","text":"<p>uint32 <pre><code>type DebugUtilsMessageSeverityFlags uint32\n</code></pre></p> <p>DebugUtilsMessageSeverityFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugUtilsMessageSeverityFlagsEXT.html</p>"},{"location":"api/rendering/vulkan/#debugutilsmessagetypeflagbits","title":"DebugUtilsMessageTypeFlagBits","text":"<p>int32 <pre><code>type DebugUtilsMessageTypeFlagBits int32\n</code></pre></p> <p>DebugUtilsMessageTypeFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugUtilsMessageTypeFlagBitsEXT.html</p> <p>const ( DebugUtilsMessageTypeGeneralBit DebugUtilsMessageTypeFlagBits = 1 DebugUtilsMessageTypeValidationBit DebugUtilsMessageTypeFlagBits = 2 DebugUtilsMessageTypePerformanceBit DebugUtilsMessageTypeFlagBits = 4 DebugUtilsMessageTypeFlagBitsMaxEnum DebugUtilsMessageTypeFlagBits = 2147483647 ) DebugUtilsMessageTypeFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugUtilsMessageTypeFlagBitsEXT.html</p>"},{"location":"api/rendering/vulkan/#debugutilsmessagetypeflags","title":"DebugUtilsMessageTypeFlags","text":"<p>uint32 <pre><code>type DebugUtilsMessageTypeFlags uint32\n</code></pre></p> <p>DebugUtilsMessageTypeFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugUtilsMessageTypeFlagsEXT.html</p>"},{"location":"api/rendering/vulkan/#debugutilsobjectnameinfo","title":"DebugUtilsObjectNameInfo","text":"<p><code>struct</code></p> <pre><code>type DebugUtilsObjectNameInfo struct {\n    SType        StructureType\n    PNext        unsafe.Pointer\n    ObjectType   ObjectType\n    ObjectHandle uint64\n    PObjectName  *C.char\n}\n</code></pre> <p>DebugUtilsObjectNameInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugUtilsObjectNameInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#debugutilsobjecttaginfo","title":"DebugUtilsObjectTagInfo","text":"<p><code>struct</code></p> <pre><code>type DebugUtilsObjectTagInfo struct {\n    SType        StructureType\n    PNext        unsafe.Pointer\n    ObjectType   ObjectType\n    ObjectHandle uint64\n    TagName      uint64\n    TagSize      uint\n    PTag         unsafe.Pointer\n}\n</code></pre> <p>DebugUtilsObjectTagInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDebugUtilsObjectTagInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#dedicatedallocationbuffercreateinfonv","title":"DedicatedAllocationBufferCreateInfoNV","text":"<p><code>struct</code></p> <pre><code>type DedicatedAllocationBufferCreateInfoNV struct {\n    SType               StructureType\n    PNext               unsafe.Pointer\n    DedicatedAllocation Bool32\n}\n</code></pre> <p>DedicatedAllocationBufferCreateInfoNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDedicatedAllocationBufferCreateInfoNV.html</p>"},{"location":"api/rendering/vulkan/#dedicatedallocationimagecreateinfonv","title":"DedicatedAllocationImageCreateInfoNV","text":"<p><code>struct</code></p> <pre><code>type DedicatedAllocationImageCreateInfoNV struct {\n    SType               StructureType\n    PNext               unsafe.Pointer\n    DedicatedAllocation Bool32\n}\n</code></pre> <p>DedicatedAllocationImageCreateInfoNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDedicatedAllocationImageCreateInfoNV.html</p>"},{"location":"api/rendering/vulkan/#dedicatedallocationmemoryallocateinfonv","title":"DedicatedAllocationMemoryAllocateInfoNV","text":"<p><code>struct</code></p> <pre><code>type DedicatedAllocationMemoryAllocateInfoNV struct {\n    SType  StructureType\n    PNext  unsafe.Pointer\n    Image  Image\n    Buffer Buffer\n}\n</code></pre> <p>DedicatedAllocationMemoryAllocateInfoNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDedicatedAllocationMemoryAllocateInfoNV.html</p>"},{"location":"api/rendering/vulkan/#dependencyflagbits","title":"DependencyFlagBits","text":"<p>int32 <pre><code>type DependencyFlagBits int32\n</code></pre></p> <p>DependencyFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDependencyFlagBits.html</p> <p>const ( DependencyByRegionBit DependencyFlagBits = 1 DependencyDeviceGroupBit DependencyFlagBits = 4 DependencyViewLocalBit DependencyFlagBits = 2 DependencyFlagBitsMaxEnum DependencyFlagBits = 2147483647 ) DependencyFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDependencyFlagBits.html</p>"},{"location":"api/rendering/vulkan/#dependencyflags","title":"DependencyFlags","text":"<p>uint32 <pre><code>type DependencyFlags uint32\n</code></pre></p> <p>DependencyFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDependencyFlags.html</p>"},{"location":"api/rendering/vulkan/#descriptoraccelerationstructureinfonvx","title":"DescriptorAccelerationStructureInfoNVX","text":"<p><code>struct</code></p> <pre><code>type DescriptorAccelerationStructureInfoNVX struct {\n    SType                      StructureType\n    PNext                      unsafe.Pointer\n    AccelerationStructureCount uint32\n    PAccelerationStructures    *AccelerationStructureNVX\n}\n</code></pre> <p>DescriptorAccelerationStructureInfoNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkDescriptorAccelerationStructureInfoNVX</p>"},{"location":"api/rendering/vulkan/#descriptorbindingflagbits","title":"DescriptorBindingFlagBits","text":"<p>int32 <pre><code>type DescriptorBindingFlagBits int32\n</code></pre></p> <p>DescriptorBindingFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorBindingFlagBitsEXT.html</p> <p>const ( DescriptorBindingUpdateAfterBindBit DescriptorBindingFlagBits = 1 DescriptorBindingUpdateUnusedWhilePendingBit DescriptorBindingFlagBits = 2 DescriptorBindingPartiallyBoundBit DescriptorBindingFlagBits = 4 DescriptorBindingVariableDescriptorCountBit DescriptorBindingFlagBits = 8 DescriptorBindingFlagBitsMaxEnum DescriptorBindingFlagBits = 2147483647 ) DescriptorBindingFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorBindingFlagBitsEXT.html</p>"},{"location":"api/rendering/vulkan/#descriptorbindingflags","title":"DescriptorBindingFlags","text":"<p>uint32 <pre><code>type DescriptorBindingFlags uint32\n</code></pre></p> <p>DescriptorBindingFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorBindingFlagsEXT.html</p>"},{"location":"api/rendering/vulkan/#descriptorbufferinfo","title":"DescriptorBufferInfo","text":"<p><code>struct</code></p> <pre><code>type DescriptorBufferInfo struct {\n    Buffer Buffer\n    Offset DeviceSize\n    Range  DeviceSize\n}\n</code></pre> <p>DescriptorBufferInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorBufferInfo.html</p>"},{"location":"api/rendering/vulkan/#descriptorimageinfo","title":"DescriptorImageInfo","text":"<p><code>struct</code></p> <pre><code>type DescriptorImageInfo struct {\n    Sampler     Sampler\n    ImageView   ImageView\n    ImageLayout ImageLayout\n}\n</code></pre> <p>DescriptorImageInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorImageInfo.html</p>"},{"location":"api/rendering/vulkan/#descriptorpool","title":"DescriptorPool","text":"<p>C.VkDescriptorPool <pre><code>type DescriptorPool C.VkDescriptorPool\n</code></pre></p> <p>DescriptorPool as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorPool.html</p>"},{"location":"api/rendering/vulkan/#descriptorpoolcreateflagbits","title":"DescriptorPoolCreateFlagBits","text":"<p>int32 <pre><code>type DescriptorPoolCreateFlagBits int32\n</code></pre></p> <p>DescriptorPoolCreateFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorPoolCreateFlagBits.html</p> <p>const ( DescriptorPoolCreateFreeDescriptorSetBit DescriptorPoolCreateFlagBits = 1 DescriptorPoolCreateUpdateAfterBindBit DescriptorPoolCreateFlagBits = 2 DescriptorPoolCreateFlagBitsMaxEnum DescriptorPoolCreateFlagBits = 2147483647 ) DescriptorPoolCreateFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorPoolCreateFlagBits.html</p>"},{"location":"api/rendering/vulkan/#descriptorpoolcreateflags","title":"DescriptorPoolCreateFlags","text":"<p>uint32 <pre><code>type DescriptorPoolCreateFlags uint32\n</code></pre></p> <p>DescriptorPoolCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorPoolCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#descriptorpoolcreateinfo","title":"DescriptorPoolCreateInfo","text":"<p><code>struct</code></p> <pre><code>type DescriptorPoolCreateInfo struct {\n    SType         StructureType\n    PNext         unsafe.Pointer\n    Flags         DescriptorPoolCreateFlags\n    MaxSets       uint32\n    PoolSizeCount uint32\n    PPoolSizes    *DescriptorPoolSize\n}\n</code></pre> <p>DescriptorPoolCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorPoolCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#descriptorpoolinlineuniformblockcreateinfo","title":"DescriptorPoolInlineUniformBlockCreateInfo","text":"<p><code>struct</code></p> <pre><code>type DescriptorPoolInlineUniformBlockCreateInfo struct {\n    SType                         StructureType\n    PNext                         unsafe.Pointer\n    MaxInlineUniformBlockBindings uint32\n}\n</code></pre> <p>DescriptorPoolInlineUniformBlockCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorPoolInlineUniformBlockCreateInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#descriptorpoolresetflags","title":"DescriptorPoolResetFlags","text":"<p>uint32 <pre><code>type DescriptorPoolResetFlags uint32\n</code></pre></p> <p>DescriptorPoolResetFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorPoolResetFlags.html</p>"},{"location":"api/rendering/vulkan/#descriptorpoolsize","title":"DescriptorPoolSize","text":"<p><code>struct</code></p> <pre><code>type DescriptorPoolSize struct {\n    Type            DescriptorType\n    DescriptorCount uint32\n}\n</code></pre> <p>DescriptorPoolSize as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorPoolSize.html</p>"},{"location":"api/rendering/vulkan/#descriptorset","title":"DescriptorSet","text":"<p>C.VkDescriptorSet <pre><code>type DescriptorSet C.VkDescriptorSet\n</code></pre></p> <p>DescriptorSet as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorSet.html</p>"},{"location":"api/rendering/vulkan/#descriptorsetallocateinfo","title":"DescriptorSetAllocateInfo","text":"<p><code>struct</code></p> <pre><code>type DescriptorSetAllocateInfo struct {\n    SType              StructureType\n    PNext              unsafe.Pointer\n    DescriptorPool     DescriptorPool\n    DescriptorSetCount uint32\n    PSetLayouts        *DescriptorSetLayout\n}\n</code></pre> <p>DescriptorSetAllocateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorSetAllocateInfo.html</p>"},{"location":"api/rendering/vulkan/#descriptorsetlayout","title":"DescriptorSetLayout","text":"<p>C.VkDescriptorSetLayout <pre><code>type DescriptorSetLayout C.VkDescriptorSetLayout\n</code></pre></p> <p>DescriptorSetLayout as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorSetLayout.html</p>"},{"location":"api/rendering/vulkan/#descriptorsetlayoutbinding","title":"DescriptorSetLayoutBinding","text":"<p><code>struct</code></p> <pre><code>type DescriptorSetLayoutBinding struct {\n    Binding            uint32\n    DescriptorType     DescriptorType\n    DescriptorCount    uint32\n    StageFlags         ShaderStageFlags\n    PImmutableSamplers *Sampler\n}\n</code></pre> <p>DescriptorSetLayoutBinding as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorSetLayoutBinding.html</p>"},{"location":"api/rendering/vulkan/#descriptorsetlayoutbindingflagscreateinfo","title":"DescriptorSetLayoutBindingFlagsCreateInfo","text":"<p><code>struct</code></p> <pre><code>type DescriptorSetLayoutBindingFlagsCreateInfo struct {\n    SType         StructureType\n    PNext         unsafe.Pointer\n    BindingCount  uint32\n    PBindingFlags *DescriptorBindingFlags\n}\n</code></pre> <p>DescriptorSetLayoutBindingFlagsCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorSetLayoutBindingFlagsCreateInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#descriptorsetlayoutcreateflagbits","title":"DescriptorSetLayoutCreateFlagBits","text":"<p>int32 <pre><code>type DescriptorSetLayoutCreateFlagBits int32\n</code></pre></p> <p>DescriptorSetLayoutCreateFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorSetLayoutCreateFlagBits.html</p> <p>const ( DescriptorSetLayoutCreatePushDescriptorBit DescriptorSetLayoutCreateFlagBits = 1 DescriptorSetLayoutCreateUpdateAfterBindPoolBit DescriptorSetLayoutCreateFlagBits = 2 DescriptorSetLayoutCreateFlagBitsMaxEnum DescriptorSetLayoutCreateFlagBits = 2147483647 ) DescriptorSetLayoutCreateFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorSetLayoutCreateFlagBits.html</p>"},{"location":"api/rendering/vulkan/#descriptorsetlayoutcreateflags","title":"DescriptorSetLayoutCreateFlags","text":"<p>uint32 <pre><code>type DescriptorSetLayoutCreateFlags uint32\n</code></pre></p> <p>DescriptorSetLayoutCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorSetLayoutCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#descriptorsetlayoutcreateinfo","title":"DescriptorSetLayoutCreateInfo","text":"<p><code>struct</code></p> <pre><code>type DescriptorSetLayoutCreateInfo struct {\n    SType        StructureType\n    PNext        unsafe.Pointer\n    Flags        DescriptorSetLayoutCreateFlags\n    BindingCount uint32\n    PBindings    *DescriptorSetLayoutBinding\n}\n</code></pre> <p>DescriptorSetLayoutCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorSetLayoutCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#descriptorsetlayoutsupport","title":"DescriptorSetLayoutSupport","text":"<p><code>struct</code></p> <pre><code>type DescriptorSetLayoutSupport struct {\n    SType     StructureType\n    PNext     unsafe.Pointer\n    Supported Bool32\n}\n</code></pre> <p>DescriptorSetLayoutSupport as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorSetLayoutSupport.html</p>"},{"location":"api/rendering/vulkan/#descriptorsetvariabledescriptorcountallocateinfo","title":"DescriptorSetVariableDescriptorCountAllocateInfo","text":"<p><code>struct</code></p> <pre><code>type DescriptorSetVariableDescriptorCountAllocateInfo struct {\n    SType              StructureType\n    PNext              unsafe.Pointer\n    DescriptorSetCount uint32\n    PDescriptorCounts  *uint32\n}\n</code></pre> <p>DescriptorSetVariableDescriptorCountAllocateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorSetVariableDescriptorCountAllocateInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#descriptorsetvariabledescriptorcountlayoutsupport","title":"DescriptorSetVariableDescriptorCountLayoutSupport","text":"<p><code>struct</code></p> <pre><code>type DescriptorSetVariableDescriptorCountLayoutSupport struct {\n    SType                      StructureType\n    PNext                      unsafe.Pointer\n    MaxVariableDescriptorCount uint32\n}\n</code></pre> <p>DescriptorSetVariableDescriptorCountLayoutSupport as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorSetVariableDescriptorCountLayoutSupportEXT.html</p>"},{"location":"api/rendering/vulkan/#descriptortype","title":"DescriptorType","text":"<p>int32 <pre><code>type DescriptorType int32\n</code></pre></p> <p>DescriptorType as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorType.html</p> <p>const ( DescriptorTypeSampler DescriptorType = iota DescriptorTypeCombinedImageSampler DescriptorType = 1 DescriptorTypeSampledImage DescriptorType = 2 DescriptorTypeStorageImage DescriptorType = 3 DescriptorTypeUniformTexelBuffer DescriptorType = 4 DescriptorTypeStorageTexelBuffer DescriptorType = 5 DescriptorTypeUniformBuffer DescriptorType = 6 DescriptorTypeStorageBuffer DescriptorType = 7 DescriptorTypeUniformBufferDynamic DescriptorType = 8 DescriptorTypeStorageBufferDynamic DescriptorType = 9 DescriptorTypeInputAttachment DescriptorType = 10 DescriptorTypeInlineUniformBlock DescriptorType = 1000138000 DescriptorTypeAccelerationStructureNvx DescriptorType = 1000165000 DescriptorTypeBeginRange DescriptorType = 0 DescriptorTypeEndRange DescriptorType = 10 DescriptorTypeRangeSize DescriptorType = 11 DescriptorTypeMaxEnum DescriptorType = 2147483647 ) DescriptorType enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorType.html</p>"},{"location":"api/rendering/vulkan/#descriptorupdatetemplate","title":"DescriptorUpdateTemplate","text":"<p>C.VkDescriptorUpdateTemplate <pre><code>type DescriptorUpdateTemplate C.VkDescriptorUpdateTemplate\n</code></pre></p> <p>DescriptorUpdateTemplate as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorUpdateTemplate.html</p>"},{"location":"api/rendering/vulkan/#descriptorupdatetemplatecreateflags","title":"DescriptorUpdateTemplateCreateFlags","text":"<p>uint32 <pre><code>type DescriptorUpdateTemplateCreateFlags uint32\n</code></pre></p> <p>DescriptorUpdateTemplateCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorUpdateTemplateCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#descriptorupdatetemplatecreateinfo","title":"DescriptorUpdateTemplateCreateInfo","text":"<p><code>struct</code></p> <pre><code>type DescriptorUpdateTemplateCreateInfo struct {\n    SType                      StructureType\n    PNext                      unsafe.Pointer\n    Flags                      DescriptorUpdateTemplateCreateFlags\n    DescriptorUpdateEntryCount uint32\n    PDescriptorUpdateEntries   *DescriptorUpdateTemplateEntry\n    TemplateType               DescriptorUpdateTemplateType\n    DescriptorSetLayout        DescriptorSetLayout\n    PipelineBindPoint          PipelineBindPoint\n    PipelineLayout             PipelineLayout\n    Set                        uint32\n}\n</code></pre> <p>DescriptorUpdateTemplateCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorUpdateTemplateCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#descriptorupdatetemplateentry","title":"DescriptorUpdateTemplateEntry","text":"<p><code>struct</code></p> <pre><code>type DescriptorUpdateTemplateEntry struct {\n    DstBinding      uint32\n    DstArrayElement uint32\n    DescriptorCount uint32\n    DescriptorType  DescriptorType\n    Offset          uint\n    Stride          uint\n}\n</code></pre> <p>DescriptorUpdateTemplateEntry as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorUpdateTemplateEntry.html</p>"},{"location":"api/rendering/vulkan/#descriptorupdatetemplatetype","title":"DescriptorUpdateTemplateType","text":"<p>int32 <pre><code>type DescriptorUpdateTemplateType int32\n</code></pre></p> <p>DescriptorUpdateTemplateType as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorUpdateTemplateType.html</p> <p>const ( DescriptorUpdateTemplateTypeDescriptorSet DescriptorUpdateTemplateType = iota DescriptorUpdateTemplateTypePushDescriptors DescriptorUpdateTemplateType = 1 DescriptorUpdateTemplateTypeBeginRange DescriptorUpdateTemplateType = 0 DescriptorUpdateTemplateTypeEndRange DescriptorUpdateTemplateType = 0 DescriptorUpdateTemplateTypeRangeSize DescriptorUpdateTemplateType = 1 DescriptorUpdateTemplateTypeMaxEnum DescriptorUpdateTemplateType = 2147483647 ) DescriptorUpdateTemplateType enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDescriptorUpdateTemplateType.html</p>"},{"location":"api/rendering/vulkan/#device","title":"Device","text":"<p>C.VkDevice <pre><code>type Device C.VkDevice\n</code></pre></p> <p>Device as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDevice.html</p>"},{"location":"api/rendering/vulkan/#devicecreateflags","title":"DeviceCreateFlags","text":"<p>uint32 <pre><code>type DeviceCreateFlags uint32\n</code></pre></p> <p>DeviceCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#devicecreateinfo","title":"DeviceCreateInfo","text":"<p><code>struct</code></p> <pre><code>type DeviceCreateInfo struct {\n    SType                StructureType\n    PNext                unsafe.Pointer\n    Flags                DeviceCreateFlags\n    QueueCreateInfoCount uint32\n    PQueueCreateInfos    *DeviceQueueCreateInfo\n\n    PEnabledFeatures *PhysicalDeviceFeatures\n    // Has unexported fields.\n}\n</code></pre> <p>DeviceCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#devicecreateinfofree","title":"DeviceCreateInfo.Free","text":"<pre><code>func (s *DeviceCreateInfo) Free()\n</code></pre>"},{"location":"api/rendering/vulkan/#devicecreateinfosetenabledextensionnames","title":"DeviceCreateInfo.SetEnabledExtensionNames","text":"<pre><code>func (s *DeviceCreateInfo) SetEnabledExtensionNames(names []string)\n</code></pre>"},{"location":"api/rendering/vulkan/#devicecreateinfosetenabledlayernames","title":"DeviceCreateInfo.SetEnabledLayerNames","text":"<pre><code>func (s *DeviceCreateInfo) SetEnabledLayerNames(names []string)\n</code></pre>"},{"location":"api/rendering/vulkan/#deviceeventinfo","title":"DeviceEventInfo","text":"<p><code>struct</code></p> <pre><code>type DeviceEventInfo struct {\n    SType       StructureType\n    PNext       unsafe.Pointer\n    DeviceEvent DeviceEventType\n}\n</code></pre> <p>DeviceEventInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceEventInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#deviceeventtype","title":"DeviceEventType","text":"<p>int32 <pre><code>type DeviceEventType int32\n</code></pre></p> <p>DeviceEventType as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceEventTypeEXT.html</p> <p>const ( DeviceEventTypeDisplayHotplug DeviceEventType = iota DeviceEventTypeBeginRange DeviceEventType = 0 DeviceEventTypeEndRange DeviceEventType = 0 DeviceEventTypeRangeSize DeviceEventType = 1 DeviceEventTypeMaxEnum DeviceEventType = 2147483647 ) DeviceEventType enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceEventTypeEXT.html</p>"},{"location":"api/rendering/vulkan/#devicegeneratedcommandsfeaturesnvx","title":"DeviceGeneratedCommandsFeaturesNVX","text":"<p><code>struct</code></p> <pre><code>type DeviceGeneratedCommandsFeaturesNVX struct {\n    SType                      StructureType\n    PNext                      unsafe.Pointer\n    ComputeBindingPointSupport Bool32\n}\n</code></pre> <p>DeviceGeneratedCommandsFeaturesNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkDeviceGeneratedCommandsFeaturesNVX</p>"},{"location":"api/rendering/vulkan/#devicegeneratedcommandslimitsnvx","title":"DeviceGeneratedCommandsLimitsNVX","text":"<p><code>struct</code></p> <pre><code>type DeviceGeneratedCommandsLimitsNVX struct {\n    SType                                 StructureType\n    PNext                                 unsafe.Pointer\n    MaxIndirectCommandsLayoutTokenCount   uint32\n    MaxObjectEntryCounts                  uint32\n    MinSequenceCountBufferOffsetAlignment uint32\n    MinSequenceIndexBufferOffsetAlignment uint32\n    MinCommandsTokenBufferOffsetAlignment uint32\n}\n</code></pre> <p>DeviceGeneratedCommandsLimitsNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkDeviceGeneratedCommandsLimitsNVX</p>"},{"location":"api/rendering/vulkan/#devicegroupbindsparseinfo","title":"DeviceGroupBindSparseInfo","text":"<p><code>struct</code></p> <pre><code>type DeviceGroupBindSparseInfo struct {\n    SType               StructureType\n    PNext               unsafe.Pointer\n    ResourceDeviceIndex uint32\n    MemoryDeviceIndex   uint32\n}\n</code></pre> <p>DeviceGroupBindSparseInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceGroupBindSparseInfo.html</p>"},{"location":"api/rendering/vulkan/#devicegroupcommandbufferbegininfo","title":"DeviceGroupCommandBufferBeginInfo","text":"<p><code>struct</code></p> <pre><code>type DeviceGroupCommandBufferBeginInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    DeviceMask uint32\n}\n</code></pre> <p>DeviceGroupCommandBufferBeginInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceGroupCommandBufferBeginInfo.html</p>"},{"location":"api/rendering/vulkan/#devicegroupdevicecreateinfo","title":"DeviceGroupDeviceCreateInfo","text":"<p><code>struct</code></p> <pre><code>type DeviceGroupDeviceCreateInfo struct {\n    SType               StructureType\n    PNext               unsafe.Pointer\n    PhysicalDeviceCount uint32\n    PPhysicalDevices    *PhysicalDevice\n}\n</code></pre> <p>DeviceGroupDeviceCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceGroupDeviceCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#devicegrouppresentcapabilities","title":"DeviceGroupPresentCapabilities","text":"<p><code>struct</code></p> <pre><code>type DeviceGroupPresentCapabilities struct {\n    SType       StructureType\n    PNext       unsafe.Pointer\n    PresentMask [32]uint32\n    Modes       DeviceGroupPresentModeFlags\n}\n</code></pre> <p>DeviceGroupPresentCapabilities as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDeviceGroupPresentCapabilitiesKHR</p>"},{"location":"api/rendering/vulkan/#devicegrouppresentinfo","title":"DeviceGroupPresentInfo","text":"<p><code>struct</code></p> <pre><code>type DeviceGroupPresentInfo struct {\n    SType          StructureType\n    PNext          unsafe.Pointer\n    SwapchainCount uint32\n    PDeviceMasks   *uint32\n    Mode           DeviceGroupPresentModeFlagBits\n}\n</code></pre> <p>DeviceGroupPresentInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDeviceGroupPresentInfoKHR</p>"},{"location":"api/rendering/vulkan/#devicegrouppresentmodeflagbits","title":"DeviceGroupPresentModeFlagBits","text":"<p>int32 <pre><code>type DeviceGroupPresentModeFlagBits int32\n</code></pre></p> <p>DeviceGroupPresentModeFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDeviceGroupPresentModeFlagBitsKHR</p> <p>const ( DeviceGroupPresentModeLocalBit DeviceGroupPresentModeFlagBits = 1 DeviceGroupPresentModeRemoteBit DeviceGroupPresentModeFlagBits = 2 DeviceGroupPresentModeSumBit DeviceGroupPresentModeFlagBits = 4 DeviceGroupPresentModeLocalMultiDeviceBit DeviceGroupPresentModeFlagBits = 8 DeviceGroupPresentModeFlagBitsMaxEnum DeviceGroupPresentModeFlagBits = 2147483647 ) DeviceGroupPresentModeFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDeviceGroupPresentModeFlagBitsKHR</p>"},{"location":"api/rendering/vulkan/#devicegrouppresentmodeflags","title":"DeviceGroupPresentModeFlags","text":"<p>uint32 <pre><code>type DeviceGroupPresentModeFlags uint32\n</code></pre></p> <p>DeviceGroupPresentModeFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDeviceGroupPresentModeFlagsKHR</p>"},{"location":"api/rendering/vulkan/#devicegrouprenderpassbegininfo","title":"DeviceGroupRenderPassBeginInfo","text":"<p><code>struct</code></p> <pre><code>type DeviceGroupRenderPassBeginInfo struct {\n    SType                 StructureType\n    PNext                 unsafe.Pointer\n    DeviceMask            uint32\n    DeviceRenderAreaCount uint32\n    PDeviceRenderAreas    *Rect2D\n}\n</code></pre> <p>DeviceGroupRenderPassBeginInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceGroupRenderPassBeginInfo.html</p>"},{"location":"api/rendering/vulkan/#devicegroupsubmitinfo","title":"DeviceGroupSubmitInfo","text":"<p><code>struct</code></p> <pre><code>type DeviceGroupSubmitInfo struct {\n    SType                         StructureType\n    PNext                         unsafe.Pointer\n    WaitSemaphoreCount            uint32\n    PWaitSemaphoreDeviceIndices   *uint32\n    CommandBufferCount            uint32\n    PCommandBufferDeviceMasks     *uint32\n    SignalSemaphoreCount          uint32\n    PSignalSemaphoreDeviceIndices *uint32\n}\n</code></pre> <p>DeviceGroupSubmitInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceGroupSubmitInfo.html</p>"},{"location":"api/rendering/vulkan/#devicegroupswapchaincreateinfo","title":"DeviceGroupSwapchainCreateInfo","text":"<p><code>struct</code></p> <pre><code>type DeviceGroupSwapchainCreateInfo struct {\n    SType StructureType\n    PNext unsafe.Pointer\n    Modes DeviceGroupPresentModeFlags\n}\n</code></pre> <p>DeviceGroupSwapchainCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDeviceGroupSwapchainCreateInfoKHR</p>"},{"location":"api/rendering/vulkan/#devicememory","title":"DeviceMemory","text":"<p>C.VkDeviceMemory <pre><code>type DeviceMemory C.VkDeviceMemory\n</code></pre></p> <p>DeviceMemory as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceMemory.html</p>"},{"location":"api/rendering/vulkan/#devicequeuecreateflagbits","title":"DeviceQueueCreateFlagBits","text":"<p>int32 <pre><code>type DeviceQueueCreateFlagBits int32\n</code></pre></p> <p>DeviceQueueCreateFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceQueueCreateFlagBits.html</p> <p>const ( DeviceQueueCreateProtectedBit DeviceQueueCreateFlagBits = 1 DeviceQueueCreateFlagBitsMaxEnum DeviceQueueCreateFlagBits = 2147483647 ) DeviceQueueCreateFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceQueueCreateFlagBits.html</p>"},{"location":"api/rendering/vulkan/#devicequeuecreateflags","title":"DeviceQueueCreateFlags","text":"<p>uint32 <pre><code>type DeviceQueueCreateFlags uint32\n</code></pre></p> <p>DeviceQueueCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceQueueCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#devicequeuecreateinfo","title":"DeviceQueueCreateInfo","text":"<p><code>struct</code></p> <pre><code>type DeviceQueueCreateInfo struct {\n    SType            StructureType\n    PNext            unsafe.Pointer\n    Flags            DeviceQueueCreateFlags\n    QueueFamilyIndex uint32\n    QueueCount       uint32\n    PQueuePriorities *float32\n}\n</code></pre> <p>DeviceQueueCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceQueueCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#devicequeueglobalprioritycreateinfo","title":"DeviceQueueGlobalPriorityCreateInfo","text":"<p><code>struct</code></p> <pre><code>type DeviceQueueGlobalPriorityCreateInfo struct {\n    SType          StructureType\n    PNext          unsafe.Pointer\n    GlobalPriority QueueGlobalPriority\n}\n</code></pre> <p>DeviceQueueGlobalPriorityCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceQueueGlobalPriorityCreateInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#devicequeueinfo2","title":"DeviceQueueInfo2","text":"<p><code>struct</code></p> <pre><code>type DeviceQueueInfo2 struct {\n    SType            StructureType\n    PNext            unsafe.Pointer\n    Flags            DeviceQueueCreateFlags\n    QueueFamilyIndex uint32\n    QueueIndex       uint32\n}\n</code></pre> <p>DeviceQueueInfo2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceQueueInfo2.html</p>"},{"location":"api/rendering/vulkan/#devicesize","title":"DeviceSize","text":"<p>uint64 <pre><code>type DeviceSize uint64\n</code></pre></p> <p>DeviceSize type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDeviceSize.html</p>"},{"location":"api/rendering/vulkan/#discardrectanglemode","title":"DiscardRectangleMode","text":"<p>int32 <pre><code>type DiscardRectangleMode int32\n</code></pre></p> <p>DiscardRectangleMode as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDiscardRectangleModeEXT.html</p> <p>const ( DiscardRectangleModeInclusive DiscardRectangleMode = iota DiscardRectangleModeExclusive DiscardRectangleMode = 1 DiscardRectangleModeBeginRange DiscardRectangleMode = 0 DiscardRectangleModeEndRange DiscardRectangleMode = 1 DiscardRectangleModeRangeSize DiscardRectangleMode = 2 DiscardRectangleModeMaxEnum DiscardRectangleMode = 2147483647 ) DiscardRectangleMode enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDiscardRectangleModeEXT.html</p>"},{"location":"api/rendering/vulkan/#dispatchindirectcommand","title":"DispatchIndirectCommand","text":"<p><code>struct</code></p> <pre><code>type DispatchIndirectCommand struct {\n    X uint32\n    Y uint32\n    Z uint32\n}\n</code></pre> <p>DispatchIndirectCommand as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDispatchIndirectCommand.html</p>"},{"location":"api/rendering/vulkan/#display","title":"Display","text":"<p>C.VkDisplayKHR <pre><code>type Display C.VkDisplayKHR\n</code></pre></p> <p>Display as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayKHR</p>"},{"location":"api/rendering/vulkan/#displayeventinfo","title":"DisplayEventInfo","text":"<p><code>struct</code></p> <pre><code>type DisplayEventInfo struct {\n    SType        StructureType\n    PNext        unsafe.Pointer\n    DisplayEvent DisplayEventType\n}\n</code></pre> <p>DisplayEventInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDisplayEventInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#displayeventtype","title":"DisplayEventType","text":"<p>int32 <pre><code>type DisplayEventType int32\n</code></pre></p> <p>DisplayEventType as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDisplayEventTypeEXT.html</p> <p>const ( DisplayEventTypeFirstPixelOut DisplayEventType = iota DisplayEventTypeBeginRange DisplayEventType = 0 DisplayEventTypeEndRange DisplayEventType = 0 DisplayEventTypeRangeSize DisplayEventType = 1 DisplayEventTypeMaxEnum DisplayEventType = 2147483647 ) DisplayEventType enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDisplayEventTypeEXT.html</p>"},{"location":"api/rendering/vulkan/#displaymode","title":"DisplayMode","text":"<p>C.VkDisplayModeKHR <pre><code>type DisplayMode C.VkDisplayModeKHR\n</code></pre></p> <p>DisplayMode as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayModeKHR</p>"},{"location":"api/rendering/vulkan/#displaymodecreateflags","title":"DisplayModeCreateFlags","text":"<p>uint32 <pre><code>type DisplayModeCreateFlags uint32\n</code></pre></p> <p>DisplayModeCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayModeCreateFlagsKHR</p>"},{"location":"api/rendering/vulkan/#displaymodecreateinfo","title":"DisplayModeCreateInfo","text":"<p><code>struct</code></p> <pre><code>type DisplayModeCreateInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    Flags      DisplayModeCreateFlags\n    Parameters DisplayModeParameters\n}\n</code></pre> <p>DisplayModeCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayModeCreateInfoKHR</p>"},{"location":"api/rendering/vulkan/#displaymodeparameters","title":"DisplayModeParameters","text":"<p><code>struct</code></p> <pre><code>type DisplayModeParameters struct {\n    VisibleRegion Extent2D\n    RefreshRate   uint32\n}\n</code></pre> <p>DisplayModeParameters as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayModeParametersKHR</p>"},{"location":"api/rendering/vulkan/#displaymodeproperties","title":"DisplayModeProperties","text":"<p><code>struct</code></p> <pre><code>type DisplayModeProperties struct {\n    DisplayMode DisplayMode\n    Parameters  DisplayModeParameters\n}\n</code></pre> <p>DisplayModeProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayModePropertiesKHR</p>"},{"location":"api/rendering/vulkan/#displaymodeproperties2","title":"DisplayModeProperties2","text":"<p><code>struct</code></p> <pre><code>type DisplayModeProperties2 struct {\n    SType                 StructureType\n    PNext                 unsafe.Pointer\n    DisplayModeProperties DisplayModeProperties\n}\n</code></pre> <p>DisplayModeProperties2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayModeProperties2KHR</p>"},{"location":"api/rendering/vulkan/#displayplanealphaflagbits","title":"DisplayPlaneAlphaFlagBits","text":"<p>int32 <pre><code>type DisplayPlaneAlphaFlagBits int32\n</code></pre></p> <p>DisplayPlaneAlphaFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayPlaneAlphaFlagBitsKHR</p> <p>const ( DisplayPlaneAlphaOpaqueBit DisplayPlaneAlphaFlagBits = 1 DisplayPlaneAlphaGlobalBit DisplayPlaneAlphaFlagBits = 2 DisplayPlaneAlphaPerPixelBit DisplayPlaneAlphaFlagBits = 4 DisplayPlaneAlphaPerPixelPremultipliedBit DisplayPlaneAlphaFlagBits = 8 DisplayPlaneAlphaFlagBitsMaxEnum DisplayPlaneAlphaFlagBits = 2147483647 ) DisplayPlaneAlphaFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayPlaneAlphaFlagBitsKHR</p>"},{"location":"api/rendering/vulkan/#displayplanealphaflags","title":"DisplayPlaneAlphaFlags","text":"<p>uint32 <pre><code>type DisplayPlaneAlphaFlags uint32\n</code></pre></p> <p>DisplayPlaneAlphaFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayPlaneAlphaFlagsKHR</p>"},{"location":"api/rendering/vulkan/#displayplanecapabilities","title":"DisplayPlaneCapabilities","text":"<p><code>struct</code></p> <pre><code>type DisplayPlaneCapabilities struct {\n    SupportedAlpha DisplayPlaneAlphaFlags\n    MinSrcPosition Offset2D\n    MaxSrcPosition Offset2D\n    MinSrcExtent   Extent2D\n    MaxSrcExtent   Extent2D\n    MinDstPosition Offset2D\n    MaxDstPosition Offset2D\n    MinDstExtent   Extent2D\n    MaxDstExtent   Extent2D\n}\n</code></pre> <p>DisplayPlaneCapabilities as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayPlaneCapabilitiesKHR</p>"},{"location":"api/rendering/vulkan/#displayplanecapabilities2","title":"DisplayPlaneCapabilities2","text":"<p><code>struct</code></p> <pre><code>type DisplayPlaneCapabilities2 struct {\n    SType        StructureType\n    PNext        unsafe.Pointer\n    Capabilities DisplayPlaneCapabilities\n}\n</code></pre> <p>DisplayPlaneCapabilities2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayPlaneCapabilities2KHR</p>"},{"location":"api/rendering/vulkan/#displayplaneinfo2","title":"DisplayPlaneInfo2","text":"<p><code>struct</code></p> <pre><code>type DisplayPlaneInfo2 struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    Mode       DisplayMode\n    PlaneIndex uint32\n}\n</code></pre> <p>DisplayPlaneInfo2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayPlaneInfo2KHR</p>"},{"location":"api/rendering/vulkan/#displayplaneproperties","title":"DisplayPlaneProperties","text":"<p><code>struct</code></p> <pre><code>type DisplayPlaneProperties struct {\n    CurrentDisplay    Display\n    CurrentStackIndex uint32\n}\n</code></pre> <p>DisplayPlaneProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayPlanePropertiesKHR</p>"},{"location":"api/rendering/vulkan/#displayplaneproperties2","title":"DisplayPlaneProperties2","text":"<p><code>struct</code></p> <pre><code>type DisplayPlaneProperties2 struct {\n    SType                  StructureType\n    PNext                  unsafe.Pointer\n    DisplayPlaneProperties DisplayPlaneProperties\n}\n</code></pre> <p>DisplayPlaneProperties2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayPlaneProperties2KHR</p>"},{"location":"api/rendering/vulkan/#displaypowerinfo","title":"DisplayPowerInfo","text":"<p><code>struct</code></p> <pre><code>type DisplayPowerInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    PowerState DisplayPowerState\n}\n</code></pre> <p>DisplayPowerInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDisplayPowerInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#displaypowerstate","title":"DisplayPowerState","text":"<p>int32 <pre><code>type DisplayPowerState int32\n</code></pre></p> <p>DisplayPowerState as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDisplayPowerStateEXT.html</p> <p>const ( DisplayPowerStateOff DisplayPowerState = iota DisplayPowerStateSuspend DisplayPowerState = 1 DisplayPowerStateOn DisplayPowerState = 2 DisplayPowerStateBeginRange DisplayPowerState = 0 DisplayPowerStateEndRange DisplayPowerState = 2 DisplayPowerStateRangeSize DisplayPowerState = 3 DisplayPowerStateMaxEnum DisplayPowerState = 2147483647 ) DisplayPowerState enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDisplayPowerStateEXT.html</p>"},{"location":"api/rendering/vulkan/#displaypresentinfo","title":"DisplayPresentInfo","text":"<p><code>struct</code></p> <pre><code>type DisplayPresentInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    SrcRect    Rect2D\n    DstRect    Rect2D\n    Persistent Bool32\n}\n</code></pre> <p>DisplayPresentInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayPresentInfoKHR</p>"},{"location":"api/rendering/vulkan/#displayproperties","title":"DisplayProperties","text":"<p><code>struct</code></p> <pre><code>type DisplayProperties struct {\n    Display              Display\n    DisplayName          *C.char\n    PhysicalDimensions   Extent2D\n    PhysicalResolution   Extent2D\n    SupportedTransforms  SurfaceTransformFlags\n    PlaneReorderPossible Bool32\n    PersistentContent    Bool32\n}\n</code></pre> <p>DisplayProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayPropertiesKHR</p>"},{"location":"api/rendering/vulkan/#displayproperties2","title":"DisplayProperties2","text":"<p><code>struct</code></p> <pre><code>type DisplayProperties2 struct {\n    SType             StructureType\n    PNext             unsafe.Pointer\n    DisplayProperties DisplayProperties\n}\n</code></pre> <p>DisplayProperties2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplayProperties2KHR</p>"},{"location":"api/rendering/vulkan/#displaysurfacecreateflags","title":"DisplaySurfaceCreateFlags","text":"<p>uint32 <pre><code>type DisplaySurfaceCreateFlags uint32\n</code></pre></p> <p>DisplaySurfaceCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplaySurfaceCreateFlagsKHR</p>"},{"location":"api/rendering/vulkan/#displaysurfacecreateinfo","title":"DisplaySurfaceCreateInfo","text":"<p><code>struct</code></p> <pre><code>type DisplaySurfaceCreateInfo struct {\n    SType           StructureType\n    PNext           unsafe.Pointer\n    Flags           DisplaySurfaceCreateFlags\n    DisplayMode     DisplayMode\n    PlaneIndex      uint32\n    PlaneStackIndex uint32\n    Transform       SurfaceTransformFlagBits\n    GlobalAlpha     float32\n    AlphaMode       DisplayPlaneAlphaFlagBits\n    ImageExtent     Extent2D\n}\n</code></pre> <p>DisplaySurfaceCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDisplaySurfaceCreateInfoKHR</p>"},{"location":"api/rendering/vulkan/#drawindexedindirectcommand","title":"DrawIndexedIndirectCommand","text":"<p><code>struct</code></p> <pre><code>type DrawIndexedIndirectCommand struct {\n    IndexCount    uint32\n    InstanceCount uint32\n    FirstIndex    uint32\n    VertexOffset  int32\n    FirstInstance uint32\n}\n</code></pre> <p>DrawIndexedIndirectCommand as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDrawIndexedIndirectCommand.html</p>"},{"location":"api/rendering/vulkan/#drawindirectcommand","title":"DrawIndirectCommand","text":"<p><code>struct</code></p> <pre><code>type DrawIndirectCommand struct {\n    VertexCount   uint32\n    InstanceCount uint32\n    FirstVertex   uint32\n    FirstInstance uint32\n}\n</code></pre> <p>DrawIndirectCommand as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDrawIndirectCommand.html</p>"},{"location":"api/rendering/vulkan/#drawmeshtasksindirectcommandnv","title":"DrawMeshTasksIndirectCommandNV","text":"<p><code>struct</code></p> <pre><code>type DrawMeshTasksIndirectCommandNV struct {\n    TaskCount uint32\n    FirstTask uint32\n}\n</code></pre> <p>DrawMeshTasksIndirectCommandNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDrawMeshTasksIndirectCommandNV.html</p>"},{"location":"api/rendering/vulkan/#driverid","title":"DriverId","text":"<p>int32 <pre><code>type DriverId int32\n</code></pre></p> <p>DriverId as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDriverIdKHR</p> <p>const ( DriverIdAmdProprietary DriverId = 1 DriverIdAmdOpenSource DriverId = 2 DriverIdMesaRadv DriverId = 3 DriverIdNvidiaProprietary DriverId = 4 DriverIdIntelProprietaryWindows DriverId = 5 DriverIdIntelOpenSourceMesa DriverId = 6 DriverIdImaginationProprietary DriverId = 7 DriverIdQualcommProprietary DriverId = 8 DriverIdArmProprietary DriverId = 9 DriverIdBeginRange DriverId = 1 DriverIdEndRange DriverId = 9 DriverIdRangeSize DriverId = 9 DriverIdMaxEnum DriverId = 2147483647 ) DriverId enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkDriverIdKHR</p>"},{"location":"api/rendering/vulkan/#drmformatmodifierproperties","title":"DrmFormatModifierProperties","text":"<p><code>struct</code></p> <pre><code>type DrmFormatModifierProperties struct {\n    DrmFormatModifier               uint64\n    DrmFormatModifierPlaneCount     uint32\n    DrmFormatModifierTilingFeatures FormatFeatureFlags\n}\n</code></pre> <p>DrmFormatModifierProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDrmFormatModifierPropertiesEXT.html</p>"},{"location":"api/rendering/vulkan/#drmformatmodifierpropertieslist","title":"DrmFormatModifierPropertiesList","text":"<p><code>struct</code></p> <pre><code>type DrmFormatModifierPropertiesList struct {\n    SType                        StructureType\n    PNext                        unsafe.Pointer\n    DrmFormatModifierCount       uint32\n    PDrmFormatModifierProperties *DrmFormatModifierProperties\n}\n</code></pre> <p>DrmFormatModifierPropertiesList as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDrmFormatModifierPropertiesListEXT.html</p>"},{"location":"api/rendering/vulkan/#dynamicstate","title":"DynamicState","text":"<p>int32 <pre><code>type DynamicState int32\n</code></pre></p> <p>DynamicState as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDynamicState.html</p> <p>const ( DynamicStateViewport DynamicState = iota DynamicStateScissor DynamicState = 1 DynamicStateLineWidth DynamicState = 2 DynamicStateDepthBias DynamicState = 3 DynamicStateBlendConstants DynamicState = 4 DynamicStateDepthBounds DynamicState = 5 DynamicStateStencilCompareMask DynamicState = 6 DynamicStateStencilWriteMask DynamicState = 7 DynamicStateStencilReference DynamicState = 8 DynamicStateViewportWScalingNv DynamicState = 1000087000 DynamicStateDiscardRectangle DynamicState = 1000099000 DynamicStateSampleLocations DynamicState = 1000143000 DynamicStateViewportShadingRatePaletteNv DynamicState = 1000164004 DynamicStateViewportCoarseSampleOrderNv DynamicState = 1000164006 DynamicStateExclusiveScissorNv DynamicState = 1000205001 DynamicStateBeginRange DynamicState = 0 DynamicStateEndRange DynamicState = 8 DynamicStateRangeSize DynamicState = 9 DynamicStateMaxEnum DynamicState = 2147483647 ) DynamicState enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkDynamicState.html</p>"},{"location":"api/rendering/vulkan/#event","title":"Event","text":"<p>C.VkEvent <pre><code>type Event C.VkEvent\n</code></pre></p> <p>Event as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkEvent.html</p>"},{"location":"api/rendering/vulkan/#eventcreateflags","title":"EventCreateFlags","text":"<p>uint32 <pre><code>type EventCreateFlags uint32\n</code></pre></p> <p>EventCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkEventCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#eventcreateinfo","title":"EventCreateInfo","text":"<p><code>struct</code></p> <pre><code>type EventCreateInfo struct {\n    SType StructureType\n    PNext unsafe.Pointer\n    Flags EventCreateFlags\n}\n</code></pre> <p>EventCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkEventCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#exportfencecreateinfo","title":"ExportFenceCreateInfo","text":"<p><code>struct</code></p> <pre><code>type ExportFenceCreateInfo struct {\n    SType       StructureType\n    PNext       unsafe.Pointer\n    HandleTypes ExternalFenceHandleTypeFlags\n}\n</code></pre> <p>ExportFenceCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExportFenceCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#exportmemoryallocateinfo","title":"ExportMemoryAllocateInfo","text":"<p><code>struct</code></p> <pre><code>type ExportMemoryAllocateInfo struct {\n    SType       StructureType\n    PNext       unsafe.Pointer\n    HandleTypes ExternalMemoryHandleTypeFlags\n}\n</code></pre> <p>ExportMemoryAllocateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExportMemoryAllocateInfo.html</p>"},{"location":"api/rendering/vulkan/#exportmemoryallocateinfonv","title":"ExportMemoryAllocateInfoNV","text":"<p><code>struct</code></p> <pre><code>type ExportMemoryAllocateInfoNV struct {\n    SType       StructureType\n    PNext       unsafe.Pointer\n    HandleTypes ExternalMemoryHandleTypeFlagsNV\n}\n</code></pre> <p>ExportMemoryAllocateInfoNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExportMemoryAllocateInfoNV.html</p>"},{"location":"api/rendering/vulkan/#exportsemaphorecreateinfo","title":"ExportSemaphoreCreateInfo","text":"<p><code>struct</code></p> <pre><code>type ExportSemaphoreCreateInfo struct {\n    SType       StructureType\n    PNext       unsafe.Pointer\n    HandleTypes ExternalSemaphoreHandleTypeFlags\n}\n</code></pre> <p>ExportSemaphoreCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExportSemaphoreCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#extensionproperties","title":"ExtensionProperties","text":"<p><code>struct</code></p> <pre><code>type ExtensionProperties struct {\n    ExtensionName [256]byte\n    SpecVersion   uint32\n}\n</code></pre> <p>ExtensionProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExtensionProperties.html</p>"},{"location":"api/rendering/vulkan/#extent2d","title":"Extent2D","text":"<p><code>struct</code></p> <pre><code>type Extent2D struct {\n    Width  uint32\n    Height uint32\n}\n</code></pre> <p>Extent2D as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExtent2D.html</p>"},{"location":"api/rendering/vulkan/#extent3d","title":"Extent3D","text":"<p><code>struct</code></p> <pre><code>type Extent3D struct {\n    Width  uint32\n    Height uint32\n    Depth  uint32\n}\n</code></pre> <p>Extent3D as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExtent3D.html</p>"},{"location":"api/rendering/vulkan/#externalbufferproperties","title":"ExternalBufferProperties","text":"<p><code>struct</code></p> <pre><code>type ExternalBufferProperties struct {\n    SType                    StructureType\n    PNext                    unsafe.Pointer\n    ExternalMemoryProperties ExternalMemoryProperties\n}\n</code></pre> <p>ExternalBufferProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalBufferProperties.html</p>"},{"location":"api/rendering/vulkan/#externalfencefeatureflagbits","title":"ExternalFenceFeatureFlagBits","text":"<p>int32 <pre><code>type ExternalFenceFeatureFlagBits int32\n</code></pre></p> <p>ExternalFenceFeatureFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalFenceFeatureFlagBits.html</p> <p>const ( ExternalFenceFeatureExportableBit ExternalFenceFeatureFlagBits = 1 ExternalFenceFeatureImportableBit ExternalFenceFeatureFlagBits = 2 ExternalFenceFeatureFlagBitsMaxEnum ExternalFenceFeatureFlagBits = 2147483647 ) ExternalFenceFeatureFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalFenceFeatureFlagBits.html</p>"},{"location":"api/rendering/vulkan/#externalfencefeatureflags","title":"ExternalFenceFeatureFlags","text":"<p>uint32 <pre><code>type ExternalFenceFeatureFlags uint32\n</code></pre></p> <p>ExternalFenceFeatureFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalFenceFeatureFlags.html</p>"},{"location":"api/rendering/vulkan/#externalfencehandletypeflagbits","title":"ExternalFenceHandleTypeFlagBits","text":"<p>int32 <pre><code>type ExternalFenceHandleTypeFlagBits int32\n</code></pre></p> <p>ExternalFenceHandleTypeFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalFenceHandleTypeFlagBits.html</p> <p>const ( ExternalFenceHandleTypeOpaqueFdBit ExternalFenceHandleTypeFlagBits = 1 ExternalFenceHandleTypeOpaqueWin32Bit ExternalFenceHandleTypeFlagBits = 2 ExternalFenceHandleTypeOpaqueWin32KmtBit ExternalFenceHandleTypeFlagBits = 4 ExternalFenceHandleTypeSyncFdBit ExternalFenceHandleTypeFlagBits = 8 ExternalFenceHandleTypeFlagBitsMaxEnum ExternalFenceHandleTypeFlagBits = 2147483647 ) ExternalFenceHandleTypeFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalFenceHandleTypeFlagBits.html</p>"},{"location":"api/rendering/vulkan/#externalfencehandletypeflags","title":"ExternalFenceHandleTypeFlags","text":"<p>uint32 <pre><code>type ExternalFenceHandleTypeFlags uint32\n</code></pre></p> <p>ExternalFenceHandleTypeFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalFenceHandleTypeFlags.html</p>"},{"location":"api/rendering/vulkan/#externalfenceproperties","title":"ExternalFenceProperties","text":"<p><code>struct</code></p> <pre><code>type ExternalFenceProperties struct {\n    SType                         StructureType\n    PNext                         unsafe.Pointer\n    ExportFromImportedHandleTypes ExternalFenceHandleTypeFlags\n    CompatibleHandleTypes         ExternalFenceHandleTypeFlags\n    ExternalFenceFeatures         ExternalFenceFeatureFlags\n}\n</code></pre> <p>ExternalFenceProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalFenceProperties.html</p>"},{"location":"api/rendering/vulkan/#externalimageformatproperties","title":"ExternalImageFormatProperties","text":"<p><code>struct</code></p> <pre><code>type ExternalImageFormatProperties struct {\n    SType                    StructureType\n    PNext                    unsafe.Pointer\n    ExternalMemoryProperties ExternalMemoryProperties\n}\n</code></pre> <p>ExternalImageFormatProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalImageFormatProperties.html</p>"},{"location":"api/rendering/vulkan/#externalimageformatpropertiesnv","title":"ExternalImageFormatPropertiesNV","text":"<p><code>struct</code></p> <pre><code>type ExternalImageFormatPropertiesNV struct {\n    ImageFormatProperties         ImageFormatProperties\n    ExternalMemoryFeatures        ExternalMemoryFeatureFlagsNV\n    ExportFromImportedHandleTypes ExternalMemoryHandleTypeFlagsNV\n    CompatibleHandleTypes         ExternalMemoryHandleTypeFlagsNV\n}\n</code></pre> <p>ExternalImageFormatPropertiesNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalImageFormatPropertiesNV.html</p>"},{"location":"api/rendering/vulkan/#externalmemorybuffercreateinfo","title":"ExternalMemoryBufferCreateInfo","text":"<p><code>struct</code></p> <pre><code>type ExternalMemoryBufferCreateInfo struct {\n    SType       StructureType\n    PNext       unsafe.Pointer\n    HandleTypes ExternalMemoryHandleTypeFlags\n}\n</code></pre> <p>ExternalMemoryBufferCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalMemoryBufferCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#externalmemoryfeatureflagbits","title":"ExternalMemoryFeatureFlagBits","text":"<p>int32 <pre><code>type ExternalMemoryFeatureFlagBits int32\n</code></pre></p> <p>ExternalMemoryFeatureFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalMemoryFeatureFlagBits.html</p> <p>const ( ExternalMemoryFeatureDedicatedOnlyBit ExternalMemoryFeatureFlagBits = 1 ExternalMemoryFeatureExportableBit ExternalMemoryFeatureFlagBits = 2 ExternalMemoryFeatureImportableBit ExternalMemoryFeatureFlagBits = 4 ExternalMemoryFeatureFlagBitsMaxEnum ExternalMemoryFeatureFlagBits = 2147483647 ) ExternalMemoryFeatureFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalMemoryFeatureFlagBits.html</p>"},{"location":"api/rendering/vulkan/#externalmemoryfeatureflagbitsnv","title":"ExternalMemoryFeatureFlagBitsNV","text":"<p>int32 <pre><code>type ExternalMemoryFeatureFlagBitsNV int32\n</code></pre></p> <p>ExternalMemoryFeatureFlagBitsNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalMemoryFeatureFlagBitsNV.html</p> <p>const ( ExternalMemoryFeatureDedicatedOnlyBitNv ExternalMemoryFeatureFlagBitsNV = 1 ExternalMemoryFeatureExportableBitNv ExternalMemoryFeatureFlagBitsNV = 2 ExternalMemoryFeatureImportableBitNv ExternalMemoryFeatureFlagBitsNV = 4 ExternalMemoryFeatureFlagBitsMaxEnumNv ExternalMemoryFeatureFlagBitsNV = 2147483647 ) ExternalMemoryFeatureFlagBitsNV enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalMemoryFeatureFlagBitsNV.html</p>"},{"location":"api/rendering/vulkan/#externalmemoryfeatureflags","title":"ExternalMemoryFeatureFlags","text":"<p>uint32 <pre><code>type ExternalMemoryFeatureFlags uint32\n</code></pre></p> <p>ExternalMemoryFeatureFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalMemoryFeatureFlags.html</p>"},{"location":"api/rendering/vulkan/#externalmemoryfeatureflagsnv","title":"ExternalMemoryFeatureFlagsNV","text":"<p>uint32 <pre><code>type ExternalMemoryFeatureFlagsNV uint32\n</code></pre></p> <p>ExternalMemoryFeatureFlagsNV type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalMemoryFeatureFlagsNV.html</p>"},{"location":"api/rendering/vulkan/#externalmemoryhandletypeflagbits","title":"ExternalMemoryHandleTypeFlagBits","text":"<p>int32 <pre><code>type ExternalMemoryHandleTypeFlagBits int32\n</code></pre></p> <p>ExternalMemoryHandleTypeFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalMemoryHandleTypeFlagBits.html</p> <p>const ( ExternalMemoryHandleTypeOpaqueFdBit ExternalMemoryHandleTypeFlagBits = 1 ExternalMemoryHandleTypeOpaqueWin32Bit ExternalMemoryHandleTypeFlagBits = 2 ExternalMemoryHandleTypeOpaqueWin32KmtBit ExternalMemoryHandleTypeFlagBits = 4 ExternalMemoryHandleTypeD3d11TextureBit ExternalMemoryHandleTypeFlagBits = 8 ExternalMemoryHandleTypeD3d11TextureKmtBit ExternalMemoryHandleTypeFlagBits = 16 ExternalMemoryHandleTypeD3d12HeapBit ExternalMemoryHandleTypeFlagBits = 32 ExternalMemoryHandleTypeD3d12ResourceBit ExternalMemoryHandleTypeFlagBits = 64 ExternalMemoryHandleTypeDmaBufBit ExternalMemoryHandleTypeFlagBits = 512 ExternalMemoryHandleTypeAndroidHardwareBufferBitAndroid ExternalMemoryHandleTypeFlagBits = 1024 ExternalMemoryHandleTypeHostAllocationBit ExternalMemoryHandleTypeFlagBits = 128 ExternalMemoryHandleTypeHostMappedForeignMemoryBit ExternalMemoryHandleTypeFlagBits = 256 ExternalMemoryHandleTypeFlagBitsMaxEnum ExternalMemoryHandleTypeFlagBits = 2147483647 ) ExternalMemoryHandleTypeFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalMemoryHandleTypeFlagBits.html</p>"},{"location":"api/rendering/vulkan/#externalmemoryhandletypeflagbitsnv","title":"ExternalMemoryHandleTypeFlagBitsNV","text":"<p>int32 <pre><code>type ExternalMemoryHandleTypeFlagBitsNV int32\n</code></pre></p> <p>ExternalMemoryHandleTypeFlagBitsNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalMemoryHandleTypeFlagBitsNV.html</p> <p>const ( ExternalMemoryHandleTypeOpaqueWin32BitNv ExternalMemoryHandleTypeFlagBitsNV = 1 ExternalMemoryHandleTypeOpaqueWin32KmtBitNv ExternalMemoryHandleTypeFlagBitsNV = 2 ExternalMemoryHandleTypeD3d11ImageBitNv ExternalMemoryHandleTypeFlagBitsNV = 4 ExternalMemoryHandleTypeD3d11ImageKmtBitNv ExternalMemoryHandleTypeFlagBitsNV = 8 ExternalMemoryHandleTypeFlagBitsMaxEnumNv ExternalMemoryHandleTypeFlagBitsNV = 2147483647 ) ExternalMemoryHandleTypeFlagBitsNV enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalMemoryHandleTypeFlagBitsNV.html</p>"},{"location":"api/rendering/vulkan/#externalmemoryhandletypeflags","title":"ExternalMemoryHandleTypeFlags","text":"<p>uint32 <pre><code>type ExternalMemoryHandleTypeFlags uint32\n</code></pre></p> <p>ExternalMemoryHandleTypeFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalMemoryHandleTypeFlags.html</p>"},{"location":"api/rendering/vulkan/#externalmemoryhandletypeflagsnv","title":"ExternalMemoryHandleTypeFlagsNV","text":"<p>uint32 <pre><code>type ExternalMemoryHandleTypeFlagsNV uint32\n</code></pre></p> <p>ExternalMemoryHandleTypeFlagsNV type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalMemoryHandleTypeFlagsNV.html</p>"},{"location":"api/rendering/vulkan/#externalmemoryimagecreateinfo","title":"ExternalMemoryImageCreateInfo","text":"<p><code>struct</code></p> <pre><code>type ExternalMemoryImageCreateInfo struct {\n    SType       StructureType\n    PNext       unsafe.Pointer\n    HandleTypes ExternalMemoryHandleTypeFlags\n}\n</code></pre> <p>ExternalMemoryImageCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalMemoryImageCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#externalmemoryimagecreateinfonv","title":"ExternalMemoryImageCreateInfoNV","text":"<p><code>struct</code></p> <pre><code>type ExternalMemoryImageCreateInfoNV struct {\n    SType       StructureType\n    PNext       unsafe.Pointer\n    HandleTypes ExternalMemoryHandleTypeFlagsNV\n}\n</code></pre> <p>ExternalMemoryImageCreateInfoNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalMemoryImageCreateInfoNV.html</p>"},{"location":"api/rendering/vulkan/#externalmemoryproperties","title":"ExternalMemoryProperties","text":"<p><code>struct</code></p> <pre><code>type ExternalMemoryProperties struct {\n    ExternalMemoryFeatures        ExternalMemoryFeatureFlags\n    ExportFromImportedHandleTypes ExternalMemoryHandleTypeFlags\n    CompatibleHandleTypes         ExternalMemoryHandleTypeFlags\n}\n</code></pre> <p>ExternalMemoryProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalMemoryProperties.html</p>"},{"location":"api/rendering/vulkan/#externalsemaphorefeatureflagbits","title":"ExternalSemaphoreFeatureFlagBits","text":"<p>int32 <pre><code>type ExternalSemaphoreFeatureFlagBits int32\n</code></pre></p> <p>ExternalSemaphoreFeatureFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalSemaphoreFeatureFlagBits.html</p> <p>const ( ExternalSemaphoreFeatureExportableBit ExternalSemaphoreFeatureFlagBits = 1 ExternalSemaphoreFeatureImportableBit ExternalSemaphoreFeatureFlagBits = 2 ExternalSemaphoreFeatureFlagBitsMaxEnum ExternalSemaphoreFeatureFlagBits = 2147483647 ) ExternalSemaphoreFeatureFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalSemaphoreFeatureFlagBits.html</p>"},{"location":"api/rendering/vulkan/#externalsemaphorefeatureflags","title":"ExternalSemaphoreFeatureFlags","text":"<p>uint32 <pre><code>type ExternalSemaphoreFeatureFlags uint32\n</code></pre></p> <p>ExternalSemaphoreFeatureFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalSemaphoreFeatureFlags.html</p>"},{"location":"api/rendering/vulkan/#externalsemaphorehandletypeflagbits","title":"ExternalSemaphoreHandleTypeFlagBits","text":"<p>int32 <pre><code>type ExternalSemaphoreHandleTypeFlagBits int32\n</code></pre></p> <p>ExternalSemaphoreHandleTypeFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalSemaphoreHandleTypeFlagBits.html</p> <p>const ( ExternalSemaphoreHandleTypeOpaqueFdBit ExternalSemaphoreHandleTypeFlagBits = 1 ExternalSemaphoreHandleTypeOpaqueWin32Bit ExternalSemaphoreHandleTypeFlagBits = 2 ExternalSemaphoreHandleTypeOpaqueWin32KmtBit ExternalSemaphoreHandleTypeFlagBits = 4 ExternalSemaphoreHandleTypeD3d12FenceBit ExternalSemaphoreHandleTypeFlagBits = 8 ExternalSemaphoreHandleTypeSyncFdBit ExternalSemaphoreHandleTypeFlagBits = 16 ExternalSemaphoreHandleTypeFlagBitsMaxEnum ExternalSemaphoreHandleTypeFlagBits = 2147483647 ) ExternalSemaphoreHandleTypeFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalSemaphoreHandleTypeFlagBits.html</p>"},{"location":"api/rendering/vulkan/#externalsemaphorehandletypeflags","title":"ExternalSemaphoreHandleTypeFlags","text":"<p>uint32 <pre><code>type ExternalSemaphoreHandleTypeFlags uint32\n</code></pre></p> <p>ExternalSemaphoreHandleTypeFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalSemaphoreHandleTypeFlags.html</p>"},{"location":"api/rendering/vulkan/#externalsemaphoreproperties","title":"ExternalSemaphoreProperties","text":"<p><code>struct</code></p> <pre><code>type ExternalSemaphoreProperties struct {\n    SType                         StructureType\n    PNext                         unsafe.Pointer\n    ExportFromImportedHandleTypes ExternalSemaphoreHandleTypeFlags\n    CompatibleHandleTypes         ExternalSemaphoreHandleTypeFlags\n    ExternalSemaphoreFeatures     ExternalSemaphoreFeatureFlags\n}\n</code></pre> <p>ExternalSemaphoreProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkExternalSemaphoreProperties.html</p>"},{"location":"api/rendering/vulkan/#fence","title":"Fence","text":"<p>C.VkFence <pre><code>type Fence C.VkFence\n</code></pre></p> <p>Fence as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFence.html</p>"},{"location":"api/rendering/vulkan/#fencecreateflagbits","title":"FenceCreateFlagBits","text":"<p>int32 <pre><code>type FenceCreateFlagBits int32\n</code></pre></p> <p>FenceCreateFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFenceCreateFlagBits.html</p> <p>const ( FenceCreateSignaledBit FenceCreateFlagBits = 1 FenceCreateFlagBitsMaxEnum FenceCreateFlagBits = 2147483647 ) FenceCreateFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFenceCreateFlagBits.html</p>"},{"location":"api/rendering/vulkan/#fencecreateflags","title":"FenceCreateFlags","text":"<p>uint32 <pre><code>type FenceCreateFlags uint32\n</code></pre></p> <p>FenceCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFenceCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#fencecreateinfo","title":"FenceCreateInfo","text":"<p><code>struct</code></p> <pre><code>type FenceCreateInfo struct {\n    SType StructureType\n    PNext unsafe.Pointer\n    Flags FenceCreateFlags\n}\n</code></pre> <p>FenceCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFenceCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#fencegetfdinfo","title":"FenceGetFdInfo","text":"<p><code>struct</code></p> <pre><code>type FenceGetFdInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    Fence      Fence\n    HandleType ExternalFenceHandleTypeFlagBits\n}\n</code></pre> <p>FenceGetFdInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkFenceGetFdInfoKHR</p>"},{"location":"api/rendering/vulkan/#fenceimportflagbits","title":"FenceImportFlagBits","text":"<p>int32 <pre><code>type FenceImportFlagBits int32\n</code></pre></p> <p>FenceImportFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFenceImportFlagBits.html</p> <p>const ( FenceImportTemporaryBit FenceImportFlagBits = 1 FenceImportFlagBitsMaxEnum FenceImportFlagBits = 2147483647 ) FenceImportFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFenceImportFlagBits.html</p>"},{"location":"api/rendering/vulkan/#fenceimportflags","title":"FenceImportFlags","text":"<p>uint32 <pre><code>type FenceImportFlags uint32\n</code></pre></p> <p>FenceImportFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFenceImportFlags.html</p>"},{"location":"api/rendering/vulkan/#filter","title":"Filter","text":"<p>int32 <pre><code>type Filter int32\n</code></pre></p> <p>Filter as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFilter.html</p> <p>const ( FilterNearest Filter = iota FilterLinear Filter = 1 FilterCubicImg Filter = 1000015000 FilterBeginRange Filter = 0 FilterEndRange Filter = 1 FilterRangeSize Filter = 2 FilterMaxEnum Filter = 2147483647 ) Filter enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFilter.html</p>"},{"location":"api/rendering/vulkan/#flags","title":"Flags","text":"<p>uint32 <pre><code>type Flags uint32\n</code></pre></p> <p>Flags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFlags.html</p>"},{"location":"api/rendering/vulkan/#format","title":"Format","text":"<p>int32 <pre><code>type Format int32\n</code></pre></p> <p>Format as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFormat.html</p> <p>const ( FormatUndefined Format = iota FormatR4g4UnormPack8 Format = 1 FormatR4g4b4a4UnormPack16 Format = 2 FormatB4g4r4a4UnormPack16 Format = 3 FormatR5g6b5UnormPack16 Format = 4 FormatB5g6r5UnormPack16 Format = 5 FormatR5g5b5a1UnormPack16 Format = 6 FormatB5g5r5a1UnormPack16 Format = 7 FormatA1r5g5b5UnormPack16 Format = 8 FormatR8Unorm Format = 9 FormatR8Snorm Format = 10 FormatR8Uscaled Format = 11 FormatR8Sscaled Format = 12 FormatR8Uint Format = 13 FormatR8Sint Format = 14 FormatR8Srgb Format = 15 FormatR8g8Unorm Format = 16 FormatR8g8Snorm Format = 17 FormatR8g8Uscaled Format = 18 FormatR8g8Sscaled Format = 19 FormatR8g8Uint Format = 20 FormatR8g8Sint Format = 21 FormatR8g8Srgb Format = 22 FormatR8g8b8Unorm Format = 23 FormatR8g8b8Snorm Format = 24 FormatR8g8b8Uscaled Format = 25 FormatR8g8b8Sscaled Format = 26 FormatR8g8b8Uint Format = 27 FormatR8g8b8Sint Format = 28 FormatR8g8b8Srgb Format = 29 FormatB8g8r8Unorm Format = 30 FormatB8g8r8Snorm Format = 31 FormatB8g8r8Uscaled Format = 32 FormatB8g8r8Sscaled Format = 33 FormatB8g8r8Uint Format = 34 FormatB8g8r8Sint Format = 35 FormatB8g8r8Srgb Format = 36 FormatR8g8b8a8Unorm Format = 37 FormatR8g8b8a8Snorm Format = 38 FormatR8g8b8a8Uscaled Format = 39 FormatR8g8b8a8Sscaled Format = 40 FormatR8g8b8a8Uint Format = 41 FormatR8g8b8a8Sint Format = 42 FormatR8g8b8a8Srgb Format = 43 FormatB8g8r8a8Unorm Format = 44 FormatB8g8r8a8Snorm Format = 45 FormatB8g8r8a8Uscaled Format = 46 FormatB8g8r8a8Sscaled Format = 47 FormatB8g8r8a8Uint Format = 48 FormatB8g8r8a8Sint Format = 49 FormatB8g8r8a8Srgb Format = 50 FormatA8b8g8r8UnormPack32 Format = 51 FormatA8b8g8r8SnormPack32 Format = 52 FormatA8b8g8r8UscaledPack32 Format = 53 FormatA8b8g8r8SscaledPack32 Format = 54 FormatA8b8g8r8UintPack32 Format = 55 FormatA8b8g8r8SintPack32 Format = 56 FormatA8b8g8r8SrgbPack32 Format = 57 FormatA2r10g10b10UnormPack32 Format = 58 FormatA2r10g10b10SnormPack32 Format = 59 FormatA2r10g10b10UscaledPack32 Format = 60 FormatA2r10g10b10SscaledPack32 Format = 61 FormatA2r10g10b10UintPack32 Format = 62 FormatA2r10g10b10SintPack32 Format = 63 FormatA2b10g10r10UnormPack32 Format = 64 FormatA2b10g10r10SnormPack32 Format = 65 FormatA2b10g10r10UscaledPack32 Format = 66 FormatA2b10g10r10SscaledPack32 Format = 67 FormatA2b10g10r10UintPack32 Format = 68 FormatA2b10g10r10SintPack32 Format = 69 FormatR16Unorm Format = 70 FormatR16Snorm Format = 71 FormatR16Uscaled Format = 72 FormatR16Sscaled Format = 73 FormatR16Uint Format = 74 FormatR16Sint Format = 75 FormatR16Sfloat Format = 76 FormatR16g16Unorm Format = 77 FormatR16g16Snorm Format = 78 FormatR16g16Uscaled Format = 79 FormatR16g16Sscaled Format = 80 FormatR16g16Uint Format = 81 FormatR16g16Sint Format = 82 FormatR16g16Sfloat Format = 83 FormatR16g16b16Unorm Format = 84 FormatR16g16b16Snorm Format = 85 FormatR16g16b16Uscaled Format = 86 FormatR16g16b16Sscaled Format = 87 FormatR16g16b16Uint Format = 88 FormatR16g16b16Sint Format = 89 FormatR16g16b16Sfloat Format = 90 FormatR16g16b16a16Unorm Format = 91 FormatR16g16b16a16Snorm Format = 92 FormatR16g16b16a16Uscaled Format = 93 FormatR16g16b16a16Sscaled Format = 94 FormatR16g16b16a16Uint Format = 95 FormatR16g16b16a16Sint Format = 96 FormatR16g16b16a16Sfloat Format = 97 FormatR32Uint Format = 98 FormatR32Sint Format = 99 FormatR32Sfloat Format = 100 FormatR32g32Uint Format = 101 FormatR32g32Sint Format = 102 FormatR32g32Sfloat Format = 103 FormatR32g32b32Uint Format = 104 FormatR32g32b32Sint Format = 105 FormatR32g32b32Sfloat Format = 106 FormatR32g32b32a32Uint Format = 107 FormatR32g32b32a32Sint Format = 108 FormatR32g32b32a32Sfloat Format = 109 FormatR64Uint Format = 110 FormatR64Sint Format = 111 FormatR64Sfloat Format = 112 FormatR64g64Uint Format = 113 FormatR64g64Sint Format = 114 FormatR64g64Sfloat Format = 115 FormatR64g64b64Uint Format = 116 FormatR64g64b64Sint Format = 117 FormatR64g64b64Sfloat Format = 118 FormatR64g64b64a64Uint Format = 119 FormatR64g64b64a64Sint Format = 120 FormatR64g64b64a64Sfloat Format = 121 FormatB10g11r11UfloatPack32 Format = 122 FormatE5b9g9r9UfloatPack32 Format = 123 FormatD16Unorm Format = 124 FormatX8D24UnormPack32 Format = 125 FormatD32Sfloat Format = 126 FormatS8Uint Format = 127 FormatD16UnormS8Uint Format = 128 FormatD24UnormS8Uint Format = 129 FormatD32SfloatS8Uint Format = 130 FormatBc1RgbUnormBlock Format = 131 FormatBc1RgbSrgbBlock Format = 132 FormatBc1RgbaUnormBlock Format = 133 FormatBc1RgbaSrgbBlock Format = 134 FormatBc2UnormBlock Format = 135 FormatBc2SrgbBlock Format = 136 FormatBc3UnormBlock Format = 137 FormatBc3SrgbBlock Format = 138 FormatBc4UnormBlock Format = 139 FormatBc4SnormBlock Format = 140 FormatBc5UnormBlock Format = 141 FormatBc5SnormBlock Format = 142 FormatBc6hUfloatBlock Format = 143 FormatBc6hSfloatBlock Format = 144 FormatBc7UnormBlock Format = 145 FormatBc7SrgbBlock Format = 146 FormatEtc2R8g8b8UnormBlock Format = 147 FormatEtc2R8g8b8SrgbBlock Format = 148 FormatEtc2R8g8b8a1UnormBlock Format = 149 FormatEtc2R8g8b8a1SrgbBlock Format = 150 FormatEtc2R8g8b8a8UnormBlock Format = 151 FormatEtc2R8g8b8a8SrgbBlock Format = 152 FormatEacR11UnormBlock Format = 153 FormatEacR11SnormBlock Format = 154 FormatEacR11g11UnormBlock Format = 155 FormatEacR11g11SnormBlock Format = 156 FormatAstc4x4UnormBlock Format = 157 FormatAstc4x4SrgbBlock Format = 158 FormatAstc5x4UnormBlock Format = 159 FormatAstc5x4SrgbBlock Format = 160 FormatAstc5x5UnormBlock Format = 161 FormatAstc5x5SrgbBlock Format = 162 FormatAstc6x5UnormBlock Format = 163 FormatAstc6x5SrgbBlock Format = 164 FormatAstc6x6UnormBlock Format = 165 FormatAstc6x6SrgbBlock Format = 166 FormatAstc8x5UnormBlock Format = 167 FormatAstc8x5SrgbBlock Format = 168 FormatAstc8x6UnormBlock Format = 169 FormatAstc8x6SrgbBlock Format = 170 FormatAstc8x8UnormBlock Format = 171 FormatAstc8x8SrgbBlock Format = 172 FormatAstc10x5UnormBlock Format = 173 FormatAstc10x5SrgbBlock Format = 174 FormatAstc10x6UnormBlock Format = 175 FormatAstc10x6SrgbBlock Format = 176 FormatAstc10x8UnormBlock Format = 177 FormatAstc10x8SrgbBlock Format = 178 FormatAstc10x10UnormBlock Format = 179 FormatAstc10x10SrgbBlock Format = 180 FormatAstc12x10UnormBlock Format = 181 FormatAstc12x10SrgbBlock Format = 182 FormatAstc12x12UnormBlock Format = 183 FormatAstc12x12SrgbBlock Format = 184 FormatG8b8g8r8422Unorm Format = 1000156000 FormatB8g8r8g8422Unorm Format = 1000156001 FormatG8B8R83plane420Unorm Format = 1000156002 FormatG8B8r82plane420Unorm Format = 1000156003 FormatG8B8R83plane422Unorm Format = 1000156004 FormatG8B8r82plane422Unorm Format = 1000156005 FormatG8B8R83plane444Unorm Format = 1000156006 FormatR10x6UnormPack16 Format = 1000156007 FormatR10x6g10x6Unorm2pack16 Format = 1000156008 FormatR10x6g10x6b10x6a10x6Unorm4pack16 Format = 1000156009 FormatG10x6b10x6g10x6r10x6422Unorm4pack16 Format = 1000156010 FormatB10x6g10x6r10x6g10x6422Unorm4pack16 Format = 1000156011 FormatG10x6B10x6R10x63plane420Unorm3pack16 Format = 1000156012 FormatG10x6B10x6r10x62plane420Unorm3pack16 Format = 1000156013 FormatG10x6B10x6R10x63plane422Unorm3pack16 Format = 1000156014 FormatG10x6B10x6r10x62plane422Unorm3pack16 Format = 1000156015 FormatG10x6B10x6R10x63plane444Unorm3pack16 Format = 1000156016 FormatR12x4UnormPack16 Format = 1000156017 FormatR12x4g12x4Unorm2pack16 Format = 1000156018 FormatR12x4g12x4b12x4a12x4Unorm4pack16 Format = 1000156019 FormatG12x4b12x4g12x4r12x4422Unorm4pack16 Format = 1000156020 FormatB12x4g12x4r12x4g12x4422Unorm4pack16 Format = 1000156021 FormatG12x4B12x4R12x43plane420Unorm3pack16 Format = 1000156022 FormatG12x4B12x4r12x42plane420Unorm3pack16 Format = 1000156023 FormatG12x4B12x4R12x43plane422Unorm3pack16 Format = 1000156024 FormatG12x4B12x4r12x42plane422Unorm3pack16 Format = 1000156025 FormatG12x4B12x4R12x43plane444Unorm3pack16 Format = 1000156026 FormatG16b16g16r16422Unorm Format = 1000156027 FormatB16g16r16g16422Unorm Format = 1000156028 FormatG16B16R163plane420Unorm Format = 1000156029 FormatG16B16r162plane420Unorm Format = 1000156030 FormatG16B16R163plane422Unorm Format = 1000156031 FormatG16B16r162plane422Unorm Format = 1000156032 FormatG16B16R163plane444Unorm Format = 1000156033 FormatPvrtc12bppUnormBlockImg Format = 1000054000 FormatPvrtc14bppUnormBlockImg Format = 1000054001 FormatPvrtc22bppUnormBlockImg Format = 1000054002 FormatPvrtc24bppUnormBlockImg Format = 1000054003 FormatPvrtc12bppSrgbBlockImg Format = 1000054004 FormatPvrtc14bppSrgbBlockImg Format = 1000054005 FormatPvrtc22bppSrgbBlockImg Format = 1000054006 FormatPvrtc24bppSrgbBlockImg Format = 1000054007 FormatBeginRange Format = 0 FormatEndRange Format = 184 FormatRangeSize Format = 185 FormatMaxEnum Format = 2147483647 ) Format enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFormat.html</p>"},{"location":"api/rendering/vulkan/#formatfeatureflagbits","title":"FormatFeatureFlagBits","text":"<p>int32 <pre><code>type FormatFeatureFlagBits int32\n</code></pre></p> <p>FormatFeatureFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFormatFeatureFlagBits.html</p> <p>const ( FormatFeatureSampledImageBit FormatFeatureFlagBits = 1 FormatFeatureStorageImageBit FormatFeatureFlagBits = 2 FormatFeatureStorageImageAtomicBit FormatFeatureFlagBits = 4 FormatFeatureUniformTexelBufferBit FormatFeatureFlagBits = 8 FormatFeatureStorageTexelBufferBit FormatFeatureFlagBits = 16 FormatFeatureStorageTexelBufferAtomicBit FormatFeatureFlagBits = 32 FormatFeatureVertexBufferBit FormatFeatureFlagBits = 64 FormatFeatureColorAttachmentBit FormatFeatureFlagBits = 128 FormatFeatureColorAttachmentBlendBit FormatFeatureFlagBits = 256 FormatFeatureDepthStencilAttachmentBit FormatFeatureFlagBits = 512 FormatFeatureBlitSrcBit FormatFeatureFlagBits = 1024 FormatFeatureBlitDstBit FormatFeatureFlagBits = 2048 FormatFeatureSampledImageFilterLinearBit FormatFeatureFlagBits = 4096 FormatFeatureTransferSrcBit FormatFeatureFlagBits = 16384 FormatFeatureTransferDstBit FormatFeatureFlagBits = 32768 FormatFeatureMidpointChromaSamplesBit FormatFeatureFlagBits = 131072 FormatFeatureSampledImageYcbcrConversionLinearFilterBit FormatFeatureFlagBits = 262144 FormatFeatureSampledImageYcbcrConversionSeparateReconstructionFilterBit FormatFeatureFlagBits = 524288 FormatFeatureSampledImageYcbcrConversionChromaReconstructionExplicitBit FormatFeatureFlagBits = 1048576 FormatFeatureSampledImageYcbcrConversionChromaReconstructionExplicitForceableBit FormatFeatureFlagBits = 2097152 FormatFeatureDisjointBit FormatFeatureFlagBits = 4194304 FormatFeatureCositedChromaSamplesBit FormatFeatureFlagBits = 8388608 FormatFeatureSampledImageFilterCubicBitImg FormatFeatureFlagBits = 8192 FormatFeatureSampledImageFilterMinmaxBit FormatFeatureFlagBits = 65536 FormatFeatureFlagBitsMaxEnum FormatFeatureFlagBits = 2147483647 ) FormatFeatureFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFormatFeatureFlagBits.html</p>"},{"location":"api/rendering/vulkan/#formatfeatureflags","title":"FormatFeatureFlags","text":"<p>uint32 <pre><code>type FormatFeatureFlags uint32\n</code></pre></p> <p>FormatFeatureFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFormatFeatureFlags.html</p>"},{"location":"api/rendering/vulkan/#formatproperties","title":"FormatProperties","text":"<p><code>struct</code></p> <pre><code>type FormatProperties struct {\n    LinearTilingFeatures  FormatFeatureFlags\n    OptimalTilingFeatures FormatFeatureFlags\n    BufferFeatures        FormatFeatureFlags\n}\n</code></pre> <p>FormatProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFormatProperties.html</p>"},{"location":"api/rendering/vulkan/#formatproperties2","title":"FormatProperties2","text":"<p><code>struct</code></p> <pre><code>type FormatProperties2 struct {\n    SType            StructureType\n    PNext            unsafe.Pointer\n    FormatProperties FormatProperties\n}\n</code></pre> <p>FormatProperties2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFormatProperties2.html</p>"},{"location":"api/rendering/vulkan/#framebuffer","title":"Framebuffer","text":"<p>C.VkFramebuffer <pre><code>type Framebuffer C.VkFramebuffer\n</code></pre></p> <p>Framebuffer as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFramebuffer.html</p>"},{"location":"api/rendering/vulkan/#framebuffercreateflags","title":"FramebufferCreateFlags","text":"<p>uint32 <pre><code>type FramebufferCreateFlags uint32\n</code></pre></p> <p>FramebufferCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFramebufferCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#framebuffercreateinfo","title":"FramebufferCreateInfo","text":"<p><code>struct</code></p> <pre><code>type FramebufferCreateInfo struct {\n    SType           StructureType\n    PNext           unsafe.Pointer\n    Flags           FramebufferCreateFlags\n    RenderPass      RenderPass\n    AttachmentCount uint32\n    PAttachments    *ImageView\n    Width           uint32\n    Height          uint32\n    Layers          uint32\n}\n</code></pre> <p>FramebufferCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFramebufferCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#frontface","title":"FrontFace","text":"<p>int32 <pre><code>type FrontFace int32\n</code></pre></p> <p>FrontFace as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFrontFace.html</p> <p>const ( FrontFaceCounterClockwise FrontFace = iota FrontFaceClockwise FrontFace = 1 FrontFaceBeginRange FrontFace = 0 FrontFaceEndRange FrontFace = 1 FrontFaceRangeSize FrontFace = 2 FrontFaceMaxEnum FrontFace = 2147483647 ) FrontFace enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFrontFace.html</p>"},{"location":"api/rendering/vulkan/#geometryaabbnvx","title":"GeometryAABBNVX","text":"<p><code>struct</code></p> <pre><code>type GeometryAABBNVX struct {\n    SType    StructureType\n    PNext    unsafe.Pointer\n    AabbData Buffer\n    NumAABBs uint32\n    Stride   uint32\n    Offset   DeviceSize\n}\n</code></pre> <p>GeometryAABBNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkGeometryAABBNVX</p>"},{"location":"api/rendering/vulkan/#geometrydatanvx","title":"GeometryDataNVX","text":"<p><code>struct</code></p> <pre><code>type GeometryDataNVX struct {\n    Triangles GeometryTrianglesNVX\n    Aabbs     GeometryAABBNVX\n}\n</code></pre> <p>GeometryDataNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkGeometryDataNVX</p>"},{"location":"api/rendering/vulkan/#geometryflagbitsnvx","title":"GeometryFlagBitsNVX","text":"<p>int32 <pre><code>type GeometryFlagBitsNVX int32\n</code></pre></p> <p>GeometryFlagBitsNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkGeometryFlagBitsNVX</p> <p>const ( GeometryOpaqueBitNvx GeometryFlagBitsNVX = 1 GeometryNoDuplicateAnyHitInvocationBitNvx GeometryFlagBitsNVX = 2 GeometryFlagBitsMaxEnumNvx GeometryFlagBitsNVX = 2147483647 ) GeometryFlagBitsNVX enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkGeometryFlagBitsNVX</p>"},{"location":"api/rendering/vulkan/#geometryflagsnvx","title":"GeometryFlagsNVX","text":"<p>uint32 <pre><code>type GeometryFlagsNVX uint32\n</code></pre></p> <p>GeometryFlagsNVX type as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkGeometryFlagsNVX</p>"},{"location":"api/rendering/vulkan/#geometryinstanceflagbitsnvx","title":"GeometryInstanceFlagBitsNVX","text":"<p>int32 <pre><code>type GeometryInstanceFlagBitsNVX int32\n</code></pre></p> <p>GeometryInstanceFlagBitsNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkGeometryInstanceFlagBitsNVX</p> <p>const ( GeometryInstanceTriangleCullDisableBitNvx GeometryInstanceFlagBitsNVX = 1 GeometryInstanceTriangleCullFlipWindingBitNvx GeometryInstanceFlagBitsNVX = 2 GeometryInstanceForceOpaqueBitNvx GeometryInstanceFlagBitsNVX = 4 GeometryInstanceForceNoOpaqueBitNvx GeometryInstanceFlagBitsNVX = 8 GeometryInstanceFlagBitsMaxEnumNvx GeometryInstanceFlagBitsNVX = 2147483647 ) GeometryInstanceFlagBitsNVX enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkGeometryInstanceFlagBitsNVX</p>"},{"location":"api/rendering/vulkan/#geometryinstanceflagsnvx","title":"GeometryInstanceFlagsNVX","text":"<p>uint32 <pre><code>type GeometryInstanceFlagsNVX uint32\n</code></pre></p> <p>GeometryInstanceFlagsNVX type as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkGeometryInstanceFlagsNVX</p>"},{"location":"api/rendering/vulkan/#geometrynvx","title":"GeometryNVX","text":"<p><code>struct</code></p> <pre><code>type GeometryNVX struct {\n    SType        StructureType\n    PNext        unsafe.Pointer\n    GeometryType GeometryTypeNVX\n    Geometry     GeometryDataNVX\n    Flags        GeometryFlagsNVX\n}\n</code></pre> <p>GeometryNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkGeometryNVX</p>"},{"location":"api/rendering/vulkan/#geometrytrianglesnvx","title":"GeometryTrianglesNVX","text":"<p><code>struct</code></p> <pre><code>type GeometryTrianglesNVX struct {\n    SType           StructureType\n    PNext           unsafe.Pointer\n    VertexData      Buffer\n    VertexOffset    DeviceSize\n    VertexCount     uint32\n    VertexStride    DeviceSize\n    VertexFormat    Format\n    IndexData       Buffer\n    IndexOffset     DeviceSize\n    IndexCount      uint32\n    IndexType       IndexType\n    TransformData   Buffer\n    TransformOffset DeviceSize\n}\n</code></pre> <p>GeometryTrianglesNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkGeometryTrianglesNVX</p>"},{"location":"api/rendering/vulkan/#geometrytypenvx","title":"GeometryTypeNVX","text":"<p>int32 <pre><code>type GeometryTypeNVX int32\n</code></pre></p> <p>GeometryTypeNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkGeometryTypeNVX</p> <p>const ( GeometryTypeTrianglesNvx GeometryTypeNVX = iota GeometryTypeAabbsNvx GeometryTypeNVX = 1 GeometryTypeBeginRangeNvx GeometryTypeNVX = 0 GeometryTypeEndRangeNvx GeometryTypeNVX = 1 GeometryTypeRangeSizeNvx GeometryTypeNVX = 2 GeometryTypeMaxEnumNvx GeometryTypeNVX = 2147483647 ) GeometryTypeNVX enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkGeometryTypeNVX</p>"},{"location":"api/rendering/vulkan/#graphicspipelinecreateinfo","title":"GraphicsPipelineCreateInfo","text":"<p><code>struct</code></p> <pre><code>type GraphicsPipelineCreateInfo struct {\n    SType               StructureType\n    PNext               unsafe.Pointer\n    Flags               PipelineCreateFlags\n    StageCount          uint32\n    PStages             *PipelineShaderStageCreateInfo\n    PVertexInputState   *PipelineVertexInputStateCreateInfo\n    PInputAssemblyState *PipelineInputAssemblyStateCreateInfo\n    PTessellationState  *PipelineTessellationStateCreateInfo\n    PViewportState      *PipelineViewportStateCreateInfo\n    PRasterizationState *PipelineRasterizationStateCreateInfo\n    PMultisampleState   *PipelineMultisampleStateCreateInfo\n    PDepthStencilState  *PipelineDepthStencilStateCreateInfo\n    PColorBlendState    *PipelineColorBlendStateCreateInfo\n    PDynamicState       *PipelineDynamicStateCreateInfo\n    Layout              PipelineLayout\n    RenderPass          RenderPass\n    Subpass             uint32\n    BasePipelineHandle  Pipeline\n    BasePipelineIndex   int32\n}\n</code></pre> <p>GraphicsPipelineCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkGraphicsPipelineCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#hdrmetadata","title":"HdrMetadata","text":"<p><code>struct</code></p> <pre><code>type HdrMetadata struct {\n    SType                     StructureType\n    PNext                     unsafe.Pointer\n    DisplayPrimaryRed         XYColor\n    DisplayPrimaryGreen       XYColor\n    DisplayPrimaryBlue        XYColor\n    WhitePoint                XYColor\n    MaxLuminance              float32\n    MinLuminance              float32\n    MaxContentLightLevel      float32\n    MaxFrameAverageLightLevel float32\n}\n</code></pre> <p>HdrMetadata as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkHdrMetadataEXT.html</p>"},{"location":"api/rendering/vulkan/#image","title":"Image","text":"<p>C.VkImage <pre><code>type Image C.VkImage\n</code></pre></p> <p>Image as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImage.html</p>"},{"location":"api/rendering/vulkan/#imageaspectflagbits","title":"ImageAspectFlagBits","text":"<p>int32 <pre><code>type ImageAspectFlagBits int32\n</code></pre></p> <p>ImageAspectFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageAspectFlagBits.html</p> <p>const ( ImageAspectColorBit ImageAspectFlagBits = 1 ImageAspectDepthBit ImageAspectFlagBits = 2 ImageAspectStencilBit ImageAspectFlagBits = 4 ImageAspectMetadataBit ImageAspectFlagBits = 8 ImageAspectPlane0Bit ImageAspectFlagBits = 16 ImageAspectPlane1Bit ImageAspectFlagBits = 32 ImageAspectPlane2Bit ImageAspectFlagBits = 64 ImageAspectMemoryPlane0Bit ImageAspectFlagBits = 128 ImageAspectMemoryPlane1Bit ImageAspectFlagBits = 256 ImageAspectMemoryPlane2Bit ImageAspectFlagBits = 512 ImageAspectMemoryPlane3Bit ImageAspectFlagBits = 1024 ImageAspectFlagBitsMaxEnum ImageAspectFlagBits = 2147483647 ) ImageAspectFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageAspectFlagBits.html</p>"},{"location":"api/rendering/vulkan/#imageaspectflags","title":"ImageAspectFlags","text":"<p>uint32 <pre><code>type ImageAspectFlags uint32\n</code></pre></p> <p>ImageAspectFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageAspectFlags.html</p>"},{"location":"api/rendering/vulkan/#imageblit","title":"ImageBlit","text":"<p><code>struct</code></p> <pre><code>type ImageBlit struct {\n    SrcSubresource ImageSubresourceLayers\n    SrcOffsets     [2]Offset3D\n    DstSubresource ImageSubresourceLayers\n    DstOffsets     [2]Offset3D\n}\n</code></pre> <p>ImageBlit as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageBlit.html</p>"},{"location":"api/rendering/vulkan/#imagecopy","title":"ImageCopy","text":"<p><code>struct</code></p> <pre><code>type ImageCopy struct {\n    SrcSubresource ImageSubresourceLayers\n    SrcOffset      Offset3D\n    DstSubresource ImageSubresourceLayers\n    DstOffset      Offset3D\n    Extent         Extent3D\n}\n</code></pre> <p>ImageCopy as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageCopy.html</p>"},{"location":"api/rendering/vulkan/#imagecreateflagbits","title":"ImageCreateFlagBits","text":"<p>int32 <pre><code>type ImageCreateFlagBits int32\n</code></pre></p> <p>ImageCreateFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageCreateFlagBits.html</p> <p>const ( ImageCreateSparseBindingBit ImageCreateFlagBits = 1 ImageCreateSparseResidencyBit ImageCreateFlagBits = 2 ImageCreateSparseAliasedBit ImageCreateFlagBits = 4 ImageCreateMutableFormatBit ImageCreateFlagBits = 8 ImageCreateCubeCompatibleBit ImageCreateFlagBits = 16 ImageCreateAliasBit ImageCreateFlagBits = 1024 ImageCreateSplitInstanceBindRegionsBit ImageCreateFlagBits = 64 ImageCreate2dArrayCompatibleBit ImageCreateFlagBits = 32 ImageCreateBlockTexelViewCompatibleBit ImageCreateFlagBits = 128 ImageCreateExtendedUsageBit ImageCreateFlagBits = 256 ImageCreateProtectedBit ImageCreateFlagBits = 2048 ImageCreateDisjointBit ImageCreateFlagBits = 512 ImageCreateCornerSampledBitNv ImageCreateFlagBits = 8192 ImageCreateSampleLocationsCompatibleDepthBit ImageCreateFlagBits = 4096 ImageCreateFlagBitsMaxEnum ImageCreateFlagBits = 2147483647 ) ImageCreateFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageCreateFlagBits.html</p>"},{"location":"api/rendering/vulkan/#imagecreateflags","title":"ImageCreateFlags","text":"<p>uint32 <pre><code>type ImageCreateFlags uint32\n</code></pre></p> <p>ImageCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#imagecreateinfo","title":"ImageCreateInfo","text":"<p><code>struct</code></p> <pre><code>type ImageCreateInfo struct {\n    SType                 StructureType\n    PNext                 unsafe.Pointer\n    Flags                 ImageCreateFlags\n    ImageType             ImageType\n    Format                Format\n    Extent                Extent3D\n    MipLevels             uint32\n    ArrayLayers           uint32\n    Samples               SampleCountFlagBits\n    Tiling                ImageTiling\n    Usage                 ImageUsageFlags\n    SharingMode           SharingMode\n    QueueFamilyIndexCount uint32\n    PQueueFamilyIndices   *uint32\n    InitialLayout         ImageLayout\n}\n</code></pre> <p>ImageCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#imagedrmformatmodifierexplicitcreateinfo","title":"ImageDrmFormatModifierExplicitCreateInfo","text":"<p><code>struct</code></p> <pre><code>type ImageDrmFormatModifierExplicitCreateInfo struct {\n    SType                       StructureType\n    PNext                       unsafe.Pointer\n    DrmFormatModifier           uint64\n    DrmFormatModifierPlaneCount uint32\n    PPlaneLayouts               *SubresourceLayout\n}\n</code></pre> <p>ImageDrmFormatModifierExplicitCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageDrmFormatModifierExplicitCreateInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#imagedrmformatmodifierlistcreateinfo","title":"ImageDrmFormatModifierListCreateInfo","text":"<p><code>struct</code></p> <pre><code>type ImageDrmFormatModifierListCreateInfo struct {\n    SType                  StructureType\n    PNext                  unsafe.Pointer\n    DrmFormatModifierCount uint32\n    PDrmFormatModifiers    *uint64\n}\n</code></pre> <p>ImageDrmFormatModifierListCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageDrmFormatModifierListCreateInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#imagedrmformatmodifierproperties","title":"ImageDrmFormatModifierProperties","text":"<p><code>struct</code></p> <pre><code>type ImageDrmFormatModifierProperties struct {\n    SType             StructureType\n    PNext             unsafe.Pointer\n    DrmFormatModifier uint64\n}\n</code></pre> <p>ImageDrmFormatModifierProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageDrmFormatModifierPropertiesEXT.html</p>"},{"location":"api/rendering/vulkan/#imageformatlistcreateinfo","title":"ImageFormatListCreateInfo","text":"<p><code>struct</code></p> <pre><code>type ImageFormatListCreateInfo struct {\n    SType           StructureType\n    PNext           unsafe.Pointer\n    ViewFormatCount uint32\n    PViewFormats    *Format\n}\n</code></pre> <p>ImageFormatListCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkImageFormatListCreateInfoKHR</p>"},{"location":"api/rendering/vulkan/#imageformatproperties","title":"ImageFormatProperties","text":"<p><code>struct</code></p> <pre><code>type ImageFormatProperties struct {\n    MaxExtent       Extent3D\n    MaxMipLevels    uint32\n    MaxArrayLayers  uint32\n    SampleCounts    SampleCountFlags\n    MaxResourceSize DeviceSize\n}\n</code></pre> <p>ImageFormatProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageFormatProperties.html</p>"},{"location":"api/rendering/vulkan/#imageformatproperties2","title":"ImageFormatProperties2","text":"<p><code>struct</code></p> <pre><code>type ImageFormatProperties2 struct {\n    SType                 StructureType\n    PNext                 unsafe.Pointer\n    ImageFormatProperties ImageFormatProperties\n}\n</code></pre> <p>ImageFormatProperties2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageFormatProperties2.html</p>"},{"location":"api/rendering/vulkan/#imagelayout","title":"ImageLayout","text":"<p>int32 <pre><code>type ImageLayout int32\n</code></pre></p> <p>ImageLayout as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageLayout.html</p> <p>const ( ImageLayoutUndefined ImageLayout = iota ImageLayoutGeneral ImageLayout = 1 ImageLayoutColorAttachmentOptimal ImageLayout = 2 ImageLayoutDepthStencilAttachmentOptimal ImageLayout = 3 ImageLayoutDepthStencilReadOnlyOptimal ImageLayout = 4 ImageLayoutShaderReadOnlyOptimal ImageLayout = 5 ImageLayoutTransferSrcOptimal ImageLayout = 6 ImageLayoutTransferDstOptimal ImageLayout = 7 ImageLayoutPreinitialized ImageLayout = 8 ImageLayoutDepthReadOnlyStencilAttachmentOptimal ImageLayout = 1000117000 ImageLayoutDepthAttachmentStencilReadOnlyOptimal ImageLayout = 1000117001 ImageLayoutPresentSrc ImageLayout = 1000001002 ImageLayoutSharedPresent ImageLayout = 1000111000 ImageLayoutShadingRateOptimalNv ImageLayout = 1000164003 ImageLayoutBeginRange ImageLayout = 0 ImageLayoutEndRange ImageLayout = 8 ImageLayoutRangeSize ImageLayout = 9 ImageLayoutMaxEnum ImageLayout = 2147483647 ) ImageLayout enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageLayout.html</p>"},{"location":"api/rendering/vulkan/#imagememorybarrier","title":"ImageMemoryBarrier","text":"<p><code>struct</code></p> <pre><code>type ImageMemoryBarrier struct {\n    SType               StructureType\n    PNext               unsafe.Pointer\n    SrcAccessMask       AccessFlags\n    DstAccessMask       AccessFlags\n    OldLayout           ImageLayout\n    NewLayout           ImageLayout\n    SrcQueueFamilyIndex uint32\n    DstQueueFamilyIndex uint32\n    Image               Image\n    SubresourceRange    ImageSubresourceRange\n}\n</code></pre> <p>ImageMemoryBarrier as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageMemoryBarrier.html</p>"},{"location":"api/rendering/vulkan/#imagememoryrequirementsinfo2","title":"ImageMemoryRequirementsInfo2","text":"<p><code>struct</code></p> <pre><code>type ImageMemoryRequirementsInfo2 struct {\n    SType StructureType\n    PNext unsafe.Pointer\n    Image Image\n}\n</code></pre> <p>ImageMemoryRequirementsInfo2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageMemoryRequirementsInfo2.html</p>"},{"location":"api/rendering/vulkan/#imageplanememoryrequirementsinfo","title":"ImagePlaneMemoryRequirementsInfo","text":"<p><code>struct</code></p> <pre><code>type ImagePlaneMemoryRequirementsInfo struct {\n    SType       StructureType\n    PNext       unsafe.Pointer\n    PlaneAspect ImageAspectFlagBits\n}\n</code></pre> <p>ImagePlaneMemoryRequirementsInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImagePlaneMemoryRequirementsInfo.html</p>"},{"location":"api/rendering/vulkan/#imageresolve","title":"ImageResolve","text":"<p><code>struct</code></p> <pre><code>type ImageResolve struct {\n    SrcSubresource ImageSubresourceLayers\n    SrcOffset      Offset3D\n    DstSubresource ImageSubresourceLayers\n    DstOffset      Offset3D\n    Extent         Extent3D\n}\n</code></pre> <p>ImageResolve as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageResolve.html</p>"},{"location":"api/rendering/vulkan/#imagesparsememoryrequirementsinfo2","title":"ImageSparseMemoryRequirementsInfo2","text":"<p><code>struct</code></p> <pre><code>type ImageSparseMemoryRequirementsInfo2 struct {\n    SType StructureType\n    PNext unsafe.Pointer\n    Image Image\n}\n</code></pre> <p>ImageSparseMemoryRequirementsInfo2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageSparseMemoryRequirementsInfo2.html</p>"},{"location":"api/rendering/vulkan/#imagesubresource","title":"ImageSubresource","text":"<p><code>struct</code></p> <pre><code>type ImageSubresource struct {\n    AspectMask ImageAspectFlags\n    MipLevel   uint32\n    ArrayLayer uint32\n}\n</code></pre> <p>ImageSubresource as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageSubresource.html</p>"},{"location":"api/rendering/vulkan/#imagesubresourcelayers","title":"ImageSubresourceLayers","text":"<p><code>struct</code></p> <pre><code>type ImageSubresourceLayers struct {\n    AspectMask     ImageAspectFlags\n    MipLevel       uint32\n    BaseArrayLayer uint32\n    LayerCount     uint32\n}\n</code></pre> <p>ImageSubresourceLayers as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageSubresourceLayers.html</p>"},{"location":"api/rendering/vulkan/#imagesubresourcerange","title":"ImageSubresourceRange","text":"<p><code>struct</code></p> <pre><code>type ImageSubresourceRange struct {\n    AspectMask     ImageAspectFlags\n    BaseMipLevel   uint32\n    LevelCount     uint32\n    BaseArrayLayer uint32\n    LayerCount     uint32\n}\n</code></pre> <p>ImageSubresourceRange as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageSubresourceRange.html</p>"},{"location":"api/rendering/vulkan/#imageswapchaincreateinfo","title":"ImageSwapchainCreateInfo","text":"<p><code>struct</code></p> <pre><code>type ImageSwapchainCreateInfo struct {\n    SType     StructureType\n    PNext     unsafe.Pointer\n    Swapchain Swapchain\n}\n</code></pre> <p>ImageSwapchainCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkImageSwapchainCreateInfoKHR</p>"},{"location":"api/rendering/vulkan/#imagetiling","title":"ImageTiling","text":"<p>int32 <pre><code>type ImageTiling int32\n</code></pre></p> <p>ImageTiling as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageTiling.html</p> <p>const ( ImageTilingOptimal ImageTiling = iota ImageTilingLinear ImageTiling = 1 ImageTilingDrmFormatModifier ImageTiling = 1000158000 ImageTilingBeginRange ImageTiling = 0 ImageTilingEndRange ImageTiling = 1 ImageTilingRangeSize ImageTiling = 2 ImageTilingMaxEnum ImageTiling = 2147483647 ) ImageTiling enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageTiling.html</p>"},{"location":"api/rendering/vulkan/#imagetype","title":"ImageType","text":"<p>int32 <pre><code>type ImageType int32\n</code></pre></p> <p>ImageType as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageType.html</p> <p>const ( ImageType1d ImageType = iota ImageType2d ImageType = 1 ImageType3d ImageType = 2 ImageTypeBeginRange ImageType = 0 ImageTypeEndRange ImageType = 2 ImageTypeRangeSize ImageType = 3 ImageTypeMaxEnum ImageType = 2147483647 ) ImageType enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageType.html</p>"},{"location":"api/rendering/vulkan/#imageusageflagbits","title":"ImageUsageFlagBits","text":"<p>int32 <pre><code>type ImageUsageFlagBits int32\n</code></pre></p> <p>ImageUsageFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageUsageFlagBits.html</p> <p>const ( ImageUsageTransferSrcBit ImageUsageFlagBits = 1 ImageUsageTransferDstBit ImageUsageFlagBits = 2 ImageUsageSampledBit ImageUsageFlagBits = 4 ImageUsageStorageBit ImageUsageFlagBits = 8 ImageUsageColorAttachmentBit ImageUsageFlagBits = 16 ImageUsageDepthStencilAttachmentBit ImageUsageFlagBits = 32 ImageUsageTransientAttachmentBit ImageUsageFlagBits = 64 ImageUsageInputAttachmentBit ImageUsageFlagBits = 128 ImageUsageShadingRateImageBitNv ImageUsageFlagBits = 256 ImageUsageFlagBitsMaxEnum ImageUsageFlagBits = 2147483647 ) ImageUsageFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageUsageFlagBits.html</p>"},{"location":"api/rendering/vulkan/#imageusageflags","title":"ImageUsageFlags","text":"<p>uint32 <pre><code>type ImageUsageFlags uint32\n</code></pre></p> <p>ImageUsageFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageUsageFlags.html</p>"},{"location":"api/rendering/vulkan/#imageview","title":"ImageView","text":"<p>C.VkImageView <pre><code>type ImageView C.VkImageView\n</code></pre></p> <p>ImageView as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageView.html</p>"},{"location":"api/rendering/vulkan/#imageviewastcdecodemode","title":"ImageViewASTCDecodeMode","text":"<p><code>struct</code></p> <pre><code>type ImageViewASTCDecodeMode struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    DecodeMode Format\n}\n</code></pre> <p>ImageViewASTCDecodeMode as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageViewASTCDecodeModeEXT.html</p>"},{"location":"api/rendering/vulkan/#imageviewcreateflags","title":"ImageViewCreateFlags","text":"<p>uint32 <pre><code>type ImageViewCreateFlags uint32\n</code></pre></p> <p>ImageViewCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageViewCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#imageviewcreateinfo","title":"ImageViewCreateInfo","text":"<p><code>struct</code></p> <pre><code>type ImageViewCreateInfo struct {\n    SType            StructureType\n    PNext            unsafe.Pointer\n    Flags            ImageViewCreateFlags\n    Image            Image\n    ViewType         ImageViewType\n    Format           Format\n    Components       ComponentMapping\n    SubresourceRange ImageSubresourceRange\n}\n</code></pre> <p>ImageViewCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageViewCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#imageviewtype","title":"ImageViewType","text":"<p>int32 <pre><code>type ImageViewType int32\n</code></pre></p> <p>ImageViewType as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageViewType.html</p> <p>const ( ImageViewType1d ImageViewType = iota ImageViewType2d ImageViewType = 1 ImageViewType3d ImageViewType = 2 ImageViewTypeCube ImageViewType = 3 ImageViewType1dArray ImageViewType = 4 ImageViewType2dArray ImageViewType = 5 ImageViewTypeCubeArray ImageViewType = 6 ImageViewTypeBeginRange ImageViewType = 0 ImageViewTypeEndRange ImageViewType = 6 ImageViewTypeRangeSize ImageViewType = 7 ImageViewTypeMaxEnum ImageViewType = 2147483647 ) ImageViewType enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageViewType.html</p>"},{"location":"api/rendering/vulkan/#imageviewusagecreateinfo","title":"ImageViewUsageCreateInfo","text":"<p><code>struct</code></p> <pre><code>type ImageViewUsageCreateInfo struct {\n    SType StructureType\n    PNext unsafe.Pointer\n    Usage ImageUsageFlags\n}\n</code></pre> <p>ImageViewUsageCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImageViewUsageCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#importfencefdinfo","title":"ImportFenceFdInfo","text":"<p><code>struct</code></p> <pre><code>type ImportFenceFdInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    Fence      Fence\n    Flags      FenceImportFlags\n    HandleType ExternalFenceHandleTypeFlagBits\n    Fd         int32\n}\n</code></pre> <p>ImportFenceFdInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkImportFenceFdInfoKHR</p>"},{"location":"api/rendering/vulkan/#importmemoryfdinfo","title":"ImportMemoryFdInfo","text":"<p><code>struct</code></p> <pre><code>type ImportMemoryFdInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    HandleType ExternalMemoryHandleTypeFlagBits\n    Fd         int32\n}\n</code></pre> <p>ImportMemoryFdInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkImportMemoryFdInfoKHR</p>"},{"location":"api/rendering/vulkan/#importmemoryhostpointerinfo","title":"ImportMemoryHostPointerInfo","text":"<p><code>struct</code></p> <pre><code>type ImportMemoryHostPointerInfo struct {\n    SType        StructureType\n    PNext        unsafe.Pointer\n    HandleType   ExternalMemoryHandleTypeFlagBits\n    PHostPointer unsafe.Pointer\n}\n</code></pre> <p>ImportMemoryHostPointerInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkImportMemoryHostPointerInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#importsemaphorefdinfo","title":"ImportSemaphoreFdInfo","text":"<p><code>struct</code></p> <pre><code>type ImportSemaphoreFdInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    Semaphore  Semaphore\n    Flags      SemaphoreImportFlags\n    HandleType ExternalSemaphoreHandleTypeFlagBits\n    Fd         int32\n}\n</code></pre> <p>ImportSemaphoreFdInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkImportSemaphoreFdInfoKHR</p>"},{"location":"api/rendering/vulkan/#indextype","title":"IndexType","text":"<p>int32 <pre><code>type IndexType int32\n</code></pre></p> <p>IndexType as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkIndexType.html</p> <p>const ( IndexTypeUint16 IndexType = iota IndexTypeUint32 IndexType = 1 IndexTypeBeginRange IndexType = 0 IndexTypeEndRange IndexType = 1 IndexTypeRangeSize IndexType = 2 IndexTypeMaxEnum IndexType = 2147483647 ) IndexType enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkIndexType.html</p>"},{"location":"api/rendering/vulkan/#indirectcommandslayoutcreateinfonvx","title":"IndirectCommandsLayoutCreateInfoNVX","text":"<p><code>struct</code></p> <pre><code>type IndirectCommandsLayoutCreateInfoNVX struct {\n    SType             StructureType\n    PNext             unsafe.Pointer\n    PipelineBindPoint PipelineBindPoint\n    Flags             IndirectCommandsLayoutUsageFlagsNVX\n    TokenCount        uint32\n    PTokens           *IndirectCommandsLayoutTokenNVX\n}\n</code></pre> <p>IndirectCommandsLayoutCreateInfoNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkIndirectCommandsLayoutCreateInfoNVX</p>"},{"location":"api/rendering/vulkan/#indirectcommandslayoutnvx","title":"IndirectCommandsLayoutNVX","text":"<p>C.VkIndirectCommandsLayoutNVX <pre><code>type IndirectCommandsLayoutNVX C.VkIndirectCommandsLayoutNVX\n</code></pre></p> <p>IndirectCommandsLayoutNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkIndirectCommandsLayoutNVX</p>"},{"location":"api/rendering/vulkan/#indirectcommandslayouttokennvx","title":"IndirectCommandsLayoutTokenNVX","text":"<p><code>struct</code></p> <pre><code>type IndirectCommandsLayoutTokenNVX struct {\n    TokenType    IndirectCommandsTokenTypeNVX\n    BindingUnit  uint32\n    DynamicCount uint32\n    Divisor      uint32\n}\n</code></pre> <p>IndirectCommandsLayoutTokenNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkIndirectCommandsLayoutTokenNVX</p>"},{"location":"api/rendering/vulkan/#indirectcommandslayoutusageflagbitsnvx","title":"IndirectCommandsLayoutUsageFlagBitsNVX","text":"<p>int32 <pre><code>type IndirectCommandsLayoutUsageFlagBitsNVX int32\n</code></pre></p> <p>IndirectCommandsLayoutUsageFlagBitsNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkIndirectCommandsLayoutUsageFlagBitsNVX</p> <p>const ( IndirectCommandsLayoutUsageUnorderedSequencesBitNvx IndirectCommandsLayoutUsageFlagBitsNVX = 1 IndirectCommandsLayoutUsageSparseSequencesBitNvx IndirectCommandsLayoutUsageFlagBitsNVX = 2 IndirectCommandsLayoutUsageEmptyExecutionsBitNvx IndirectCommandsLayoutUsageFlagBitsNVX = 4 IndirectCommandsLayoutUsageIndexedSequencesBitNvx IndirectCommandsLayoutUsageFlagBitsNVX = 8 IndirectCommandsLayoutUsageFlagBitsMaxEnumNvx IndirectCommandsLayoutUsageFlagBitsNVX = 2147483647 ) IndirectCommandsLayoutUsageFlagBitsNVX enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkIndirectCommandsLayoutUsageFlagBitsNVX</p>"},{"location":"api/rendering/vulkan/#indirectcommandslayoutusageflagsnvx","title":"IndirectCommandsLayoutUsageFlagsNVX","text":"<p>uint32 <pre><code>type IndirectCommandsLayoutUsageFlagsNVX uint32\n</code></pre></p> <p>IndirectCommandsLayoutUsageFlagsNVX type as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkIndirectCommandsLayoutUsageFlagsNVX</p>"},{"location":"api/rendering/vulkan/#indirectcommandstokennvx","title":"IndirectCommandsTokenNVX","text":"<p><code>struct</code></p> <pre><code>type IndirectCommandsTokenNVX struct {\n    TokenType IndirectCommandsTokenTypeNVX\n    Buffer    Buffer\n    Offset    DeviceSize\n}\n</code></pre> <p>IndirectCommandsTokenNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkIndirectCommandsTokenNVX</p>"},{"location":"api/rendering/vulkan/#indirectcommandstokentypenvx","title":"IndirectCommandsTokenTypeNVX","text":"<p>int32 <pre><code>type IndirectCommandsTokenTypeNVX int32\n</code></pre></p> <p>IndirectCommandsTokenTypeNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkIndirectCommandsTokenTypeNVX</p> <p>const ( IndirectCommandsTokenTypePipelineNvx IndirectCommandsTokenTypeNVX = iota IndirectCommandsTokenTypeDescriptorSetNvx IndirectCommandsTokenTypeNVX = 1 IndirectCommandsTokenTypeIndexBufferNvx IndirectCommandsTokenTypeNVX = 2 IndirectCommandsTokenTypeVertexBufferNvx IndirectCommandsTokenTypeNVX = 3 IndirectCommandsTokenTypePushConstantNvx IndirectCommandsTokenTypeNVX = 4 IndirectCommandsTokenTypeDrawIndexedNvx IndirectCommandsTokenTypeNVX = 5 IndirectCommandsTokenTypeDrawNvx IndirectCommandsTokenTypeNVX = 6 IndirectCommandsTokenTypeDispatchNvx IndirectCommandsTokenTypeNVX = 7 IndirectCommandsTokenTypeBeginRangeNvx IndirectCommandsTokenTypeNVX = 0 IndirectCommandsTokenTypeEndRangeNvx IndirectCommandsTokenTypeNVX = 7 IndirectCommandsTokenTypeRangeSizeNvx IndirectCommandsTokenTypeNVX = 8 IndirectCommandsTokenTypeMaxEnumNvx IndirectCommandsTokenTypeNVX = 2147483647 ) IndirectCommandsTokenTypeNVX enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkIndirectCommandsTokenTypeNVX</p>"},{"location":"api/rendering/vulkan/#inputattachmentaspectreference","title":"InputAttachmentAspectReference","text":"<p><code>struct</code></p> <pre><code>type InputAttachmentAspectReference struct {\n    Subpass              uint32\n    InputAttachmentIndex uint32\n    AspectMask           ImageAspectFlags\n}\n</code></pre> <p>InputAttachmentAspectReference as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkInputAttachmentAspectReference.html</p>"},{"location":"api/rendering/vulkan/#instance","title":"Instance","text":"<p>C.VkInstance <pre><code>type Instance C.VkInstance\n</code></pre></p> <p>Instance as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkInstance.html</p>"},{"location":"api/rendering/vulkan/#instancecreateflags","title":"InstanceCreateFlags","text":"<p>uint32 <pre><code>type InstanceCreateFlags uint32\n</code></pre></p> <p>InstanceCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkInstanceCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#instancecreateinfo","title":"InstanceCreateInfo","text":"<p><code>struct</code></p> <pre><code>type InstanceCreateInfo struct {\n    SType            StructureType\n    PNext            unsafe.Pointer\n    Flags            InstanceCreateFlags\n    PApplicationInfo *ApplicationInfo\n\n    // Has unexported fields.\n}\n</code></pre> <p>InstanceCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkInstanceCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#instancecreateinfofree","title":"InstanceCreateInfo.Free","text":"<pre><code>func (s *InstanceCreateInfo) Free()\n</code></pre>"},{"location":"api/rendering/vulkan/#instancecreateinfosetenabledextensionnames","title":"InstanceCreateInfo.SetEnabledExtensionNames","text":"<pre><code>func (s *InstanceCreateInfo) SetEnabledExtensionNames(names []string)\n</code></pre>"},{"location":"api/rendering/vulkan/#instancecreateinfosetenabledlayernames","title":"InstanceCreateInfo.SetEnabledLayerNames","text":"<pre><code>func (s *InstanceCreateInfo) SetEnabledLayerNames(names []string)\n</code></pre>"},{"location":"api/rendering/vulkan/#internalallocationtype","title":"InternalAllocationType","text":"<p>int32 <pre><code>type InternalAllocationType int32\n</code></pre></p> <p>InternalAllocationType as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkInternalAllocationType.html</p> <p>const ( InternalAllocationTypeExecutable InternalAllocationType = iota InternalAllocationTypeBeginRange InternalAllocationType = 0 InternalAllocationTypeEndRange InternalAllocationType = 0 InternalAllocationTypeRangeSize InternalAllocationType = 1 InternalAllocationTypeMaxEnum InternalAllocationType = 2147483647 ) InternalAllocationType enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkInternalAllocationType.html</p>"},{"location":"api/rendering/vulkan/#layerproperties","title":"LayerProperties","text":"<p><code>struct</code></p> <pre><code>type LayerProperties struct {\n    LayerName             [256]byte\n    SpecVersion           uint32\n    ImplementationVersion uint32\n    Description           [256]byte\n}\n</code></pre> <p>LayerProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkLayerProperties.html</p>"},{"location":"api/rendering/vulkan/#logicop","title":"LogicOp","text":"<p>int32 <pre><code>type LogicOp int32\n</code></pre></p> <p>LogicOp as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkLogicOp.html</p> <p>const ( LogicOpClear LogicOp = iota LogicOpAnd LogicOp = 1 LogicOpAndReverse LogicOp = 2 LogicOpCopy LogicOp = 3 LogicOpAndInverted LogicOp = 4 LogicOpNoOp LogicOp = 5 LogicOpXor LogicOp = 6 LogicOpOr LogicOp = 7 LogicOpNor LogicOp = 8 LogicOpEquivalent LogicOp = 9 LogicOpInvert LogicOp = 10 LogicOpOrReverse LogicOp = 11 LogicOpCopyInverted LogicOp = 12 LogicOpOrInverted LogicOp = 13 LogicOpNand LogicOp = 14 LogicOpSet LogicOp = 15 LogicOpBeginRange LogicOp = 0 LogicOpEndRange LogicOp = 15 LogicOpRangeSize LogicOp = 16 LogicOpMaxEnum LogicOp = 2147483647 ) LogicOp enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkLogicOp.html</p>"},{"location":"api/rendering/vulkan/#mappedmemoryrange","title":"MappedMemoryRange","text":"<p><code>struct</code></p> <pre><code>type MappedMemoryRange struct {\n    SType  StructureType\n    PNext  unsafe.Pointer\n    Memory DeviceMemory\n    Offset DeviceSize\n    Size   DeviceSize\n}\n</code></pre> <p>MappedMemoryRange as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMappedMemoryRange.html</p>"},{"location":"api/rendering/vulkan/#memoryallocateflagbits","title":"MemoryAllocateFlagBits","text":"<p>int32 <pre><code>type MemoryAllocateFlagBits int32\n</code></pre></p> <p>MemoryAllocateFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryAllocateFlagBits.html</p> <p>const ( MemoryAllocateDeviceMaskBit MemoryAllocateFlagBits = 1 MemoryAllocateFlagBitsMaxEnum MemoryAllocateFlagBits = 2147483647 ) MemoryAllocateFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryAllocateFlagBits.html</p>"},{"location":"api/rendering/vulkan/#memoryallocateflags","title":"MemoryAllocateFlags","text":"<p>uint32 <pre><code>type MemoryAllocateFlags uint32\n</code></pre></p> <p>MemoryAllocateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryAllocateFlags.html</p>"},{"location":"api/rendering/vulkan/#memoryallocateflagsinfo","title":"MemoryAllocateFlagsInfo","text":"<p><code>struct</code></p> <pre><code>type MemoryAllocateFlagsInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    Flags      MemoryAllocateFlags\n    DeviceMask uint32\n}\n</code></pre> <p>MemoryAllocateFlagsInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryAllocateFlagsInfo.html</p>"},{"location":"api/rendering/vulkan/#memoryallocateinfo","title":"MemoryAllocateInfo","text":"<p><code>struct</code></p> <pre><code>type MemoryAllocateInfo struct {\n    SType           StructureType\n    PNext           unsafe.Pointer\n    AllocationSize  DeviceSize\n    MemoryTypeIndex uint32\n}\n</code></pre> <p>MemoryAllocateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryAllocateInfo.html</p>"},{"location":"api/rendering/vulkan/#memorybarrier","title":"MemoryBarrier","text":"<p><code>struct</code></p> <pre><code>type MemoryBarrier struct {\n    SType         StructureType\n    PNext         unsafe.Pointer\n    SrcAccessMask AccessFlags\n    DstAccessMask AccessFlags\n}\n</code></pre> <p>MemoryBarrier as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryBarrier.html</p>"},{"location":"api/rendering/vulkan/#memorydedicatedallocateinfo","title":"MemoryDedicatedAllocateInfo","text":"<p><code>struct</code></p> <pre><code>type MemoryDedicatedAllocateInfo struct {\n    SType  StructureType\n    PNext  unsafe.Pointer\n    Image  Image\n    Buffer Buffer\n}\n</code></pre> <p>MemoryDedicatedAllocateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryDedicatedAllocateInfo.html</p>"},{"location":"api/rendering/vulkan/#memorydedicatedrequirements","title":"MemoryDedicatedRequirements","text":"<p><code>struct</code></p> <pre><code>type MemoryDedicatedRequirements struct {\n    SType                       StructureType\n    PNext                       unsafe.Pointer\n    PrefersDedicatedAllocation  Bool32\n    RequiresDedicatedAllocation Bool32\n}\n</code></pre> <p>MemoryDedicatedRequirements as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryDedicatedRequirements.html</p>"},{"location":"api/rendering/vulkan/#memoryfdproperties","title":"MemoryFdProperties","text":"<p><code>struct</code></p> <pre><code>type MemoryFdProperties struct {\n    SType          StructureType\n    PNext          unsafe.Pointer\n    MemoryTypeBits uint32\n}\n</code></pre> <p>MemoryFdProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkMemoryFdPropertiesKHR</p>"},{"location":"api/rendering/vulkan/#memorygetfdinfo","title":"MemoryGetFdInfo","text":"<p><code>struct</code></p> <pre><code>type MemoryGetFdInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    Memory     DeviceMemory\n    HandleType ExternalMemoryHandleTypeFlagBits\n}\n</code></pre> <p>MemoryGetFdInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkMemoryGetFdInfoKHR</p>"},{"location":"api/rendering/vulkan/#memoryheap","title":"MemoryHeap","text":"<p><code>struct</code></p> <pre><code>type MemoryHeap struct {\n    Size  DeviceSize\n    Flags MemoryHeapFlags\n}\n</code></pre> <p>MemoryHeap as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryHeap.html</p>"},{"location":"api/rendering/vulkan/#memoryheapflagbits","title":"MemoryHeapFlagBits","text":"<p>int32 <pre><code>type MemoryHeapFlagBits int32\n</code></pre></p> <p>MemoryHeapFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryHeapFlagBits.html</p> <p>const ( MemoryHeapDeviceLocalBit MemoryHeapFlagBits = 1 MemoryHeapMultiInstanceBit MemoryHeapFlagBits = 2 MemoryHeapFlagBitsMaxEnum MemoryHeapFlagBits = 2147483647 ) MemoryHeapFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryHeapFlagBits.html</p>"},{"location":"api/rendering/vulkan/#memoryheapflags","title":"MemoryHeapFlags","text":"<p>uint32 <pre><code>type MemoryHeapFlags uint32\n</code></pre></p> <p>MemoryHeapFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryHeapFlags.html</p>"},{"location":"api/rendering/vulkan/#memoryhostpointerproperties","title":"MemoryHostPointerProperties","text":"<p><code>struct</code></p> <pre><code>type MemoryHostPointerProperties struct {\n    SType          StructureType\n    PNext          unsafe.Pointer\n    MemoryTypeBits uint32\n}\n</code></pre> <p>MemoryHostPointerProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryHostPointerPropertiesEXT.html</p>"},{"location":"api/rendering/vulkan/#memorymapflags","title":"MemoryMapFlags","text":"<p>uint32 <pre><code>type MemoryMapFlags uint32\n</code></pre></p> <p>MemoryMapFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryMapFlags.html</p>"},{"location":"api/rendering/vulkan/#memorypropertyflagbits","title":"MemoryPropertyFlagBits","text":"<p>int32 <pre><code>type MemoryPropertyFlagBits int32\n</code></pre></p> <p>MemoryPropertyFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryPropertyFlagBits.html</p> <p>const ( MemoryPropertyDeviceLocalBit MemoryPropertyFlagBits = 1 MemoryPropertyHostVisibleBit MemoryPropertyFlagBits = 2 MemoryPropertyHostCoherentBit MemoryPropertyFlagBits = 4 MemoryPropertyHostCachedBit MemoryPropertyFlagBits = 8 MemoryPropertyLazilyAllocatedBit MemoryPropertyFlagBits = 16 MemoryPropertyProtectedBit MemoryPropertyFlagBits = 32 MemoryPropertyFlagBitsMaxEnum MemoryPropertyFlagBits = 2147483647 ) MemoryPropertyFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryPropertyFlagBits.html</p>"},{"location":"api/rendering/vulkan/#memorypropertyflags","title":"MemoryPropertyFlags","text":"<p>uint32 <pre><code>type MemoryPropertyFlags uint32\n</code></pre></p> <p>MemoryPropertyFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryPropertyFlags.html</p>"},{"location":"api/rendering/vulkan/#memoryrequirements","title":"MemoryRequirements","text":"<p><code>struct</code></p> <pre><code>type MemoryRequirements struct {\n    Size           DeviceSize\n    Alignment      DeviceSize\n    MemoryTypeBits uint32\n}\n</code></pre> <p>MemoryRequirements as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryRequirements.html</p>"},{"location":"api/rendering/vulkan/#memoryrequirements2","title":"MemoryRequirements2","text":"<p><code>struct</code></p> <pre><code>type MemoryRequirements2 struct {\n    SType              StructureType\n    PNext              unsafe.Pointer\n    MemoryRequirements MemoryRequirements\n}\n</code></pre> <p>MemoryRequirements2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryRequirements2.html</p>"},{"location":"api/rendering/vulkan/#memorytype","title":"MemoryType","text":"<p><code>struct</code></p> <pre><code>type MemoryType struct {\n    PropertyFlags MemoryPropertyFlags\n    HeapIndex     uint32\n}\n</code></pre> <p>MemoryType as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMemoryType.html</p>"},{"location":"api/rendering/vulkan/#multisampleproperties","title":"MultisampleProperties","text":"<p><code>struct</code></p> <pre><code>type MultisampleProperties struct {\n    SType                     StructureType\n    PNext                     unsafe.Pointer\n    MaxSampleLocationGridSize Extent2D\n}\n</code></pre> <p>MultisampleProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkMultisamplePropertiesEXT.html</p>"},{"location":"api/rendering/vulkan/#objectentrytypenvx","title":"ObjectEntryTypeNVX","text":"<p>int32 <pre><code>type ObjectEntryTypeNVX int32\n</code></pre></p> <p>ObjectEntryTypeNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkObjectEntryTypeNVX</p> <p>const ( ObjectEntryTypeDescriptorSetNvx ObjectEntryTypeNVX = iota ObjectEntryTypePipelineNvx ObjectEntryTypeNVX = 1 ObjectEntryTypeIndexBufferNvx ObjectEntryTypeNVX = 2 ObjectEntryTypeVertexBufferNvx ObjectEntryTypeNVX = 3 ObjectEntryTypePushConstantNvx ObjectEntryTypeNVX = 4 ObjectEntryTypeBeginRangeNvx ObjectEntryTypeNVX = 0 ObjectEntryTypeEndRangeNvx ObjectEntryTypeNVX = 4 ObjectEntryTypeRangeSizeNvx ObjectEntryTypeNVX = 5 ObjectEntryTypeMaxEnumNvx ObjectEntryTypeNVX = 2147483647 ) ObjectEntryTypeNVX enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkObjectEntryTypeNVX</p>"},{"location":"api/rendering/vulkan/#objectentryusageflagbitsnvx","title":"ObjectEntryUsageFlagBitsNVX","text":"<p>int32 <pre><code>type ObjectEntryUsageFlagBitsNVX int32\n</code></pre></p> <p>ObjectEntryUsageFlagBitsNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkObjectEntryUsageFlagBitsNVX</p> <p>const ( ObjectEntryUsageGraphicsBitNvx ObjectEntryUsageFlagBitsNVX = 1 ObjectEntryUsageComputeBitNvx ObjectEntryUsageFlagBitsNVX = 2 ObjectEntryUsageFlagBitsMaxEnumNvx ObjectEntryUsageFlagBitsNVX = 2147483647 ) ObjectEntryUsageFlagBitsNVX enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkObjectEntryUsageFlagBitsNVX</p>"},{"location":"api/rendering/vulkan/#objectentryusageflagsnvx","title":"ObjectEntryUsageFlagsNVX","text":"<p>uint32 <pre><code>type ObjectEntryUsageFlagsNVX uint32\n</code></pre></p> <p>ObjectEntryUsageFlagsNVX type as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkObjectEntryUsageFlagsNVX</p>"},{"location":"api/rendering/vulkan/#objecttablecreateinfonvx","title":"ObjectTableCreateInfoNVX","text":"<p><code>struct</code></p> <pre><code>type ObjectTableCreateInfoNVX struct {\n    SType                          StructureType\n    PNext                          unsafe.Pointer\n    ObjectCount                    uint32\n    PObjectEntryTypes              *ObjectEntryTypeNVX\n    PObjectEntryCounts             *uint32\n    PObjectEntryUsageFlags         *ObjectEntryUsageFlagsNVX\n    MaxUniformBuffersPerDescriptor uint32\n    MaxStorageBuffersPerDescriptor uint32\n    MaxStorageImagesPerDescriptor  uint32\n    MaxSampledImagesPerDescriptor  uint32\n    MaxPipelineLayouts             uint32\n}\n</code></pre> <p>ObjectTableCreateInfoNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkObjectTableCreateInfoNVX</p>"},{"location":"api/rendering/vulkan/#objecttabledescriptorsetentrynvx","title":"ObjectTableDescriptorSetEntryNVX","text":"<p><code>struct</code></p> <pre><code>type ObjectTableDescriptorSetEntryNVX struct {\n    Type           ObjectEntryTypeNVX\n    Flags          ObjectEntryUsageFlagsNVX\n    PipelineLayout PipelineLayout\n    DescriptorSet  DescriptorSet\n}\n</code></pre> <p>ObjectTableDescriptorSetEntryNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkObjectTableDescriptorSetEntryNVX</p>"},{"location":"api/rendering/vulkan/#objecttableentrynvx","title":"ObjectTableEntryNVX","text":"<p><code>struct</code></p> <pre><code>type ObjectTableEntryNVX struct {\n    Type  ObjectEntryTypeNVX\n    Flags ObjectEntryUsageFlagsNVX\n}\n</code></pre> <p>ObjectTableEntryNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkObjectTableEntryNVX</p>"},{"location":"api/rendering/vulkan/#objecttableindexbufferentrynvx","title":"ObjectTableIndexBufferEntryNVX","text":"<p><code>struct</code></p> <pre><code>type ObjectTableIndexBufferEntryNVX struct {\n    Type      ObjectEntryTypeNVX\n    Flags     ObjectEntryUsageFlagsNVX\n    Buffer    Buffer\n    IndexType IndexType\n}\n</code></pre> <p>ObjectTableIndexBufferEntryNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkObjectTableIndexBufferEntryNVX</p>"},{"location":"api/rendering/vulkan/#objecttablenvx","title":"ObjectTableNVX","text":"<p>C.VkObjectTableNVX <pre><code>type ObjectTableNVX C.VkObjectTableNVX\n</code></pre></p> <p>ObjectTableNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkObjectTableNVX</p>"},{"location":"api/rendering/vulkan/#objecttablepipelineentrynvx","title":"ObjectTablePipelineEntryNVX","text":"<p><code>struct</code></p> <pre><code>type ObjectTablePipelineEntryNVX struct {\n    Type     ObjectEntryTypeNVX\n    Flags    ObjectEntryUsageFlagsNVX\n    Pipeline Pipeline\n}\n</code></pre> <p>ObjectTablePipelineEntryNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkObjectTablePipelineEntryNVX</p>"},{"location":"api/rendering/vulkan/#objecttablepushconstantentrynvx","title":"ObjectTablePushConstantEntryNVX","text":"<p><code>struct</code></p> <pre><code>type ObjectTablePushConstantEntryNVX struct {\n    Type           ObjectEntryTypeNVX\n    Flags          ObjectEntryUsageFlagsNVX\n    PipelineLayout PipelineLayout\n    StageFlags     ShaderStageFlags\n}\n</code></pre> <p>ObjectTablePushConstantEntryNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkObjectTablePushConstantEntryNVX</p>"},{"location":"api/rendering/vulkan/#objecttablevertexbufferentrynvx","title":"ObjectTableVertexBufferEntryNVX","text":"<p><code>struct</code></p> <pre><code>type ObjectTableVertexBufferEntryNVX struct {\n    Type   ObjectEntryTypeNVX\n    Flags  ObjectEntryUsageFlagsNVX\n    Buffer Buffer\n}\n</code></pre> <p>ObjectTableVertexBufferEntryNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkObjectTableVertexBufferEntryNVX</p>"},{"location":"api/rendering/vulkan/#objecttype","title":"ObjectType","text":"<p>int32 <pre><code>type ObjectType int32\n</code></pre></p> <p>ObjectType as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkObjectType.html</p> <p>const ( ObjectTypeUnknown ObjectType = iota ObjectTypeInstance ObjectType = 1 ObjectTypePhysicalDevice ObjectType = 2 ObjectTypeDevice ObjectType = 3 ObjectTypeQueue ObjectType = 4 ObjectTypeSemaphore ObjectType = 5 ObjectTypeCommandBuffer ObjectType = 6 ObjectTypeFence ObjectType = 7 ObjectTypeDeviceMemory ObjectType = 8 ObjectTypeBuffer ObjectType = 9 ObjectTypeImage ObjectType = 10 ObjectTypeEvent ObjectType = 11 ObjectTypeQueryPool ObjectType = 12 ObjectTypeBufferView ObjectType = 13 ObjectTypeImageView ObjectType = 14 ObjectTypeShaderModule ObjectType = 15 ObjectTypePipelineCache ObjectType = 16 ObjectTypePipelineLayout ObjectType = 17 ObjectTypeRenderPass ObjectType = 18 ObjectTypePipeline ObjectType = 19 ObjectTypeDescriptorSetLayout ObjectType = 20 ObjectTypeSampler ObjectType = 21 ObjectTypeDescriptorPool ObjectType = 22 ObjectTypeDescriptorSet ObjectType = 23 ObjectTypeFramebuffer ObjectType = 24 ObjectTypeCommandPool ObjectType = 25 ObjectTypeSamplerYcbcrConversion ObjectType = 1000156000 ObjectTypeDescriptorUpdateTemplate ObjectType = 1000085000 ObjectTypeSurface ObjectType = 1000000000 ObjectTypeSwapchain ObjectType = 1000001000 ObjectTypeDisplay ObjectType = 1000002000 ObjectTypeDisplayMode ObjectType = 1000002001 ObjectTypeDebugReportCallback ObjectType = 1000011000 ObjectTypeObjectTableNvx ObjectType = 1000086000 ObjectTypeIndirectCommandsLayoutNvx ObjectType = 1000086001 ObjectTypeDebugUtilsMessenger ObjectType = 1000128000 ObjectTypeValidationCache ObjectType = 1000160000 ObjectTypeAccelerationStructureNvx ObjectType = 1000165000 ObjectTypeBeginRange ObjectType = 0 ObjectTypeEndRange ObjectType = 25 ObjectTypeRangeSize ObjectType = 26 ObjectTypeMaxEnum ObjectType = 2147483647 ) ObjectType enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkObjectType.html</p>"},{"location":"api/rendering/vulkan/#offset2d","title":"Offset2D","text":"<p><code>struct</code></p> <pre><code>type Offset2D struct {\n    X int32\n    Y int32\n}\n</code></pre> <p>Offset2D as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkOffset2D.html</p>"},{"location":"api/rendering/vulkan/#offset3d","title":"Offset3D","text":"<p><code>struct</code></p> <pre><code>type Offset3D struct {\n    X int32\n    Y int32\n    Z int32\n}\n</code></pre> <p>Offset3D as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkOffset3D.html</p>"},{"location":"api/rendering/vulkan/#pastpresentationtiminggoogle","title":"PastPresentationTimingGOOGLE","text":"<p><code>struct</code></p> <pre><code>type PastPresentationTimingGOOGLE struct {\n    PresentID           uint32\n    DesiredPresentTime  uint64\n    ActualPresentTime   uint64\n    EarliestPresentTime uint64\n    PresentMargin       uint64\n}\n</code></pre> <p>PastPresentationTimingGOOGLE as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPastPresentationTimingGOOGLE.html</p>"},{"location":"api/rendering/vulkan/#peermemoryfeatureflagbits","title":"PeerMemoryFeatureFlagBits","text":"<p>int32 <pre><code>type PeerMemoryFeatureFlagBits int32\n</code></pre></p> <p>PeerMemoryFeatureFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPeerMemoryFeatureFlagBits.html</p> <p>const ( PeerMemoryFeatureCopySrcBit PeerMemoryFeatureFlagBits = 1 PeerMemoryFeatureCopyDstBit PeerMemoryFeatureFlagBits = 2 PeerMemoryFeatureGenericSrcBit PeerMemoryFeatureFlagBits = 4 PeerMemoryFeatureGenericDstBit PeerMemoryFeatureFlagBits = 8 PeerMemoryFeatureFlagBitsMaxEnum PeerMemoryFeatureFlagBits = 2147483647 ) PeerMemoryFeatureFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPeerMemoryFeatureFlagBits.html</p>"},{"location":"api/rendering/vulkan/#peermemoryfeatureflags","title":"PeerMemoryFeatureFlags","text":"<p>uint32 <pre><code>type PeerMemoryFeatureFlags uint32\n</code></pre></p> <p>PeerMemoryFeatureFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPeerMemoryFeatureFlags.html</p>"},{"location":"api/rendering/vulkan/#physicaldevice","title":"PhysicalDevice","text":"<p>C.VkPhysicalDevice <pre><code>type PhysicalDevice C.VkPhysicalDevice\n</code></pre></p> <p>PhysicalDevice as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDevice.html</p>"},{"location":"api/rendering/vulkan/#physicaldevice16bitstoragefeatures","title":"PhysicalDevice16BitStorageFeatures","text":"<p><code>struct</code></p> <pre><code>type PhysicalDevice16BitStorageFeatures struct {\n    SType                              StructureType\n    PNext                              unsafe.Pointer\n    StorageBuffer16BitAccess           Bool32\n    UniformAndStorageBuffer16BitAccess Bool32\n    StoragePushConstant16              Bool32\n    StorageInputOutput16               Bool32\n}\n</code></pre> <p>PhysicalDevice16BitStorageFeatures as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDevice16BitStorageFeatures.html</p>"},{"location":"api/rendering/vulkan/#physicaldevice8bitstoragefeatures","title":"PhysicalDevice8BitStorageFeatures","text":"<p><code>struct</code></p> <pre><code>type PhysicalDevice8BitStorageFeatures struct {\n    SType                             StructureType\n    PNext                             unsafe.Pointer\n    StorageBuffer8BitAccess           Bool32\n    UniformAndStorageBuffer8BitAccess Bool32\n    StoragePushConstant8              Bool32\n}\n</code></pre> <p>PhysicalDevice8BitStorageFeatures as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkPhysicalDevice8BitStorageFeaturesKHR</p>"},{"location":"api/rendering/vulkan/#physicaldeviceastcdecodefeatures","title":"PhysicalDeviceASTCDecodeFeatures","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceASTCDecodeFeatures struct {\n    SType                    StructureType\n    PNext                    unsafe.Pointer\n    DecodeModeSharedExponent Bool32\n}\n</code></pre> <p>PhysicalDeviceASTCDecodeFeatures as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceASTCDecodeFeaturesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceblendoperationadvancedfeatures","title":"PhysicalDeviceBlendOperationAdvancedFeatures","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceBlendOperationAdvancedFeatures struct {\n    SType                           StructureType\n    PNext                           unsafe.Pointer\n    AdvancedBlendCoherentOperations Bool32\n}\n</code></pre> <p>PhysicalDeviceBlendOperationAdvancedFeatures as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceblendoperationadvancedproperties","title":"PhysicalDeviceBlendOperationAdvancedProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceBlendOperationAdvancedProperties struct {\n    SType                                 StructureType\n    PNext                                 unsafe.Pointer\n    AdvancedBlendMaxColorAttachments      uint32\n    AdvancedBlendIndependentBlend         Bool32\n    AdvancedBlendNonPremultipliedSrcColor Bool32\n    AdvancedBlendNonPremultipliedDstColor Bool32\n    AdvancedBlendCorrelatedOverlap        Bool32\n    AdvancedBlendAllOperations            Bool32\n}\n</code></pre> <p>PhysicalDeviceBlendOperationAdvancedProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicecomputeshaderderivativesfeaturesnv","title":"PhysicalDeviceComputeShaderDerivativesFeaturesNV","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceComputeShaderDerivativesFeaturesNV struct {\n    SType                        StructureType\n    PNext                        unsafe.Pointer\n    ComputeDerivativeGroupQuads  Bool32\n    ComputeDerivativeGroupLinear Bool32\n}\n</code></pre> <p>PhysicalDeviceComputeShaderDerivativesFeaturesNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceComputeShaderDerivativesFeaturesNV.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceconditionalrenderingfeatures","title":"PhysicalDeviceConditionalRenderingFeatures","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceConditionalRenderingFeatures struct {\n    SType                         StructureType\n    PNext                         unsafe.Pointer\n    ConditionalRendering          Bool32\n    InheritedConditionalRendering Bool32\n}\n</code></pre> <p>PhysicalDeviceConditionalRenderingFeatures as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceConditionalRenderingFeaturesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceconservativerasterizationproperties","title":"PhysicalDeviceConservativeRasterizationProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceConservativeRasterizationProperties struct {\n    SType                                       StructureType\n    PNext                                       unsafe.Pointer\n    PrimitiveOverestimationSize                 float32\n    MaxExtraPrimitiveOverestimationSize         float32\n    ExtraPrimitiveOverestimationSizeGranularity float32\n    PrimitiveUnderestimation                    Bool32\n    ConservativePointAndLineRasterization       Bool32\n    DegenerateTrianglesRasterized               Bool32\n    DegenerateLinesRasterized                   Bool32\n    FullyCoveredFragmentShaderInputVariable     Bool32\n    ConservativeRasterizationPostDepthCoverage  Bool32\n}\n</code></pre> <p>PhysicalDeviceConservativeRasterizationProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceConservativeRasterizationPropertiesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicecornersampledimagefeaturesnv","title":"PhysicalDeviceCornerSampledImageFeaturesNV","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceCornerSampledImageFeaturesNV struct {\n    SType              StructureType\n    PNext              unsafe.Pointer\n    CornerSampledImage Bool32\n}\n</code></pre> <p>PhysicalDeviceCornerSampledImageFeaturesNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceCornerSampledImageFeaturesNV.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicedescriptorindexingfeatures","title":"PhysicalDeviceDescriptorIndexingFeatures","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceDescriptorIndexingFeatures struct {\n    SType                                              StructureType\n    PNext                                              unsafe.Pointer\n    ShaderInputAttachmentArrayDynamicIndexing          Bool32\n    ShaderUniformTexelBufferArrayDynamicIndexing       Bool32\n    ShaderStorageTexelBufferArrayDynamicIndexing       Bool32\n    ShaderUniformBufferArrayNonUniformIndexing         Bool32\n    ShaderSampledImageArrayNonUniformIndexing          Bool32\n    ShaderStorageBufferArrayNonUniformIndexing         Bool32\n    ShaderStorageImageArrayNonUniformIndexing          Bool32\n    ShaderInputAttachmentArrayNonUniformIndexing       Bool32\n    ShaderUniformTexelBufferArrayNonUniformIndexing    Bool32\n    ShaderStorageTexelBufferArrayNonUniformIndexing    Bool32\n    DescriptorBindingUniformBufferUpdateAfterBind      Bool32\n    DescriptorBindingSampledImageUpdateAfterBind       Bool32\n    DescriptorBindingStorageImageUpdateAfterBind       Bool32\n    DescriptorBindingStorageBufferUpdateAfterBind      Bool32\n    DescriptorBindingUniformTexelBufferUpdateAfterBind Bool32\n    DescriptorBindingStorageTexelBufferUpdateAfterBind Bool32\n    DescriptorBindingUpdateUnusedWhilePending          Bool32\n    DescriptorBindingPartiallyBound                    Bool32\n    DescriptorBindingVariableDescriptorCount           Bool32\n    RuntimeDescriptorArray                             Bool32\n}\n</code></pre> <p>PhysicalDeviceDescriptorIndexingFeatures as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceDescriptorIndexingFeaturesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicedescriptorindexingproperties","title":"PhysicalDeviceDescriptorIndexingProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceDescriptorIndexingProperties struct {\n    SType                                                StructureType\n    PNext                                                unsafe.Pointer\n    MaxUpdateAfterBindDescriptorsInAllPools              uint32\n    ShaderUniformBufferArrayNonUniformIndexingNative     Bool32\n    ShaderSampledImageArrayNonUniformIndexingNative      Bool32\n    ShaderStorageBufferArrayNonUniformIndexingNative     Bool32\n    ShaderStorageImageArrayNonUniformIndexingNative      Bool32\n    ShaderInputAttachmentArrayNonUniformIndexingNative   Bool32\n    RobustBufferAccessUpdateAfterBind                    Bool32\n    QuadDivergentImplicitLod                             Bool32\n    MaxPerStageDescriptorUpdateAfterBindSamplers         uint32\n    MaxPerStageDescriptorUpdateAfterBindUniformBuffers   uint32\n    MaxPerStageDescriptorUpdateAfterBindStorageBuffers   uint32\n    MaxPerStageDescriptorUpdateAfterBindSampledImages    uint32\n    MaxPerStageDescriptorUpdateAfterBindStorageImages    uint32\n    MaxPerStageDescriptorUpdateAfterBindInputAttachments uint32\n    MaxPerStageUpdateAfterBindResources                  uint32\n    MaxDescriptorSetUpdateAfterBindSamplers              uint32\n    MaxDescriptorSetUpdateAfterBindUniformBuffers        uint32\n    MaxDescriptorSetUpdateAfterBindUniformBuffersDynamic uint32\n    MaxDescriptorSetUpdateAfterBindStorageBuffers        uint32\n    MaxDescriptorSetUpdateAfterBindStorageBuffersDynamic uint32\n    MaxDescriptorSetUpdateAfterBindSampledImages         uint32\n    MaxDescriptorSetUpdateAfterBindStorageImages         uint32\n    MaxDescriptorSetUpdateAfterBindInputAttachments      uint32\n}\n</code></pre> <p>PhysicalDeviceDescriptorIndexingProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceDescriptorIndexingPropertiesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicediscardrectangleproperties","title":"PhysicalDeviceDiscardRectangleProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceDiscardRectangleProperties struct {\n    SType                StructureType\n    PNext                unsafe.Pointer\n    MaxDiscardRectangles uint32\n}\n</code></pre> <p>PhysicalDeviceDiscardRectangleProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceDiscardRectanglePropertiesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicedriverproperties","title":"PhysicalDeviceDriverProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceDriverProperties struct {\n    SType              StructureType\n    PNext              unsafe.Pointer\n    DriverID           DriverId\n    DriverName         [256]byte\n    DriverInfo         [256]byte\n    ConformanceVersion ConformanceVersion\n}\n</code></pre> <p>PhysicalDeviceDriverProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkPhysicalDeviceDriverPropertiesKHR</p>"},{"location":"api/rendering/vulkan/#physicaldeviceexclusivescissorfeaturesnv","title":"PhysicalDeviceExclusiveScissorFeaturesNV","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceExclusiveScissorFeaturesNV struct {\n    SType            StructureType\n    PNext            unsafe.Pointer\n    ExclusiveScissor Bool32\n}\n</code></pre> <p>PhysicalDeviceExclusiveScissorFeaturesNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceExclusiveScissorFeaturesNV.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceexternalbufferinfo","title":"PhysicalDeviceExternalBufferInfo","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceExternalBufferInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    Flags      BufferCreateFlags\n    Usage      BufferUsageFlags\n    HandleType ExternalMemoryHandleTypeFlagBits\n}\n</code></pre> <p>PhysicalDeviceExternalBufferInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceExternalBufferInfo.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceexternalfenceinfo","title":"PhysicalDeviceExternalFenceInfo","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceExternalFenceInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    HandleType ExternalFenceHandleTypeFlagBits\n}\n</code></pre> <p>PhysicalDeviceExternalFenceInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceExternalFenceInfo.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceexternalimageformatinfo","title":"PhysicalDeviceExternalImageFormatInfo","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceExternalImageFormatInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    HandleType ExternalMemoryHandleTypeFlagBits\n}\n</code></pre> <p>PhysicalDeviceExternalImageFormatInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceExternalImageFormatInfo.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceexternalmemoryhostproperties","title":"PhysicalDeviceExternalMemoryHostProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceExternalMemoryHostProperties struct {\n    SType                           StructureType\n    PNext                           unsafe.Pointer\n    MinImportedHostPointerAlignment DeviceSize\n}\n</code></pre> <p>PhysicalDeviceExternalMemoryHostProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceExternalMemoryHostPropertiesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceexternalsemaphoreinfo","title":"PhysicalDeviceExternalSemaphoreInfo","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceExternalSemaphoreInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    HandleType ExternalSemaphoreHandleTypeFlagBits\n}\n</code></pre> <p>PhysicalDeviceExternalSemaphoreInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceExternalSemaphoreInfo.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicefeatures","title":"PhysicalDeviceFeatures","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceFeatures struct {\n    RobustBufferAccess                      Bool32\n    FullDrawIndexUint32                     Bool32\n    ImageCubeArray                          Bool32\n    IndependentBlend                        Bool32\n    GeometryShader                          Bool32\n    TessellationShader                      Bool32\n    SampleRateShading                       Bool32\n    DualSrcBlend                            Bool32\n    LogicOp                                 Bool32\n    MultiDrawIndirect                       Bool32\n    DrawIndirectFirstInstance               Bool32\n    DepthClamp                              Bool32\n    DepthBiasClamp                          Bool32\n    FillModeNonSolid                        Bool32\n    DepthBounds                             Bool32\n    WideLines                               Bool32\n    LargePoints                             Bool32\n    AlphaToOne                              Bool32\n    MultiViewport                           Bool32\n    SamplerAnisotropy                       Bool32\n    TextureCompressionETC2                  Bool32\n    TextureCompressionASTC_LDR              Bool32\n    TextureCompressionBC                    Bool32\n    OcclusionQueryPrecise                   Bool32\n    PipelineStatisticsQuery                 Bool32\n    VertexPipelineStoresAndAtomics          Bool32\n    FragmentStoresAndAtomics                Bool32\n    ShaderTessellationAndGeometryPointSize  Bool32\n    ShaderImageGatherExtended               Bool32\n    ShaderStorageImageExtendedFormats       Bool32\n    ShaderStorageImageMultisample           Bool32\n    ShaderStorageImageReadWithoutFormat     Bool32\n    ShaderStorageImageWriteWithoutFormat    Bool32\n    ShaderUniformBufferArrayDynamicIndexing Bool32\n    ShaderSampledImageArrayDynamicIndexing  Bool32\n    ShaderStorageBufferArrayDynamicIndexing Bool32\n    ShaderStorageImageArrayDynamicIndexing  Bool32\n    ShaderClipDistance                      Bool32\n    ShaderCullDistance                      Bool32\n    ShaderFloat64                           Bool32\n    ShaderInt64                             Bool32\n    ShaderInt16                             Bool32\n    ShaderResourceResidency                 Bool32\n    ShaderResourceMinLod                    Bool32\n    SparseBinding                           Bool32\n    SparseResidencyBuffer                   Bool32\n    SparseResidencyImage2D                  Bool32\n    SparseResidencyImage3D                  Bool32\n    SparseResidency2Samples                 Bool32\n    SparseResidency4Samples                 Bool32\n    SparseResidency8Samples                 Bool32\n    SparseResidency16Samples                Bool32\n    SparseResidencyAliased                  Bool32\n    VariableMultisampleRate                 Bool32\n    InheritedQueries                        Bool32\n}\n</code></pre> <p>PhysicalDeviceFeatures as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceFeatures.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicefeatures2","title":"PhysicalDeviceFeatures2","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceFeatures2 struct {\n    SType    StructureType\n    PNext    unsafe.Pointer\n    Features PhysicalDeviceFeatures\n}\n</code></pre> <p>PhysicalDeviceFeatures2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceFeatures2.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicefragmentshaderbarycentricfeaturesnv","title":"PhysicalDeviceFragmentShaderBarycentricFeaturesNV","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceFragmentShaderBarycentricFeaturesNV struct {\n    SType                     StructureType\n    PNext                     unsafe.Pointer\n    FragmentShaderBarycentric Bool32\n}\n</code></pre> <p>PhysicalDeviceFragmentShaderBarycentricFeaturesNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicegroupproperties","title":"PhysicalDeviceGroupProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceGroupProperties struct {\n    SType               StructureType\n    PNext               unsafe.Pointer\n    PhysicalDeviceCount uint32\n    PhysicalDevices     [32]PhysicalDevice\n    SubsetAllocation    Bool32\n}\n</code></pre> <p>PhysicalDeviceGroupProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceGroupProperties.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceidproperties","title":"PhysicalDeviceIDProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceIDProperties struct {\n    SType           StructureType\n    PNext           unsafe.Pointer\n    DeviceUUID      [16]byte\n    DriverUUID      [16]byte\n    DeviceLUID      [8]byte\n    DeviceNodeMask  uint32\n    DeviceLUIDValid Bool32\n}\n</code></pre> <p>PhysicalDeviceIDProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceIDProperties.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceimagedrmformatmodifierinfo","title":"PhysicalDeviceImageDrmFormatModifierInfo","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceImageDrmFormatModifierInfo struct {\n    SType                 StructureType\n    PNext                 unsafe.Pointer\n    DrmFormatModifier     uint64\n    SharingMode           SharingMode\n    QueueFamilyIndexCount uint32\n    PQueueFamilyIndices   *uint32\n}\n</code></pre> <p>PhysicalDeviceImageDrmFormatModifierInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceImageDrmFormatModifierInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceimageformatinfo2","title":"PhysicalDeviceImageFormatInfo2","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceImageFormatInfo2 struct {\n    SType  StructureType\n    PNext  unsafe.Pointer\n    Format Format\n    Type   ImageType\n    Tiling ImageTiling\n    Usage  ImageUsageFlags\n    Flags  ImageCreateFlags\n}\n</code></pre> <p>PhysicalDeviceImageFormatInfo2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceImageFormatInfo2.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceinlineuniformblockfeatures","title":"PhysicalDeviceInlineUniformBlockFeatures","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceInlineUniformBlockFeatures struct {\n    SType                                              StructureType\n    PNext                                              unsafe.Pointer\n    InlineUniformBlock                                 Bool32\n    DescriptorBindingInlineUniformBlockUpdateAfterBind Bool32\n}\n</code></pre> <p>PhysicalDeviceInlineUniformBlockFeatures as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceInlineUniformBlockFeaturesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceinlineuniformblockproperties","title":"PhysicalDeviceInlineUniformBlockProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceInlineUniformBlockProperties struct {\n    SType                                                   StructureType\n    PNext                                                   unsafe.Pointer\n    MaxInlineUniformBlockSize                               uint32\n    MaxPerStageDescriptorInlineUniformBlocks                uint32\n    MaxPerStageDescriptorUpdateAfterBindInlineUniformBlocks uint32\n    MaxDescriptorSetInlineUniformBlocks                     uint32\n    MaxDescriptorSetUpdateAfterBindInlineUniformBlocks      uint32\n}\n</code></pre> <p>PhysicalDeviceInlineUniformBlockProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceInlineUniformBlockPropertiesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicelimits","title":"PhysicalDeviceLimits","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceLimits struct {\n    MaxImageDimension1D                             uint32\n    MaxImageDimension2D                             uint32\n    MaxImageDimension3D                             uint32\n    MaxImageDimensionCube                           uint32\n    MaxImageArrayLayers                             uint32\n    MaxTexelBufferElements                          uint32\n    MaxUniformBufferRange                           uint32\n    MaxStorageBufferRange                           uint32\n    MaxPushConstantsSize                            uint32\n    MaxMemoryAllocationCount                        uint32\n    MaxSamplerAllocationCount                       uint32\n    BufferImageGranularity                          DeviceSize\n    SparseAddressSpaceSize                          DeviceSize\n    MaxBoundDescriptorSets                          uint32\n    MaxPerStageDescriptorSamplers                   uint32\n    MaxPerStageDescriptorUniformBuffers             uint32\n    MaxPerStageDescriptorStorageBuffers             uint32\n    MaxPerStageDescriptorSampledImages              uint32\n    MaxPerStageDescriptorStorageImages              uint32\n    MaxPerStageDescriptorInputAttachments           uint32\n    MaxPerStageResources                            uint32\n    MaxDescriptorSetSamplers                        uint32\n    MaxDescriptorSetUniformBuffers                  uint32\n    MaxDescriptorSetUniformBuffersDynamic           uint32\n    MaxDescriptorSetStorageBuffers                  uint32\n    MaxDescriptorSetStorageBuffersDynamic           uint32\n    MaxDescriptorSetSampledImages                   uint32\n    MaxDescriptorSetStorageImages                   uint32\n    MaxDescriptorSetInputAttachments                uint32\n    MaxVertexInputAttributes                        uint32\n    MaxVertexInputBindings                          uint32\n    MaxVertexInputAttributeOffset                   uint32\n    MaxVertexInputBindingStride                     uint32\n    MaxVertexOutputComponents                       uint32\n    MaxTessellationGenerationLevel                  uint32\n    MaxTessellationPatchSize                        uint32\n    MaxTessellationControlPerVertexInputComponents  uint32\n    MaxTessellationControlPerVertexOutputComponents uint32\n    MaxTessellationControlPerPatchOutputComponents  uint32\n    MaxTessellationControlTotalOutputComponents     uint32\n    MaxTessellationEvaluationInputComponents        uint32\n    MaxTessellationEvaluationOutputComponents       uint32\n    MaxGeometryShaderInvocations                    uint32\n    MaxGeometryInputComponents                      uint32\n    MaxGeometryOutputComponents                     uint32\n    MaxGeometryOutputVertices                       uint32\n    MaxGeometryTotalOutputComponents                uint32\n    MaxFragmentInputComponents                      uint32\n    MaxFragmentOutputAttachments                    uint32\n    MaxFragmentDualSrcAttachments                   uint32\n    MaxFragmentCombinedOutputResources              uint32\n    MaxComputeSharedMemorySize                      uint32\n    MaxComputeWorkGroupCount                        [3]uint32\n    MaxComputeWorkGroupInvocations                  uint32\n    MaxComputeWorkGroupSize                         [3]uint32\n    SubPixelPrecisionBits                           uint32\n    SubTexelPrecisionBits                           uint32\n    MipmapPrecisionBits                             uint32\n    MaxDrawIndexedIndexValue                        uint32\n    MaxDrawIndirectCount                            uint32\n    MaxSamplerLodBias                               float32\n    MaxSamplerAnisotropy                            float32\n    MaxViewports                                    uint32\n    MaxViewportDimensions                           [2]uint32\n    ViewportBoundsRange                             [2]float32\n    ViewportSubPixelBits                            uint32\n    MinMemoryMapAlignment                           uint\n    MinTexelBufferOffsetAlignment                   DeviceSize\n    MinUniformBufferOffsetAlignment                 DeviceSize\n    MinStorageBufferOffsetAlignment                 DeviceSize\n    MinTexelOffset                                  int32\n    MaxTexelOffset                                  uint32\n    MinTexelGatherOffset                            int32\n    MaxTexelGatherOffset                            uint32\n    MinInterpolationOffset                          float32\n    MaxInterpolationOffset                          float32\n    SubPixelInterpolationOffsetBits                 uint32\n    MaxFramebufferWidth                             uint32\n    MaxFramebufferHeight                            uint32\n    MaxFramebufferLayers                            uint32\n    FramebufferColorSampleCounts                    SampleCountFlags\n    FramebufferDepthSampleCounts                    SampleCountFlags\n    FramebufferStencilSampleCounts                  SampleCountFlags\n    FramebufferNoAttachmentsSampleCounts            SampleCountFlags\n    MaxColorAttachments                             uint32\n    SampledImageColorSampleCounts                   SampleCountFlags\n    SampledImageIntegerSampleCounts                 SampleCountFlags\n    SampledImageDepthSampleCounts                   SampleCountFlags\n    SampledImageStencilSampleCounts                 SampleCountFlags\n    StorageImageSampleCounts                        SampleCountFlags\n    MaxSampleMaskWords                              uint32\n    TimestampComputeAndGraphics                     Bool32\n    TimestampPeriod                                 float32\n    MaxClipDistances                                uint32\n    MaxCullDistances                                uint32\n    MaxCombinedClipAndCullDistances                 uint32\n    DiscreteQueuePriorities                         uint32\n    PointSizeRange                                  [2]float32\n    LineWidthRange                                  [2]float32\n    PointSizeGranularity                            float32\n    LineWidthGranularity                            float32\n    StrictLines                                     Bool32\n    StandardSampleLocations                         Bool32\n    OptimalBufferCopyOffsetAlignment                DeviceSize\n    OptimalBufferCopyRowPitchAlignment              DeviceSize\n    NonCoherentAtomSize                             DeviceSize\n}\n</code></pre> <p>PhysicalDeviceLimits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceLimits.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicemaintenance3properties","title":"PhysicalDeviceMaintenance3Properties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceMaintenance3Properties struct {\n    SType                   StructureType\n    PNext                   unsafe.Pointer\n    MaxPerSetDescriptors    uint32\n    MaxMemoryAllocationSize DeviceSize\n}\n</code></pre> <p>PhysicalDeviceMaintenance3Properties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceMaintenance3Properties.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicememoryproperties","title":"PhysicalDeviceMemoryProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceMemoryProperties struct {\n    MemoryTypeCount uint32\n    MemoryTypes     [32]MemoryType\n    MemoryHeapCount uint32\n    MemoryHeaps     [16]MemoryHeap\n}\n</code></pre> <p>PhysicalDeviceMemoryProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceMemoryProperties.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicememoryproperties2","title":"PhysicalDeviceMemoryProperties2","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceMemoryProperties2 struct {\n    SType            StructureType\n    PNext            unsafe.Pointer\n    MemoryProperties PhysicalDeviceMemoryProperties\n}\n</code></pre> <p>PhysicalDeviceMemoryProperties2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceMemoryProperties2.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicemeshshaderfeaturesnv","title":"PhysicalDeviceMeshShaderFeaturesNV","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceMeshShaderFeaturesNV struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    TaskShader Bool32\n    MeshShader Bool32\n}\n</code></pre> <p>PhysicalDeviceMeshShaderFeaturesNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceMeshShaderFeaturesNV.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicemeshshaderpropertiesnv","title":"PhysicalDeviceMeshShaderPropertiesNV","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceMeshShaderPropertiesNV struct {\n    SType                             StructureType\n    PNext                             unsafe.Pointer\n    MaxDrawMeshTasksCount             uint32\n    MaxTaskWorkGroupInvocations       uint32\n    MaxTaskWorkGroupSize              [3]uint32\n    MaxTaskTotalMemorySize            uint32\n    MaxTaskOutputCount                uint32\n    MaxMeshWorkGroupInvocations       uint32\n    MaxMeshWorkGroupSize              [3]uint32\n    MaxMeshTotalMemorySize            uint32\n    MaxMeshOutputVertices             uint32\n    MaxMeshOutputPrimitives           uint32\n    MaxMeshMultiviewViewCount         uint32\n    MeshOutputPerVertexGranularity    uint32\n    MeshOutputPerPrimitiveGranularity uint32\n}\n</code></pre> <p>PhysicalDeviceMeshShaderPropertiesNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceMeshShaderPropertiesNV.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicemultiviewfeatures","title":"PhysicalDeviceMultiviewFeatures","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceMultiviewFeatures struct {\n    SType                       StructureType\n    PNext                       unsafe.Pointer\n    Multiview                   Bool32\n    MultiviewGeometryShader     Bool32\n    MultiviewTessellationShader Bool32\n}\n</code></pre> <p>PhysicalDeviceMultiviewFeatures as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceMultiviewFeatures.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicemultiviewperviewattributespropertiesnvx","title":"PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX struct {\n    SType                        StructureType\n    PNext                        unsafe.Pointer\n    PerViewPositionAllComponents Bool32\n}\n</code></pre> <p>PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX</p>"},{"location":"api/rendering/vulkan/#physicaldevicemultiviewproperties","title":"PhysicalDeviceMultiviewProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceMultiviewProperties struct {\n    SType                     StructureType\n    PNext                     unsafe.Pointer\n    MaxMultiviewViewCount     uint32\n    MaxMultiviewInstanceIndex uint32\n}\n</code></pre> <p>PhysicalDeviceMultiviewProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceMultiviewProperties.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicepcibusinfoproperties","title":"PhysicalDevicePCIBusInfoProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDevicePCIBusInfoProperties struct {\n    SType       StructureType\n    PNext       unsafe.Pointer\n    PciDomain   uint16\n    PciBus      byte\n    PciDevice   byte\n    PciFunction byte\n}\n</code></pre> <p>PhysicalDevicePCIBusInfoProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDevicePCIBusInfoPropertiesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicepointclippingproperties","title":"PhysicalDevicePointClippingProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDevicePointClippingProperties struct {\n    SType                 StructureType\n    PNext                 unsafe.Pointer\n    PointClippingBehavior PointClippingBehavior\n}\n</code></pre> <p>PhysicalDevicePointClippingProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDevicePointClippingProperties.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceproperties","title":"PhysicalDeviceProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceProperties struct {\n    ApiVersion        uint32\n    DriverVersion     uint32\n    VendorID          uint32\n    DeviceID          uint32\n    DeviceType        PhysicalDeviceType\n    DeviceName        [256]byte\n    PipelineCacheUUID [16]byte\n    Limits            PhysicalDeviceLimits\n    SparseProperties  PhysicalDeviceSparseProperties\n}\n</code></pre> <p>PhysicalDeviceProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceProperties.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceproperties2","title":"PhysicalDeviceProperties2","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceProperties2 struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    Properties PhysicalDeviceProperties\n}\n</code></pre> <p>PhysicalDeviceProperties2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceProperties2.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceprotectedmemoryfeatures","title":"PhysicalDeviceProtectedMemoryFeatures","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceProtectedMemoryFeatures struct {\n    SType           StructureType\n    PNext           unsafe.Pointer\n    ProtectedMemory Bool32\n}\n</code></pre> <p>PhysicalDeviceProtectedMemoryFeatures as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceProtectedMemoryFeatures.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceprotectedmemoryproperties","title":"PhysicalDeviceProtectedMemoryProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceProtectedMemoryProperties struct {\n    SType            StructureType\n    PNext            unsafe.Pointer\n    ProtectedNoFault Bool32\n}\n</code></pre> <p>PhysicalDeviceProtectedMemoryProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceProtectedMemoryProperties.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicepushdescriptorproperties","title":"PhysicalDevicePushDescriptorProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDevicePushDescriptorProperties struct {\n    SType              StructureType\n    PNext              unsafe.Pointer\n    MaxPushDescriptors uint32\n}\n</code></pre> <p>PhysicalDevicePushDescriptorProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkPhysicalDevicePushDescriptorPropertiesKHR</p>"},{"location":"api/rendering/vulkan/#physicaldeviceraytracingpropertiesnvx","title":"PhysicalDeviceRaytracingPropertiesNVX","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceRaytracingPropertiesNVX struct {\n    SType             StructureType\n    PNext             unsafe.Pointer\n    ShaderHeaderSize  uint32\n    MaxRecursionDepth uint32\n    MaxGeometryCount  uint32\n}\n</code></pre> <p>PhysicalDeviceRaytracingPropertiesNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkPhysicalDeviceRaytracingPropertiesNVX</p>"},{"location":"api/rendering/vulkan/#physicaldevicerepresentativefragmenttestfeaturesnv","title":"PhysicalDeviceRepresentativeFragmentTestFeaturesNV","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceRepresentativeFragmentTestFeaturesNV struct {\n    SType                      StructureType\n    PNext                      unsafe.Pointer\n    RepresentativeFragmentTest Bool32\n}\n</code></pre> <p>PhysicalDeviceRepresentativeFragmentTestFeaturesNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicesamplelocationsproperties","title":"PhysicalDeviceSampleLocationsProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceSampleLocationsProperties struct {\n    SType                         StructureType\n    PNext                         unsafe.Pointer\n    SampleLocationSampleCounts    SampleCountFlags\n    MaxSampleLocationGridSize     Extent2D\n    SampleLocationCoordinateRange [2]float32\n    SampleLocationSubPixelBits    uint32\n    VariableSampleLocations       Bool32\n}\n</code></pre> <p>PhysicalDeviceSampleLocationsProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceSampleLocationsPropertiesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicesamplerfilterminmaxproperties","title":"PhysicalDeviceSamplerFilterMinmaxProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceSamplerFilterMinmaxProperties struct {\n    SType                              StructureType\n    PNext                              unsafe.Pointer\n    FilterMinmaxSingleComponentFormats Bool32\n    FilterMinmaxImageComponentMapping  Bool32\n}\n</code></pre> <p>PhysicalDeviceSamplerFilterMinmaxProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicesamplerycbcrconversionfeatures","title":"PhysicalDeviceSamplerYcbcrConversionFeatures","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceSamplerYcbcrConversionFeatures struct {\n    SType                  StructureType\n    PNext                  unsafe.Pointer\n    SamplerYcbcrConversion Bool32\n}\n</code></pre> <p>PhysicalDeviceSamplerYcbcrConversionFeatures as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceSamplerYcbcrConversionFeatures.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceshaderatomicint64features","title":"PhysicalDeviceShaderAtomicInt64Features","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceShaderAtomicInt64Features struct {\n    SType                    StructureType\n    PNext                    unsafe.Pointer\n    ShaderBufferInt64Atomics Bool32\n    ShaderSharedInt64Atomics Bool32\n}\n</code></pre> <p>PhysicalDeviceShaderAtomicInt64Features as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkPhysicalDeviceShaderAtomicInt64FeaturesKHR</p>"},{"location":"api/rendering/vulkan/#physicaldeviceshadercorepropertiesamd","title":"PhysicalDeviceShaderCorePropertiesAMD","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceShaderCorePropertiesAMD struct {\n    SType                      StructureType\n    PNext                      unsafe.Pointer\n    ShaderEngineCount          uint32\n    ShaderArraysPerEngineCount uint32\n    ComputeUnitsPerShaderArray uint32\n    SimdPerComputeUnit         uint32\n    WavefrontsPerSimd          uint32\n    WavefrontSize              uint32\n    SgprsPerSimd               uint32\n    MinSgprAllocation          uint32\n    MaxSgprAllocation          uint32\n    SgprAllocationGranularity  uint32\n    VgprsPerSimd               uint32\n    MinVgprAllocation          uint32\n    MaxVgprAllocation          uint32\n    VgprAllocationGranularity  uint32\n}\n</code></pre> <p>PhysicalDeviceShaderCorePropertiesAMD as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkPhysicalDeviceShaderCorePropertiesAMD</p>"},{"location":"api/rendering/vulkan/#physicaldeviceshaderdrawparameterfeatures","title":"PhysicalDeviceShaderDrawParameterFeatures","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceShaderDrawParameterFeatures struct {\n    SType                StructureType\n    PNext                unsafe.Pointer\n    ShaderDrawParameters Bool32\n}\n</code></pre> <p>PhysicalDeviceShaderDrawParameterFeatures as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceShaderDrawParameterFeatures.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceshaderimagefootprintfeaturesnv","title":"PhysicalDeviceShaderImageFootprintFeaturesNV","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceShaderImageFootprintFeaturesNV struct {\n    SType          StructureType\n    PNext          unsafe.Pointer\n    ImageFootprint Bool32\n}\n</code></pre> <p>PhysicalDeviceShaderImageFootprintFeaturesNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceShaderImageFootprintFeaturesNV.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceshadingrateimagefeaturesnv","title":"PhysicalDeviceShadingRateImageFeaturesNV","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceShadingRateImageFeaturesNV struct {\n    SType                        StructureType\n    PNext                        unsafe.Pointer\n    ShadingRateImage             Bool32\n    ShadingRateCoarseSampleOrder Bool32\n}\n</code></pre> <p>PhysicalDeviceShadingRateImageFeaturesNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceShadingRateImageFeaturesNV.html</p>"},{"location":"api/rendering/vulkan/#physicaldeviceshadingrateimagepropertiesnv","title":"PhysicalDeviceShadingRateImagePropertiesNV","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceShadingRateImagePropertiesNV struct {\n    SType                       StructureType\n    PNext                       unsafe.Pointer\n    ShadingRateTexelSize        Extent2D\n    ShadingRatePaletteSize      uint32\n    ShadingRateMaxCoarseSamples uint32\n}\n</code></pre> <p>PhysicalDeviceShadingRateImagePropertiesNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceShadingRateImagePropertiesNV.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicesparseimageformatinfo2","title":"PhysicalDeviceSparseImageFormatInfo2","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceSparseImageFormatInfo2 struct {\n    SType   StructureType\n    PNext   unsafe.Pointer\n    Format  Format\n    Type    ImageType\n    Samples SampleCountFlagBits\n    Usage   ImageUsageFlags\n    Tiling  ImageTiling\n}\n</code></pre> <p>PhysicalDeviceSparseImageFormatInfo2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceSparseImageFormatInfo2.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicesparseproperties","title":"PhysicalDeviceSparseProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceSparseProperties struct {\n    ResidencyStandard2DBlockShape            Bool32\n    ResidencyStandard2DMultisampleBlockShape Bool32\n    ResidencyStandard3DBlockShape            Bool32\n    ResidencyAlignedMipSize                  Bool32\n    ResidencyNonResidentStrict               Bool32\n}\n</code></pre> <p>PhysicalDeviceSparseProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceSparseProperties.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicesubgroupproperties","title":"PhysicalDeviceSubgroupProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceSubgroupProperties struct {\n    SType                     StructureType\n    PNext                     unsafe.Pointer\n    SubgroupSize              uint32\n    SupportedStages           ShaderStageFlags\n    SupportedOperations       SubgroupFeatureFlags\n    QuadOperationsInAllStages Bool32\n}\n</code></pre> <p>PhysicalDeviceSubgroupProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceSubgroupProperties.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicesurfaceinfo2","title":"PhysicalDeviceSurfaceInfo2","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceSurfaceInfo2 struct {\n    SType   StructureType\n    PNext   unsafe.Pointer\n    Surface Surface\n}\n</code></pre> <p>PhysicalDeviceSurfaceInfo2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkPhysicalDeviceSurfaceInfo2KHR</p>"},{"location":"api/rendering/vulkan/#physicaldevicetransformfeedbackfeatures","title":"PhysicalDeviceTransformFeedbackFeatures","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceTransformFeedbackFeatures struct {\n    SType             StructureType\n    PNext             unsafe.Pointer\n    TransformFeedback Bool32\n    GeometryStreams   Bool32\n}\n</code></pre> <p>PhysicalDeviceTransformFeedbackFeatures as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceTransformFeedbackFeaturesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicetransformfeedbackproperties","title":"PhysicalDeviceTransformFeedbackProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceTransformFeedbackProperties struct {\n    SType                                      StructureType\n    PNext                                      unsafe.Pointer\n    MaxTransformFeedbackStreams                uint32\n    MaxTransformFeedbackBuffers                uint32\n    MaxTransformFeedbackBufferSize             DeviceSize\n    MaxTransformFeedbackStreamDataSize         uint32\n    MaxTransformFeedbackBufferDataSize         uint32\n    MaxTransformFeedbackBufferDataStride       uint32\n    TransformFeedbackQueries                   Bool32\n    TransformFeedbackStreamsLinesTriangles     Bool32\n    TransformFeedbackRasterizationStreamSelect Bool32\n    TransformFeedbackDraw                      Bool32\n}\n</code></pre> <p>PhysicalDeviceTransformFeedbackProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceTransformFeedbackPropertiesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicetype","title":"PhysicalDeviceType","text":"<p>int32 <pre><code>type PhysicalDeviceType int32\n</code></pre></p> <p>PhysicalDeviceType as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceType.html</p> <p>const ( PhysicalDeviceTypeOther PhysicalDeviceType = iota PhysicalDeviceTypeIntegratedGpu PhysicalDeviceType = 1 PhysicalDeviceTypeDiscreteGpu PhysicalDeviceType = 2 PhysicalDeviceTypeVirtualGpu PhysicalDeviceType = 3 PhysicalDeviceTypeCpu PhysicalDeviceType = 4 PhysicalDeviceTypeBeginRange PhysicalDeviceType = 0 PhysicalDeviceTypeEndRange PhysicalDeviceType = 4 PhysicalDeviceTypeRangeSize PhysicalDeviceType = 5 PhysicalDeviceTypeMaxEnum PhysicalDeviceType = 2147483647 ) PhysicalDeviceType enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceType.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicevariablepointerfeatures","title":"PhysicalDeviceVariablePointerFeatures","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceVariablePointerFeatures struct {\n    SType                         StructureType\n    PNext                         unsafe.Pointer\n    VariablePointersStorageBuffer Bool32\n    VariablePointers              Bool32\n}\n</code></pre> <p>PhysicalDeviceVariablePointerFeatures as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceVariablePointerFeatures.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicevertexattributedivisorfeatures","title":"PhysicalDeviceVertexAttributeDivisorFeatures","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceVertexAttributeDivisorFeatures struct {\n    SType                                  StructureType\n    PNext                                  unsafe.Pointer\n    VertexAttributeInstanceRateDivisor     Bool32\n    VertexAttributeInstanceRateZeroDivisor Bool32\n}\n</code></pre> <p>PhysicalDeviceVertexAttributeDivisorFeatures as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicevertexattributedivisorproperties","title":"PhysicalDeviceVertexAttributeDivisorProperties","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceVertexAttributeDivisorProperties struct {\n    SType                  StructureType\n    PNext                  unsafe.Pointer\n    MaxVertexAttribDivisor uint32\n}\n</code></pre> <p>PhysicalDeviceVertexAttributeDivisorProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT.html</p>"},{"location":"api/rendering/vulkan/#physicaldevicevulkanmemorymodelfeatures","title":"PhysicalDeviceVulkanMemoryModelFeatures","text":"<p><code>struct</code></p> <pre><code>type PhysicalDeviceVulkanMemoryModelFeatures struct {\n    SType                        StructureType\n    PNext                        unsafe.Pointer\n    VulkanMemoryModel            Bool32\n    VulkanMemoryModelDeviceScope Bool32\n}\n</code></pre> <p>PhysicalDeviceVulkanMemoryModelFeatures as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkPhysicalDeviceVulkanMemoryModelFeaturesKHR</p>"},{"location":"api/rendering/vulkan/#pipeline","title":"Pipeline","text":"<p>C.VkPipeline <pre><code>type Pipeline C.VkPipeline\n</code></pre></p> <p>Pipeline as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipeline.html</p>"},{"location":"api/rendering/vulkan/#pipelinebindpoint","title":"PipelineBindPoint","text":"<p>int32 <pre><code>type PipelineBindPoint int32\n</code></pre></p> <p>PipelineBindPoint as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineBindPoint.html</p> <p>const ( PipelineBindPointGraphics PipelineBindPoint = iota PipelineBindPointCompute PipelineBindPoint = 1 PipelineBindPointRaytracingNvx PipelineBindPoint = 1000165000 PipelineBindPointBeginRange PipelineBindPoint = 0 PipelineBindPointEndRange PipelineBindPoint = 1 PipelineBindPointRangeSize PipelineBindPoint = 2 PipelineBindPointMaxEnum PipelineBindPoint = 2147483647 ) PipelineBindPoint enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineBindPoint.html</p>"},{"location":"api/rendering/vulkan/#pipelinecache","title":"PipelineCache","text":"<p>C.VkPipelineCache <pre><code>type PipelineCache C.VkPipelineCache\n</code></pre></p> <p>PipelineCache as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineCache.html</p>"},{"location":"api/rendering/vulkan/#pipelinecachecreateflags","title":"PipelineCacheCreateFlags","text":"<p>uint32 <pre><code>type PipelineCacheCreateFlags uint32\n</code></pre></p> <p>PipelineCacheCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineCacheCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#pipelinecachecreateinfo","title":"PipelineCacheCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineCacheCreateInfo struct {\n    SType           StructureType\n    PNext           unsafe.Pointer\n    Flags           PipelineCacheCreateFlags\n    InitialDataSize uint\n    PInitialData    unsafe.Pointer\n}\n</code></pre> <p>PipelineCacheCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineCacheCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#pipelinecacheheaderversion","title":"PipelineCacheHeaderVersion","text":"<p>int32 <pre><code>type PipelineCacheHeaderVersion int32\n</code></pre></p> <p>PipelineCacheHeaderVersion as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineCacheHeaderVersion.html</p> <p>const ( PipelineCacheHeaderVersionOne PipelineCacheHeaderVersion = 1 PipelineCacheHeaderVersionBeginRange PipelineCacheHeaderVersion = 1 PipelineCacheHeaderVersionEndRange PipelineCacheHeaderVersion = 1 PipelineCacheHeaderVersionRangeSize PipelineCacheHeaderVersion = 1 PipelineCacheHeaderVersionMaxEnum PipelineCacheHeaderVersion = 2147483647 ) PipelineCacheHeaderVersion enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineCacheHeaderVersion.html</p>"},{"location":"api/rendering/vulkan/#pipelinecolorblendadvancedstatecreateinfo","title":"PipelineColorBlendAdvancedStateCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineColorBlendAdvancedStateCreateInfo struct {\n    SType            StructureType\n    PNext            unsafe.Pointer\n    SrcPremultiplied Bool32\n    DstPremultiplied Bool32\n    BlendOverlap     BlendOverlap\n}\n</code></pre> <p>PipelineColorBlendAdvancedStateCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineColorBlendAdvancedStateCreateInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#pipelinecolorblendattachmentstate","title":"PipelineColorBlendAttachmentState","text":"<p><code>struct</code></p> <pre><code>type PipelineColorBlendAttachmentState struct {\n    BlendEnable         Bool32\n    SrcColorBlendFactor BlendFactor\n    DstColorBlendFactor BlendFactor\n    ColorBlendOp        BlendOp\n    SrcAlphaBlendFactor BlendFactor\n    DstAlphaBlendFactor BlendFactor\n    AlphaBlendOp        BlendOp\n    ColorWriteMask      ColorComponentFlags\n}\n</code></pre> <p>PipelineColorBlendAttachmentState as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineColorBlendAttachmentState.html</p>"},{"location":"api/rendering/vulkan/#pipelinecolorblendstatecreateflags","title":"PipelineColorBlendStateCreateFlags","text":"<p>uint32 <pre><code>type PipelineColorBlendStateCreateFlags uint32\n</code></pre></p> <p>PipelineColorBlendStateCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineColorBlendStateCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#pipelinecolorblendstatecreateinfo","title":"PipelineColorBlendStateCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineColorBlendStateCreateInfo struct {\n    SType           StructureType\n    PNext           unsafe.Pointer\n    Flags           PipelineColorBlendStateCreateFlags\n    LogicOpEnable   Bool32\n    LogicOp         LogicOp\n    AttachmentCount uint32\n    PAttachments    *PipelineColorBlendAttachmentState\n    BlendConstants  [4]float32\n}\n</code></pre> <p>PipelineColorBlendStateCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineColorBlendStateCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#pipelinecoveragemodulationstatecreateflagsnv","title":"PipelineCoverageModulationStateCreateFlagsNV","text":"<p>uint32 <pre><code>type PipelineCoverageModulationStateCreateFlagsNV uint32\n</code></pre></p> <p>PipelineCoverageModulationStateCreateFlagsNV type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineCoverageModulationStateCreateFlagsNV.html</p>"},{"location":"api/rendering/vulkan/#pipelinecoveragemodulationstatecreateinfonv","title":"PipelineCoverageModulationStateCreateInfoNV","text":"<p><code>struct</code></p> <pre><code>type PipelineCoverageModulationStateCreateInfoNV struct {\n    SType                         StructureType\n    PNext                         unsafe.Pointer\n    Flags                         PipelineCoverageModulationStateCreateFlagsNV\n    CoverageModulationMode        CoverageModulationModeNV\n    CoverageModulationTableEnable Bool32\n    CoverageModulationTableCount  uint32\n    PCoverageModulationTable      *float32\n}\n</code></pre> <p>PipelineCoverageModulationStateCreateInfoNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineCoverageModulationStateCreateInfoNV.html</p>"},{"location":"api/rendering/vulkan/#pipelinecoveragetocolorstatecreateflagsnv","title":"PipelineCoverageToColorStateCreateFlagsNV","text":"<p>uint32 <pre><code>type PipelineCoverageToColorStateCreateFlagsNV uint32\n</code></pre></p> <p>PipelineCoverageToColorStateCreateFlagsNV type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineCoverageToColorStateCreateFlagsNV.html</p>"},{"location":"api/rendering/vulkan/#pipelinecoveragetocolorstatecreateinfonv","title":"PipelineCoverageToColorStateCreateInfoNV","text":"<p><code>struct</code></p> <pre><code>type PipelineCoverageToColorStateCreateInfoNV struct {\n    SType                   StructureType\n    PNext                   unsafe.Pointer\n    Flags                   PipelineCoverageToColorStateCreateFlagsNV\n    CoverageToColorEnable   Bool32\n    CoverageToColorLocation uint32\n}\n</code></pre> <p>PipelineCoverageToColorStateCreateInfoNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineCoverageToColorStateCreateInfoNV.html</p>"},{"location":"api/rendering/vulkan/#pipelinecreateflagbits","title":"PipelineCreateFlagBits","text":"<p>int32 <pre><code>type PipelineCreateFlagBits int32\n</code></pre></p> <p>PipelineCreateFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineCreateFlagBits.html</p> <p>const ( PipelineCreateDisableOptimizationBit PipelineCreateFlagBits = 1 PipelineCreateAllowDerivativesBit PipelineCreateFlagBits = 2 PipelineCreateDerivativeBit PipelineCreateFlagBits = 4 PipelineCreateViewIndexFromDeviceIndexBit PipelineCreateFlagBits = 8 PipelineCreateDispatchBase PipelineCreateFlagBits = 16 PipelineCreateDeferCompileBitNvx PipelineCreateFlagBits = 32 PipelineCreateFlagBitsMaxEnum PipelineCreateFlagBits = 2147483647 ) PipelineCreateFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineCreateFlagBits.html</p>"},{"location":"api/rendering/vulkan/#pipelinecreateflags","title":"PipelineCreateFlags","text":"<p>uint32 <pre><code>type PipelineCreateFlags uint32\n</code></pre></p> <p>PipelineCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#pipelinedepthstencilstatecreateflags","title":"PipelineDepthStencilStateCreateFlags","text":"<p>uint32 <pre><code>type PipelineDepthStencilStateCreateFlags uint32\n</code></pre></p> <p>PipelineDepthStencilStateCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineDepthStencilStateCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#pipelinedepthstencilstatecreateinfo","title":"PipelineDepthStencilStateCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineDepthStencilStateCreateInfo struct {\n    SType                 StructureType\n    PNext                 unsafe.Pointer\n    Flags                 PipelineDepthStencilStateCreateFlags\n    DepthTestEnable       Bool32\n    DepthWriteEnable      Bool32\n    DepthCompareOp        CompareOp\n    DepthBoundsTestEnable Bool32\n    StencilTestEnable     Bool32\n    Front                 StencilOpState\n    Back                  StencilOpState\n    MinDepthBounds        float32\n    MaxDepthBounds        float32\n}\n</code></pre> <p>PipelineDepthStencilStateCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineDepthStencilStateCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#pipelinediscardrectanglestatecreateflags","title":"PipelineDiscardRectangleStateCreateFlags","text":"<p>uint32 <pre><code>type PipelineDiscardRectangleStateCreateFlags uint32\n</code></pre></p> <p>PipelineDiscardRectangleStateCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineDiscardRectangleStateCreateFlagsEXT.html</p>"},{"location":"api/rendering/vulkan/#pipelinediscardrectanglestatecreateinfo","title":"PipelineDiscardRectangleStateCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineDiscardRectangleStateCreateInfo struct {\n    SType                 StructureType\n    PNext                 unsafe.Pointer\n    Flags                 PipelineDiscardRectangleStateCreateFlags\n    DiscardRectangleMode  DiscardRectangleMode\n    DiscardRectangleCount uint32\n    PDiscardRectangles    *Rect2D\n}\n</code></pre> <p>PipelineDiscardRectangleStateCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineDiscardRectangleStateCreateInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#pipelinedynamicstatecreateflags","title":"PipelineDynamicStateCreateFlags","text":"<p>uint32 <pre><code>type PipelineDynamicStateCreateFlags uint32\n</code></pre></p> <p>PipelineDynamicStateCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineDynamicStateCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#pipelinedynamicstatecreateinfo","title":"PipelineDynamicStateCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineDynamicStateCreateInfo struct {\n    SType             StructureType\n    PNext             unsafe.Pointer\n    Flags             PipelineDynamicStateCreateFlags\n    DynamicStateCount uint32\n    PDynamicStates    *DynamicState\n}\n</code></pre> <p>PipelineDynamicStateCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineDynamicStateCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#pipelineinputassemblystatecreateflags","title":"PipelineInputAssemblyStateCreateFlags","text":"<p>uint32 <pre><code>type PipelineInputAssemblyStateCreateFlags uint32\n</code></pre></p> <p>PipelineInputAssemblyStateCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineInputAssemblyStateCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#pipelineinputassemblystatecreateinfo","title":"PipelineInputAssemblyStateCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineInputAssemblyStateCreateInfo struct {\n    SType                  StructureType\n    PNext                  unsafe.Pointer\n    Flags                  PipelineInputAssemblyStateCreateFlags\n    Topology               PrimitiveTopology\n    PrimitiveRestartEnable Bool32\n}\n</code></pre> <p>PipelineInputAssemblyStateCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineInputAssemblyStateCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#pipelinelayout","title":"PipelineLayout","text":"<p>C.VkPipelineLayout <pre><code>type PipelineLayout C.VkPipelineLayout\n</code></pre></p> <p>PipelineLayout as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineLayout.html</p>"},{"location":"api/rendering/vulkan/#pipelinelayoutcreateflags","title":"PipelineLayoutCreateFlags","text":"<p>uint32 <pre><code>type PipelineLayoutCreateFlags uint32\n</code></pre></p> <p>PipelineLayoutCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineLayoutCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#pipelinelayoutcreateinfo","title":"PipelineLayoutCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineLayoutCreateInfo struct {\n    SType                  StructureType\n    PNext                  unsafe.Pointer\n    Flags                  PipelineLayoutCreateFlags\n    SetLayoutCount         uint32\n    PSetLayouts            *DescriptorSetLayout\n    PushConstantRangeCount uint32\n    PPushConstantRanges    *PushConstantRange\n}\n</code></pre> <p>PipelineLayoutCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineLayoutCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#pipelinemultisamplestatecreateflags","title":"PipelineMultisampleStateCreateFlags","text":"<p>uint32 <pre><code>type PipelineMultisampleStateCreateFlags uint32\n</code></pre></p> <p>PipelineMultisampleStateCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineMultisampleStateCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#pipelinemultisamplestatecreateinfo","title":"PipelineMultisampleStateCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineMultisampleStateCreateInfo struct {\n    SType                 StructureType\n    PNext                 unsafe.Pointer\n    Flags                 PipelineMultisampleStateCreateFlags\n    RasterizationSamples  SampleCountFlagBits\n    SampleShadingEnable   Bool32\n    MinSampleShading      float32\n    PSampleMask           *SampleMask\n    AlphaToCoverageEnable Bool32\n    AlphaToOneEnable      Bool32\n}\n</code></pre> <p>PipelineMultisampleStateCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineMultisampleStateCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#pipelinerasterizationconservativestatecreateflags","title":"PipelineRasterizationConservativeStateCreateFlags","text":"<p>uint32 <pre><code>type PipelineRasterizationConservativeStateCreateFlags uint32\n</code></pre></p> <p>PipelineRasterizationConservativeStateCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineRasterizationConservativeStateCreateFlagsEXT.html</p>"},{"location":"api/rendering/vulkan/#pipelinerasterizationconservativestatecreateinfo","title":"PipelineRasterizationConservativeStateCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineRasterizationConservativeStateCreateInfo struct {\n    SType                            StructureType\n    PNext                            unsafe.Pointer\n    Flags                            PipelineRasterizationConservativeStateCreateFlags\n    ConservativeRasterizationMode    ConservativeRasterizationMode\n    ExtraPrimitiveOverestimationSize float32\n}\n</code></pre> <p>PipelineRasterizationConservativeStateCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineRasterizationConservativeStateCreateInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#pipelinerasterizationstatecreateflags","title":"PipelineRasterizationStateCreateFlags","text":"<p>uint32 <pre><code>type PipelineRasterizationStateCreateFlags uint32\n</code></pre></p> <p>PipelineRasterizationStateCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineRasterizationStateCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#pipelinerasterizationstatecreateinfo","title":"PipelineRasterizationStateCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineRasterizationStateCreateInfo struct {\n    SType                   StructureType\n    PNext                   unsafe.Pointer\n    Flags                   PipelineRasterizationStateCreateFlags\n    DepthClampEnable        Bool32\n    RasterizerDiscardEnable Bool32\n    PolygonMode             PolygonMode\n    CullMode                CullModeFlags\n    FrontFace               FrontFace\n    DepthBiasEnable         Bool32\n    DepthBiasConstantFactor float32\n    DepthBiasClamp          float32\n    DepthBiasSlopeFactor    float32\n    LineWidth               float32\n}\n</code></pre> <p>PipelineRasterizationStateCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineRasterizationStateCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#pipelinerasterizationstaterasterizationorderamd","title":"PipelineRasterizationStateRasterizationOrderAMD","text":"<p><code>struct</code></p> <pre><code>type PipelineRasterizationStateRasterizationOrderAMD struct {\n    SType              StructureType\n    PNext              unsafe.Pointer\n    RasterizationOrder RasterizationOrderAMD\n}\n</code></pre> <p>PipelineRasterizationStateRasterizationOrderAMD as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkPipelineRasterizationStateRasterizationOrderAMD</p>"},{"location":"api/rendering/vulkan/#pipelinerasterizationstatestreamcreateflags","title":"PipelineRasterizationStateStreamCreateFlags","text":"<p>uint32 <pre><code>type PipelineRasterizationStateStreamCreateFlags uint32\n</code></pre></p> <p>PipelineRasterizationStateStreamCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineRasterizationStateStreamCreateFlagsEXT.html</p>"},{"location":"api/rendering/vulkan/#pipelinerasterizationstatestreamcreateinfo","title":"PipelineRasterizationStateStreamCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineRasterizationStateStreamCreateInfo struct {\n    SType               StructureType\n    PNext               unsafe.Pointer\n    Flags               PipelineRasterizationStateStreamCreateFlags\n    RasterizationStream uint32\n}\n</code></pre> <p>PipelineRasterizationStateStreamCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineRasterizationStateStreamCreateInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#pipelinerepresentativefragmentteststatecreateinfonv","title":"PipelineRepresentativeFragmentTestStateCreateInfoNV","text":"<p><code>struct</code></p> <pre><code>type PipelineRepresentativeFragmentTestStateCreateInfoNV struct {\n    SType                            StructureType\n    PNext                            unsafe.Pointer\n    RepresentativeFragmentTestEnable Bool32\n}\n</code></pre> <p>PipelineRepresentativeFragmentTestStateCreateInfoNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineRepresentativeFragmentTestStateCreateInfoNV.html</p>"},{"location":"api/rendering/vulkan/#pipelinesamplelocationsstatecreateinfo","title":"PipelineSampleLocationsStateCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineSampleLocationsStateCreateInfo struct {\n    SType                 StructureType\n    PNext                 unsafe.Pointer\n    SampleLocationsEnable Bool32\n    SampleLocationsInfo   SampleLocationsInfo\n}\n</code></pre> <p>PipelineSampleLocationsStateCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineSampleLocationsStateCreateInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#pipelineshaderstagecreateflags","title":"PipelineShaderStageCreateFlags","text":"<p>uint32 <pre><code>type PipelineShaderStageCreateFlags uint32\n</code></pre></p> <p>PipelineShaderStageCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineShaderStageCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#pipelineshaderstagecreateinfo","title":"PipelineShaderStageCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineShaderStageCreateInfo struct {\n    SType               StructureType\n    PNext               unsafe.Pointer\n    Flags               PipelineShaderStageCreateFlags\n    Stage               ShaderStageFlagBits\n    Module              ShaderModule\n    PName               *C.char\n    PSpecializationInfo *SpecializationInfo\n}\n</code></pre> <p>PipelineShaderStageCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineShaderStageCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#pipelinestageflagbits","title":"PipelineStageFlagBits","text":"<p>int32 <pre><code>type PipelineStageFlagBits int32\n</code></pre></p> <p>PipelineStageFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineStageFlagBits.html</p> <p>const ( PipelineStageTopOfPipeBit PipelineStageFlagBits = 1 PipelineStageDrawIndirectBit PipelineStageFlagBits = 2 PipelineStageVertexInputBit PipelineStageFlagBits = 4 PipelineStageVertexShaderBit PipelineStageFlagBits = 8 PipelineStageTessellationControlShaderBit PipelineStageFlagBits = 16 PipelineStageTessellationEvaluationShaderBit PipelineStageFlagBits = 32 PipelineStageGeometryShaderBit PipelineStageFlagBits = 64 PipelineStageFragmentShaderBit PipelineStageFlagBits = 128 PipelineStageEarlyFragmentTestsBit PipelineStageFlagBits = 256 PipelineStageLateFragmentTestsBit PipelineStageFlagBits = 512 PipelineStageColorAttachmentOutputBit PipelineStageFlagBits = 1024 PipelineStageComputeShaderBit PipelineStageFlagBits = 2048 PipelineStageTransferBit PipelineStageFlagBits = 4096 PipelineStageBottomOfPipeBit PipelineStageFlagBits = 8192 PipelineStageHostBit PipelineStageFlagBits = 16384 PipelineStageAllGraphicsBit PipelineStageFlagBits = 32768 PipelineStageAllCommandsBit PipelineStageFlagBits = 65536 PipelineStageTransformFeedbackBit PipelineStageFlagBits = 16777216 PipelineStageConditionalRenderingBit PipelineStageFlagBits = 262144 PipelineStageCommandProcessBitNvx PipelineStageFlagBits = 131072 PipelineStageShadingRateImageBitNv PipelineStageFlagBits = 4194304 PipelineStageRaytracingBitNvx PipelineStageFlagBits = 2097152 PipelineStageTaskShaderBitNv PipelineStageFlagBits = 524288 PipelineStageMeshShaderBitNv PipelineStageFlagBits = 1048576 PipelineStageFlagBitsMaxEnum PipelineStageFlagBits = 2147483647 ) PipelineStageFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineStageFlagBits.html</p>"},{"location":"api/rendering/vulkan/#pipelinestageflags","title":"PipelineStageFlags","text":"<p>uint32 <pre><code>type PipelineStageFlags uint32\n</code></pre></p> <p>PipelineStageFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineStageFlags.html</p>"},{"location":"api/rendering/vulkan/#pipelinetessellationdomainoriginstatecreateinfo","title":"PipelineTessellationDomainOriginStateCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineTessellationDomainOriginStateCreateInfo struct {\n    SType        StructureType\n    PNext        unsafe.Pointer\n    DomainOrigin TessellationDomainOrigin\n}\n</code></pre> <p>PipelineTessellationDomainOriginStateCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineTessellationDomainOriginStateCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#pipelinetessellationstatecreateflags","title":"PipelineTessellationStateCreateFlags","text":"<p>uint32 <pre><code>type PipelineTessellationStateCreateFlags uint32\n</code></pre></p> <p>PipelineTessellationStateCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineTessellationStateCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#pipelinetessellationstatecreateinfo","title":"PipelineTessellationStateCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineTessellationStateCreateInfo struct {\n    SType              StructureType\n    PNext              unsafe.Pointer\n    Flags              PipelineTessellationStateCreateFlags\n    PatchControlPoints uint32\n}\n</code></pre> <p>PipelineTessellationStateCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineTessellationStateCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#pipelinevertexinputdivisorstatecreateinfo","title":"PipelineVertexInputDivisorStateCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineVertexInputDivisorStateCreateInfo struct {\n    SType                     StructureType\n    PNext                     unsafe.Pointer\n    VertexBindingDivisorCount uint32\n    PVertexBindingDivisors    *VertexInputBindingDivisorDescription\n}\n</code></pre> <p>PipelineVertexInputDivisorStateCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineVertexInputDivisorStateCreateInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#pipelinevertexinputstatecreateflags","title":"PipelineVertexInputStateCreateFlags","text":"<p>uint32 <pre><code>type PipelineVertexInputStateCreateFlags uint32\n</code></pre></p> <p>PipelineVertexInputStateCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineVertexInputStateCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#pipelinevertexinputstatecreateinfo","title":"PipelineVertexInputStateCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineVertexInputStateCreateInfo struct {\n    SType                           StructureType\n    PNext                           unsafe.Pointer\n    Flags                           PipelineVertexInputStateCreateFlags\n    VertexBindingDescriptionCount   uint32\n    PVertexBindingDescriptions      *VertexInputBindingDescription\n    VertexAttributeDescriptionCount uint32\n    PVertexAttributeDescriptions    *VertexInputAttributeDescription\n}\n</code></pre> <p>PipelineVertexInputStateCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineVertexInputStateCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#pipelineviewportcoarsesampleorderstatecreateinfonv","title":"PipelineViewportCoarseSampleOrderStateCreateInfoNV","text":"<p><code>struct</code></p> <pre><code>type PipelineViewportCoarseSampleOrderStateCreateInfoNV struct {\n    SType                  StructureType\n    PNext                  unsafe.Pointer\n    SampleOrderType        CoarseSampleOrderTypeNV\n    CustomSampleOrderCount uint32\n    PCustomSampleOrders    *CoarseSampleOrderCustomNV\n}\n</code></pre> <p>PipelineViewportCoarseSampleOrderStateCreateInfoNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineViewportCoarseSampleOrderStateCreateInfoNV.html</p>"},{"location":"api/rendering/vulkan/#pipelineviewportexclusivescissorstatecreateinfonv","title":"PipelineViewportExclusiveScissorStateCreateInfoNV","text":"<p><code>struct</code></p> <pre><code>type PipelineViewportExclusiveScissorStateCreateInfoNV struct {\n    SType                 StructureType\n    PNext                 unsafe.Pointer\n    ExclusiveScissorCount uint32\n    PExclusiveScissors    *Rect2D\n}\n</code></pre> <p>PipelineViewportExclusiveScissorStateCreateInfoNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineViewportExclusiveScissorStateCreateInfoNV.html</p>"},{"location":"api/rendering/vulkan/#pipelineviewportshadingrateimagestatecreateinfonv","title":"PipelineViewportShadingRateImageStateCreateInfoNV","text":"<p><code>struct</code></p> <pre><code>type PipelineViewportShadingRateImageStateCreateInfoNV struct {\n    SType                  StructureType\n    PNext                  unsafe.Pointer\n    ShadingRateImageEnable Bool32\n    ViewportCount          uint32\n    PShadingRatePalettes   *ShadingRatePaletteNV\n}\n</code></pre> <p>PipelineViewportShadingRateImageStateCreateInfoNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineViewportShadingRateImageStateCreateInfoNV.html</p>"},{"location":"api/rendering/vulkan/#pipelineviewportstatecreateflags","title":"PipelineViewportStateCreateFlags","text":"<p>uint32 <pre><code>type PipelineViewportStateCreateFlags uint32\n</code></pre></p> <p>PipelineViewportStateCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineViewportStateCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#pipelineviewportstatecreateinfo","title":"PipelineViewportStateCreateInfo","text":"<p><code>struct</code></p> <pre><code>type PipelineViewportStateCreateInfo struct {\n    SType         StructureType\n    PNext         unsafe.Pointer\n    Flags         PipelineViewportStateCreateFlags\n    ViewportCount uint32\n    PViewports    *Viewport\n    ScissorCount  uint32\n    PScissors     *Rect2D\n}\n</code></pre> <p>PipelineViewportStateCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineViewportStateCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#pipelineviewportswizzlestatecreateflagsnv","title":"PipelineViewportSwizzleStateCreateFlagsNV","text":"<p>uint32 <pre><code>type PipelineViewportSwizzleStateCreateFlagsNV uint32\n</code></pre></p> <p>PipelineViewportSwizzleStateCreateFlagsNV type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineViewportSwizzleStateCreateFlagsNV.html</p>"},{"location":"api/rendering/vulkan/#pipelineviewportswizzlestatecreateinfonv","title":"PipelineViewportSwizzleStateCreateInfoNV","text":"<p><code>struct</code></p> <pre><code>type PipelineViewportSwizzleStateCreateInfoNV struct {\n    SType             StructureType\n    PNext             unsafe.Pointer\n    Flags             PipelineViewportSwizzleStateCreateFlagsNV\n    ViewportCount     uint32\n    PViewportSwizzles *ViewportSwizzleNV\n}\n</code></pre> <p>PipelineViewportSwizzleStateCreateInfoNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineViewportSwizzleStateCreateInfoNV.html</p>"},{"location":"api/rendering/vulkan/#pipelineviewportwscalingstatecreateinfonv","title":"PipelineViewportWScalingStateCreateInfoNV","text":"<p><code>struct</code></p> <pre><code>type PipelineViewportWScalingStateCreateInfoNV struct {\n    SType                  StructureType\n    PNext                  unsafe.Pointer\n    ViewportWScalingEnable Bool32\n    ViewportCount          uint32\n    PViewportWScalings     *ViewportWScalingNV\n}\n</code></pre> <p>PipelineViewportWScalingStateCreateInfoNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPipelineViewportWScalingStateCreateInfoNV.html</p>"},{"location":"api/rendering/vulkan/#pointclippingbehavior","title":"PointClippingBehavior","text":"<p>int32 <pre><code>type PointClippingBehavior int32\n</code></pre></p> <p>PointClippingBehavior as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPointClippingBehavior.html</p> <p>const ( PointClippingBehaviorAllClipPlanes PointClippingBehavior = iota PointClippingBehaviorUserClipPlanesOnly PointClippingBehavior = 1 PointClippingBehaviorBeginRange PointClippingBehavior = 0 PointClippingBehaviorEndRange PointClippingBehavior = 1 PointClippingBehaviorRangeSize PointClippingBehavior = 2 PointClippingBehaviorMaxEnum PointClippingBehavior = 2147483647 ) PointClippingBehavior enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPointClippingBehavior.html</p>"},{"location":"api/rendering/vulkan/#polygonmode","title":"PolygonMode","text":"<p>int32 <pre><code>type PolygonMode int32\n</code></pre></p> <p>PolygonMode as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPolygonMode.html</p> <p>const ( PolygonModeFill PolygonMode = iota PolygonModeLine PolygonMode = 1 PolygonModePoint PolygonMode = 2 PolygonModeFillRectangleNv PolygonMode = 1000153000 PolygonModeBeginRange PolygonMode = 0 PolygonModeEndRange PolygonMode = 2 PolygonModeRangeSize PolygonMode = 3 PolygonModeMaxEnum PolygonMode = 2147483647 ) PolygonMode enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPolygonMode.html</p>"},{"location":"api/rendering/vulkan/#presentinfo","title":"PresentInfo","text":"<p><code>struct</code></p> <pre><code>type PresentInfo struct {\n    SType              StructureType\n    PNext              unsafe.Pointer\n    WaitSemaphoreCount uint32\n    PWaitSemaphores    *Semaphore\n    SwapchainCount     uint32\n    PSwapchains        *Swapchain\n    PImageIndices      *uint32\n    PResults           *Result\n}\n</code></pre> <p>PresentInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkPresentInfoKHR</p>"},{"location":"api/rendering/vulkan/#presentmode","title":"PresentMode","text":"<p>int32 <pre><code>type PresentMode int32\n</code></pre></p> <p>PresentMode as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkPresentModeKHR</p> <p>const ( PresentModeImmediate PresentMode = iota PresentModeMailbox PresentMode = 1 PresentModeFifo PresentMode = 2 PresentModeFifoRelaxed PresentMode = 3 PresentModeSharedDemandRefresh PresentMode = 1000111000 PresentModeSharedContinuousRefresh PresentMode = 1000111001 PresentModeBeginRange PresentMode = 0 PresentModeEndRange PresentMode = 3 PresentModeRangeSize PresentMode = 4 PresentModeMaxEnum PresentMode = 2147483647 ) PresentMode enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkPresentModeKHR</p>"},{"location":"api/rendering/vulkan/#presentregion","title":"PresentRegion","text":"<p><code>struct</code></p> <pre><code>type PresentRegion struct {\n    RectangleCount uint32\n    PRectangles    *RectLayer\n}\n</code></pre> <p>PresentRegion as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkPresentRegionKHR</p>"},{"location":"api/rendering/vulkan/#presentregions","title":"PresentRegions","text":"<p><code>struct</code></p> <pre><code>type PresentRegions struct {\n    SType          StructureType\n    PNext          unsafe.Pointer\n    SwapchainCount uint32\n    PRegions       *PresentRegion\n}\n</code></pre> <p>PresentRegions as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkPresentRegionsKHR</p>"},{"location":"api/rendering/vulkan/#presenttimegoogle","title":"PresentTimeGOOGLE","text":"<p><code>struct</code></p> <pre><code>type PresentTimeGOOGLE struct {\n    PresentID          uint32\n    DesiredPresentTime uint64\n}\n</code></pre> <p>PresentTimeGOOGLE as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPresentTimeGOOGLE.html</p>"},{"location":"api/rendering/vulkan/#presenttimesinfogoogle","title":"PresentTimesInfoGOOGLE","text":"<p><code>struct</code></p> <pre><code>type PresentTimesInfoGOOGLE struct {\n    SType          StructureType\n    PNext          unsafe.Pointer\n    SwapchainCount uint32\n    PTimes         *PresentTimeGOOGLE\n}\n</code></pre> <p>PresentTimesInfoGOOGLE as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPresentTimesInfoGOOGLE.html</p>"},{"location":"api/rendering/vulkan/#primitivetopology","title":"PrimitiveTopology","text":"<p>int32 <pre><code>type PrimitiveTopology int32\n</code></pre></p> <p>PrimitiveTopology as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPrimitiveTopology.html</p> <p>const ( PrimitiveTopologyPointList PrimitiveTopology = iota PrimitiveTopologyLineList PrimitiveTopology = 1 PrimitiveTopologyLineStrip PrimitiveTopology = 2 PrimitiveTopologyTriangleList PrimitiveTopology = 3 PrimitiveTopologyTriangleStrip PrimitiveTopology = 4 PrimitiveTopologyTriangleFan PrimitiveTopology = 5 PrimitiveTopologyLineListWithAdjacency PrimitiveTopology = 6 PrimitiveTopologyLineStripWithAdjacency PrimitiveTopology = 7 PrimitiveTopologyTriangleListWithAdjacency PrimitiveTopology = 8 PrimitiveTopologyTriangleStripWithAdjacency PrimitiveTopology = 9 PrimitiveTopologyPatchList PrimitiveTopology = 10 PrimitiveTopologyBeginRange PrimitiveTopology = 0 PrimitiveTopologyEndRange PrimitiveTopology = 10 PrimitiveTopologyRangeSize PrimitiveTopology = 11 PrimitiveTopologyMaxEnum PrimitiveTopology = 2147483647 ) PrimitiveTopology enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPrimitiveTopology.html</p>"},{"location":"api/rendering/vulkan/#protectedsubmitinfo","title":"ProtectedSubmitInfo","text":"<p><code>struct</code></p> <pre><code>type ProtectedSubmitInfo struct {\n    SType           StructureType\n    PNext           unsafe.Pointer\n    ProtectedSubmit Bool32\n}\n</code></pre> <p>ProtectedSubmitInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkProtectedSubmitInfo.html</p>"},{"location":"api/rendering/vulkan/#pushconstantrange","title":"PushConstantRange","text":"<p><code>struct</code></p> <pre><code>type PushConstantRange struct {\n    StageFlags ShaderStageFlags\n    Offset     uint32\n    Size       uint32\n}\n</code></pre> <p>PushConstantRange as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkPushConstantRange.html</p>"},{"location":"api/rendering/vulkan/#querycontrolflagbits","title":"QueryControlFlagBits","text":"<p>int32 <pre><code>type QueryControlFlagBits int32\n</code></pre></p> <p>QueryControlFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueryControlFlagBits.html</p> <p>const ( QueryControlPreciseBit QueryControlFlagBits = 1 QueryControlFlagBitsMaxEnum QueryControlFlagBits = 2147483647 ) QueryControlFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueryControlFlagBits.html</p>"},{"location":"api/rendering/vulkan/#querycontrolflags","title":"QueryControlFlags","text":"<p>uint32 <pre><code>type QueryControlFlags uint32\n</code></pre></p> <p>QueryControlFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueryControlFlags.html</p>"},{"location":"api/rendering/vulkan/#querypipelinestatisticflagbits","title":"QueryPipelineStatisticFlagBits","text":"<p>int32 <pre><code>type QueryPipelineStatisticFlagBits int32\n</code></pre></p> <p>QueryPipelineStatisticFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueryPipelineStatisticFlagBits.html</p> <p>const ( QueryPipelineStatisticInputAssemblyVerticesBit QueryPipelineStatisticFlagBits = 1 QueryPipelineStatisticInputAssemblyPrimitivesBit QueryPipelineStatisticFlagBits = 2 QueryPipelineStatisticVertexShaderInvocationsBit QueryPipelineStatisticFlagBits = 4 QueryPipelineStatisticGeometryShaderInvocationsBit QueryPipelineStatisticFlagBits = 8 QueryPipelineStatisticGeometryShaderPrimitivesBit QueryPipelineStatisticFlagBits = 16 QueryPipelineStatisticClippingInvocationsBit QueryPipelineStatisticFlagBits = 32 QueryPipelineStatisticClippingPrimitivesBit QueryPipelineStatisticFlagBits = 64 QueryPipelineStatisticFragmentShaderInvocationsBit QueryPipelineStatisticFlagBits = 128 QueryPipelineStatisticTessellationControlShaderPatchesBit QueryPipelineStatisticFlagBits = 256 QueryPipelineStatisticTessellationEvaluationShaderInvocationsBit QueryPipelineStatisticFlagBits = 512 QueryPipelineStatisticComputeShaderInvocationsBit QueryPipelineStatisticFlagBits = 1024 QueryPipelineStatisticFlagBitsMaxEnum QueryPipelineStatisticFlagBits = 2147483647 ) QueryPipelineStatisticFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueryPipelineStatisticFlagBits.html</p>"},{"location":"api/rendering/vulkan/#querypipelinestatisticflags","title":"QueryPipelineStatisticFlags","text":"<p>uint32 <pre><code>type QueryPipelineStatisticFlags uint32\n</code></pre></p> <p>QueryPipelineStatisticFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueryPipelineStatisticFlags.html</p>"},{"location":"api/rendering/vulkan/#querypool","title":"QueryPool","text":"<p>C.VkQueryPool <pre><code>type QueryPool C.VkQueryPool\n</code></pre></p> <p>QueryPool as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueryPool.html</p>"},{"location":"api/rendering/vulkan/#querypoolcreateflags","title":"QueryPoolCreateFlags","text":"<p>uint32 <pre><code>type QueryPoolCreateFlags uint32\n</code></pre></p> <p>QueryPoolCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueryPoolCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#querypoolcreateinfo","title":"QueryPoolCreateInfo","text":"<p><code>struct</code></p> <pre><code>type QueryPoolCreateInfo struct {\n    SType              StructureType\n    PNext              unsafe.Pointer\n    Flags              QueryPoolCreateFlags\n    QueryType          QueryType\n    QueryCount         uint32\n    PipelineStatistics QueryPipelineStatisticFlags\n}\n</code></pre> <p>QueryPoolCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueryPoolCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#queryresultflagbits","title":"QueryResultFlagBits","text":"<p>int32 <pre><code>type QueryResultFlagBits int32\n</code></pre></p> <p>QueryResultFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueryResultFlagBits.html</p> <p>const ( QueryResult64Bit QueryResultFlagBits = 1 QueryResultWaitBit QueryResultFlagBits = 2 QueryResultWithAvailabilityBit QueryResultFlagBits = 4 QueryResultPartialBit QueryResultFlagBits = 8 QueryResultFlagBitsMaxEnum QueryResultFlagBits = 2147483647 ) QueryResultFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueryResultFlagBits.html</p>"},{"location":"api/rendering/vulkan/#queryresultflags","title":"QueryResultFlags","text":"<p>uint32 <pre><code>type QueryResultFlags uint32\n</code></pre></p> <p>QueryResultFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueryResultFlags.html</p>"},{"location":"api/rendering/vulkan/#querytype","title":"QueryType","text":"<p>int32 <pre><code>type QueryType int32\n</code></pre></p> <p>QueryType as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueryType.html</p> <p>const ( QueryTypeOcclusion QueryType = iota QueryTypePipelineStatistics QueryType = 1 QueryTypeTimestamp QueryType = 2 QueryTypeTransformFeedbackStream QueryType = 1000028004 QueryTypeCompactedSizeNvx QueryType = 1000165000 QueryTypeBeginRange QueryType = 0 QueryTypeEndRange QueryType = 2 QueryTypeRangeSize QueryType = 3 QueryTypeMaxEnum QueryType = 2147483647 ) QueryType enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueryType.html</p>"},{"location":"api/rendering/vulkan/#queue","title":"Queue","text":"<p>C.VkQueue <pre><code>type Queue C.VkQueue\n</code></pre></p> <p>Queue as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueue.html</p>"},{"location":"api/rendering/vulkan/#queuefamilycheckpointpropertiesnv","title":"QueueFamilyCheckpointPropertiesNV","text":"<p><code>struct</code></p> <pre><code>type QueueFamilyCheckpointPropertiesNV struct {\n    SType                        StructureType\n    PNext                        unsafe.Pointer\n    CheckpointExecutionStageMask PipelineStageFlags\n}\n</code></pre> <p>QueueFamilyCheckpointPropertiesNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueueFamilyCheckpointPropertiesNV.html</p>"},{"location":"api/rendering/vulkan/#queuefamilyproperties","title":"QueueFamilyProperties","text":"<p><code>struct</code></p> <pre><code>type QueueFamilyProperties struct {\n    QueueFlags                  QueueFlags\n    QueueCount                  uint32\n    TimestampValidBits          uint32\n    MinImageTransferGranularity Extent3D\n}\n</code></pre> <p>QueueFamilyProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueueFamilyProperties.html</p>"},{"location":"api/rendering/vulkan/#queuefamilyproperties2","title":"QueueFamilyProperties2","text":"<p><code>struct</code></p> <pre><code>type QueueFamilyProperties2 struct {\n    SType                 StructureType\n    PNext                 unsafe.Pointer\n    QueueFamilyProperties QueueFamilyProperties\n}\n</code></pre> <p>QueueFamilyProperties2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueueFamilyProperties2.html</p>"},{"location":"api/rendering/vulkan/#queueflagbits","title":"QueueFlagBits","text":"<p>int32 <pre><code>type QueueFlagBits int32\n</code></pre></p> <p>QueueFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueueFlagBits.html</p> <p>const ( QueueGraphicsBit QueueFlagBits = 1 QueueComputeBit QueueFlagBits = 2 QueueTransferBit QueueFlagBits = 4 QueueSparseBindingBit QueueFlagBits = 8 QueueProtectedBit QueueFlagBits = 16 QueueFlagBitsMaxEnum QueueFlagBits = 2147483647 ) QueueFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueueFlagBits.html</p>"},{"location":"api/rendering/vulkan/#queueflags","title":"QueueFlags","text":"<p>uint32 <pre><code>type QueueFlags uint32\n</code></pre></p> <p>QueueFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueueFlags.html</p>"},{"location":"api/rendering/vulkan/#queueglobalpriority","title":"QueueGlobalPriority","text":"<p>int32 <pre><code>type QueueGlobalPriority int32\n</code></pre></p> <p>QueueGlobalPriority as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueueGlobalPriorityEXT.html</p> <p>const ( QueueGlobalPriorityLow QueueGlobalPriority = 128 QueueGlobalPriorityMedium QueueGlobalPriority = 256 QueueGlobalPriorityHigh QueueGlobalPriority = 512 QueueGlobalPriorityRealtime QueueGlobalPriority = 1024 QueueGlobalPriorityBeginRange QueueGlobalPriority = 128 QueueGlobalPriorityEndRange QueueGlobalPriority = 1024 QueueGlobalPriorityRangeSize QueueGlobalPriority = 897 QueueGlobalPriorityMaxEnum QueueGlobalPriority = 2147483647 ) QueueGlobalPriority enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkQueueGlobalPriorityEXT.html</p>"},{"location":"api/rendering/vulkan/#rasterizationorderamd","title":"RasterizationOrderAMD","text":"<p>int32 <pre><code>type RasterizationOrderAMD int32\n</code></pre></p> <p>RasterizationOrderAMD as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkRasterizationOrderAMD</p> <p>const ( RasterizationOrderStrictAmd RasterizationOrderAMD = iota RasterizationOrderRelaxedAmd RasterizationOrderAMD = 1 RasterizationOrderBeginRangeAmd RasterizationOrderAMD = 0 RasterizationOrderEndRangeAmd RasterizationOrderAMD = 1 RasterizationOrderRangeSizeAmd RasterizationOrderAMD = 2 RasterizationOrderMaxEnumAmd RasterizationOrderAMD = 2147483647 ) RasterizationOrderAMD enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkRasterizationOrderAMD</p>"},{"location":"api/rendering/vulkan/#raytracingpipelinecreateinfonvx","title":"RaytracingPipelineCreateInfoNVX","text":"<p><code>struct</code></p> <pre><code>type RaytracingPipelineCreateInfoNVX struct {\n    SType              StructureType\n    PNext              unsafe.Pointer\n    Flags              PipelineCreateFlags\n    StageCount         uint32\n    PStages            *PipelineShaderStageCreateInfo\n    PGroupNumbers      *uint32\n    MaxRecursionDepth  uint32\n    Layout             PipelineLayout\n    BasePipelineHandle Pipeline\n    BasePipelineIndex  int32\n}\n</code></pre> <p>RaytracingPipelineCreateInfoNVX as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkRaytracingPipelineCreateInfoNVX</p>"},{"location":"api/rendering/vulkan/#rect2d","title":"Rect2D","text":"<p><code>struct</code></p> <pre><code>type Rect2D struct {\n    Offset Offset2D\n    Extent Extent2D\n}\n</code></pre> <p>Rect2D as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkRect2D.html</p>"},{"location":"api/rendering/vulkan/#rectlayer","title":"RectLayer","text":"<p><code>struct</code></p> <pre><code>type RectLayer struct {\n    Offset Offset2D\n    Extent Extent2D\n    Layer  uint32\n}\n</code></pre> <p>RectLayer as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkRectLayerKHR</p>"},{"location":"api/rendering/vulkan/#refreshcycledurationgoogle","title":"RefreshCycleDurationGOOGLE","text":"<p><code>struct</code></p> <pre><code>type RefreshCycleDurationGOOGLE struct {\n    RefreshDuration uint64\n}\n</code></pre> <p>RefreshCycleDurationGOOGLE as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkRefreshCycleDurationGOOGLE.html</p>"},{"location":"api/rendering/vulkan/#renderpass","title":"RenderPass","text":"<p>C.VkRenderPass <pre><code>type RenderPass C.VkRenderPass\n</code></pre></p> <p>RenderPass as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkRenderPass.html</p>"},{"location":"api/rendering/vulkan/#renderpassbegininfo","title":"RenderPassBeginInfo","text":"<p><code>struct</code></p> <pre><code>type RenderPassBeginInfo struct {\n    SType           StructureType\n    PNext           unsafe.Pointer\n    RenderPass      RenderPass\n    Framebuffer     Framebuffer\n    RenderArea      Rect2D\n    ClearValueCount uint32\n    PClearValues    *ClearValue\n}\n</code></pre> <p>RenderPassBeginInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkRenderPassBeginInfo.html</p>"},{"location":"api/rendering/vulkan/#renderpasscreateflags","title":"RenderPassCreateFlags","text":"<p>uint32 <pre><code>type RenderPassCreateFlags uint32\n</code></pre></p> <p>RenderPassCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkRenderPassCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#renderpasscreateinfo","title":"RenderPassCreateInfo","text":"<p><code>struct</code></p> <pre><code>type RenderPassCreateInfo struct {\n    SType           StructureType\n    PNext           unsafe.Pointer\n    Flags           RenderPassCreateFlags\n    AttachmentCount uint32\n    PAttachments    *AttachmentDescription\n    SubpassCount    uint32\n    PSubpasses      *SubpassDescription\n    DependencyCount uint32\n    PDependencies   *SubpassDependency\n}\n</code></pre> <p>RenderPassCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkRenderPassCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#renderpasscreateinfo2","title":"RenderPassCreateInfo2","text":"<p><code>struct</code></p> <pre><code>type RenderPassCreateInfo2 struct {\n    SType                   StructureType\n    PNext                   unsafe.Pointer\n    Flags                   RenderPassCreateFlags\n    AttachmentCount         uint32\n    PAttachments            *AttachmentDescription2\n    SubpassCount            uint32\n    PSubpasses              *SubpassDescription2\n    DependencyCount         uint32\n    PDependencies           *SubpassDependency2\n    CorrelatedViewMaskCount uint32\n    PCorrelatedViewMasks    *uint32\n}\n</code></pre> <p>RenderPassCreateInfo2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkRenderPassCreateInfo2KHR</p>"},{"location":"api/rendering/vulkan/#renderpassinputattachmentaspectcreateinfo","title":"RenderPassInputAttachmentAspectCreateInfo","text":"<p><code>struct</code></p> <pre><code>type RenderPassInputAttachmentAspectCreateInfo struct {\n    SType                StructureType\n    PNext                unsafe.Pointer\n    AspectReferenceCount uint32\n    PAspectReferences    *InputAttachmentAspectReference\n}\n</code></pre> <p>RenderPassInputAttachmentAspectCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkRenderPassInputAttachmentAspectCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#renderpassmultiviewcreateinfo","title":"RenderPassMultiviewCreateInfo","text":"<p><code>struct</code></p> <pre><code>type RenderPassMultiviewCreateInfo struct {\n    SType                StructureType\n    PNext                unsafe.Pointer\n    SubpassCount         uint32\n    PViewMasks           *uint32\n    DependencyCount      uint32\n    PViewOffsets         *int32\n    CorrelationMaskCount uint32\n    PCorrelationMasks    *uint32\n}\n</code></pre> <p>RenderPassMultiviewCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkRenderPassMultiviewCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#renderpasssamplelocationsbegininfo","title":"RenderPassSampleLocationsBeginInfo","text":"<p><code>struct</code></p> <pre><code>type RenderPassSampleLocationsBeginInfo struct {\n    SType                                 StructureType\n    PNext                                 unsafe.Pointer\n    AttachmentInitialSampleLocationsCount uint32\n    PAttachmentInitialSampleLocations     *AttachmentSampleLocations\n    PostSubpassSampleLocationsCount       uint32\n    PPostSubpassSampleLocations           *SubpassSampleLocations\n}\n</code></pre> <p>RenderPassSampleLocationsBeginInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkRenderPassSampleLocationsBeginInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#result","title":"Result","text":"<p>int32 <pre><code>type Result int32\n</code></pre></p> <p>Result as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkResult.html</p> <p>const ( Success Result = iota NotReady Result = 1 Timeout Result = 2 EventSet Result = 3 EventReset Result = 4 Incomplete Result = 5 ErrorOutOfHostMemory Result = -1 ErrorOutOfDeviceMemory Result = -2 ErrorInitializationFailed Result = -3 ErrorDeviceLost Result = -4 ErrorMemoryMapFailed Result = -5 ErrorLayerNotPresent Result = -6 ErrorExtensionNotPresent Result = -7 ErrorFeatureNotPresent Result = -8 ErrorIncompatibleDriver Result = -9 ErrorTooManyObjects Result = -10 ErrorFormatNotSupported Result = -11 ErrorFragmentedPool Result = -12 ErrorOutOfPoolMemory Result = -1000069000 ErrorInvalidExternalHandle Result = -1000072003 ErrorSurfaceLost Result = -1000000000 ErrorNativeWindowInUse Result = -1000000001 Suboptimal Result = 1000001003 ErrorOutOfDate Result = -1000001004 ErrorIncompatibleDisplay Result = -1000003001 ErrorValidationFailed Result = -1000011001 ErrorInvalidShaderNv Result = -1000012000 ErrorInvalidDrmFormatModifierPlaneLayout Result = -1000158000 ErrorFragmentation Result = -1000161000 ErrorNotPermitted Result = -1000174001 ResultBeginRange Result = -12 ResultEndRange Result = 5 ResultRangeSize Result = 18 ResultMaxEnum Result = 2147483647 ) Result enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkResult.html</p>"},{"location":"api/rendering/vulkan/#acquirenextimage","title":"AcquireNextImage","text":"<pre><code>func AcquireNextImage(device Device, swapchain Swapchain, timeout uint64, semaphore Semaphore, fence Fence, pImageIndex *uint32) Result\n</code></pre> <p>AcquireNextImage function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkAcquireNextImageKHR</p>"},{"location":"api/rendering/vulkan/#allocatecommandbuffers","title":"AllocateCommandBuffers","text":"<pre><code>func AllocateCommandBuffers(device Device, pAllocateInfo *CommandBufferAllocateInfo, pCommandBuffers *CommandBuffer) Result\n</code></pre> <p>AllocateCommandBuffers function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkAllocateCommandBuffers.html</p>"},{"location":"api/rendering/vulkan/#allocatedescriptorsets","title":"AllocateDescriptorSets","text":"<pre><code>func AllocateDescriptorSets(device Device, pAllocateInfo *DescriptorSetAllocateInfo, pDescriptorSets *DescriptorSet) Result\n</code></pre> <p>AllocateDescriptorSets function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkAllocateDescriptorSets.html</p>"},{"location":"api/rendering/vulkan/#allocatememory","title":"AllocateMemory","text":"<pre><code>func AllocateMemory(device Device, pAllocateInfo *MemoryAllocateInfo, pAllocator *AllocationCallbacks, pMemory *DeviceMemory) Result\n</code></pre> <p>AllocateMemory function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkAllocateMemory.html</p>"},{"location":"api/rendering/vulkan/#begincommandbuffer","title":"BeginCommandBuffer","text":"<pre><code>func BeginCommandBuffer(commandBuffer CommandBuffer, pBeginInfo *CommandBufferBeginInfo) Result\n</code></pre> <p>BeginCommandBuffer function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkBeginCommandBuffer.html</p>"},{"location":"api/rendering/vulkan/#bindbuffermemory","title":"BindBufferMemory","text":"<pre><code>func BindBufferMemory(device Device, buffer Buffer, memory DeviceMemory, memoryOffset DeviceSize) Result\n</code></pre> <p>BindBufferMemory function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkBindBufferMemory.html</p>"},{"location":"api/rendering/vulkan/#bindimagememory","title":"BindImageMemory","text":"<pre><code>func BindImageMemory(device Device, image Image, memory DeviceMemory, memoryOffset DeviceSize) Result\n</code></pre> <p>BindImageMemory function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkBindImageMemory.html</p>"},{"location":"api/rendering/vulkan/#createbuffer","title":"CreateBuffer","text":"<pre><code>func CreateBuffer(device Device, pCreateInfo *BufferCreateInfo, pAllocator *AllocationCallbacks, pBuffer *Buffer) Result\n</code></pre> <p>CreateBuffer function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateBuffer.html</p>"},{"location":"api/rendering/vulkan/#createbufferview","title":"CreateBufferView","text":"<pre><code>func CreateBufferView(device Device, pCreateInfo *BufferViewCreateInfo, pAllocator *AllocationCallbacks, pView *BufferView) Result\n</code></pre> <p>CreateBufferView function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateBufferView.html</p>"},{"location":"api/rendering/vulkan/#createcommandpool","title":"CreateCommandPool","text":"<pre><code>func CreateCommandPool(device Device, pCreateInfo *CommandPoolCreateInfo, pAllocator *AllocationCallbacks, pCommandPool *CommandPool) Result\n</code></pre> <p>CreateCommandPool function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateCommandPool.html</p>"},{"location":"api/rendering/vulkan/#createcomputepipelines","title":"CreateComputePipelines","text":"<pre><code>func CreateComputePipelines(device Device, pipelineCache PipelineCache, createInfoCount uint32, pCreateInfos *ComputePipelineCreateInfo, pAllocator *AllocationCallbacks, pPipelines *Pipeline) Result\n</code></pre> <p>CreateComputePipelines function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateComputePipelines.html</p>"},{"location":"api/rendering/vulkan/#createdebugreportcallback","title":"CreateDebugReportCallback","text":"<pre><code>func CreateDebugReportCallback(instance Instance, pCreateInfo *DebugReportCallbackCreateInfo, pAllocator *AllocationCallbacks, pCallback *DebugReportCallback) Result\n</code></pre> <p>CreateDebugReportCallback function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateDebugReportCallbackEXT.html</p>"},{"location":"api/rendering/vulkan/#createdescriptorpool","title":"CreateDescriptorPool","text":"<pre><code>func CreateDescriptorPool(device Device, pCreateInfo *DescriptorPoolCreateInfo, pAllocator *AllocationCallbacks, pDescriptorPool *DescriptorPool) Result\n</code></pre> <p>CreateDescriptorPool function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateDescriptorPool.html</p>"},{"location":"api/rendering/vulkan/#createdescriptorsetlayout","title":"CreateDescriptorSetLayout","text":"<pre><code>func CreateDescriptorSetLayout(device Device, pCreateInfo *DescriptorSetLayoutCreateInfo, pAllocator *AllocationCallbacks, pSetLayout *DescriptorSetLayout) Result\n</code></pre> <p>CreateDescriptorSetLayout function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateDescriptorSetLayout.html</p>"},{"location":"api/rendering/vulkan/#createdevice","title":"CreateDevice","text":"<pre><code>func CreateDevice(physicalDevice PhysicalDevice, pCreateInfo *DeviceCreateInfo, pAllocator *AllocationCallbacks, pDevice *Device) Result\n</code></pre> <p>CreateDevice function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateDevice.html</p>"},{"location":"api/rendering/vulkan/#createdisplaymode","title":"CreateDisplayMode","text":"<pre><code>func CreateDisplayMode(physicalDevice PhysicalDevice, display Display, pCreateInfo *DisplayModeCreateInfo, pAllocator *AllocationCallbacks, pMode *DisplayMode) Result\n</code></pre> <p>CreateDisplayMode function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkCreateDisplayModeKHR</p>"},{"location":"api/rendering/vulkan/#createdisplayplanesurface","title":"CreateDisplayPlaneSurface","text":"<pre><code>func CreateDisplayPlaneSurface(instance Instance, pCreateInfo *DisplaySurfaceCreateInfo, pAllocator *AllocationCallbacks, pSurface *Surface) Result\n</code></pre> <p>CreateDisplayPlaneSurface function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkCreateDisplayPlaneSurfaceKHR</p>"},{"location":"api/rendering/vulkan/#createevent","title":"CreateEvent","text":"<pre><code>func CreateEvent(device Device, pCreateInfo *EventCreateInfo, pAllocator *AllocationCallbacks, pEvent *Event) Result\n</code></pre> <p>CreateEvent function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateEvent.html</p>"},{"location":"api/rendering/vulkan/#createfence","title":"CreateFence","text":"<pre><code>func CreateFence(device Device, pCreateInfo *FenceCreateInfo, pAllocator *AllocationCallbacks, pFence *Fence) Result\n</code></pre> <p>CreateFence function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateFence.html</p>"},{"location":"api/rendering/vulkan/#createframebuffer","title":"CreateFramebuffer","text":"<pre><code>func CreateFramebuffer(device Device, pCreateInfo *FramebufferCreateInfo, pAllocator *AllocationCallbacks, pFramebuffer *Framebuffer) Result\n</code></pre> <p>CreateFramebuffer function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateFramebuffer.html</p>"},{"location":"api/rendering/vulkan/#creategraphicspipelines","title":"CreateGraphicsPipelines","text":"<pre><code>func CreateGraphicsPipelines(device Device, pipelineCache PipelineCache, createInfoCount uint32, pCreateInfos *GraphicsPipelineCreateInfo, pAllocator *AllocationCallbacks, pPipelines *Pipeline) Result\n</code></pre> <p>CreateGraphicsPipelines function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateGraphicsPipelines.html</p>"},{"location":"api/rendering/vulkan/#createimage","title":"CreateImage","text":"<pre><code>func CreateImage(device Device, pCreateInfo *ImageCreateInfo, pAllocator *AllocationCallbacks, pImage *Image) Result\n</code></pre> <p>CreateImage function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateImage.html</p>"},{"location":"api/rendering/vulkan/#createimageview","title":"CreateImageView","text":"<pre><code>func CreateImageView(device Device, pCreateInfo *ImageViewCreateInfo, pAllocator *AllocationCallbacks, pView *ImageView) Result\n</code></pre> <p>CreateImageView function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateImageView.html</p>"},{"location":"api/rendering/vulkan/#createinstance","title":"CreateInstance","text":"<pre><code>func CreateInstance(pCreateInfo *InstanceCreateInfo, pAllocator *AllocationCallbacks, pInstance *Instance) Result\n</code></pre> <p>CreateInstance function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateInstance.html</p>"},{"location":"api/rendering/vulkan/#createpipelinecache","title":"CreatePipelineCache","text":"<pre><code>func CreatePipelineCache(device Device, pCreateInfo *PipelineCacheCreateInfo, pAllocator *AllocationCallbacks, pPipelineCache *PipelineCache) Result\n</code></pre> <p>CreatePipelineCache function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreatePipelineCache.html</p>"},{"location":"api/rendering/vulkan/#createpipelinelayout","title":"CreatePipelineLayout","text":"<pre><code>func CreatePipelineLayout(device Device, pCreateInfo *PipelineLayoutCreateInfo, pAllocator *AllocationCallbacks, pPipelineLayout *PipelineLayout) Result\n</code></pre> <p>CreatePipelineLayout function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreatePipelineLayout.html</p>"},{"location":"api/rendering/vulkan/#createquerypool","title":"CreateQueryPool","text":"<pre><code>func CreateQueryPool(device Device, pCreateInfo *QueryPoolCreateInfo, pAllocator *AllocationCallbacks, pQueryPool *QueryPool) Result\n</code></pre> <p>CreateQueryPool function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateQueryPool.html</p>"},{"location":"api/rendering/vulkan/#createrenderpass","title":"CreateRenderPass","text":"<pre><code>func CreateRenderPass(device Device, pCreateInfo *RenderPassCreateInfo, pAllocator *AllocationCallbacks, pRenderPass *RenderPass) Result\n</code></pre> <p>CreateRenderPass function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateRenderPass.html</p>"},{"location":"api/rendering/vulkan/#createsampler","title":"CreateSampler","text":"<pre><code>func CreateSampler(device Device, pCreateInfo *SamplerCreateInfo, pAllocator *AllocationCallbacks, pSampler *Sampler) Result\n</code></pre> <p>CreateSampler function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateSampler.html</p>"},{"location":"api/rendering/vulkan/#createsemaphore","title":"CreateSemaphore","text":"<pre><code>func CreateSemaphore(device Device, pCreateInfo *SemaphoreCreateInfo, pAllocator *AllocationCallbacks, pSemaphore *Semaphore) Result\n</code></pre> <p>CreateSemaphore function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateSemaphore.html</p>"},{"location":"api/rendering/vulkan/#createshadermodule","title":"CreateShaderModule","text":"<pre><code>func CreateShaderModule(device Device, pCreateInfo *ShaderModuleCreateInfo, pAllocator *AllocationCallbacks, pShaderModule *ShaderModule) Result\n</code></pre> <p>CreateShaderModule function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateShaderModule.html</p>"},{"location":"api/rendering/vulkan/#createsharedswapchains","title":"CreateSharedSwapchains","text":"<pre><code>func CreateSharedSwapchains(device Device, swapchainCount uint32, pCreateInfos *SwapchainCreateInfo, pAllocator *AllocationCallbacks, pSwapchains *Swapchain) Result\n</code></pre> <p>CreateSharedSwapchains function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkCreateSharedSwapchainsKHR</p>"},{"location":"api/rendering/vulkan/#createswapchain","title":"CreateSwapchain","text":"<pre><code>func CreateSwapchain(device Device, pCreateInfo *SwapchainCreateInfo, pAllocator *AllocationCallbacks, pSwapchain *Swapchain) Result\n</code></pre> <p>CreateSwapchain function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkCreateSwapchainKHR</p>"},{"location":"api/rendering/vulkan/#devicewaitidle","title":"DeviceWaitIdle","text":"<pre><code>func DeviceWaitIdle(device Device) Result\n</code></pre> <p>DeviceWaitIdle function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkDeviceWaitIdle.html</p>"},{"location":"api/rendering/vulkan/#endcommandbuffer","title":"EndCommandBuffer","text":"<pre><code>func EndCommandBuffer(commandBuffer CommandBuffer) Result\n</code></pre> <p>EndCommandBuffer function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkEndCommandBuffer.html</p>"},{"location":"api/rendering/vulkan/#enumeratedeviceextensionproperties","title":"EnumerateDeviceExtensionProperties","text":"<pre><code>func EnumerateDeviceExtensionProperties(physicalDevice PhysicalDevice, pLayerName *string, pPropertyCount *uint32, pProperties *ExtensionProperties) Result\n</code></pre> <p>EnumerateDeviceExtensionProperties function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkEnumerateDeviceExtensionProperties.html</p>"},{"location":"api/rendering/vulkan/#enumeratedevicelayerproperties","title":"EnumerateDeviceLayerProperties","text":"<pre><code>func EnumerateDeviceLayerProperties(physicalDevice PhysicalDevice, pPropertyCount *uint32, pProperties *LayerProperties) Result\n</code></pre> <p>EnumerateDeviceLayerProperties function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkEnumerateDeviceLayerProperties.html</p>"},{"location":"api/rendering/vulkan/#enumerateinstanceextensionproperties","title":"EnumerateInstanceExtensionProperties","text":"<pre><code>func EnumerateInstanceExtensionProperties(pLayerName *string, pPropertyCount *uint32, pProperties *ExtensionProperties) Result\n</code></pre> <p>EnumerateInstanceExtensionProperties function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkEnumerateInstanceExtensionProperties.html</p>"},{"location":"api/rendering/vulkan/#enumerateinstancelayerproperties","title":"EnumerateInstanceLayerProperties","text":"<pre><code>func EnumerateInstanceLayerProperties(pPropertyCount *uint32, pProperties *LayerProperties) Result\n</code></pre> <p>EnumerateInstanceLayerProperties function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkEnumerateInstanceLayerProperties.html</p>"},{"location":"api/rendering/vulkan/#enumeratephysicaldevices","title":"EnumeratePhysicalDevices","text":"<pre><code>func EnumeratePhysicalDevices(instance Instance, pPhysicalDeviceCount *uint32, pPhysicalDevices *PhysicalDevice) Result\n</code></pre> <p>EnumeratePhysicalDevices function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkEnumeratePhysicalDevices.html</p>"},{"location":"api/rendering/vulkan/#flushmappedmemoryranges","title":"FlushMappedMemoryRanges","text":"<pre><code>func FlushMappedMemoryRanges(device Device, memoryRangeCount uint32, pMemoryRanges *MappedMemoryRange) Result\n</code></pre> <p>FlushMappedMemoryRanges function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkFlushMappedMemoryRanges.html</p>"},{"location":"api/rendering/vulkan/#freedescriptorsets","title":"FreeDescriptorSets","text":"<pre><code>func FreeDescriptorSets(device Device, descriptorPool DescriptorPool, descriptorSetCount uint32, pDescriptorSets *DescriptorSet) Result\n</code></pre> <p>FreeDescriptorSets function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkFreeDescriptorSets.html</p>"},{"location":"api/rendering/vulkan/#getdisplaymodeproperties","title":"GetDisplayModeProperties","text":"<pre><code>func GetDisplayModeProperties(physicalDevice PhysicalDevice, display Display, pPropertyCount *uint32, pProperties *DisplayModeProperties) Result\n</code></pre> <p>GetDisplayModeProperties function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkGetDisplayModePropertiesKHR</p>"},{"location":"api/rendering/vulkan/#getdisplayplanecapabilities","title":"GetDisplayPlaneCapabilities","text":"<pre><code>func GetDisplayPlaneCapabilities(physicalDevice PhysicalDevice, mode DisplayMode, planeIndex uint32, pCapabilities *DisplayPlaneCapabilities) Result\n</code></pre> <p>GetDisplayPlaneCapabilities function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkGetDisplayPlaneCapabilitiesKHR</p>"},{"location":"api/rendering/vulkan/#getdisplayplanesupporteddisplays","title":"GetDisplayPlaneSupportedDisplays","text":"<pre><code>func GetDisplayPlaneSupportedDisplays(physicalDevice PhysicalDevice, planeIndex uint32, pDisplayCount *uint32, pDisplays *Display) Result\n</code></pre> <p>GetDisplayPlaneSupportedDisplays function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkGetDisplayPlaneSupportedDisplaysKHR</p>"},{"location":"api/rendering/vulkan/#geteventstatus","title":"GetEventStatus","text":"<pre><code>func GetEventStatus(device Device, event Event) Result\n</code></pre> <p>GetEventStatus function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetEventStatus.html</p>"},{"location":"api/rendering/vulkan/#getfencestatus","title":"GetFenceStatus","text":"<pre><code>func GetFenceStatus(device Device, fence Fence) Result\n</code></pre> <p>GetFenceStatus function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetFenceStatus.html</p>"},{"location":"api/rendering/vulkan/#getpastpresentationtiminggoogle","title":"GetPastPresentationTimingGOOGLE","text":"<pre><code>func GetPastPresentationTimingGOOGLE(device Device, swapchain Swapchain, pPresentationTimingCount *uint32, pPresentationTimings *PastPresentationTimingGOOGLE) Result\n</code></pre> <p>GetPastPresentationTimingGOOGLE function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetPastPresentationTimingGOOGLE.html</p>"},{"location":"api/rendering/vulkan/#getphysicaldevicedisplayplaneproperties","title":"GetPhysicalDeviceDisplayPlaneProperties","text":"<pre><code>func GetPhysicalDeviceDisplayPlaneProperties(physicalDevice PhysicalDevice, pPropertyCount *uint32, pProperties *DisplayPlaneProperties) Result\n</code></pre> <p>GetPhysicalDeviceDisplayPlaneProperties function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkGetPhysicalDeviceDisplayPlanePropertiesKHR</p>"},{"location":"api/rendering/vulkan/#getphysicaldevicedisplayproperties","title":"GetPhysicalDeviceDisplayProperties","text":"<pre><code>func GetPhysicalDeviceDisplayProperties(physicalDevice PhysicalDevice, pPropertyCount *uint32, pProperties *DisplayProperties) Result\n</code></pre> <p>GetPhysicalDeviceDisplayProperties function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkGetPhysicalDeviceDisplayPropertiesKHR</p>"},{"location":"api/rendering/vulkan/#getphysicaldeviceimageformatproperties","title":"GetPhysicalDeviceImageFormatProperties","text":"<pre><code>func GetPhysicalDeviceImageFormatProperties(physicalDevice PhysicalDevice, format Format, kind ImageType, tiling ImageTiling, usage ImageUsageFlags, flags ImageCreateFlags, pImageFormatProperties *ImageFormatProperties) Result\n</code></pre> <p>GetPhysicalDeviceImageFormatProperties function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetPhysicalDeviceImageFormatProperties.html</p>"},{"location":"api/rendering/vulkan/#getphysicaldevicesurfacecapabilities","title":"GetPhysicalDeviceSurfaceCapabilities","text":"<pre><code>func GetPhysicalDeviceSurfaceCapabilities(physicalDevice PhysicalDevice, surface Surface, pSurfaceCapabilities *SurfaceCapabilities) Result\n</code></pre> <p>GetPhysicalDeviceSurfaceCapabilities function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkGetPhysicalDeviceSurfaceCapabilitiesKHR</p>"},{"location":"api/rendering/vulkan/#getphysicaldevicesurfaceformats","title":"GetPhysicalDeviceSurfaceFormats","text":"<pre><code>func GetPhysicalDeviceSurfaceFormats(physicalDevice PhysicalDevice, surface Surface, pSurfaceFormatCount *uint32, pSurfaceFormats *SurfaceFormat) Result\n</code></pre> <p>GetPhysicalDeviceSurfaceFormats function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkGetPhysicalDeviceSurfaceFormatsKHR</p>"},{"location":"api/rendering/vulkan/#getphysicaldevicesurfacepresentmodes","title":"GetPhysicalDeviceSurfacePresentModes","text":"<pre><code>func GetPhysicalDeviceSurfacePresentModes(physicalDevice PhysicalDevice, surface Surface, pPresentModeCount *uint32, pPresentModes *PresentMode) Result\n</code></pre> <p>GetPhysicalDeviceSurfacePresentModes function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkGetPhysicalDeviceSurfacePresentModesKHR</p>"},{"location":"api/rendering/vulkan/#getphysicaldevicesurfacesupport","title":"GetPhysicalDeviceSurfaceSupport","text":"<pre><code>func GetPhysicalDeviceSurfaceSupport(physicalDevice PhysicalDevice, queueFamilyIndex uint32, surface Surface, pSupported *Bool32) Result\n</code></pre> <p>GetPhysicalDeviceSurfaceSupport function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkGetPhysicalDeviceSurfaceSupportKHR</p>"},{"location":"api/rendering/vulkan/#getpipelinecachedata","title":"GetPipelineCacheData","text":"<pre><code>func GetPipelineCacheData(device Device, pipelineCache PipelineCache, pDataSize *uint, pData unsafe.Pointer) Result\n</code></pre> <p>GetPipelineCacheData function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetPipelineCacheData.html</p>"},{"location":"api/rendering/vulkan/#getquerypoolresults","title":"GetQueryPoolResults","text":"<pre><code>func GetQueryPoolResults(device Device, queryPool QueryPool, firstQuery uint32, queryCount uint32, dataSize uint, pData unsafe.Pointer, stride DeviceSize, flags QueryResultFlags) Result\n</code></pre> <p>GetQueryPoolResults function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetQueryPoolResults.html</p>"},{"location":"api/rendering/vulkan/#getrefreshcycledurationgoogle","title":"GetRefreshCycleDurationGOOGLE","text":"<pre><code>func GetRefreshCycleDurationGOOGLE(device Device, swapchain Swapchain, pDisplayTimingProperties *RefreshCycleDurationGOOGLE) Result\n</code></pre> <p>GetRefreshCycleDurationGOOGLE function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetRefreshCycleDurationGOOGLE.html</p>"},{"location":"api/rendering/vulkan/#getswapchainimages","title":"GetSwapchainImages","text":"<pre><code>func GetSwapchainImages(device Device, swapchain Swapchain, pSwapchainImageCount *uint32, pSwapchainImages *Image) Result\n</code></pre> <p>GetSwapchainImages function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkGetSwapchainImagesKHR</p>"},{"location":"api/rendering/vulkan/#invalidatemappedmemoryranges","title":"InvalidateMappedMemoryRanges","text":"<pre><code>func InvalidateMappedMemoryRanges(device Device, memoryRangeCount uint32, pMemoryRanges *MappedMemoryRange) Result\n</code></pre> <p>InvalidateMappedMemoryRanges function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkInvalidateMappedMemoryRanges.html</p>"},{"location":"api/rendering/vulkan/#mapmemory","title":"MapMemory","text":"<pre><code>func MapMemory(device Device, memory DeviceMemory, offset DeviceSize, size DeviceSize, flags MemoryMapFlags, ppData *unsafe.Pointer) Result\n</code></pre> <p>MapMemory function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkMapMemory.html</p>"},{"location":"api/rendering/vulkan/#mergepipelinecaches","title":"MergePipelineCaches","text":"<pre><code>func MergePipelineCaches(device Device, dstCache PipelineCache, srcCacheCount uint32, pSrcCaches *PipelineCache) Result\n</code></pre> <p>MergePipelineCaches function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkMergePipelineCaches.html</p>"},{"location":"api/rendering/vulkan/#queuebindsparse","title":"QueueBindSparse","text":"<pre><code>func QueueBindSparse(queue Queue, bindInfoCount uint32, pBindInfo *BindSparseInfo, fence Fence) Result\n</code></pre> <p>QueueBindSparse function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkQueueBindSparse.html</p>"},{"location":"api/rendering/vulkan/#queuepresent","title":"QueuePresent","text":"<pre><code>func QueuePresent(queue Queue, pPresentInfo *PresentInfo) Result\n</code></pre> <p>QueuePresent function as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkQueuePresentKHR</p>"},{"location":"api/rendering/vulkan/#queuesubmit","title":"QueueSubmit","text":"<pre><code>func QueueSubmit(queue Queue, submitCount uint32, pSubmits *SubmitInfo, fence Fence) Result\n</code></pre> <p>QueueSubmit function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkQueueSubmit.html</p>"},{"location":"api/rendering/vulkan/#queuewaitidle","title":"QueueWaitIdle","text":"<pre><code>func QueueWaitIdle(queue Queue) Result\n</code></pre> <p>QueueWaitIdle function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkQueueWaitIdle.html</p>"},{"location":"api/rendering/vulkan/#resetcommandbuffer","title":"ResetCommandBuffer","text":"<pre><code>func ResetCommandBuffer(commandBuffer CommandBuffer, flags CommandBufferResetFlags) Result\n</code></pre> <p>ResetCommandBuffer function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkResetCommandBuffer.html</p>"},{"location":"api/rendering/vulkan/#resetcommandpool","title":"ResetCommandPool","text":"<pre><code>func ResetCommandPool(device Device, commandPool CommandPool, flags CommandPoolResetFlags) Result\n</code></pre> <p>ResetCommandPool function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkResetCommandPool.html</p>"},{"location":"api/rendering/vulkan/#resetdescriptorpool","title":"ResetDescriptorPool","text":"<pre><code>func ResetDescriptorPool(device Device, descriptorPool DescriptorPool, flags DescriptorPoolResetFlags) Result\n</code></pre> <p>ResetDescriptorPool function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkResetDescriptorPool.html</p>"},{"location":"api/rendering/vulkan/#resetevent","title":"ResetEvent","text":"<pre><code>func ResetEvent(device Device, event Event) Result\n</code></pre> <p>ResetEvent function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkResetEvent.html</p>"},{"location":"api/rendering/vulkan/#resetfences","title":"ResetFences","text":"<pre><code>func ResetFences(device Device, fenceCount uint32, pFences *Fence) Result\n</code></pre> <p>ResetFences function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkResetFences.html</p>"},{"location":"api/rendering/vulkan/#setevent","title":"SetEvent","text":"<pre><code>func SetEvent(device Device, event Event) Result\n</code></pre> <p>SetEvent function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkSetEvent.html</p>"},{"location":"api/rendering/vulkan/#waitforfences","title":"WaitForFences","text":"<pre><code>func WaitForFences(device Device, fenceCount uint32, pFences *Fence, waitAll Bool32, timeout uint64) Result\n</code></pre> <p>WaitForFences function as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkWaitForFences.html</p>"},{"location":"api/rendering/vulkan/#xlibsurfacecreateinfokhrhelper","title":"XlibSurfaceCreateInfoKHRHelper","text":"<pre><code>func XlibSurfaceCreateInfoKHRHelper(window, display unsafe.Pointer, instance Instance, surface *Surface) Result\n</code></pre>"},{"location":"api/rendering/vulkan/#samplecountflagbits","title":"SampleCountFlagBits","text":"<p>int32 <pre><code>type SampleCountFlagBits int32\n</code></pre></p> <p>SampleCountFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSampleCountFlagBits.html</p> <p>const ( SampleCount1Bit SampleCountFlagBits = 1 SampleCount2Bit SampleCountFlagBits = 2 SampleCount4Bit SampleCountFlagBits = 4 SampleCount8Bit SampleCountFlagBits = 8 SampleCount16Bit SampleCountFlagBits = 16 SampleCount32Bit SampleCountFlagBits = 32 SampleCount64Bit SampleCountFlagBits = 64 SampleCountFlagBitsMaxEnum SampleCountFlagBits = 2147483647 ) SampleCountFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSampleCountFlagBits.html</p>"},{"location":"api/rendering/vulkan/#samplecountflags","title":"SampleCountFlags","text":"<p>uint32 <pre><code>type SampleCountFlags uint32\n</code></pre></p> <p>SampleCountFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSampleCountFlags.html</p>"},{"location":"api/rendering/vulkan/#samplelocation","title":"SampleLocation","text":"<p><code>struct</code></p> <pre><code>type SampleLocation struct {\n    X float32\n    Y float32\n}\n</code></pre> <p>SampleLocation as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSampleLocationEXT.html</p>"},{"location":"api/rendering/vulkan/#samplelocationsinfo","title":"SampleLocationsInfo","text":"<p><code>struct</code></p> <pre><code>type SampleLocationsInfo struct {\n    SType                   StructureType\n    PNext                   unsafe.Pointer\n    SampleLocationsPerPixel SampleCountFlagBits\n    SampleLocationGridSize  Extent2D\n    SampleLocationsCount    uint32\n    PSampleLocations        *SampleLocation\n}\n</code></pre> <p>SampleLocationsInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSampleLocationsInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#samplemask","title":"SampleMask","text":"<p>uint32 <pre><code>type SampleMask uint32\n</code></pre></p> <p>SampleMask type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSampleMask.html</p>"},{"location":"api/rendering/vulkan/#sampler","title":"Sampler","text":"<p>C.VkSampler <pre><code>type Sampler C.VkSampler\n</code></pre></p> <p>Sampler as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSampler.html</p>"},{"location":"api/rendering/vulkan/#sampleraddressmode","title":"SamplerAddressMode","text":"<p>int32 <pre><code>type SamplerAddressMode int32\n</code></pre></p> <p>SamplerAddressMode as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSamplerAddressMode.html</p> <p>const ( SamplerAddressModeRepeat SamplerAddressMode = iota SamplerAddressModeMirroredRepeat SamplerAddressMode = 1 SamplerAddressModeClampToEdge SamplerAddressMode = 2 SamplerAddressModeClampToBorder SamplerAddressMode = 3 SamplerAddressModeMirrorClampToEdge SamplerAddressMode = 4 SamplerAddressModeBeginRange SamplerAddressMode = 0 SamplerAddressModeEndRange SamplerAddressMode = 3 SamplerAddressModeRangeSize SamplerAddressMode = 4 SamplerAddressModeMaxEnum SamplerAddressMode = 2147483647 ) SamplerAddressMode enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSamplerAddressMode.html</p>"},{"location":"api/rendering/vulkan/#samplercreateflags","title":"SamplerCreateFlags","text":"<p>uint32 <pre><code>type SamplerCreateFlags uint32\n</code></pre></p> <p>SamplerCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSamplerCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#samplercreateinfo","title":"SamplerCreateInfo","text":"<p><code>struct</code></p> <pre><code>type SamplerCreateInfo struct {\n    SType                   StructureType\n    PNext                   unsafe.Pointer\n    Flags                   SamplerCreateFlags\n    MagFilter               Filter\n    MinFilter               Filter\n    MipmapMode              SamplerMipmapMode\n    AddressModeU            SamplerAddressMode\n    AddressModeV            SamplerAddressMode\n    AddressModeW            SamplerAddressMode\n    MipLodBias              float32\n    AnisotropyEnable        Bool32\n    MaxAnisotropy           float32\n    CompareEnable           Bool32\n    CompareOp               CompareOp\n    MinLod                  float32\n    MaxLod                  float32\n    BorderColor             BorderColor\n    UnnormalizedCoordinates Bool32\n}\n</code></pre> <p>SamplerCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSamplerCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#samplermipmapmode","title":"SamplerMipmapMode","text":"<p>int32 <pre><code>type SamplerMipmapMode int32\n</code></pre></p> <p>SamplerMipmapMode as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSamplerMipmapMode.html</p> <p>const ( SamplerMipmapModeNearest SamplerMipmapMode = iota SamplerMipmapModeLinear SamplerMipmapMode = 1 SamplerMipmapModeBeginRange SamplerMipmapMode = 0 SamplerMipmapModeEndRange SamplerMipmapMode = 1 SamplerMipmapModeRangeSize SamplerMipmapMode = 2 SamplerMipmapModeMaxEnum SamplerMipmapMode = 2147483647 ) SamplerMipmapMode enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSamplerMipmapMode.html</p>"},{"location":"api/rendering/vulkan/#samplerreductionmode","title":"SamplerReductionMode","text":"<p>int32 <pre><code>type SamplerReductionMode int32\n</code></pre></p> <p>SamplerReductionMode as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSamplerReductionModeEXT.html</p> <p>const ( SamplerReductionModeWeightedAverage SamplerReductionMode = iota SamplerReductionModeMin SamplerReductionMode = 1 SamplerReductionModeMax SamplerReductionMode = 2 SamplerReductionModeBeginRange SamplerReductionMode = 0 SamplerReductionModeEndRange SamplerReductionMode = 2 SamplerReductionModeRangeSize SamplerReductionMode = 3 SamplerReductionModeMaxEnum SamplerReductionMode = 2147483647 ) SamplerReductionMode enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSamplerReductionModeEXT.html</p>"},{"location":"api/rendering/vulkan/#samplerreductionmodecreateinfo","title":"SamplerReductionModeCreateInfo","text":"<p><code>struct</code></p> <pre><code>type SamplerReductionModeCreateInfo struct {\n    SType         StructureType\n    PNext         unsafe.Pointer\n    ReductionMode SamplerReductionMode\n}\n</code></pre> <p>SamplerReductionModeCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSamplerReductionModeCreateInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#samplerycbcrconversion","title":"SamplerYcbcrConversion","text":"<p>C.VkSamplerYcbcrConversion <pre><code>type SamplerYcbcrConversion C.VkSamplerYcbcrConversion\n</code></pre></p> <p>SamplerYcbcrConversion as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSamplerYcbcrConversion.html</p>"},{"location":"api/rendering/vulkan/#samplerycbcrconversioncreateinfo","title":"SamplerYcbcrConversionCreateInfo","text":"<p><code>struct</code></p> <pre><code>type SamplerYcbcrConversionCreateInfo struct {\n    SType                       StructureType\n    PNext                       unsafe.Pointer\n    Format                      Format\n    YcbcrModel                  SamplerYcbcrModelConversion\n    YcbcrRange                  SamplerYcbcrRange\n    Components                  ComponentMapping\n    XChromaOffset               ChromaLocation\n    YChromaOffset               ChromaLocation\n    ChromaFilter                Filter\n    ForceExplicitReconstruction Bool32\n}\n</code></pre> <p>SamplerYcbcrConversionCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSamplerYcbcrConversionCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#samplerycbcrconversionimageformatproperties","title":"SamplerYcbcrConversionImageFormatProperties","text":"<p><code>struct</code></p> <pre><code>type SamplerYcbcrConversionImageFormatProperties struct {\n    SType                               StructureType\n    PNext                               unsafe.Pointer\n    CombinedImageSamplerDescriptorCount uint32\n}\n</code></pre> <p>SamplerYcbcrConversionImageFormatProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSamplerYcbcrConversionImageFormatProperties.html</p>"},{"location":"api/rendering/vulkan/#samplerycbcrconversioninfo","title":"SamplerYcbcrConversionInfo","text":"<p><code>struct</code></p> <pre><code>type SamplerYcbcrConversionInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    Conversion SamplerYcbcrConversion\n}\n</code></pre> <p>SamplerYcbcrConversionInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSamplerYcbcrConversionInfo.html</p>"},{"location":"api/rendering/vulkan/#samplerycbcrmodelconversion","title":"SamplerYcbcrModelConversion","text":"<p>int32 <pre><code>type SamplerYcbcrModelConversion int32\n</code></pre></p> <p>SamplerYcbcrModelConversion as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSamplerYcbcrModelConversion.html</p> <p>const ( SamplerYcbcrModelConversionRgbIdentity SamplerYcbcrModelConversion = iota SamplerYcbcrModelConversionYcbcrIdentity SamplerYcbcrModelConversion = 1 SamplerYcbcrModelConversionYcbcr709 SamplerYcbcrModelConversion = 2 SamplerYcbcrModelConversionYcbcr601 SamplerYcbcrModelConversion = 3 SamplerYcbcrModelConversionYcbcr2020 SamplerYcbcrModelConversion = 4 SamplerYcbcrModelConversionBeginRange SamplerYcbcrModelConversion = 0 SamplerYcbcrModelConversionEndRange SamplerYcbcrModelConversion = 4 SamplerYcbcrModelConversionRangeSize SamplerYcbcrModelConversion = 5 SamplerYcbcrModelConversionMaxEnum SamplerYcbcrModelConversion = 2147483647 ) SamplerYcbcrModelConversion enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSamplerYcbcrModelConversion.html</p>"},{"location":"api/rendering/vulkan/#samplerycbcrrange","title":"SamplerYcbcrRange","text":"<p>int32 <pre><code>type SamplerYcbcrRange int32\n</code></pre></p> <p>SamplerYcbcrRange as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSamplerYcbcrRange.html</p> <p>const ( SamplerYcbcrRangeItuFull SamplerYcbcrRange = iota SamplerYcbcrRangeItuNarrow SamplerYcbcrRange = 1 SamplerYcbcrRangeBeginRange SamplerYcbcrRange = 0 SamplerYcbcrRangeEndRange SamplerYcbcrRange = 1 SamplerYcbcrRangeRangeSize SamplerYcbcrRange = 2 SamplerYcbcrRangeMaxEnum SamplerYcbcrRange = 2147483647 ) SamplerYcbcrRange enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSamplerYcbcrRange.html</p>"},{"location":"api/rendering/vulkan/#semaphore","title":"Semaphore","text":"<p>C.VkSemaphore <pre><code>type Semaphore C.VkSemaphore\n</code></pre></p> <p>Semaphore as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSemaphore.html</p>"},{"location":"api/rendering/vulkan/#semaphorecreateflags","title":"SemaphoreCreateFlags","text":"<p>uint32 <pre><code>type SemaphoreCreateFlags uint32\n</code></pre></p> <p>SemaphoreCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSemaphoreCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#semaphorecreateinfo","title":"SemaphoreCreateInfo","text":"<p><code>struct</code></p> <pre><code>type SemaphoreCreateInfo struct {\n    SType StructureType\n    PNext unsafe.Pointer\n    Flags SemaphoreCreateFlags\n}\n</code></pre> <p>SemaphoreCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSemaphoreCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#semaphoregetfdinfo","title":"SemaphoreGetFdInfo","text":"<p><code>struct</code></p> <pre><code>type SemaphoreGetFdInfo struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    Semaphore  Semaphore\n    HandleType ExternalSemaphoreHandleTypeFlagBits\n}\n</code></pre> <p>SemaphoreGetFdInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSemaphoreGetFdInfoKHR</p>"},{"location":"api/rendering/vulkan/#semaphoreimportflagbits","title":"SemaphoreImportFlagBits","text":"<p>int32 <pre><code>type SemaphoreImportFlagBits int32\n</code></pre></p> <p>SemaphoreImportFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSemaphoreImportFlagBits.html</p> <p>const ( SemaphoreImportTemporaryBit SemaphoreImportFlagBits = 1 SemaphoreImportFlagBitsMaxEnum SemaphoreImportFlagBits = 2147483647 ) SemaphoreImportFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSemaphoreImportFlagBits.html</p>"},{"location":"api/rendering/vulkan/#semaphoreimportflags","title":"SemaphoreImportFlags","text":"<p>uint32 <pre><code>type SemaphoreImportFlags uint32\n</code></pre></p> <p>SemaphoreImportFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSemaphoreImportFlags.html</p>"},{"location":"api/rendering/vulkan/#shaderinfotypeamd","title":"ShaderInfoTypeAMD","text":"<p>int32 <pre><code>type ShaderInfoTypeAMD int32\n</code></pre></p> <p>ShaderInfoTypeAMD as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkShaderInfoTypeAMD</p> <p>const ( ShaderInfoTypeStatisticsAmd ShaderInfoTypeAMD = iota ShaderInfoTypeBinaryAmd ShaderInfoTypeAMD = 1 ShaderInfoTypeDisassemblyAmd ShaderInfoTypeAMD = 2 ShaderInfoTypeBeginRangeAmd ShaderInfoTypeAMD = 0 ShaderInfoTypeEndRangeAmd ShaderInfoTypeAMD = 2 ShaderInfoTypeRangeSizeAmd ShaderInfoTypeAMD = 3 ShaderInfoTypeMaxEnumAmd ShaderInfoTypeAMD = 2147483647 ) ShaderInfoTypeAMD enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkShaderInfoTypeAMD</p>"},{"location":"api/rendering/vulkan/#shadermodule","title":"ShaderModule","text":"<p>C.VkShaderModule <pre><code>type ShaderModule C.VkShaderModule\n</code></pre></p> <p>ShaderModule as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkShaderModule.html</p>"},{"location":"api/rendering/vulkan/#shadermodulecreateflags","title":"ShaderModuleCreateFlags","text":"<p>uint32 <pre><code>type ShaderModuleCreateFlags uint32\n</code></pre></p> <p>ShaderModuleCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkShaderModuleCreateFlags.html</p>"},{"location":"api/rendering/vulkan/#shadermodulecreateinfo","title":"ShaderModuleCreateInfo","text":"<p><code>struct</code></p> <pre><code>type ShaderModuleCreateInfo struct {\n    SType    StructureType\n    PNext    unsafe.Pointer\n    Flags    ShaderModuleCreateFlags\n    CodeSize uint\n    PCode    *uint32\n}\n</code></pre> <p>ShaderModuleCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkShaderModuleCreateInfo.html</p>"},{"location":"api/rendering/vulkan/#shadermodulevalidationcachecreateinfo","title":"ShaderModuleValidationCacheCreateInfo","text":"<p><code>struct</code></p> <pre><code>type ShaderModuleValidationCacheCreateInfo struct {\n    SType           StructureType\n    PNext           unsafe.Pointer\n    ValidationCache ValidationCache\n}\n</code></pre> <p>ShaderModuleValidationCacheCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkShaderModuleValidationCacheCreateInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#shaderresourceusageamd","title":"ShaderResourceUsageAMD","text":"<p><code>struct</code></p> <pre><code>type ShaderResourceUsageAMD struct {\n    NumUsedVgprs             uint32\n    NumUsedSgprs             uint32\n    LdsSizePerLocalWorkGroup uint32\n    LdsUsageSizeInBytes      uint\n    ScratchMemUsageInBytes   uint\n}\n</code></pre> <p>ShaderResourceUsageAMD as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkShaderResourceUsageAMD</p>"},{"location":"api/rendering/vulkan/#shaderstageflagbits","title":"ShaderStageFlagBits","text":"<p>int32 <pre><code>type ShaderStageFlagBits int32\n</code></pre></p> <p>ShaderStageFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkShaderStageFlagBits.html</p> <p>const ( ShaderStageVertexBit ShaderStageFlagBits = 1 ShaderStageTessellationControlBit ShaderStageFlagBits = 2 ShaderStageTessellationEvaluationBit ShaderStageFlagBits = 4 ShaderStageGeometryBit ShaderStageFlagBits = 8 ShaderStageFragmentBit ShaderStageFlagBits = 16 ShaderStageComputeBit ShaderStageFlagBits = 32 ShaderStageAllGraphics ShaderStageFlagBits = 31 ShaderStageAll ShaderStageFlagBits = 2147483647 ShaderStageRaygenBitNvx ShaderStageFlagBits = 256 ShaderStageAnyHitBitNvx ShaderStageFlagBits = 512 ShaderStageClosestHitBitNvx ShaderStageFlagBits = 1024 ShaderStageMissBitNvx ShaderStageFlagBits = 2048 ShaderStageIntersectionBitNvx ShaderStageFlagBits = 4096 ShaderStageCallableBitNvx ShaderStageFlagBits = 8192 ShaderStageTaskBitNv ShaderStageFlagBits = 64 ShaderStageMeshBitNv ShaderStageFlagBits = 128 ShaderStageFlagBitsMaxEnum ShaderStageFlagBits = 2147483647 ) ShaderStageFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkShaderStageFlagBits.html</p>"},{"location":"api/rendering/vulkan/#shaderstageflags","title":"ShaderStageFlags","text":"<p>uint32 <pre><code>type ShaderStageFlags uint32\n</code></pre></p> <p>ShaderStageFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkShaderStageFlags.html</p>"},{"location":"api/rendering/vulkan/#shaderstatisticsinfoamd","title":"ShaderStatisticsInfoAMD","text":"<p><code>struct</code></p> <pre><code>type ShaderStatisticsInfoAMD struct {\n    ShaderStageMask      ShaderStageFlags\n    ResourceUsage        ShaderResourceUsageAMD\n    NumPhysicalVgprs     uint32\n    NumPhysicalSgprs     uint32\n    NumAvailableVgprs    uint32\n    NumAvailableSgprs    uint32\n    ComputeWorkGroupSize [3]uint32\n}\n</code></pre> <p>ShaderStatisticsInfoAMD as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkShaderStatisticsInfoAMD</p>"},{"location":"api/rendering/vulkan/#shadingratepaletteentrynv","title":"ShadingRatePaletteEntryNV","text":"<p>int32 <pre><code>type ShadingRatePaletteEntryNV int32\n</code></pre></p> <p>ShadingRatePaletteEntryNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkShadingRatePaletteEntryNV.html</p> <p>const ( ShadingRatePaletteEntryNoInvocationsNv ShadingRatePaletteEntryNV = iota ShadingRatePaletteEntry16InvocationsPerPixelNv ShadingRatePaletteEntryNV = 1 ShadingRatePaletteEntry8InvocationsPerPixelNv ShadingRatePaletteEntryNV = 2 ShadingRatePaletteEntry4InvocationsPerPixelNv ShadingRatePaletteEntryNV = 3 ShadingRatePaletteEntry2InvocationsPerPixelNv ShadingRatePaletteEntryNV = 4 ShadingRatePaletteEntry1InvocationPerPixelNv ShadingRatePaletteEntryNV = 5 ShadingRatePaletteEntry1InvocationPer2x1PixelsNv ShadingRatePaletteEntryNV = 6 ShadingRatePaletteEntry1InvocationPer1x2PixelsNv ShadingRatePaletteEntryNV = 7 ShadingRatePaletteEntry1InvocationPer2x2PixelsNv ShadingRatePaletteEntryNV = 8 ShadingRatePaletteEntry1InvocationPer4x2PixelsNv ShadingRatePaletteEntryNV = 9 ShadingRatePaletteEntry1InvocationPer2x4PixelsNv ShadingRatePaletteEntryNV = 10 ShadingRatePaletteEntry1InvocationPer4x4PixelsNv ShadingRatePaletteEntryNV = 11 ShadingRatePaletteEntryBeginRangeNv ShadingRatePaletteEntryNV = 0 ShadingRatePaletteEntryEndRangeNv ShadingRatePaletteEntryNV = 11 ShadingRatePaletteEntryRangeSizeNv ShadingRatePaletteEntryNV = 12 ShadingRatePaletteEntryMaxEnumNv ShadingRatePaletteEntryNV = 2147483647 ) ShadingRatePaletteEntryNV enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkShadingRatePaletteEntryNV.html</p>"},{"location":"api/rendering/vulkan/#shadingratepalettenv","title":"ShadingRatePaletteNV","text":"<p><code>struct</code></p> <pre><code>type ShadingRatePaletteNV struct {\n    ShadingRatePaletteEntryCount uint32\n    PShadingRatePaletteEntries   *ShadingRatePaletteEntryNV\n}\n</code></pre> <p>ShadingRatePaletteNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkShadingRatePaletteNV.html</p>"},{"location":"api/rendering/vulkan/#sharedpresentsurfacecapabilities","title":"SharedPresentSurfaceCapabilities","text":"<p><code>struct</code></p> <pre><code>type SharedPresentSurfaceCapabilities struct {\n    SType                            StructureType\n    PNext                            unsafe.Pointer\n    SharedPresentSupportedUsageFlags ImageUsageFlags\n}\n</code></pre> <p>SharedPresentSurfaceCapabilities as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSharedPresentSurfaceCapabilitiesKHR</p>"},{"location":"api/rendering/vulkan/#sharingmode","title":"SharingMode","text":"<p>int32 <pre><code>type SharingMode int32\n</code></pre></p> <p>SharingMode as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSharingMode.html</p> <p>const ( SharingModeExclusive SharingMode = iota SharingModeConcurrent SharingMode = 1 SharingModeBeginRange SharingMode = 0 SharingModeEndRange SharingMode = 1 SharingModeRangeSize SharingMode = 2 SharingModeMaxEnum SharingMode = 2147483647 ) SharingMode enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSharingMode.html</p>"},{"location":"api/rendering/vulkan/#sparsebuffermemorybindinfo","title":"SparseBufferMemoryBindInfo","text":"<p><code>struct</code></p> <pre><code>type SparseBufferMemoryBindInfo struct {\n    Buffer    Buffer\n    BindCount uint32\n    PBinds    *SparseMemoryBind\n}\n</code></pre> <p>SparseBufferMemoryBindInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSparseBufferMemoryBindInfo.html</p>"},{"location":"api/rendering/vulkan/#sparseimageformatflagbits","title":"SparseImageFormatFlagBits","text":"<p>int32 <pre><code>type SparseImageFormatFlagBits int32\n</code></pre></p> <p>SparseImageFormatFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSparseImageFormatFlagBits.html</p> <p>const ( SparseImageFormatSingleMiptailBit SparseImageFormatFlagBits = 1 SparseImageFormatAlignedMipSizeBit SparseImageFormatFlagBits = 2 SparseImageFormatNonstandardBlockSizeBit SparseImageFormatFlagBits = 4 SparseImageFormatFlagBitsMaxEnum SparseImageFormatFlagBits = 2147483647 ) SparseImageFormatFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSparseImageFormatFlagBits.html</p>"},{"location":"api/rendering/vulkan/#sparseimageformatflags","title":"SparseImageFormatFlags","text":"<p>uint32 <pre><code>type SparseImageFormatFlags uint32\n</code></pre></p> <p>SparseImageFormatFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSparseImageFormatFlags.html</p>"},{"location":"api/rendering/vulkan/#sparseimageformatproperties","title":"SparseImageFormatProperties","text":"<p><code>struct</code></p> <pre><code>type SparseImageFormatProperties struct {\n    AspectMask       ImageAspectFlags\n    ImageGranularity Extent3D\n    Flags            SparseImageFormatFlags\n}\n</code></pre> <p>SparseImageFormatProperties as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSparseImageFormatProperties.html</p>"},{"location":"api/rendering/vulkan/#sparseimageformatproperties2","title":"SparseImageFormatProperties2","text":"<p><code>struct</code></p> <pre><code>type SparseImageFormatProperties2 struct {\n    SType      StructureType\n    PNext      unsafe.Pointer\n    Properties SparseImageFormatProperties\n}\n</code></pre> <p>SparseImageFormatProperties2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSparseImageFormatProperties2.html</p>"},{"location":"api/rendering/vulkan/#sparseimagememorybind","title":"SparseImageMemoryBind","text":"<p><code>struct</code></p> <pre><code>type SparseImageMemoryBind struct {\n    Subresource  ImageSubresource\n    Offset       Offset3D\n    Extent       Extent3D\n    Memory       DeviceMemory\n    MemoryOffset DeviceSize\n    Flags        SparseMemoryBindFlags\n}\n</code></pre> <p>SparseImageMemoryBind as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSparseImageMemoryBind.html</p>"},{"location":"api/rendering/vulkan/#sparseimagememorybindinfo","title":"SparseImageMemoryBindInfo","text":"<p><code>struct</code></p> <pre><code>type SparseImageMemoryBindInfo struct {\n    Image     Image\n    BindCount uint32\n    PBinds    *SparseImageMemoryBind\n}\n</code></pre> <p>SparseImageMemoryBindInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSparseImageMemoryBindInfo.html</p>"},{"location":"api/rendering/vulkan/#sparseimagememoryrequirements","title":"SparseImageMemoryRequirements","text":"<p><code>struct</code></p> <pre><code>type SparseImageMemoryRequirements struct {\n    FormatProperties     SparseImageFormatProperties\n    ImageMipTailFirstLod uint32\n    ImageMipTailSize     DeviceSize\n    ImageMipTailOffset   DeviceSize\n    ImageMipTailStride   DeviceSize\n}\n</code></pre> <p>SparseImageMemoryRequirements as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSparseImageMemoryRequirements.html</p>"},{"location":"api/rendering/vulkan/#sparseimagememoryrequirements2","title":"SparseImageMemoryRequirements2","text":"<p><code>struct</code></p> <pre><code>type SparseImageMemoryRequirements2 struct {\n    SType              StructureType\n    PNext              unsafe.Pointer\n    MemoryRequirements SparseImageMemoryRequirements\n}\n</code></pre> <p>SparseImageMemoryRequirements2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSparseImageMemoryRequirements2.html</p>"},{"location":"api/rendering/vulkan/#sparseimageopaquememorybindinfo","title":"SparseImageOpaqueMemoryBindInfo","text":"<p><code>struct</code></p> <pre><code>type SparseImageOpaqueMemoryBindInfo struct {\n    Image     Image\n    BindCount uint32\n    PBinds    *SparseMemoryBind\n}\n</code></pre> <p>SparseImageOpaqueMemoryBindInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSparseImageOpaqueMemoryBindInfo.html</p>"},{"location":"api/rendering/vulkan/#sparsememorybind","title":"SparseMemoryBind","text":"<p><code>struct</code></p> <pre><code>type SparseMemoryBind struct {\n    ResourceOffset DeviceSize\n    Size           DeviceSize\n    Memory         DeviceMemory\n    MemoryOffset   DeviceSize\n    Flags          SparseMemoryBindFlags\n}\n</code></pre> <p>SparseMemoryBind as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSparseMemoryBind.html</p>"},{"location":"api/rendering/vulkan/#sparsememorybindflagbits","title":"SparseMemoryBindFlagBits","text":"<p>int32 <pre><code>type SparseMemoryBindFlagBits int32\n</code></pre></p> <p>SparseMemoryBindFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSparseMemoryBindFlagBits.html</p> <p>const ( SparseMemoryBindMetadataBit SparseMemoryBindFlagBits = 1 SparseMemoryBindFlagBitsMaxEnum SparseMemoryBindFlagBits = 2147483647 ) SparseMemoryBindFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSparseMemoryBindFlagBits.html</p>"},{"location":"api/rendering/vulkan/#sparsememorybindflags","title":"SparseMemoryBindFlags","text":"<p>uint32 <pre><code>type SparseMemoryBindFlags uint32\n</code></pre></p> <p>SparseMemoryBindFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSparseMemoryBindFlags.html</p>"},{"location":"api/rendering/vulkan/#specializationinfo","title":"SpecializationInfo","text":"<p><code>struct</code></p> <pre><code>type SpecializationInfo struct {\n    MapEntryCount uint32\n    PMapEntries   *SpecializationMapEntry\n    DataSize      uint\n    PData         unsafe.Pointer\n}\n</code></pre> <p>SpecializationInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSpecializationInfo.html</p>"},{"location":"api/rendering/vulkan/#specializationmapentry","title":"SpecializationMapEntry","text":"<p><code>struct</code></p> <pre><code>type SpecializationMapEntry struct {\n    ConstantID uint32\n    Offset     uint32\n    Size       uint\n}\n</code></pre> <p>SpecializationMapEntry as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSpecializationMapEntry.html</p>"},{"location":"api/rendering/vulkan/#stencilfaceflagbits","title":"StencilFaceFlagBits","text":"<p>int32 <pre><code>type StencilFaceFlagBits int32\n</code></pre></p> <p>StencilFaceFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkStencilFaceFlagBits.html</p> <p>const ( StencilFaceFrontBit StencilFaceFlagBits = 1 StencilFaceBackBit StencilFaceFlagBits = 2 StencilFrontAndBack StencilFaceFlagBits = 3 StencilFaceFlagBitsMaxEnum StencilFaceFlagBits = 2147483647 ) StencilFaceFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkStencilFaceFlagBits.html</p>"},{"location":"api/rendering/vulkan/#stencilfaceflags","title":"StencilFaceFlags","text":"<p>uint32 <pre><code>type StencilFaceFlags uint32\n</code></pre></p> <p>StencilFaceFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkStencilFaceFlags.html</p>"},{"location":"api/rendering/vulkan/#stencilop","title":"StencilOp","text":"<p>int32 <pre><code>type StencilOp int32\n</code></pre></p> <p>StencilOp as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkStencilOp.html</p> <p>const ( StencilOpKeep StencilOp = iota StencilOpZero StencilOp = 1 StencilOpReplace StencilOp = 2 StencilOpIncrementAndClamp StencilOp = 3 StencilOpDecrementAndClamp StencilOp = 4 StencilOpInvert StencilOp = 5 StencilOpIncrementAndWrap StencilOp = 6 StencilOpDecrementAndWrap StencilOp = 7 StencilOpBeginRange StencilOp = 0 StencilOpEndRange StencilOp = 7 StencilOpRangeSize StencilOp = 8 StencilOpMaxEnum StencilOp = 2147483647 ) StencilOp enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkStencilOp.html</p>"},{"location":"api/rendering/vulkan/#stencilopstate","title":"StencilOpState","text":"<p><code>struct</code></p> <pre><code>type StencilOpState struct {\n    FailOp      StencilOp\n    PassOp      StencilOp\n    DepthFailOp StencilOp\n    CompareOp   CompareOp\n    CompareMask uint32\n    WriteMask   uint32\n    Reference   uint32\n}\n</code></pre> <p>StencilOpState as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkStencilOpState.html</p>"},{"location":"api/rendering/vulkan/#structuretype","title":"StructureType","text":"<p>int32 <pre><code>type StructureType int32\n</code></pre></p> <p>StructureType as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkStructureType.html</p> <p>const ( StructureTypeApplicationInfo StructureType = iota StructureTypeInstanceCreateInfo StructureType = 1 StructureTypeDeviceQueueCreateInfo StructureType = 2 StructureTypeDeviceCreateInfo StructureType = 3 StructureTypeSubmitInfo StructureType = 4 StructureTypeMemoryAllocateInfo StructureType = 5 StructureTypeMappedMemoryRange StructureType = 6 StructureTypeBindSparseInfo StructureType = 7 StructureTypeFenceCreateInfo StructureType = 8 StructureTypeSemaphoreCreateInfo StructureType = 9 StructureTypeEventCreateInfo StructureType = 10 StructureTypeQueryPoolCreateInfo StructureType = 11 StructureTypeBufferCreateInfo StructureType = 12 StructureTypeBufferViewCreateInfo StructureType = 13 StructureTypeImageCreateInfo StructureType = 14 StructureTypeImageViewCreateInfo StructureType = 15 StructureTypeShaderModuleCreateInfo StructureType = 16 StructureTypePipelineCacheCreateInfo StructureType = 17 StructureTypePipelineShaderStageCreateInfo StructureType = 18 StructureTypePipelineVertexInputStateCreateInfo StructureType = 19 StructureTypePipelineInputAssemblyStateCreateInfo StructureType = 20 StructureTypePipelineTessellationStateCreateInfo StructureType = 21 StructureTypePipelineViewportStateCreateInfo StructureType = 22 StructureTypePipelineRasterizationStateCreateInfo StructureType = 23 StructureTypePipelineMultisampleStateCreateInfo StructureType = 24 StructureTypePipelineDepthStencilStateCreateInfo StructureType = 25 StructureTypePipelineColorBlendStateCreateInfo StructureType = 26 StructureTypePipelineDynamicStateCreateInfo StructureType = 27 StructureTypeGraphicsPipelineCreateInfo StructureType = 28 StructureTypeComputePipelineCreateInfo StructureType = 29 StructureTypePipelineLayoutCreateInfo StructureType = 30 StructureTypeSamplerCreateInfo StructureType = 31 StructureTypeDescriptorSetLayoutCreateInfo StructureType = 32 StructureTypeDescriptorPoolCreateInfo StructureType = 33 StructureTypeDescriptorSetAllocateInfo StructureType = 34 StructureTypeWriteDescriptorSet StructureType = 35 StructureTypeCopyDescriptorSet StructureType = 36 StructureTypeFramebufferCreateInfo StructureType = 37 StructureTypeRenderPassCreateInfo StructureType = 38 StructureTypeCommandPoolCreateInfo StructureType = 39 StructureTypeCommandBufferAllocateInfo StructureType = 40 StructureTypeCommandBufferInheritanceInfo StructureType = 41 StructureTypeCommandBufferBeginInfo StructureType = 42 StructureTypeRenderPassBeginInfo StructureType = 43 StructureTypeBufferMemoryBarrier StructureType = 44 StructureTypeImageMemoryBarrier StructureType = 45 StructureTypeMemoryBarrier StructureType = 46 StructureTypeLoaderInstanceCreateInfo StructureType = 47 StructureTypeLoaderDeviceCreateInfo StructureType = 48 StructureTypePhysicalDeviceSubgroupProperties StructureType = 1000094000 StructureTypeBindBufferMemoryInfo StructureType = 1000157000 StructureTypeBindImageMemoryInfo StructureType = 1000157001 StructureTypePhysicalDevice16bitStorageFeatures StructureType = 1000083000 StructureTypeMemoryDedicatedRequirements StructureType = 1000127000 StructureTypeMemoryDedicatedAllocateInfo StructureType = 1000127001 StructureTypeMemoryAllocateFlagsInfo StructureType = 1000060000 StructureTypeDeviceGroupRenderPassBeginInfo StructureType = 1000060003 StructureTypeDeviceGroupCommandBufferBeginInfo StructureType = 1000060004 StructureTypeDeviceGroupSubmitInfo StructureType = 1000060005 StructureTypeDeviceGroupBindSparseInfo StructureType = 1000060006 StructureTypeBindBufferMemoryDeviceGroupInfo StructureType = 1000060013 StructureTypeBindImageMemoryDeviceGroupInfo StructureType = 1000060014 StructureTypePhysicalDeviceGroupProperties StructureType = 1000070000 StructureTypeDeviceGroupDeviceCreateInfo StructureType = 1000070001 StructureTypeBufferMemoryRequirementsInfo2 StructureType = 1000146000 StructureTypeImageMemoryRequirementsInfo2 StructureType = 1000146001 StructureTypeImageSparseMemoryRequirementsInfo2 StructureType = 1000146002 StructureTypeMemoryRequirements2 StructureType = 1000146003 StructureTypeSparseImageMemoryRequirements2 StructureType = 1000146004 StructureTypePhysicalDeviceFeatures2 StructureType = 1000059000 StructureTypePhysicalDeviceProperties2 StructureType = 1000059001 StructureTypeFormatProperties2 StructureType = 1000059002 StructureTypeImageFormatProperties2 StructureType = 1000059003 StructureTypePhysicalDeviceImageFormatInfo2 StructureType = 1000059004 StructureTypeQueueFamilyProperties2 StructureType = 1000059005 StructureTypePhysicalDeviceMemoryProperties2 StructureType = 1000059006 StructureTypeSparseImageFormatProperties2 StructureType = 1000059007 StructureTypePhysicalDeviceSparseImageFormatInfo2 StructureType = 1000059008 StructureTypePhysicalDevicePointClippingProperties StructureType = 1000117000 StructureTypeRenderPassInputAttachmentAspectCreateInfo StructureType = 1000117001 StructureTypeImageViewUsageCreateInfo StructureType = 1000117002 StructureTypePipelineTessellationDomainOriginStateCreateInfo StructureType = 1000117003 StructureTypeRenderPassMultiviewCreateInfo StructureType = 1000053000 StructureTypePhysicalDeviceMultiviewFeatures StructureType = 1000053001 StructureTypePhysicalDeviceMultiviewProperties StructureType = 1000053002 StructureTypePhysicalDeviceVariablePointerFeatures StructureType = 1000120000 StructureTypeProtectedSubmitInfo StructureType = 1000145000 StructureTypePhysicalDeviceProtectedMemoryFeatures StructureType = 1000145001 StructureTypePhysicalDeviceProtectedMemoryProperties StructureType = 1000145002 StructureTypeDeviceQueueInfo2 StructureType = 1000145003 StructureTypeSamplerYcbcrConversionCreateInfo StructureType = 1000156000 StructureTypeSamplerYcbcrConversionInfo StructureType = 1000156001 StructureTypeBindImagePlaneMemoryInfo StructureType = 1000156002 StructureTypeImagePlaneMemoryRequirementsInfo StructureType = 1000156003 StructureTypePhysicalDeviceSamplerYcbcrConversionFeatures StructureType = 1000156004 StructureTypeSamplerYcbcrConversionImageFormatProperties StructureType = 1000156005 StructureTypeDescriptorUpdateTemplateCreateInfo StructureType = 1000085000 StructureTypePhysicalDeviceExternalImageFormatInfo StructureType = 1000071000 StructureTypeExternalImageFormatProperties StructureType = 1000071001 StructureTypePhysicalDeviceExternalBufferInfo StructureType = 1000071002 StructureTypeExternalBufferProperties StructureType = 1000071003 StructureTypePhysicalDeviceIdProperties StructureType = 1000071004 StructureTypeExternalMemoryBufferCreateInfo StructureType = 1000072000 StructureTypeExternalMemoryImageCreateInfo StructureType = 1000072001 StructureTypeExportMemoryAllocateInfo StructureType = 1000072002 StructureTypePhysicalDeviceExternalFenceInfo StructureType = 1000112000 StructureTypeExternalFenceProperties StructureType = 1000112001 StructureTypeExportFenceCreateInfo StructureType = 1000113000 StructureTypeExportSemaphoreCreateInfo StructureType = 1000077000 StructureTypePhysicalDeviceExternalSemaphoreInfo StructureType = 1000076000 StructureTypeExternalSemaphoreProperties StructureType = 1000076001 StructureTypePhysicalDeviceMaintenance3Properties StructureType = 1000168000 StructureTypeDescriptorSetLayoutSupport StructureType = 1000168001 StructureTypePhysicalDeviceShaderDrawParameterFeatures StructureType = 1000063000 StructureTypeSwapchainCreateInfo StructureType = 1000001000 StructureTypePresentInfo StructureType = 1000001001 StructureTypeDeviceGroupPresentCapabilities StructureType = 1000060007 StructureTypeImageSwapchainCreateInfo StructureType = 1000060008 StructureTypeBindImageMemorySwapchainInfo StructureType = 1000060009 StructureTypeAcquireNextImageInfo StructureType = 1000060010 StructureTypeDeviceGroupPresentInfo StructureType = 1000060011 StructureTypeDeviceGroupSwapchainCreateInfo StructureType = 1000060012 StructureTypeDisplayModeCreateInfo StructureType = 1000002000 StructureTypeDisplaySurfaceCreateInfo StructureType = 1000002001 StructureTypeDisplayPresentInfo StructureType = 1000003000 StructureTypeXlibSurfaceCreateInfo StructureType = 1000004000 StructureTypeXcbSurfaceCreateInfo StructureType = 1000005000 StructureTypeWaylandSurfaceCreateInfo StructureType = 1000006000 StructureTypeMirSurfaceCreateInfo StructureType = 1000007000 StructureTypeAndroidSurfaceCreateInfo StructureType = 1000008000 StructureTypeWin32SurfaceCreateInfo StructureType = 1000009000 StructureTypeDebugReportCallbackCreateInfo StructureType = 1000011000 StructureTypePipelineRasterizationStateRasterizationOrderAmd StructureType = 1000018000 StructureTypeDebugMarkerObjectNameInfo StructureType = 1000022000 StructureTypeDebugMarkerObjectTagInfo StructureType = 1000022001 StructureTypeDebugMarkerMarkerInfo StructureType = 1000022002 StructureTypeDedicatedAllocationImageCreateInfoNv StructureType = 1000026000 StructureTypeDedicatedAllocationBufferCreateInfoNv StructureType = 1000026001 StructureTypeDedicatedAllocationMemoryAllocateInfoNv StructureType = 1000026002 StructureTypePhysicalDeviceTransformFeedbackFeatures StructureType = 1000028000 StructureTypePhysicalDeviceTransformFeedbackProperties StructureType = 1000028001 StructureTypePipelineRasterizationStateStreamCreateInfo StructureType = 1000028002 StructureTypeTextureLodGatherFormatPropertiesAmd StructureType = 1000041000 StructureTypePhysicalDeviceCornerSampledImageFeaturesNv StructureType = 1000050000 StructureTypeExternalMemoryImageCreateInfoNv StructureType = 1000056000 StructureTypeExportMemoryAllocateInfoNv StructureType = 1000056001 StructureTypeImportMemoryWin32HandleInfoNv StructureType = 1000057000 StructureTypeExportMemoryWin32HandleInfoNv StructureType = 1000057001 StructureTypeWin32KeyedMutexAcquireReleaseInfoNv StructureType = 1000058000 StructureTypeValidationFlags StructureType = 1000061000 StructureTypeViSurfaceCreateInfoNn StructureType = 1000062000 StructureTypeImageViewAstcDecodeMode StructureType = 1000067000 StructureTypePhysicalDeviceAstcDecodeFeatures StructureType = 1000067001 StructureTypeImportMemoryWin32HandleInfo StructureType = 1000073000 StructureTypeExportMemoryWin32HandleInfo StructureType = 1000073001 StructureTypeMemoryWin32HandleProperties StructureType = 1000073002 StructureTypeMemoryGetWin32HandleInfo StructureType = 1000073003 StructureTypeImportMemoryFdInfo StructureType = 1000074000 StructureTypeMemoryFdProperties StructureType = 1000074001 StructureTypeMemoryGetFdInfo StructureType = 1000074002 StructureTypeWin32KeyedMutexAcquireReleaseInfo StructureType = 1000075000 StructureTypeImportSemaphoreWin32HandleInfo StructureType = 1000078000 StructureTypeExportSemaphoreWin32HandleInfo StructureType = 1000078001 StructureTypeD3d12FenceSubmitInfo StructureType = 1000078002 StructureTypeSemaphoreGetWin32HandleInfo StructureType = 1000078003 StructureTypeImportSemaphoreFdInfo StructureType = 1000079000 StructureTypeSemaphoreGetFdInfo StructureType = 1000079001 StructureTypePhysicalDevicePushDescriptorProperties StructureType = 1000080000 StructureTypeCommandBufferInheritanceConditionalRenderingInfo StructureType = 1000081000 StructureTypePhysicalDeviceConditionalRenderingFeatures StructureType = 1000081001 StructureTypeConditionalRenderingBeginInfo StructureType = 1000081002 StructureTypePresentRegions StructureType = 1000084000 StructureTypeObjectTableCreateInfoNvx StructureType = 1000086000 StructureTypeIndirectCommandsLayoutCreateInfoNvx StructureType = 1000086001 StructureTypeCmdProcessCommandsInfoNvx StructureType = 1000086002 StructureTypeCmdReserveSpaceForCommandsInfoNvx StructureType = 1000086003 StructureTypeDeviceGeneratedCommandsLimitsNvx StructureType = 1000086004 StructureTypeDeviceGeneratedCommandsFeaturesNvx StructureType = 1000086005 StructureTypePipelineViewportWScalingStateCreateInfoNv StructureType = 1000087000 StructureTypeSurfaceCapabilities2 StructureType = 1000090000 StructureTypeDisplayPowerInfo StructureType = 1000091000 StructureTypeDeviceEventInfo StructureType = 1000091001 StructureTypeDisplayEventInfo StructureType = 1000091002 StructureTypeSwapchainCounterCreateInfo StructureType = 1000091003 StructureTypePresentTimesInfoGoogle StructureType = 1000092000 StructureTypePhysicalDeviceMultiviewPerViewAttributesPropertiesNvx StructureType = 1000097000 StructureTypePipelineViewportSwizzleStateCreateInfoNv StructureType = 1000098000 StructureTypePhysicalDeviceDiscardRectangleProperties StructureType = 1000099000 StructureTypePipelineDiscardRectangleStateCreateInfo StructureType = 1000099001 StructureTypePhysicalDeviceConservativeRasterizationProperties StructureType = 1000101000 StructureTypePipelineRasterizationConservativeStateCreateInfo StructureType = 1000101001 StructureTypeHdrMetadata StructureType = 1000105000 StructureTypeAttachmentDescription2 StructureType = 1000109000 StructureTypeAttachmentReference2 StructureType = 1000109001 StructureTypeSubpassDescription2 StructureType = 1000109002 StructureTypeSubpassDependency2 StructureType = 1000109003 StructureTypeRenderPassCreateInfo2 StructureType = 1000109004 StructureTypeSubpassBeginInfo StructureType = 1000109005 StructureTypeSubpassEndInfo StructureType = 1000109006 StructureTypeSharedPresentSurfaceCapabilities StructureType = 1000111000 StructureTypeImportFenceWin32HandleInfo StructureType = 1000114000 StructureTypeExportFenceWin32HandleInfo StructureType = 1000114001 StructureTypeFenceGetWin32HandleInfo StructureType = 1000114002 StructureTypeImportFenceFdInfo StructureType = 1000115000 StructureTypeFenceGetFdInfo StructureType = 1000115001 StructureTypePhysicalDeviceSurfaceInfo2 StructureType = 1000119000 StructureTypeSurfaceFormat2 StructureType = 1000119002 StructureTypeDisplayProperties2 StructureType = 1000121000 StructureTypeDisplayPlaneProperties2 StructureType = 1000121001 StructureTypeDisplayModeProperties2 StructureType = 1000121002 StructureTypeDisplayPlaneInfo2 StructureType = 1000121003 StructureTypeDisplayPlaneCapabilities2 StructureType = 1000121004 StructureTypeIosSurfaceCreateInfoMvk StructureType = 1000122000 StructureTypeMacosSurfaceCreateInfoMvk StructureType = 1000123000 StructureTypeDebugUtilsObjectNameInfo StructureType = 1000128000 StructureTypeDebugUtilsObjectTagInfo StructureType = 1000128001 StructureTypeDebugUtilsLabel StructureType = 1000128002 StructureTypeDebugUtilsMessengerCallbackData StructureType = 1000128003 StructureTypeDebugUtilsMessengerCreateInfo StructureType = 1000128004 StructureTypeAndroidHardwareBufferUsageAndroid StructureType = 1000129000 StructureTypeAndroidHardwareBufferPropertiesAndroid StructureType = 1000129001 StructureTypeAndroidHardwareBufferFormatPropertiesAndroid StructureType = 1000129002 StructureTypeImportAndroidHardwareBufferInfoAndroid StructureType = 1000129003 StructureTypeMemoryGetAndroidHardwareBufferInfoAndroid StructureType = 1000129004 StructureTypeExternalFormatAndroid StructureType = 1000129005 StructureTypePhysicalDeviceSamplerFilterMinmaxProperties StructureType = 1000130000 StructureTypeSamplerReductionModeCreateInfo StructureType = 1000130001 StructureTypePhysicalDeviceInlineUniformBlockFeatures StructureType = 1000138000 StructureTypePhysicalDeviceInlineUniformBlockProperties StructureType = 1000138001 StructureTypeWriteDescriptorSetInlineUniformBlock StructureType = 1000138002 StructureTypeDescriptorPoolInlineUniformBlockCreateInfo StructureType = 1000138003 StructureTypeSampleLocationsInfo StructureType = 1000143000 StructureTypeRenderPassSampleLocationsBeginInfo StructureType = 1000143001 StructureTypePipelineSampleLocationsStateCreateInfo StructureType = 1000143002 StructureTypePhysicalDeviceSampleLocationsProperties StructureType = 1000143003 StructureTypeMultisampleProperties StructureType = 1000143004 StructureTypeImageFormatListCreateInfo StructureType = 1000147000 StructureTypePhysicalDeviceBlendOperationAdvancedFeatures StructureType = 1000148000 StructureTypePhysicalDeviceBlendOperationAdvancedProperties StructureType = 1000148001 StructureTypePipelineColorBlendAdvancedStateCreateInfo StructureType = 1000148002 StructureTypePipelineCoverageToColorStateCreateInfoNv StructureType = 1000149000 StructureTypePipelineCoverageModulationStateCreateInfoNv StructureType = 1000152000 StructureTypeDrmFormatModifierPropertiesList StructureType = 1000158000 StructureTypeDrmFormatModifierProperties StructureType = 1000158001 StructureTypePhysicalDeviceImageDrmFormatModifierInfo StructureType = 1000158002 StructureTypeImageDrmFormatModifierListCreateInfo StructureType = 1000158003 StructureTypeImageExcplicitDrmFormatModifierCreateInfo StructureType = 1000158004 StructureTypeImageDrmFormatModifierProperties StructureType = 1000158005 StructureTypeValidationCacheCreateInfo StructureType = 1000160000 StructureTypeShaderModuleValidationCacheCreateInfo StructureType = 1000160001 StructureTypeDescriptorSetLayoutBindingFlagsCreateInfo StructureType = 1000161000 StructureTypePhysicalDeviceDescriptorIndexingFeatures StructureType = 1000161001 StructureTypePhysicalDeviceDescriptorIndexingProperties StructureType = 1000161002 StructureTypeDescriptorSetVariableDescriptorCountAllocateInfo StructureType = 1000161003 StructureTypeDescriptorSetVariableDescriptorCountLayoutSupport StructureType = 1000161004 StructureTypePipelineViewportShadingRateImageStateCreateInfoNv StructureType = 1000164000 StructureTypePhysicalDeviceShadingRateImageFeaturesNv StructureType = 1000164001 StructureTypePhysicalDeviceShadingRateImagePropertiesNv StructureType = 1000164002 StructureTypePipelineViewportCoarseSampleOrderStateCreateInfoNv StructureType = 1000164005 StructureTypeRaytracingPipelineCreateInfoNvx StructureType = 1000165000 StructureTypeAccelerationStructureCreateInfoNvx StructureType = 1000165001 StructureTypeGeometryInstanceNvx StructureType = 1000165002 StructureTypeGeometryNvx StructureType = 1000165003 StructureTypeGeometryTrianglesNvx StructureType = 1000165004 StructureTypeGeometryAabbNvx StructureType = 1000165005 StructureTypeBindAccelerationStructureMemoryInfoNvx StructureType = 1000165006 StructureTypeDescriptorAccelerationStructureInfoNvx StructureType = 1000165007 StructureTypeAccelerationStructureMemoryRequirementsInfoNvx StructureType = 1000165008 StructureTypePhysicalDeviceRaytracingPropertiesNvx StructureType = 1000165009 StructureTypeHitShaderModuleCreateInfoNvx StructureType = 1000165010 StructureTypePhysicalDeviceRepresentativeFragmentTestFeaturesNv StructureType = 1000166000 StructureTypePipelineRepresentativeFragmentTestStateCreateInfoNv StructureType = 1000166001 StructureTypeDeviceQueueGlobalPriorityCreateInfo StructureType = 1000174000 StructureTypePhysicalDevice8bitStorageFeatures StructureType = 1000177000 StructureTypeImportMemoryHostPointerInfo StructureType = 1000178000 StructureTypeMemoryHostPointerProperties StructureType = 1000178001 StructureTypePhysicalDeviceExternalMemoryHostProperties StructureType = 1000178002 StructureTypePhysicalDeviceShaderAtomicInt64Features StructureType = 1000180000 StructureTypeCalibratedTimestampInfo StructureType = 1000184000 StructureTypePhysicalDeviceShaderCorePropertiesAmd StructureType = 1000185000 StructureTypePhysicalDeviceVertexAttributeDivisorProperties StructureType = 1000190000 StructureTypePipelineVertexInputDivisorStateCreateInfo StructureType = 1000190001 StructureTypePhysicalDeviceVertexAttributeDivisorFeatures StructureType = 1000190002 StructureTypePhysicalDeviceDriverProperties StructureType = 1000196000 StructureTypePhysicalDeviceComputeShaderDerivativesFeaturesNv StructureType = 1000201000 StructureTypePhysicalDeviceMeshShaderFeaturesNv StructureType = 1000202000 StructureTypePhysicalDeviceMeshShaderPropertiesNv StructureType = 1000202001 StructureTypePhysicalDeviceFragmentShaderBarycentricFeaturesNv StructureType = 1000203000 StructureTypePhysicalDeviceShaderImageFootprintFeaturesNv StructureType = 1000204000 StructureTypePipelineViewportExclusiveScissorStateCreateInfoNv StructureType = 1000205000 StructureTypePhysicalDeviceExclusiveScissorFeaturesNv StructureType = 1000205002 StructureTypeCheckpointDataNv StructureType = 1000206000 StructureTypeQueueFamilyCheckpointPropertiesNv StructureType = 1000206001 StructureTypePhysicalDeviceVulkanMemoryModelFeatures StructureType = 1000211000 StructureTypePhysicalDevicePciBusInfoProperties StructureType = 1000212000 StructureTypeImagepipeSurfaceCreateInfoFuchsia StructureType = 1000214000 StructureTypeDebugReportCreateInfo StructureType = 1000011000 StructureTypeBeginRange StructureType = 0 StructureTypeEndRange StructureType = 48 StructureTypeRangeSize StructureType = 49 StructureTypeMaxEnum StructureType = 2147483647 ) StructureType enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkStructureType.html</p>"},{"location":"api/rendering/vulkan/#subgroupfeatureflagbits","title":"SubgroupFeatureFlagBits","text":"<p>int32 <pre><code>type SubgroupFeatureFlagBits int32\n</code></pre></p> <p>SubgroupFeatureFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSubgroupFeatureFlagBits.html</p> <p>const ( SubgroupFeatureBasicBit SubgroupFeatureFlagBits = 1 SubgroupFeatureVoteBit SubgroupFeatureFlagBits = 2 SubgroupFeatureArithmeticBit SubgroupFeatureFlagBits = 4 SubgroupFeatureBallotBit SubgroupFeatureFlagBits = 8 SubgroupFeatureShuffleBit SubgroupFeatureFlagBits = 16 SubgroupFeatureShuffleRelativeBit SubgroupFeatureFlagBits = 32 SubgroupFeatureClusteredBit SubgroupFeatureFlagBits = 64 SubgroupFeatureQuadBit SubgroupFeatureFlagBits = 128 SubgroupFeaturePartitionedBitNv SubgroupFeatureFlagBits = 256 SubgroupFeatureFlagBitsMaxEnum SubgroupFeatureFlagBits = 2147483647 ) SubgroupFeatureFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSubgroupFeatureFlagBits.html</p>"},{"location":"api/rendering/vulkan/#subgroupfeatureflags","title":"SubgroupFeatureFlags","text":"<p>uint32 <pre><code>type SubgroupFeatureFlags uint32\n</code></pre></p> <p>SubgroupFeatureFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSubgroupFeatureFlags.html</p>"},{"location":"api/rendering/vulkan/#submitinfo","title":"SubmitInfo","text":"<p><code>struct</code></p> <pre><code>type SubmitInfo struct {\n    SType                StructureType\n    PNext                unsafe.Pointer\n    WaitSemaphoreCount   uint32\n    PWaitSemaphores      *Semaphore\n    PWaitDstStageMask    *PipelineStageFlags\n    CommandBufferCount   uint32\n    PCommandBuffers      *CommandBuffer\n    SignalSemaphoreCount uint32\n    PSignalSemaphores    *Semaphore\n}\n</code></pre> <p>SubmitInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSubmitInfo.html</p>"},{"location":"api/rendering/vulkan/#subpassbegininfo","title":"SubpassBeginInfo","text":"<p><code>struct</code></p> <pre><code>type SubpassBeginInfo struct {\n    SType    StructureType\n    PNext    unsafe.Pointer\n    Contents SubpassContents\n}\n</code></pre> <p>SubpassBeginInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSubpassBeginInfoKHR</p>"},{"location":"api/rendering/vulkan/#subpasscontents","title":"SubpassContents","text":"<p>int32 <pre><code>type SubpassContents int32\n</code></pre></p> <p>SubpassContents as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSubpassContents.html</p> <p>const ( SubpassContentsInline SubpassContents = iota SubpassContentsSecondaryCommandBuffers SubpassContents = 1 SubpassContentsBeginRange SubpassContents = 0 SubpassContentsEndRange SubpassContents = 1 SubpassContentsRangeSize SubpassContents = 2 SubpassContentsMaxEnum SubpassContents = 2147483647 ) SubpassContents enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSubpassContents.html</p>"},{"location":"api/rendering/vulkan/#subpassdependency","title":"SubpassDependency","text":"<p><code>struct</code></p> <pre><code>type SubpassDependency struct {\n    SrcSubpass      uint32\n    DstSubpass      uint32\n    SrcStageMask    PipelineStageFlags\n    DstStageMask    PipelineStageFlags\n    SrcAccessMask   AccessFlags\n    DstAccessMask   AccessFlags\n    DependencyFlags DependencyFlags\n}\n</code></pre> <p>SubpassDependency as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSubpassDependency.html</p>"},{"location":"api/rendering/vulkan/#subpassdependency2","title":"SubpassDependency2","text":"<p><code>struct</code></p> <pre><code>type SubpassDependency2 struct {\n    SType           StructureType\n    PNext           unsafe.Pointer\n    SrcSubpass      uint32\n    DstSubpass      uint32\n    SrcStageMask    PipelineStageFlags\n    DstStageMask    PipelineStageFlags\n    SrcAccessMask   AccessFlags\n    DstAccessMask   AccessFlags\n    DependencyFlags DependencyFlags\n    ViewOffset      int32\n}\n</code></pre> <p>SubpassDependency2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSubpassDependency2KHR</p>"},{"location":"api/rendering/vulkan/#subpassdescription","title":"SubpassDescription","text":"<p><code>struct</code></p> <pre><code>type SubpassDescription struct {\n    Flags                   SubpassDescriptionFlags\n    PipelineBindPoint       PipelineBindPoint\n    InputAttachmentCount    uint32\n    PInputAttachments       *AttachmentReference\n    ColorAttachmentCount    uint32\n    PColorAttachments       *AttachmentReference\n    PResolveAttachments     *AttachmentReference\n    PDepthStencilAttachment *AttachmentReference\n    PreserveAttachmentCount uint32\n    PPreserveAttachments    *uint32\n}\n</code></pre> <p>SubpassDescription as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSubpassDescription.html</p>"},{"location":"api/rendering/vulkan/#subpassdescription2","title":"SubpassDescription2","text":"<p><code>struct</code></p> <pre><code>type SubpassDescription2 struct {\n    SType                   StructureType\n    PNext                   unsafe.Pointer\n    Flags                   SubpassDescriptionFlags\n    PipelineBindPoint       PipelineBindPoint\n    ViewMask                uint32\n    InputAttachmentCount    uint32\n    PInputAttachments       *AttachmentReference2\n    ColorAttachmentCount    uint32\n    PColorAttachments       *AttachmentReference2\n    PResolveAttachments     *AttachmentReference2\n    PDepthStencilAttachment *AttachmentReference2\n    PreserveAttachmentCount uint32\n    PPreserveAttachments    *uint32\n}\n</code></pre> <p>SubpassDescription2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSubpassDescription2KHR</p>"},{"location":"api/rendering/vulkan/#subpassdescriptionflagbits","title":"SubpassDescriptionFlagBits","text":"<p>int32 <pre><code>type SubpassDescriptionFlagBits int32\n</code></pre></p> <p>SubpassDescriptionFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSubpassDescriptionFlagBits.html</p> <p>const ( SubpassDescriptionPerViewAttributesBitNvx SubpassDescriptionFlagBits = 1 SubpassDescriptionPerViewPositionXOnlyBitNvx SubpassDescriptionFlagBits = 2 SubpassDescriptionFlagBitsMaxEnum SubpassDescriptionFlagBits = 2147483647 ) SubpassDescriptionFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSubpassDescriptionFlagBits.html</p>"},{"location":"api/rendering/vulkan/#subpassdescriptionflags","title":"SubpassDescriptionFlags","text":"<p>uint32 <pre><code>type SubpassDescriptionFlags uint32\n</code></pre></p> <p>SubpassDescriptionFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSubpassDescriptionFlags.html</p>"},{"location":"api/rendering/vulkan/#subpassendinfo","title":"SubpassEndInfo","text":"<p><code>struct</code></p> <pre><code>type SubpassEndInfo struct {\n    SType StructureType\n    PNext unsafe.Pointer\n}\n</code></pre> <p>SubpassEndInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSubpassEndInfoKHR</p>"},{"location":"api/rendering/vulkan/#subpasssamplelocations","title":"SubpassSampleLocations","text":"<p><code>struct</code></p> <pre><code>type SubpassSampleLocations struct {\n    SubpassIndex        uint32\n    SampleLocationsInfo SampleLocationsInfo\n}\n</code></pre> <p>SubpassSampleLocations as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSubpassSampleLocationsEXT.html</p>"},{"location":"api/rendering/vulkan/#subresourcelayout","title":"SubresourceLayout","text":"<p><code>struct</code></p> <pre><code>type SubresourceLayout struct {\n    Offset     DeviceSize\n    Size       DeviceSize\n    RowPitch   DeviceSize\n    ArrayPitch DeviceSize\n    DepthPitch DeviceSize\n}\n</code></pre> <p>SubresourceLayout as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSubresourceLayout.html</p>"},{"location":"api/rendering/vulkan/#surface","title":"Surface","text":"<p>C.VkSurfaceKHR <pre><code>type Surface C.VkSurfaceKHR\n</code></pre></p> <p>Surface as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSurfaceKHR</p>"},{"location":"api/rendering/vulkan/#surfacefrompointer","title":"SurfaceFromPointer","text":"<pre><code>func SurfaceFromPointer(surface uintptr) Surface\n</code></pre> <p>SurfaceFromPointer casts a pointer to a Vulkan surface into a Surface.</p>"},{"location":"api/rendering/vulkan/#surfacecapabilities","title":"SurfaceCapabilities","text":"<p><code>struct</code></p> <pre><code>type SurfaceCapabilities struct {\n    MinImageCount           uint32\n    MaxImageCount           uint32\n    CurrentExtent           Extent2D\n    MinImageExtent          Extent2D\n    MaxImageExtent          Extent2D\n    MaxImageArrayLayers     uint32\n    SupportedTransforms     SurfaceTransformFlags\n    CurrentTransform        SurfaceTransformFlagBits\n    SupportedCompositeAlpha CompositeAlphaFlags\n    SupportedUsageFlags     ImageUsageFlags\n}\n</code></pre> <p>SurfaceCapabilities as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSurfaceCapabilitiesKHR</p>"},{"location":"api/rendering/vulkan/#surfacecapabilities2","title":"SurfaceCapabilities2","text":"<p><code>struct</code></p> <pre><code>type SurfaceCapabilities2 struct {\n    SType               StructureType\n    PNext               unsafe.Pointer\n    SurfaceCapabilities SurfaceCapabilities\n}\n</code></pre> <p>SurfaceCapabilities2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSurfaceCapabilities2KHR</p>"},{"location":"api/rendering/vulkan/#surfacecounterflagbits","title":"SurfaceCounterFlagBits","text":"<p>int32 <pre><code>type SurfaceCounterFlagBits int32\n</code></pre></p> <p>SurfaceCounterFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSurfaceCounterFlagBitsEXT.html</p> <p>const ( SurfaceCounterVblank SurfaceCounterFlagBits = 1 SurfaceCounterFlagBitsMaxEnum SurfaceCounterFlagBits = 2147483647 ) SurfaceCounterFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSurfaceCounterFlagBitsEXT.html</p>"},{"location":"api/rendering/vulkan/#surfacecounterflags","title":"SurfaceCounterFlags","text":"<p>uint32 <pre><code>type SurfaceCounterFlags uint32\n</code></pre></p> <p>SurfaceCounterFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSurfaceCounterFlagsEXT.html</p>"},{"location":"api/rendering/vulkan/#surfaceformat","title":"SurfaceFormat","text":"<p><code>struct</code></p> <pre><code>type SurfaceFormat struct {\n    Format     Format\n    ColorSpace ColorSpace\n}\n</code></pre> <p>SurfaceFormat as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSurfaceFormatKHR</p>"},{"location":"api/rendering/vulkan/#surfaceformat2","title":"SurfaceFormat2","text":"<p><code>struct</code></p> <pre><code>type SurfaceFormat2 struct {\n    SType         StructureType\n    PNext         unsafe.Pointer\n    SurfaceFormat SurfaceFormat\n}\n</code></pre> <p>SurfaceFormat2 as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSurfaceFormat2KHR</p>"},{"location":"api/rendering/vulkan/#surfacetransformflagbits","title":"SurfaceTransformFlagBits","text":"<p>int32 <pre><code>type SurfaceTransformFlagBits int32\n</code></pre></p> <p>SurfaceTransformFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSurfaceTransformFlagBitsKHR</p> <p>const ( SurfaceTransformIdentityBit SurfaceTransformFlagBits = 1 SurfaceTransformRotate90Bit SurfaceTransformFlagBits = 2 SurfaceTransformRotate180Bit SurfaceTransformFlagBits = 4 SurfaceTransformRotate270Bit SurfaceTransformFlagBits = 8 SurfaceTransformHorizontalMirrorBit SurfaceTransformFlagBits = 16 SurfaceTransformHorizontalMirrorRotate90Bit SurfaceTransformFlagBits = 32 SurfaceTransformHorizontalMirrorRotate180Bit SurfaceTransformFlagBits = 64 SurfaceTransformHorizontalMirrorRotate270Bit SurfaceTransformFlagBits = 128 SurfaceTransformInheritBit SurfaceTransformFlagBits = 256 SurfaceTransformFlagBitsMaxEnum SurfaceTransformFlagBits = 2147483647 ) SurfaceTransformFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSurfaceTransformFlagBitsKHR</p>"},{"location":"api/rendering/vulkan/#surfacetransformflags","title":"SurfaceTransformFlags","text":"<p>uint32 <pre><code>type SurfaceTransformFlags uint32\n</code></pre></p> <p>SurfaceTransformFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSurfaceTransformFlagsKHR</p>"},{"location":"api/rendering/vulkan/#swapchain","title":"Swapchain","text":"<p>C.VkSwapchainKHR <pre><code>type Swapchain C.VkSwapchainKHR\n</code></pre></p> <p>Swapchain as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSwapchainKHR</p>"},{"location":"api/rendering/vulkan/#swapchaincountercreateinfo","title":"SwapchainCounterCreateInfo","text":"<p><code>struct</code></p> <pre><code>type SwapchainCounterCreateInfo struct {\n    SType           StructureType\n    PNext           unsafe.Pointer\n    SurfaceCounters SurfaceCounterFlags\n}\n</code></pre> <p>SwapchainCounterCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSwapchainCounterCreateInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#swapchaincreateflagbits","title":"SwapchainCreateFlagBits","text":"<p>int32 <pre><code>type SwapchainCreateFlagBits int32\n</code></pre></p> <p>SwapchainCreateFlagBits as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSwapchainCreateFlagBitsKHR</p> <p>const ( SwapchainCreateSplitInstanceBindRegionsBit SwapchainCreateFlagBits = 1 SwapchainCreateProtectedBit SwapchainCreateFlagBits = 2 SwapchainCreateFlagBitsMaxEnum SwapchainCreateFlagBits = 2147483647 ) SwapchainCreateFlagBits enumeration from https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSwapchainCreateFlagBitsKHR</p>"},{"location":"api/rendering/vulkan/#swapchaincreateflags","title":"SwapchainCreateFlags","text":"<p>uint32 <pre><code>type SwapchainCreateFlags uint32\n</code></pre></p> <p>SwapchainCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSwapchainCreateFlagsKHR</p>"},{"location":"api/rendering/vulkan/#swapchaincreateinfo","title":"SwapchainCreateInfo","text":"<p><code>struct</code></p> <pre><code>type SwapchainCreateInfo struct {\n    SType                 StructureType\n    PNext                 unsafe.Pointer\n    Flags                 SwapchainCreateFlags\n    Surface               Surface\n    MinImageCount         uint32\n    ImageFormat           Format\n    ImageColorSpace       ColorSpace\n    ImageExtent           Extent2D\n    ImageArrayLayers      uint32\n    ImageUsage            ImageUsageFlags\n    ImageSharingMode      SharingMode\n    QueueFamilyIndexCount uint32\n    PQueueFamilyIndices   *uint32\n    PreTransform          SurfaceTransformFlagBits\n    CompositeAlpha        CompositeAlphaFlagBits\n    PresentMode           PresentMode\n    Clipped               Bool32\n    OldSwapchain          Swapchain\n}\n</code></pre> <p>SwapchainCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html#VkSwapchainCreateInfoKHR</p>"},{"location":"api/rendering/vulkan/#systemallocationscope","title":"SystemAllocationScope","text":"<p>int32 <pre><code>type SystemAllocationScope int32\n</code></pre></p> <p>SystemAllocationScope as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSystemAllocationScope.html</p> <p>const ( SystemAllocationScopeCommand SystemAllocationScope = iota SystemAllocationScopeObject SystemAllocationScope = 1 SystemAllocationScopeCache SystemAllocationScope = 2 SystemAllocationScopeDevice SystemAllocationScope = 3 SystemAllocationScopeInstance SystemAllocationScope = 4 SystemAllocationScopeBeginRange SystemAllocationScope = 0 SystemAllocationScopeEndRange SystemAllocationScope = 4 SystemAllocationScopeRangeSize SystemAllocationScope = 5 SystemAllocationScopeMaxEnum SystemAllocationScope = 2147483647 ) SystemAllocationScope enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkSystemAllocationScope.html</p>"},{"location":"api/rendering/vulkan/#tessellationdomainorigin","title":"TessellationDomainOrigin","text":"<p>int32 <pre><code>type TessellationDomainOrigin int32\n</code></pre></p> <p>TessellationDomainOrigin as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkTessellationDomainOrigin.html</p> <p>const ( TessellationDomainOriginUpperLeft TessellationDomainOrigin = iota TessellationDomainOriginLowerLeft TessellationDomainOrigin = 1 TessellationDomainOriginBeginRange TessellationDomainOrigin = 0 TessellationDomainOriginEndRange TessellationDomainOrigin = 1 TessellationDomainOriginRangeSize TessellationDomainOrigin = 2 TessellationDomainOriginMaxEnum TessellationDomainOrigin = 2147483647 ) TessellationDomainOrigin enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkTessellationDomainOrigin.html</p>"},{"location":"api/rendering/vulkan/#texturelodgatherformatpropertiesamd","title":"TextureLODGatherFormatPropertiesAMD","text":"<p><code>struct</code></p> <pre><code>type TextureLODGatherFormatPropertiesAMD struct {\n    SType                           StructureType\n    PNext                           unsafe.Pointer\n    SupportsTextureGatherLODBiasAMD Bool32\n}\n</code></pre> <p>TextureLODGatherFormatPropertiesAMD as declared in https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkTextureLODGatherFormatPropertiesAMD</p>"},{"location":"api/rendering/vulkan/#timedomain","title":"TimeDomain","text":"<p>int32 <pre><code>type TimeDomain int32\n</code></pre></p> <p>TimeDomain as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkTimeDomainEXT.html</p> <p>const ( TimeDomainDevice TimeDomain = iota TimeDomainClockMonotonic TimeDomain = 1 TimeDomainClockMonotonicRaw TimeDomain = 2 TimeDomainQueryPerformanceCounter TimeDomain = 3 TimeDomainBeginRange TimeDomain = 0 TimeDomainEndRange TimeDomain = 3 TimeDomainRangeSize TimeDomain = 4 TimeDomainMaxEnum TimeDomain = 2147483647 ) TimeDomain enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkTimeDomainEXT.html</p>"},{"location":"api/rendering/vulkan/#uintpointerable","title":"UintPointerAble","text":"<p><code>interface</code></p> <pre><code>type UintPointerAble interface {\n    DescriptorPool | Semaphore | Fence | CommandPool | Buffer | DeviceMemory | Surface | Framebuffer | ShaderModule | Pipeline | PipelineLayout | DescriptorSetLayout | Image | ImageView | Sampler | Swapchain | RenderPass\n}\n</code></pre>"},{"location":"api/rendering/vulkan/#validationcache","title":"ValidationCache","text":"<p>C.VkValidationCacheEXT <pre><code>type ValidationCache C.VkValidationCacheEXT\n</code></pre></p> <p>ValidationCache as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkValidationCacheEXT.html</p>"},{"location":"api/rendering/vulkan/#validationcachecreateflags","title":"ValidationCacheCreateFlags","text":"<p>uint32 <pre><code>type ValidationCacheCreateFlags uint32\n</code></pre></p> <p>ValidationCacheCreateFlags type as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkValidationCacheCreateFlagsEXT.html</p>"},{"location":"api/rendering/vulkan/#validationcachecreateinfo","title":"ValidationCacheCreateInfo","text":"<p><code>struct</code></p> <pre><code>type ValidationCacheCreateInfo struct {\n    SType           StructureType\n    PNext           unsafe.Pointer\n    Flags           ValidationCacheCreateFlags\n    InitialDataSize uint\n    PInitialData    unsafe.Pointer\n}\n</code></pre> <p>ValidationCacheCreateInfo as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkValidationCacheCreateInfoEXT.html</p>"},{"location":"api/rendering/vulkan/#validationcacheheaderversion","title":"ValidationCacheHeaderVersion","text":"<p>int32 <pre><code>type ValidationCacheHeaderVersion int32\n</code></pre></p> <p>ValidationCacheHeaderVersion as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkValidationCacheHeaderVersionEXT.html</p> <p>const ( ValidationCacheHeaderVersionOne ValidationCacheHeaderVersion = 1 ValidationCacheHeaderVersionBeginRange ValidationCacheHeaderVersion = 1 ValidationCacheHeaderVersionEndRange ValidationCacheHeaderVersion = 1 ValidationCacheHeaderVersionRangeSize ValidationCacheHeaderVersion = 1 ValidationCacheHeaderVersionMaxEnum ValidationCacheHeaderVersion = 2147483647 ) ValidationCacheHeaderVersion enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkValidationCacheHeaderVersionEXT.html</p>"},{"location":"api/rendering/vulkan/#validationcheck","title":"ValidationCheck","text":"<p>int32 <pre><code>type ValidationCheck int32\n</code></pre></p> <p>ValidationCheck as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkValidationCheckEXT.html</p> <p>const ( ValidationCheckAll ValidationCheck = iota ValidationCheckShaders ValidationCheck = 1 ValidationCheckBeginRange ValidationCheck = 0 ValidationCheckEndRange ValidationCheck = 1 ValidationCheckRangeSize ValidationCheck = 2 ValidationCheckMaxEnum ValidationCheck = 2147483647 ) ValidationCheck enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkValidationCheckEXT.html</p>"},{"location":"api/rendering/vulkan/#validationflags","title":"ValidationFlags","text":"<p><code>struct</code></p> <pre><code>type ValidationFlags struct {\n    SType                        StructureType\n    PNext                        unsafe.Pointer\n    DisabledValidationCheckCount uint32\n    PDisabledValidationChecks    *ValidationCheck\n}\n</code></pre> <p>ValidationFlags as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkValidationFlagsEXT.html</p>"},{"location":"api/rendering/vulkan/#vendorid","title":"VendorId","text":"<p>int32 <pre><code>type VendorId int32\n</code></pre></p> <p>VendorId as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkVendorId.html</p> <p>const ( VendorIdViv VendorId = 65537 VendorIdVsi VendorId = 65538 VendorIdKazan VendorId = 65539 VendorIdBeginRange VendorId = 65537 VendorIdEndRange VendorId = 65539 VendorIdRangeSize VendorId = 3 VendorIdMaxEnum VendorId = 2147483647 ) VendorId enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkVendorId.html</p>"},{"location":"api/rendering/vulkan/#version","title":"Version","text":"<p>uint32 <pre><code>type Version uint32\n</code></pre></p>"},{"location":"api/rendering/vulkan/#versionmajor","title":"Version.Major","text":"<pre><code>func (v Version) Major() int\n</code></pre>"},{"location":"api/rendering/vulkan/#versionminor","title":"Version.Minor","text":"<pre><code>func (v Version) Minor() int\n</code></pre>"},{"location":"api/rendering/vulkan/#versionpatch","title":"Version.Patch","text":"<pre><code>func (v Version) Patch() int\n</code></pre>"},{"location":"api/rendering/vulkan/#versionstring","title":"Version.String","text":"<pre><code>func (v Version) String() string\n</code></pre>"},{"location":"api/rendering/vulkan/#vertexinputattributedescription","title":"VertexInputAttributeDescription","text":"<p><code>struct</code></p> <pre><code>type VertexInputAttributeDescription struct {\n    Location uint32\n    Binding  uint32\n    Format   Format\n    Offset   uint32\n}\n</code></pre> <p>VertexInputAttributeDescription as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkVertexInputAttributeDescription.html</p>"},{"location":"api/rendering/vulkan/#vertexinputbindingdescription","title":"VertexInputBindingDescription","text":"<p><code>struct</code></p> <pre><code>type VertexInputBindingDescription struct {\n    Binding   uint32\n    Stride    uint32\n    InputRate VertexInputRate\n}\n</code></pre> <p>VertexInputBindingDescription as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkVertexInputBindingDescription.html</p>"},{"location":"api/rendering/vulkan/#vertexinputbindingdivisordescription","title":"VertexInputBindingDivisorDescription","text":"<p><code>struct</code></p> <pre><code>type VertexInputBindingDivisorDescription struct {\n    Binding uint32\n    Divisor uint32\n}\n</code></pre> <p>VertexInputBindingDivisorDescription as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkVertexInputBindingDivisorDescriptionEXT.html</p>"},{"location":"api/rendering/vulkan/#vertexinputrate","title":"VertexInputRate","text":"<p>int32 <pre><code>type VertexInputRate int32\n</code></pre></p> <p>VertexInputRate as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkVertexInputRate.html</p> <p>const ( VertexInputRateVertex VertexInputRate = iota VertexInputRateInstance VertexInputRate = 1 VertexInputRateBeginRange VertexInputRate = 0 VertexInputRateEndRange VertexInputRate = 1 VertexInputRateRangeSize VertexInputRate = 2 VertexInputRateMaxEnum VertexInputRate = 2147483647 ) VertexInputRate enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkVertexInputRate.html</p>"},{"location":"api/rendering/vulkan/#viewport","title":"Viewport","text":"<p><code>struct</code></p> <pre><code>type Viewport struct {\n    X        float32\n    Y        float32\n    Width    float32\n    Height   float32\n    MinDepth float32\n    MaxDepth float32\n}\n</code></pre> <p>Viewport as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkViewport.html</p>"},{"location":"api/rendering/vulkan/#viewportcoordinateswizzlenv","title":"ViewportCoordinateSwizzleNV","text":"<p>int32 <pre><code>type ViewportCoordinateSwizzleNV int32\n</code></pre></p> <p>ViewportCoordinateSwizzleNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkViewportCoordinateSwizzleNV.html</p> <p>const ( ViewportCoordinateSwizzlePositiveXNv ViewportCoordinateSwizzleNV = iota ViewportCoordinateSwizzleNegativeXNv ViewportCoordinateSwizzleNV = 1 ViewportCoordinateSwizzlePositiveYNv ViewportCoordinateSwizzleNV = 2 ViewportCoordinateSwizzleNegativeYNv ViewportCoordinateSwizzleNV = 3 ViewportCoordinateSwizzlePositiveZNv ViewportCoordinateSwizzleNV = 4 ViewportCoordinateSwizzleNegativeZNv ViewportCoordinateSwizzleNV = 5 ViewportCoordinateSwizzlePositiveWNv ViewportCoordinateSwizzleNV = 6 ViewportCoordinateSwizzleNegativeWNv ViewportCoordinateSwizzleNV = 7 ViewportCoordinateSwizzleBeginRangeNv ViewportCoordinateSwizzleNV = 0 ViewportCoordinateSwizzleEndRangeNv ViewportCoordinateSwizzleNV = 7 ViewportCoordinateSwizzleRangeSizeNv ViewportCoordinateSwizzleNV = 8 ViewportCoordinateSwizzleMaxEnumNv ViewportCoordinateSwizzleNV = 2147483647 ) ViewportCoordinateSwizzleNV enumeration from https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkViewportCoordinateSwizzleNV.html</p>"},{"location":"api/rendering/vulkan/#viewportswizzlenv","title":"ViewportSwizzleNV","text":"<p><code>struct</code></p> <pre><code>type ViewportSwizzleNV struct {\n    X ViewportCoordinateSwizzleNV\n    Y ViewportCoordinateSwizzleNV\n    Z ViewportCoordinateSwizzleNV\n    W ViewportCoordinateSwizzleNV\n}\n</code></pre> <p>ViewportSwizzleNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkViewportSwizzleNV.html</p>"},{"location":"api/rendering/vulkan/#viewportwscalingnv","title":"ViewportWScalingNV","text":"<p><code>struct</code></p> <pre><code>type ViewportWScalingNV struct {\n    Xcoeff float32\n    Ycoeff float32\n}\n</code></pre> <p>ViewportWScalingNV as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkViewportWScalingNV.html</p>"},{"location":"api/rendering/vulkan/#writedescriptorset","title":"WriteDescriptorSet","text":"<p><code>struct</code></p> <pre><code>type WriteDescriptorSet struct {\n    SType            StructureType\n    PNext            unsafe.Pointer\n    DstSet           DescriptorSet\n    DstBinding       uint32\n    DstArrayElement  uint32\n    DescriptorCount  uint32\n    DescriptorType   DescriptorType\n    PImageInfo       *DescriptorImageInfo\n    PBufferInfo      *DescriptorBufferInfo\n    PTexelBufferView *BufferView\n}\n</code></pre> <p>WriteDescriptorSet as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkWriteDescriptorSet.html</p>"},{"location":"api/rendering/vulkan/#writedescriptorsetinlineuniformblock","title":"WriteDescriptorSetInlineUniformBlock","text":"<p><code>struct</code></p> <pre><code>type WriteDescriptorSetInlineUniformBlock struct {\n    SType    StructureType\n    PNext    unsafe.Pointer\n    DataSize uint32\n    PData    unsafe.Pointer\n}\n</code></pre> <p>WriteDescriptorSetInlineUniformBlock as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkWriteDescriptorSetInlineUniformBlockEXT.html</p>"},{"location":"api/rendering/vulkan/#xycolor","title":"XYColor","text":"<p><code>struct</code></p> <pre><code>type XYColor struct {\n    X float32\n    Y float32\n}\n</code></pre> <p>XYColor as declared in https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkXYColorEXT.html</p>"},{"location":"api/runtime/encoding/gob/","title":"package gob","text":"<pre><code>import \"kaiju/runtime/encoding/gob\"\n</code></pre>"},{"location":"api/runtime/encoding/gob/#functions","title":"Functions","text":""},{"location":"api/runtime/encoding/gob/#register","title":"Register","text":"<pre><code>func Register(value any)\n</code></pre> <p>Register records a type, identified by a value for that type, under its internal type name. That name will identify the concrete type of a value sent or received as an interface variable. Only types that will be transferred as implementations of interface values need to be registered. Expecting to be used only during initialization, it panics if the mapping between types and names is not a bijection.</p>"},{"location":"api/runtime/encoding/gob/#registername","title":"RegisterName","text":"<pre><code>func RegisterName(name string, value any)\n</code></pre> <p>RegisterName is like Register but uses the provided name rather than the type's default.</p>"},{"location":"api/runtime/encoding/gob/#registernamedtype","title":"RegisterNamedType","text":"<pre><code>func RegisterNamedType(name string, typ reflect.Type)\n</code></pre> <p>RegisterName is like RegisterName but uses a reflected type rather than passing to an interface{}.</p>"},{"location":"api/runtime/encoding/gob/#unregistername","title":"UnRegisterName","text":"<pre><code>func UnRegisterName(name string)\n</code></pre> <p>UnRegisterName will remove a previously registered from the gob registry.</p>"},{"location":"api/runtime/encoding/gob/#types","title":"Types","text":""},{"location":"api/runtime/encoding/gob/#commontype","title":"CommonType","text":"<p><code>struct</code></p> <pre><code>type CommonType struct {\n    Name string\n    Id   typeId\n}\n</code></pre> <p>CommonType holds elements of all types. It is a historical artifact, kept for binary compatibility and exported only for the benefit of the package's encoding of type descriptors. It is not intended for direct use by clients.</p>"},{"location":"api/runtime/encoding/gob/#decoder","title":"Decoder","text":"<p><code>struct</code></p> <pre><code>type Decoder struct {\n    // Has unexported fields.\n}\n</code></pre> <p>A Decoder manages the receipt of type and data information read from the remote side of a connection. It is safe for concurrent use by multiple goroutines.</p> <p>The Decoder does only basic sanity checking on decoded input sizes, and its limits are not configurable. Take caution when decoding gob data from untrusted sources.</p>"},{"location":"api/runtime/encoding/gob/#newdecoder","title":"NewDecoder","text":"<pre><code>func NewDecoder(r io.Reader) *Decoder\n</code></pre> <p>NewDecoder returns a new decoder that reads from the io.Reader. If r does not also implement io.ByteReader, it will be wrapped in a bufio.Reader.</p>"},{"location":"api/runtime/encoding/gob/#decoderdecode","title":"Decoder.Decode","text":"<pre><code>func (dec *Decoder) Decode(e any) error\n</code></pre> <p>Decode reads the next value from the input stream and stores it in the data represented by the empty interface value. If e is nil, the value will be discarded. Otherwise, the value underlying e must be a pointer to the correct type for the next data item received. If the input is at EOF, Decode returns io.EOF and does not modify e.</p>"},{"location":"api/runtime/encoding/gob/#decoderdecodevalue","title":"Decoder.DecodeValue","text":"<pre><code>func (dec *Decoder) DecodeValue(v reflect.Value) error\n</code></pre> <p>DecodeValue reads the next value from the input stream. If v is the zero reflect.Value (v.Kind() == Invalid), DecodeValue discards the value. Otherwise, it stores the value into v. In that case, v must represent a non-nil pointer to data or be an assignable reflect.Value (v.CanSet()) If the input is at EOF, DecodeValue returns io.EOF and does not modify v.</p>"},{"location":"api/runtime/encoding/gob/#encoder","title":"Encoder","text":"<p><code>struct</code></p> <pre><code>type Encoder struct {\n    // Has unexported fields.\n}\n</code></pre> <p>An Encoder manages the transmission of type and data information to the other side of a connection. It is safe for concurrent use by multiple goroutines.</p>"},{"location":"api/runtime/encoding/gob/#newencoder","title":"NewEncoder","text":"<pre><code>func NewEncoder(w io.Writer) *Encoder\n</code></pre> <p>NewEncoder returns a new encoder that will transmit on the io.Writer.</p>"},{"location":"api/runtime/encoding/gob/#encoderencode","title":"Encoder.Encode","text":"<pre><code>func (enc *Encoder) Encode(e any) error\n</code></pre> <p>Encode transmits the data item represented by the empty interface value, guaranteeing that all necessary type information has been transmitted first. Passing a nil pointer to Encoder will panic, as they cannot be transmitted by gob.</p>"},{"location":"api/runtime/encoding/gob/#encoderencodevalue","title":"Encoder.EncodeValue","text":"<pre><code>func (enc *Encoder) EncodeValue(value reflect.Value) error\n</code></pre> <p>EncodeValue transmits the data item represented by the reflection value, guaranteeing that all necessary type information has been transmitted first. Passing a nil pointer to EncodeValue will panic, as they cannot be transmitted by gob.</p>"},{"location":"api/runtime/encoding/gob/#gobdecoder","title":"GobDecoder","text":"<p><code>interface</code></p> <pre><code>type GobDecoder interface {\n    // GobDecode overwrites the receiver, which must be a pointer,\n    // with the value represented by the byte slice, which was written\n    // by GobEncode, usually for the same concrete type.\n    GobDecode([]byte) error\n}\n</code></pre> <p>GobDecoder is the interface describing data that provides its own routine for decoding transmitted values sent by a GobEncoder.</p>"},{"location":"api/runtime/encoding/gob/#gobencoder","title":"GobEncoder","text":"<p><code>interface</code></p> <pre><code>type GobEncoder interface {\n    // GobEncode returns a byte slice representing the encoding of the\n    // receiver for transmission to a GobDecoder, usually of the same\n    // concrete type.\n    GobEncode() ([]byte, error)\n}\n</code></pre> <p>GobEncoder is the interface describing data that provides its own representation for encoding values for transmission to a GobDecoder. A type that implements GobEncoder and GobDecoder has complete control over the representation of its data and may therefore contain things such as private fields, channels, and functions, which are not usually transmissible in gob streams.</p> <p>Note: Since gobs can be stored permanently, it is good design to guarantee the encoding used by a GobEncoder is stable as the software evolves. For instance, it might make sense for GobEncode to include a version number in the encoding.</p>"},{"location":"api/source/","title":"package source","text":"<pre><code>import \"kaiju/source\"\n</code></pre>"},{"location":"api/source/#functions","title":"Functions","text":""},{"location":"api/source/#main","title":"Main","text":"<pre><code>func Main(host *engine.Host)\n</code></pre>"},{"location":"api/systems/console/","title":"package console","text":"<pre><code>import \"kaiju/systems/console\"\n</code></pre>"},{"location":"api/systems/console/#variables","title":"Variables","text":""},{"location":"api/systems/console/#errcommandnotfound","title":"ErrCommandNotFound","text":"<p><code>errors.New(\"the command with the given key does not exist\")</code></p>"},{"location":"api/systems/console/#functions","title":"Functions","text":""},{"location":"api/systems/console/#unlinkhost","title":"UnlinkHost","text":"<pre><code>func UnlinkHost(host *engine.Host)\n</code></pre>"},{"location":"api/systems/console/#types","title":"Types","text":""},{"location":"api/systems/console/#console","title":"Console","text":"<p><code>struct</code></p> <pre><code>type Console struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/systems/console/#for","title":"For","text":"<pre><code>func For(host *engine.Host) *Console\n</code></pre>"},{"location":"api/systems/console/#consoleaddcommand","title":"Console.AddCommand","text":"<pre><code>func (c *Console) AddCommand(key, description string, fn ConsoleFunc)\n</code></pre>"},{"location":"api/systems/console/#consoledata","title":"Console.Data","text":"<pre><code>func (c *Console) Data(key string) ConsoleData\n</code></pre>"},{"location":"api/systems/console/#consoledeletedata","title":"Console.DeleteData","text":"<pre><code>func (c *Console) DeleteData(key string)\n</code></pre>"},{"location":"api/systems/console/#consoleexeccommand","title":"Console.ExecCommand","text":"<pre><code>func (c *Console) ExecCommand(key, arg string) (string, error)\n</code></pre>"},{"location":"api/systems/console/#consolehasdata","title":"Console.HasData","text":"<pre><code>func (c *Console) HasData(key string) bool\n</code></pre>"},{"location":"api/systems/console/#consolehasuirequests","title":"Console.HasUIRequests","text":"<pre><code>func (c *Console) HasUIRequests() bool\n</code></pre>"},{"location":"api/systems/console/#consolehost","title":"Console.Host","text":"<pre><code>func (c *Console) Host() *engine.Host\n</code></pre>"},{"location":"api/systems/console/#consoleisactive","title":"Console.IsActive","text":"<pre><code>func (c *Console) IsActive() bool\n</code></pre>"},{"location":"api/systems/console/#consolesetdata","title":"Console.SetData","text":"<pre><code>func (c *Console) SetData(key string, data ConsoleData)\n</code></pre>"},{"location":"api/systems/console/#consolewrite","title":"Console.Write","text":"<pre><code>func (c *Console) Write(message string)\n</code></pre>"},{"location":"api/systems/console/#consoledata_1","title":"ConsoleData","text":"<p><code>interface</code></p> <pre><code>type ConsoleData interface{}\n</code></pre>"},{"location":"api/systems/console/#consolefunc","title":"ConsoleFunc","text":"<p>func <pre><code>type ConsoleFunc func(*engine.Host, string) string\n</code></pre></p>"},{"location":"api/systems/debug/","title":"package debug","text":"<pre><code>import \"kaiju/systems/debug\"\n</code></pre>"},{"location":"api/systems/debug/#functions","title":"Functions","text":""},{"location":"api/systems/debug/#drawray","title":"DrawRay","text":"<pre><code>func DrawRay(host *engine.Host, from, to matrix.Vec3, duration time.Duration)\n</code></pre>"},{"location":"api/systems/events/","title":"package events","text":"<pre><code>import \"kaiju/systems/events\"\n</code></pre>"},{"location":"api/systems/events/#types","title":"Types","text":""},{"location":"api/systems/events/#event","title":"Event","text":"<p><code>struct</code></p> <pre><code>type Event struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/systems/events/#new","title":"New","text":"<pre><code>func New() Event\n</code></pre>"},{"location":"api/systems/events/#eventadd","title":"Event.Add","text":"<pre><code>func (e *Event) Add(call func()) Id\n</code></pre>"},{"location":"api/systems/events/#eventexecute","title":"Event.Execute","text":"<pre><code>func (e *Event) Execute()\n</code></pre>"},{"location":"api/systems/events/#eventisempty","title":"Event.IsEmpty","text":"<pre><code>func (e Event) IsEmpty() bool\n</code></pre>"},{"location":"api/systems/events/#eventremove","title":"Event.Remove","text":"<pre><code>func (e *Event) Remove(id Id)\n</code></pre>"},{"location":"api/systems/events/#id","title":"Id","text":"<p>int64 <pre><code>type Id = int64\n</code></pre></p>"},{"location":"api/systems/logging/","title":"package logging","text":"<pre><code>import \"kaiju/systems/logging\"\n</code></pre>"},{"location":"api/systems/logging/#functions","title":"Functions","text":""},{"location":"api/systems/logging/#tomap","title":"ToMap","text":"<pre><code>func ToMap(logMessage string) map[string]string\n</code></pre>"},{"location":"api/systems/logging/#types","title":"Types","text":""},{"location":"api/systems/logging/#event","title":"Event","text":"<p><code>struct</code></p> <pre><code>type Event struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/systems/logging/#eventadd","title":"Event.Add","text":"<pre><code>func (e *Event) Add(call func(string)) EventId\n</code></pre>"},{"location":"api/systems/logging/#eventexecute","title":"Event.Execute","text":"<pre><code>func (e *Event) Execute(message string)\n</code></pre>"},{"location":"api/systems/logging/#eventisempty","title":"Event.IsEmpty","text":"<pre><code>func (e Event) IsEmpty() bool\n</code></pre>"},{"location":"api/systems/logging/#eventremove","title":"Event.Remove","text":"<pre><code>func (e *Event) Remove(id EventId)\n</code></pre>"},{"location":"api/systems/logging/#eventid","title":"EventId","text":"<p>int64 <pre><code>type EventId = int64\n</code></pre></p>"},{"location":"api/systems/logging/#logstream","title":"LogStream","text":"<p><code>struct</code></p> <pre><code>type LogStream struct {\n    OnInfo  Event\n    OnWarn  TracedEvent\n    OnError TracedEvent\n}\n</code></pre>"},{"location":"api/systems/logging/#initialize","title":"Initialize","text":"<pre><code>func Initialize(opts *slog.HandlerOptions) *LogStream\n</code></pre>"},{"location":"api/systems/logging/#logstreamwrite","title":"LogStream.Write","text":"<pre><code>func (l *LogStream) Write(p []byte) (n int, err error)\n</code></pre>"},{"location":"api/systems/logging/#runtimeloghandler","title":"RuntimeLogHandler","text":"<p><code>struct</code></p> <pre><code>type RuntimeLogHandler struct {\n    slog.Handler\n}\n</code></pre>"},{"location":"api/systems/logging/#runtimeloghandlerenabled","title":"RuntimeLogHandler.Enabled","text":"<pre><code>func (e *RuntimeLogHandler) Enabled(_ context.Context, level slog.Level) bool\n</code></pre>"},{"location":"api/systems/logging/#tracedevent","title":"TracedEvent","text":"<p><code>struct</code></p> <pre><code>type TracedEvent struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/systems/logging/#tracedeventadd","title":"TracedEvent.Add","text":"<pre><code>func (e *TracedEvent) Add(call func(msg string, trace []string)) EventId\n</code></pre>"},{"location":"api/systems/logging/#tracedeventexecute","title":"TracedEvent.Execute","text":"<pre><code>func (e *TracedEvent) Execute(message string, trace []string)\n</code></pre>"},{"location":"api/systems/logging/#tracedeventisempty","title":"TracedEvent.IsEmpty","text":"<pre><code>func (e TracedEvent) IsEmpty() bool\n</code></pre>"},{"location":"api/systems/logging/#tracedeventremove","title":"TracedEvent.Remove","text":"<pre><code>func (e *TracedEvent) Remove(id EventId)\n</code></pre>"},{"location":"api/systems/navigation/","title":"package navigation","text":"<pre><code>import \"kaiju/systems/navigation\"\n</code></pre>"},{"location":"api/systems/navigation/#types","title":"Types","text":""},{"location":"api/systems/navigation/#grid","title":"Grid","text":"<p>[][][]int8 <pre><code>type Grid [][][]int8\n</code></pre></p>"},{"location":"api/systems/navigation/#newgrid","title":"NewGrid","text":"<pre><code>func NewGrid(width, height, depth int) Grid\n</code></pre>"},{"location":"api/systems/navigation/#gridblockcell","title":"Grid.BlockCell","text":"<pre><code>func (g *Grid) BlockCell(pos matrix.Vec3i, blockType int8)\n</code></pre>"},{"location":"api/systems/navigation/#gridblockedtype","title":"Grid.BlockedType","text":"<pre><code>func (g Grid) BlockedType(pos matrix.Vec3i) int8\n</code></pre>"},{"location":"api/systems/navigation/#griddepth","title":"Grid.Depth","text":"<pre><code>func (g Grid) Depth() int\n</code></pre>"},{"location":"api/systems/navigation/#gridheight","title":"Grid.Height","text":"<pre><code>func (g Grid) Height() int\n</code></pre>"},{"location":"api/systems/navigation/#gridisblocked","title":"Grid.IsBlocked","text":"<pre><code>func (g Grid) IsBlocked(pos matrix.Vec3i) bool\n</code></pre>"},{"location":"api/systems/navigation/#gridisvalid","title":"Grid.IsValid","text":"<pre><code>func (g Grid) IsValid(pos matrix.Vec3i) bool\n</code></pre>"},{"location":"api/systems/navigation/#gridwidth","title":"Grid.Width","text":"<pre><code>func (g Grid) Width() int\n</code></pre>"},{"location":"api/systems/navigation/#node","title":"Node","text":"<p><code>struct</code></p> <pre><code>type Node struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/systems/navigation/#astar","title":"AStar","text":"<pre><code>func AStar(grid Grid, start, end matrix.Vec3i) []*Node\n</code></pre>"},{"location":"api/systems/navigation/#nodexyz","title":"Node.XYZ","text":"<pre><code>func (n Node) XYZ() matrix.Vec3i\n</code></pre>"},{"location":"api/systems/navigation/#priorityqueue","title":"PriorityQueue","text":"<p>[] <pre><code>type PriorityQueue []*Node\n</code></pre></p>"},{"location":"api/systems/navigation/#priorityqueuelen","title":"PriorityQueue.Len","text":"<pre><code>func (pq PriorityQueue) Len() int\n</code></pre>"},{"location":"api/systems/navigation/#priorityqueueless","title":"PriorityQueue.Less","text":"<pre><code>func (pq PriorityQueue) Less(i, j int) bool\n</code></pre>"},{"location":"api/systems/navigation/#priorityqueuepop","title":"PriorityQueue.Pop","text":"<pre><code>func (pq *PriorityQueue) Pop() interface{}\n</code></pre>"},{"location":"api/systems/navigation/#priorityqueuepush","title":"PriorityQueue.Push","text":"<pre><code>func (pq *PriorityQueue) Push(x interface{})\n</code></pre>"},{"location":"api/systems/navigation/#priorityqueueswap","title":"PriorityQueue.Swap","text":"<pre><code>func (pq PriorityQueue) Swap(i, j int)\n</code></pre>"},{"location":"api/systems/stages/","title":"package stages","text":"<pre><code>import \"kaiju/systems/stages\"\n</code></pre>"},{"location":"api/systems/stages/#functions","title":"Functions","text":""},{"location":"api/systems/stages/#load","title":"Load","text":"<pre><code>func Load(adi asset_info.AssetDatabaseInfo, host *engine.Host) error\n</code></pre>"},{"location":"api/systems/stages/#serializeentity","title":"SerializeEntity","text":"<pre><code>func SerializeEntity(stream io.Writer, entity *engine.Entity) error\n</code></pre>"},{"location":"api/systems/visual2d/sprite/","title":"package sprite","text":"<pre><code>import \"kaiju/systems/visual2d/sprite\"\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#variables","title":"Variables","text":""},{"location":"api/systems/visual2d/sprite/#zaxisscalefactor","title":"ZAxisScaleFactor","text":"<p><code>float32(16.0)</code></p>"},{"location":"api/systems/visual2d/sprite/#functions","title":"Functions","text":""},{"location":"api/systems/visual2d/sprite/#readspritesheetdata","title":"ReadSpriteSheetData","text":"<pre><code>func ReadSpriteSheetData(jsonStr string) (spriteSheet, error)\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#types","title":"Types","text":""},{"location":"api/systems/visual2d/sprite/#shaderdata","title":"ShaderData","text":"<p><code>struct</code></p> <pre><code>type ShaderData struct {\n    rendering.ShaderDataBase\n    UVs     matrix.Vec4\n    FgColor matrix.Color\n}\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#shaderdatasize","title":"ShaderData.Size","text":"<pre><code>func (t ShaderData) Size() int\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#sprite","title":"Sprite","text":"<p><code>struct</code></p> <pre><code>type Sprite struct {\n    Entity *engine.Entity\n\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#newsprite","title":"NewSprite","text":"<pre><code>func NewSprite(x, y, width, height matrix.Float,\n</code></pre> <p>host engine.Host, texture rendering.Texture, color matrix.Color) *Sprite</p>"},{"location":"api/systems/visual2d/sprite/#newspriteflipbook","title":"NewSpriteFlipBook","text":"<pre><code>func NewSpriteFlipBook(x, y, width, height float32,\n</code></pre> <p>host engine.Host, images []rendering.Texture, fps float32) *Sprite</p>"},{"location":"api/systems/visual2d/sprite/#newspritesheet","title":"NewSpriteSheet","text":"<pre><code>func NewSpriteSheet(x, y, width, height float32,\n</code></pre> <p>host engine.Host, texture rendering.Texture, jsonStr string, fps float32, initialClip string) *Sprite</p>"},{"location":"api/systems/visual2d/sprite/#spriteactivate","title":"Sprite.Activate","text":"<pre><code>func (s *Sprite) Activate()\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#spritecurrentclipname","title":"Sprite.CurrentClipName","text":"<pre><code>func (s Sprite) CurrentClipName() string\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#spritedeactivate","title":"Sprite.Deactivate","text":"<pre><code>func (s *Sprite) Deactivate()\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#spritemove","title":"Sprite.Move","text":"<pre><code>func (s *Sprite) Move(x, y matrix.Float)\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#spritemove3d","title":"Sprite.Move3D","text":"<pre><code>func (s *Sprite) Move3D(x, y, z matrix.Float)\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#spriteplayanimation","title":"Sprite.PlayAnimation","text":"<pre><code>func (s *Sprite) PlayAnimation()\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#spriteposition","title":"Sprite.Position","text":"<pre><code>func (s *Sprite) Position() matrix.Vec2\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#spriteresize","title":"Sprite.Resize","text":"<pre><code>func (s *Sprite) Resize(width, height matrix.Float)\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#spritesetcolor","title":"Sprite.SetColor","text":"<pre><code>func (s *Sprite) SetColor(color matrix.Color)\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#spritesetflipbookanimation","title":"Sprite.SetFlipBookAnimation","text":"<pre><code>func (s *Sprite) SetFlipBookAnimation(\n</code></pre> <p>framesPerSecond float32, textures ...*rendering.Texture)</p>"},{"location":"api/systems/visual2d/sprite/#spritesetframerate","title":"Sprite.SetFrameRate","text":"<pre><code>func (s *Sprite) SetFrameRate(framesPerSecond float32)\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#spritesetposition","title":"Sprite.SetPosition","text":"<pre><code>func (s *Sprite) SetPosition(x, y matrix.Float)\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#spritesetposition3d","title":"Sprite.SetPosition3D","text":"<pre><code>func (s *Sprite) SetPosition3D(x, y, z matrix.Float)\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#spritesetsheetclip","title":"Sprite.SetSheetClip","text":"<pre><code>func (s *Sprite) SetSheetClip(clipName string)\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#spritesettexture","title":"Sprite.SetTexture","text":"<pre><code>func (s *Sprite) SetTexture(texture *rendering.Texture)\n</code></pre>"},{"location":"api/systems/visual2d/sprite/#spritestopanimation","title":"Sprite.StopAnimation","text":"<pre><code>func (s *Sprite) StopAnimation()\n</code></pre>"},{"location":"api/tests/calls/","title":"package calls","text":"<pre><code>import \"kaiju/tests/calls\"\n</code></pre>"},{"location":"api/tests/rendering_tests/","title":"package tests","text":"<pre><code>import \"kaiju/tests/rendering_tests\"\n</code></pre>"},{"location":"api/tests/rendering_tests/#constants","title":"Constants","text":""},{"location":"api/tests/rendering_tests/#functions","title":"Functions","text":""},{"location":"api/tests/rendering_tests/#setupconsole","title":"SetupConsole","text":"<pre><code>func SetupConsole(host *engine.Host)\n</code></pre>"},{"location":"api/tests/rendering_tests/#types","title":"Types","text":""},{"location":"api/tests/rendering_tests/#bonetransform","title":"BoneTransform","text":"<p><code>struct</code></p> <pre><code>type BoneTransform struct {\n    Transform *matrix.Transform\n    Skin      matrix.Mat4\n}\n</code></pre>"},{"location":"api/tests/rendering_tests/#testbasicshaderdata","title":"TestBasicShaderData","text":"<p><code>struct</code></p> <pre><code>type TestBasicShaderData struct {\n    rendering.ShaderDataBase\n    Color matrix.Color\n}\n</code></pre>"},{"location":"api/tests/rendering_tests/#testbasicshaderdatasize","title":"TestBasicShaderData.Size","text":"<pre><code>func (t TestBasicShaderData) Size() int\n</code></pre>"},{"location":"api/tests/rendering_tests/#testbasicskinnedshaderdata","title":"TestBasicSkinnedShaderData","text":"<p><code>struct</code></p> <pre><code>type TestBasicSkinnedShaderData struct {\n    Bones []BoneTransform\n\n    rendering.ShaderDataBase\n    Color     matrix.Color\n    SkinIndex int32\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/tests/rendering_tests/#testbasicskinnedshaderdatanameddatainstancesize","title":"TestBasicSkinnedShaderData.NamedDataInstanceSize","text":"<pre><code>func (t *TestBasicSkinnedShaderData) NamedDataInstanceSize(name string) int\n</code></pre>"},{"location":"api/tests/rendering_tests/#testbasicskinnedshaderdatanameddatapointer","title":"TestBasicSkinnedShaderData.NamedDataPointer","text":"<pre><code>func (t *TestBasicSkinnedShaderData) NamedDataPointer(name string) unsafe.Pointer\n</code></pre>"},{"location":"api/tests/rendering_tests/#testbasicskinnedshaderdatasize","title":"TestBasicSkinnedShaderData.Size","text":"<pre><code>func (t TestBasicSkinnedShaderData) Size() int\n</code></pre>"},{"location":"api/tests/rendering_tests/#testbasicskinnedshaderdataupdatenameddata","title":"TestBasicSkinnedShaderData.UpdateNamedData","text":"<pre><code>func (t *TestBasicSkinnedShaderData) UpdateNamedData(index, capacity int, name string) bool\n</code></pre>"},{"location":"api/tools/html_preview/","title":"package html_preview","text":"<pre><code>import \"kaiju/tools/html_preview\"\n</code></pre>"},{"location":"api/tools/html_preview/#functions","title":"Functions","text":""},{"location":"api/tools/html_preview/#new","title":"New","text":"<pre><code>func New(htmlFile string) (*host_container.Container, error)\n</code></pre>"},{"location":"api/tools/html_preview/#setupconsole","title":"SetupConsole","text":"<pre><code>func SetupConsole(host *engine.Host)\n</code></pre>"},{"location":"api/tools/html_preview/#types","title":"Types","text":""},{"location":"api/tools/html_preview/#preview","title":"Preview","text":"<p><code>struct</code></p> <pre><code>type Preview struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/ui/","title":"package ui","text":"<pre><code>import \"kaiju/ui\"\n</code></pre>"},{"location":"api/ui/#constants","title":"Constants","text":""},{"location":"api/ui/#eventtypeinvalid","title":"EventTypeInvalid","text":"<p><code>iota</code></p>"},{"location":"api/ui/#eventtypeenter","title":"EventTypeEnter","text":""},{"location":"api/ui/#eventtypeexit","title":"EventTypeExit","text":""},{"location":"api/ui/#eventtypeclick","title":"EventTypeClick","text":""},{"location":"api/ui/#eventtyperightclick","title":"EventTypeRightClick","text":""},{"location":"api/ui/#eventtypedoubleclick","title":"EventTypeDoubleClick","text":""},{"location":"api/ui/#eventtypedown","title":"EventTypeDown","text":""},{"location":"api/ui/#eventtypeup","title":"EventTypeUp","text":""},{"location":"api/ui/#eventtypemiss","title":"EventTypeMiss","text":""},{"location":"api/ui/#eventtypedragstart","title":"EventTypeDragStart","text":""},{"location":"api/ui/#eventtypedragend","title":"EventTypeDragEnd","text":""},{"location":"api/ui/#eventtypedrop","title":"EventTypeDrop","text":""},{"location":"api/ui/#eventtypedropenter","title":"EventTypeDropEnter","text":""},{"location":"api/ui/#eventtypedropexit","title":"EventTypeDropExit","text":""},{"location":"api/ui/#eventtypescroll","title":"EventTypeScroll","text":""},{"location":"api/ui/#eventtyperebuild","title":"EventTypeRebuild","text":""},{"location":"api/ui/#eventtypedestroy","title":"EventTypeDestroy","text":""},{"location":"api/ui/#eventtypesubmit","title":"EventTypeSubmit","text":""},{"location":"api/ui/#eventtypechange","title":"EventTypeChange","text":""},{"location":"api/ui/#eventtyperender","title":"EventTypeRender","text":""},{"location":"api/ui/#eventtypekeydown","title":"EventTypeKeyDown","text":""},{"location":"api/ui/#eventtypekeyup","title":"EventTypeKeyUp","text":""},{"location":"api/ui/#eventtypeend","title":"EventTypeEnd","text":""},{"location":"api/ui/#inputtypedefault","title":"InputTypeDefault","text":"<p><code>iota</code></p>"},{"location":"api/ui/#inputtypetext","title":"InputTypeText","text":""},{"location":"api/ui/#inputtypenumber","title":"InputTypeNumber","text":""},{"location":"api/ui/#inputtypephone","title":"InputTypePhone","text":""},{"location":"api/ui/#inputtypedatetime","title":"InputTypeDatetime","text":""},{"location":"api/ui/#anchortopleft","title":"AnchorTopLeft","text":"<p><code>Anchor(1 + iota)</code></p>"},{"location":"api/ui/#anchortopcenter","title":"AnchorTopCenter","text":""},{"location":"api/ui/#anchortopright","title":"AnchorTopRight","text":""},{"location":"api/ui/#anchorleft","title":"AnchorLeft","text":""},{"location":"api/ui/#anchorcenter","title":"AnchorCenter","text":""},{"location":"api/ui/#anchorright","title":"AnchorRight","text":""},{"location":"api/ui/#anchorbottomleft","title":"AnchorBottomLeft","text":""},{"location":"api/ui/#anchorbottomcenter","title":"AnchorBottomCenter","text":""},{"location":"api/ui/#anchorbottomright","title":"AnchorBottomRight","text":""},{"location":"api/ui/#anchorstretchleft","title":"AnchorStretchLeft","text":""},{"location":"api/ui/#anchorstretchtop","title":"AnchorStretchTop","text":""},{"location":"api/ui/#anchorstretchright","title":"AnchorStretchRight","text":""},{"location":"api/ui/#anchorstretchbottom","title":"AnchorStretchBottom","text":""},{"location":"api/ui/#anchorstretchcenter","title":"AnchorStretchCenter","text":""},{"location":"api/ui/#positioningstatic","title":"PositioningStatic","text":"<p><code>Positioning(iota)</code></p>"},{"location":"api/ui/#positioningabsolute","title":"PositioningAbsolute","text":""},{"location":"api/ui/#positioningfixed","title":"PositioningFixed","text":""},{"location":"api/ui/#positioningrelative","title":"PositioningRelative","text":""},{"location":"api/ui/#positioningsticky","title":"PositioningSticky","text":""},{"location":"api/ui/#panelscrolldirectionnone","title":"PanelScrollDirectionNone","text":"<p><code>0x00</code></p>"},{"location":"api/ui/#panelscrolldirectionvertical","title":"PanelScrollDirectionVertical","text":"<p><code>0x01</code></p>"},{"location":"api/ui/#panelscrolldirectionhorizontal","title":"PanelScrollDirectionHorizontal","text":"<p><code>0x02</code></p>"},{"location":"api/ui/#panelscrolldirectionboth","title":"PanelScrollDirectionBoth","text":"<p><code>0x03</code></p>"},{"location":"api/ui/#borderstylenone","title":"BorderStyleNone","text":"<p><code>iota</code></p>"},{"location":"api/ui/#borderstylehidden","title":"BorderStyleHidden","text":""},{"location":"api/ui/#borderstyledotted","title":"BorderStyleDotted","text":""},{"location":"api/ui/#borderstyledashed","title":"BorderStyleDashed","text":""},{"location":"api/ui/#borderstylesolid","title":"BorderStyleSolid","text":""},{"location":"api/ui/#borderstyledouble","title":"BorderStyleDouble","text":""},{"location":"api/ui/#borderstylegroove","title":"BorderStyleGroove","text":""},{"location":"api/ui/#borderstyleridge","title":"BorderStyleRidge","text":""},{"location":"api/ui/#borderstyleinset","title":"BorderStyleInset","text":""},{"location":"api/ui/#borderstyleoutset","title":"BorderStyleOutset","text":""},{"location":"api/ui/#contentfitnone","title":"ContentFitNone","text":"<p><code>iota</code></p>"},{"location":"api/ui/#contentfitwidth","title":"ContentFitWidth","text":""},{"location":"api/ui/#contentfitheight","title":"ContentFitHeight","text":""},{"location":"api/ui/#contentfitboth","title":"ContentFitBoth","text":""},{"location":"api/ui/#overflowscroll","title":"OverflowScroll","text":"<p><code>iota</code></p>"},{"location":"api/ui/#overflowvisible","title":"OverflowVisible","text":""},{"location":"api/ui/#overflowhidden","title":"OverflowHidden","text":""},{"location":"api/ui/#dirtytypenone","title":"DirtyTypeNone","text":"<p><code>iota</code></p>"},{"location":"api/ui/#dirtytypelayout","title":"DirtyTypeLayout","text":""},{"location":"api/ui/#dirtytyperesize","title":"DirtyTypeResize","text":""},{"location":"api/ui/#dirtytypegenerated","title":"DirtyTypeGenerated","text":""},{"location":"api/ui/#dirtytypecolorchange","title":"DirtyTypeColorChange","text":""},{"location":"api/ui/#dirtytypescissor","title":"DirtyTypeScissor","text":""},{"location":"api/ui/#dirtytypeparent","title":"DirtyTypeParent","text":""},{"location":"api/ui/#dirtytypeparentlayout","title":"DirtyTypeParentLayout","text":""},{"location":"api/ui/#dirtytypeparentresize","title":"DirtyTypeParentResize","text":""},{"location":"api/ui/#dirtytypeparentgenerated","title":"DirtyTypeParentGenerated","text":""},{"location":"api/ui/#dirtytypeparentregenerated","title":"DirtyTypeParentReGenerated","text":""},{"location":"api/ui/#dirtytypeparentcolorchange","title":"DirtyTypeParentColorChange","text":""},{"location":"api/ui/#dirtytypeparentscissor","title":"DirtyTypeParentScissor","text":""},{"location":"api/ui/#elementtypelabel","title":"ElementTypeLabel","text":"<p><code>ElementType(iota)</code></p>"},{"location":"api/ui/#elementtypepanel","title":"ElementTypePanel","text":""},{"location":"api/ui/#elementtypebutton","title":"ElementTypeButton","text":""},{"location":"api/ui/#elementtypecheckbox","title":"ElementTypeCheckbox","text":""},{"location":"api/ui/#elementtypeimage","title":"ElementTypeImage","text":""},{"location":"api/ui/#elementtypeinput","title":"ElementTypeInput","text":""},{"location":"api/ui/#elementtypeprogressbar","title":"ElementTypeProgressBar","text":""},{"location":"api/ui/#elementtypeselect","title":"ElementTypeSelect","text":""},{"location":"api/ui/#elementtypeslider","title":"ElementTypeSlider","text":""},{"location":"api/ui/#entitydataname","title":"EntityDataName","text":"<p><code>\"ui\"</code></p>"},{"location":"api/ui/#labelfontsize","title":"LabelFontSize","text":"<p>14.0</p>"},{"location":"api/ui/#types","title":"Types","text":""},{"location":"api/ui/#anchor","title":"Anchor","text":"<p>int32 <pre><code>type Anchor int32\n</code></pre></p>"},{"location":"api/ui/#anchorconverttobottom","title":"Anchor.ConvertToBottom","text":"<pre><code>func (a Anchor) ConvertToBottom() Anchor\n</code></pre>"},{"location":"api/ui/#anchorconverttocenter","title":"Anchor.ConvertToCenter","text":"<pre><code>func (a Anchor) ConvertToCenter() Anchor\n</code></pre>"},{"location":"api/ui/#anchorconverttoleft","title":"Anchor.ConvertToLeft","text":"<pre><code>func (a Anchor) ConvertToLeft() Anchor\n</code></pre>"},{"location":"api/ui/#anchorconverttoright","title":"Anchor.ConvertToRight","text":"<pre><code>func (a Anchor) ConvertToRight() Anchor\n</code></pre>"},{"location":"api/ui/#anchorconverttotop","title":"Anchor.ConvertToTop","text":"<pre><code>func (a Anchor) ConvertToTop() Anchor\n</code></pre>"},{"location":"api/ui/#anchorisbottom","title":"Anchor.IsBottom","text":"<pre><code>func (a Anchor) IsBottom() bool\n</code></pre>"},{"location":"api/ui/#anchorisleft","title":"Anchor.IsLeft","text":"<pre><code>func (a Anchor) IsLeft() bool\n</code></pre>"},{"location":"api/ui/#anchorisright","title":"Anchor.IsRight","text":"<pre><code>func (a Anchor) IsRight() bool\n</code></pre>"},{"location":"api/ui/#anchorisstretch","title":"Anchor.IsStretch","text":"<pre><code>func (a Anchor) IsStretch() bool\n</code></pre>"},{"location":"api/ui/#anchoristop","title":"Anchor.IsTop","text":"<pre><code>func (a Anchor) IsTop() bool\n</code></pre>"},{"location":"api/ui/#borderstyle","title":"BorderStyle","text":"<p>int32 <pre><code>type BorderStyle = int32\n</code></pre></p>"},{"location":"api/ui/#button","title":"Button","text":"<p>Panel <pre><code>type Button Panel\n</code></pre></p>"},{"location":"api/ui/#buttonbase","title":"Button.Base","text":"<pre><code>func (b *Button) Base() *UI\n</code></pre>"},{"location":"api/ui/#buttonbuttondata","title":"Button.ButtonData","text":"<pre><code>func (b *Button) ButtonData() *buttonData\n</code></pre>"},{"location":"api/ui/#buttoninit","title":"Button.Init","text":"<pre><code>func (b *Button) Init(texture *rendering.Texture, text string, anchor Anchor)\n</code></pre>"},{"location":"api/ui/#buttonlabel","title":"Button.Label","text":"<pre><code>func (b *Button) Label() *Label\n</code></pre>"},{"location":"api/ui/#buttonsetcolor","title":"Button.SetColor","text":"<pre><code>func (b *Button) SetColor(color matrix.Color)\n</code></pre>"},{"location":"api/ui/#checkbox","title":"Checkbox","text":"<p>Panel <pre><code>type Checkbox Panel\n</code></pre></p>"},{"location":"api/ui/#checkboxbase","title":"Checkbox.Base","text":"<pre><code>func (cb *Checkbox) Base() *UI\n</code></pre>"},{"location":"api/ui/#checkboxcheckboxdata","title":"Checkbox.CheckboxData","text":"<pre><code>func (cb *Checkbox) CheckboxData() *checkboxData\n</code></pre>"},{"location":"api/ui/#checkboxinit","title":"Checkbox.Init","text":"<pre><code>func (cb *Checkbox) Init(anchor Anchor)\n</code></pre>"},{"location":"api/ui/#checkboxischecked","title":"Checkbox.IsChecked","text":"<pre><code>func (cb Checkbox) IsChecked() bool\n</code></pre>"},{"location":"api/ui/#checkboxsetchecked","title":"Checkbox.SetChecked","text":"<pre><code>func (cb *Checkbox) SetChecked(isChecked bool)\n</code></pre>"},{"location":"api/ui/#contentfit","title":"ContentFit","text":"<p>int32 <pre><code>type ContentFit = int32\n</code></pre></p>"},{"location":"api/ui/#dirtytype","title":"DirtyType","text":"<p>int <pre><code>type DirtyType = int\n</code></pre></p>"},{"location":"api/ui/#elementtype","title":"ElementType","text":"<p>uint8 <pre><code>type ElementType = uint8\n</code></pre></p>"},{"location":"api/ui/#eventtype","title":"EventType","text":"<p>int <pre><code>type EventType = int\n</code></pre></p>"},{"location":"api/ui/#group","title":"Group","text":"<p><code>struct</code></p> <pre><code>type Group struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/ui/#newgroup","title":"NewGroup","text":"<pre><code>func NewGroup() *Group\n</code></pre>"},{"location":"api/ui/#groupattach","title":"Group.Attach","text":"<pre><code>func (group *Group) Attach(host *engine.Host)\n</code></pre>"},{"location":"api/ui/#groupdetach","title":"Group.Detach","text":"<pre><code>func (group *Group) Detach(host *engine.Host)\n</code></pre>"},{"location":"api/ui/#grouphasrequests","title":"Group.HasRequests","text":"<pre><code>func (group *Group) HasRequests() bool\n</code></pre>"},{"location":"api/ui/#groupsetthreaded","title":"Group.SetThreaded","text":"<pre><code>func (g *Group) SetThreaded()\n</code></pre>"},{"location":"api/ui/#image","title":"Image","text":"<p>Panel <pre><code>type Image Panel\n</code></pre></p>"},{"location":"api/ui/#imagebase","title":"Image.Base","text":"<pre><code>func (s *Image) Base() *UI\n</code></pre>"},{"location":"api/ui/#imageimagedata","title":"Image.ImageData","text":"<pre><code>func (s *Image) ImageData() *imageData\n</code></pre>"},{"location":"api/ui/#imageinit","title":"Image.Init","text":"<pre><code>func (s *Image) Init(texture *rendering.Texture, anchor Anchor)\n</code></pre>"},{"location":"api/ui/#imageplayanimation","title":"Image.PlayAnimation","text":"<pre><code>func (img *Image) PlayAnimation()\n</code></pre>"},{"location":"api/ui/#imagesetflipbookanimation","title":"Image.SetFlipBookAnimation","text":"<pre><code>func (img *Image) SetFlipBookAnimation(framesPerSecond float32, textures ...*rendering.Texture)\n</code></pre>"},{"location":"api/ui/#imagesetframerate","title":"Image.SetFrameRate","text":"<pre><code>func (img *Image) SetFrameRate(framesPerSecond float32)\n</code></pre>"},{"location":"api/ui/#imagesettexture","title":"Image.SetTexture","text":"<pre><code>func (img *Image) SetTexture(texture *rendering.Texture)\n</code></pre>"},{"location":"api/ui/#imagestopanimation","title":"Image.StopAnimation","text":"<pre><code>func (img *Image) StopAnimation()\n</code></pre>"},{"location":"api/ui/#input","title":"Input","text":"<p>Panel <pre><code>type Input Panel\n</code></pre></p>"},{"location":"api/ui/#inputbase","title":"Input.Base","text":"<pre><code>func (input *Input) Base() *UI\n</code></pre>"},{"location":"api/ui/#inputfocus","title":"Input.Focus","text":"<pre><code>func (input *Input) Focus()\n</code></pre>"},{"location":"api/ui/#inputinit","title":"Input.Init","text":"<pre><code>func (input *Input) Init(placeholderText string, anchor Anchor)\n</code></pre>"},{"location":"api/ui/#inputinputdata","title":"Input.InputData","text":"<pre><code>func (input *Input) InputData() *inputData\n</code></pre>"},{"location":"api/ui/#inputinserttext","title":"Input.InsertText","text":"<pre><code>func (input *Input) InsertText(text string)\n</code></pre>"},{"location":"api/ui/#inputisfocused","title":"Input.IsFocused","text":"<pre><code>func (input *Input) IsFocused() bool\n</code></pre>"},{"location":"api/ui/#inputremovefocus","title":"Input.RemoveFocus","text":"<pre><code>func (input *Input) RemoveFocus()\n</code></pre>"},{"location":"api/ui/#inputselectall","title":"Input.SelectAll","text":"<pre><code>func (input *Input) SelectAll()\n</code></pre>"},{"location":"api/ui/#inputsetbgcolor","title":"Input.SetBGColor","text":"<pre><code>func (input *Input) SetBGColor(newColor matrix.Color)\n</code></pre>"},{"location":"api/ui/#inputsetcursorcolor","title":"Input.SetCursorColor","text":"<pre><code>func (input *Input) SetCursorColor(newColor matrix.Color)\n</code></pre>"},{"location":"api/ui/#inputsetcursoroffset","title":"Input.SetCursorOffset","text":"<pre><code>func (input *Input) SetCursorOffset(offset int)\n</code></pre>"},{"location":"api/ui/#inputsetdescription","title":"Input.SetDescription","text":"<pre><code>func (input *Input) SetDescription(text string)\n</code></pre>"},{"location":"api/ui/#inputsetfgcolor","title":"Input.SetFGColor","text":"<pre><code>func (input *Input) SetFGColor(newColor matrix.Color)\n</code></pre>"},{"location":"api/ui/#inputsetfontsize","title":"Input.SetFontSize","text":"<pre><code>func (input *Input) SetFontSize(fontSize float32)\n</code></pre>"},{"location":"api/ui/#inputsetnextfocusedinput","title":"Input.SetNextFocusedInput","text":"<pre><code>func (input *Input) SetNextFocusedInput(next *Input)\n</code></pre>"},{"location":"api/ui/#inputsetplaceholder","title":"Input.SetPlaceholder","text":"<pre><code>func (input *Input) SetPlaceholder(text string)\n</code></pre>"},{"location":"api/ui/#inputsetselectcolor","title":"Input.SetSelectColor","text":"<pre><code>func (input *Input) SetSelectColor(newColor matrix.Color)\n</code></pre>"},{"location":"api/ui/#inputsettext","title":"Input.SetText","text":"<pre><code>func (input *Input) SetText(text string)\n</code></pre>"},{"location":"api/ui/#inputsettextcolor","title":"Input.SetTextColor","text":"<pre><code>func (input *Input) SetTextColor(newColor matrix.Color)\n</code></pre>"},{"location":"api/ui/#inputsettextwithoutevent","title":"Input.SetTextWithoutEvent","text":"<pre><code>func (input *Input) SetTextWithoutEvent(text string)\n</code></pre>"},{"location":"api/ui/#inputsettitle","title":"Input.SetTitle","text":"<pre><code>func (input *Input) SetTitle(text string)\n</code></pre>"},{"location":"api/ui/#inputsettype","title":"Input.SetType","text":"<pre><code>func (input *Input) SetType(inputType InputType)\n</code></pre>"},{"location":"api/ui/#inputtext","title":"Input.Text","text":"<pre><code>func (input *Input) Text() string\n</code></pre>"},{"location":"api/ui/#inputtype","title":"InputType","text":"<p>int32 <pre><code>type InputType = int32\n</code></pre></p>"},{"location":"api/ui/#label","title":"Label","text":"<p>UI <pre><code>type Label UI\n</code></pre></p>"},{"location":"api/ui/#labelbase","title":"Label.Base","text":"<pre><code>func (l *Label) Base() *UI\n</code></pre>"},{"location":"api/ui/#labelboldrange","title":"Label.BoldRange","text":"<pre><code>func (label *Label) BoldRange(start, end int)\n</code></pre>"},{"location":"api/ui/#labelcalculatemaxwidth","title":"Label.CalculateMaxWidth","text":"<pre><code>func (label *Label) CalculateMaxWidth() float32\n</code></pre>"},{"location":"api/ui/#labelcolorrange","title":"Label.ColorRange","text":"<pre><code>func (label *Label) ColorRange(start, end int, newColor, bgColor matrix.Color)\n</code></pre>"},{"location":"api/ui/#labelenforcebgcolor","title":"Label.EnforceBGColor","text":"<pre><code>func (label *Label) EnforceBGColor(color matrix.Color)\n</code></pre>"},{"location":"api/ui/#labelenforcefgcolor","title":"Label.EnforceFGColor","text":"<pre><code>func (label *Label) EnforceFGColor(color matrix.Color)\n</code></pre>"},{"location":"api/ui/#labelfontface","title":"Label.FontFace","text":"<pre><code>func (label *Label) FontFace() rendering.FontFace\n</code></pre>"},{"location":"api/ui/#labelfontsize_1","title":"Label.FontSize","text":"<pre><code>func (label *Label) FontSize() float32\n</code></pre>"},{"location":"api/ui/#labelhide","title":"Label.Hide","text":"<pre><code>func (label *Label) Hide()\n</code></pre>"},{"location":"api/ui/#labelinit","title":"Label.Init","text":"<pre><code>func (label *Label) Init(text string, anchor Anchor)\n</code></pre>"},{"location":"api/ui/#labellabeldata","title":"Label.LabelData","text":"<pre><code>func (l *Label) LabelData() *labelData\n</code></pre>"},{"location":"api/ui/#labellineheight","title":"Label.LineHeight","text":"<pre><code>func (label *Label) LineHeight() float32\n</code></pre>"},{"location":"api/ui/#labelmaxwidth","title":"Label.MaxWidth","text":"<pre><code>func (label *Label) MaxWidth() float32\n</code></pre>"},{"location":"api/ui/#labelmeasure","title":"Label.Measure","text":"<pre><code>func (label *Label) Measure() matrix.Vec2\n</code></pre>"},{"location":"api/ui/#labelsetbgcolor","title":"Label.SetBGColor","text":"<pre><code>func (label *Label) SetBGColor(newColor matrix.Color)\n</code></pre>"},{"location":"api/ui/#labelsetbaseline","title":"Label.SetBaseline","text":"<pre><code>func (label *Label) SetBaseline(baseline rendering.FontBaseline)\n</code></pre>"},{"location":"api/ui/#labelsetcolor","title":"Label.SetColor","text":"<pre><code>func (label *Label) SetColor(newColor matrix.Color)\n</code></pre>"},{"location":"api/ui/#labelsetfontsize","title":"Label.SetFontSize","text":"<pre><code>func (label *Label) SetFontSize(size float32)\n</code></pre>"},{"location":"api/ui/#labelsetfontstyle","title":"Label.SetFontStyle","text":"<pre><code>func (label *Label) SetFontStyle(style string)\n</code></pre>"},{"location":"api/ui/#labelsetfontweight","title":"Label.SetFontWeight","text":"<pre><code>func (label *Label) SetFontWeight(weight string)\n</code></pre>"},{"location":"api/ui/#labelsetjustify","title":"Label.SetJustify","text":"<pre><code>func (label *Label) SetJustify(justify rendering.FontJustify)\n</code></pre>"},{"location":"api/ui/#labelsetlineheight","title":"Label.SetLineHeight","text":"<pre><code>func (label *Label) SetLineHeight(height float32)\n</code></pre>"},{"location":"api/ui/#labelsetmaxwidth","title":"Label.SetMaxWidth","text":"<pre><code>func (label *Label) SetMaxWidth(maxWidth float32)\n</code></pre>"},{"location":"api/ui/#labelsettext","title":"Label.SetText","text":"<pre><code>func (label *Label) SetText(text string)\n</code></pre>"},{"location":"api/ui/#labelsetwidthautoheight","title":"Label.SetWidthAutoHeight","text":"<pre><code>func (label *Label) SetWidthAutoHeight(width float32)\n</code></pre>"},{"location":"api/ui/#labelsetwrap","title":"Label.SetWrap","text":"<pre><code>func (label *Label) SetWrap(wrapText bool)\n</code></pre>"},{"location":"api/ui/#labelshow","title":"Label.Show","text":"<pre><code>func (label *Label) Show()\n</code></pre>"},{"location":"api/ui/#labeltext","title":"Label.Text","text":"<pre><code>func (label *Label) Text() string\n</code></pre>"},{"location":"api/ui/#labelunenforcebgcolor","title":"Label.UnEnforceBGColor","text":"<pre><code>func (label *Label) UnEnforceBGColor()\n</code></pre>"},{"location":"api/ui/#labelunenforcefgcolor","title":"Label.UnEnforceFGColor","text":"<pre><code>func (label *Label) UnEnforceFGColor()\n</code></pre>"},{"location":"api/ui/#layout","title":"Layout","text":"<p><code>struct</code></p> <pre><code>type Layout struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/ui/#layoutaddfunction","title":"Layout.AddFunction","text":"<pre><code>func (l *Layout) AddFunction(fn func(layout *Layout)) LayoutFuncId\n</code></pre>"},{"location":"api/ui/#layoutanchor","title":"Layout.Anchor","text":"<pre><code>func (l *Layout) Anchor() Anchor\n</code></pre>"},{"location":"api/ui/#layoutanchorto","title":"Layout.AnchorTo","text":"<pre><code>func (l *Layout) AnchorTo(anchorPosition Anchor)\n</code></pre>"},{"location":"api/ui/#layoutborder","title":"Layout.Border","text":"<pre><code>func (l *Layout) Border() matrix.Vec4\n</code></pre>"},{"location":"api/ui/#layoutcalcoffset","title":"Layout.CalcOffset","text":"<pre><code>func (l *Layout) CalcOffset() matrix.Vec2\n</code></pre>"},{"location":"api/ui/#layoutclearfunctions","title":"Layout.ClearFunctions","text":"<pre><code>func (l *Layout) ClearFunctions()\n</code></pre>"},{"location":"api/ui/#layoutcontentsize","title":"Layout.ContentSize","text":"<pre><code>func (l *Layout) ContentSize() (float32, float32)\n</code></pre>"},{"location":"api/ui/#layoutinneroffset","title":"Layout.InnerOffset","text":"<pre><code>func (l *Layout) InnerOffset() matrix.Vec4\n</code></pre>"},{"location":"api/ui/#layoutlocalinneroffset","title":"Layout.LocalInnerOffset","text":"<pre><code>func (l *Layout) LocalInnerOffset() matrix.Vec4\n</code></pre>"},{"location":"api/ui/#layoutmargin","title":"Layout.Margin","text":"<pre><code>func (l *Layout) Margin() matrix.Vec4\n</code></pre>"},{"location":"api/ui/#layoutoffset","title":"Layout.Offset","text":"<pre><code>func (l *Layout) Offset() matrix.Vec2\n</code></pre>"},{"location":"api/ui/#layoutpadding","title":"Layout.Padding","text":"<pre><code>func (l *Layout) Padding() matrix.Vec4\n</code></pre>"},{"location":"api/ui/#layoutpixelsize","title":"Layout.PixelSize","text":"<pre><code>func (l *Layout) PixelSize() matrix.Vec2\n</code></pre>"},{"location":"api/ui/#layoutpositioning","title":"Layout.Positioning","text":"<pre><code>func (l *Layout) Positioning() Positioning\n</code></pre>"},{"location":"api/ui/#layoutremovefunction","title":"Layout.RemoveFunction","text":"<pre><code>func (l *Layout) RemoveFunction(id LayoutFuncId)\n</code></pre>"},{"location":"api/ui/#layoutscale","title":"Layout.Scale","text":"<pre><code>func (l *Layout) Scale(width, height float32) bool\n</code></pre>"},{"location":"api/ui/#layoutscaleheight","title":"Layout.ScaleHeight","text":"<pre><code>func (l *Layout) ScaleHeight(height float32) bool\n</code></pre>"},{"location":"api/ui/#layoutscalewidth","title":"Layout.ScaleWidth","text":"<pre><code>func (l *Layout) ScaleWidth(width float32) bool\n</code></pre>"},{"location":"api/ui/#layoutsetborder","title":"Layout.SetBorder","text":"<pre><code>func (l *Layout) SetBorder(left, top, right, bottom float32)\n</code></pre>"},{"location":"api/ui/#layoutsetinneroffset","title":"Layout.SetInnerOffset","text":"<pre><code>func (l *Layout) SetInnerOffset(left, top, right, bottom float32)\n</code></pre>"},{"location":"api/ui/#layoutsetinneroffsetbottom","title":"Layout.SetInnerOffsetBottom","text":"<pre><code>func (l *Layout) SetInnerOffsetBottom(offset float32)\n</code></pre>"},{"location":"api/ui/#layoutsetinneroffsetleft","title":"Layout.SetInnerOffsetLeft","text":"<pre><code>func (l *Layout) SetInnerOffsetLeft(offset float32)\n</code></pre>"},{"location":"api/ui/#layoutsetinneroffsetright","title":"Layout.SetInnerOffsetRight","text":"<pre><code>func (l *Layout) SetInnerOffsetRight(offset float32)\n</code></pre>"},{"location":"api/ui/#layoutsetinneroffsettop","title":"Layout.SetInnerOffsetTop","text":"<pre><code>func (l *Layout) SetInnerOffsetTop(offset float32)\n</code></pre>"},{"location":"api/ui/#layoutsetlocalinneroffset","title":"Layout.SetLocalInnerOffset","text":"<pre><code>func (l *Layout) SetLocalInnerOffset(left, top, right, bottom float32)\n</code></pre>"},{"location":"api/ui/#layoutsetmargin","title":"Layout.SetMargin","text":"<pre><code>func (l *Layout) SetMargin(left, top, right, bottom float32)\n</code></pre>"},{"location":"api/ui/#layoutsetoffset","title":"Layout.SetOffset","text":"<pre><code>func (l *Layout) SetOffset(x, y float32)\n</code></pre>"},{"location":"api/ui/#layoutsetpadding","title":"Layout.SetPadding","text":"<pre><code>func (l *Layout) SetPadding(left, top, right, bottom float32)\n</code></pre>"},{"location":"api/ui/#layoutsetpositioning","title":"Layout.SetPositioning","text":"<pre><code>func (l *Layout) SetPositioning(pos Positioning)\n</code></pre>"},{"location":"api/ui/#layoutsetrowlayoutoffset","title":"Layout.SetRowLayoutOffset","text":"<pre><code>func (l *Layout) SetRowLayoutOffset(offset matrix.Vec2)\n</code></pre>"},{"location":"api/ui/#layoutsetstretch","title":"Layout.SetStretch","text":"<pre><code>func (l *Layout) SetStretch(left, top, right, bottom float32)\n</code></pre>"},{"location":"api/ui/#layoutsetstretchratio","title":"Layout.SetStretchRatio","text":"<pre><code>func (l *Layout) SetStretchRatio(leftRatio, topRatio, rightRatio, bottomRatio float32)\n</code></pre>"},{"location":"api/ui/#layoutsetz","title":"Layout.SetZ","text":"<pre><code>func (l *Layout) SetZ(z float32)\n</code></pre>"},{"location":"api/ui/#layoutstretch","title":"Layout.Stretch","text":"<pre><code>func (l *Layout) Stretch() matrix.Vec4\n</code></pre>"},{"location":"api/ui/#layoutui","title":"Layout.Ui","text":"<pre><code>func (l *Layout) Ui() *UI\n</code></pre>"},{"location":"api/ui/#layoutz","title":"Layout.Z","text":"<pre><code>func (l *Layout) Z() float32\n</code></pre>"},{"location":"api/ui/#layoutfuncid","title":"LayoutFuncId","text":"<p>int64 <pre><code>type LayoutFuncId = int64\n</code></pre></p>"},{"location":"api/ui/#layoutfunctions","title":"LayoutFunctions","text":"<p><code>struct</code></p> <pre><code>type LayoutFunctions struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/ui/#newevent","title":"NewEvent","text":"<pre><code>func NewEvent() LayoutFunctions\n</code></pre>"},{"location":"api/ui/#layoutfunctionsadd","title":"LayoutFunctions.Add","text":"<pre><code>func (lf *LayoutFunctions) Add(call func(layout *Layout)) LayoutFuncId\n</code></pre>"},{"location":"api/ui/#layoutfunctionsclear","title":"LayoutFunctions.Clear","text":"<pre><code>func (lf *LayoutFunctions) Clear()\n</code></pre>"},{"location":"api/ui/#layoutfunctionsexecute","title":"LayoutFunctions.Execute","text":"<pre><code>func (lf *LayoutFunctions) Execute(layout *Layout)\n</code></pre>"},{"location":"api/ui/#layoutfunctionsisempty","title":"LayoutFunctions.IsEmpty","text":"<pre><code>func (lf *LayoutFunctions) IsEmpty() bool\n</code></pre>"},{"location":"api/ui/#layoutfunctionsremove","title":"LayoutFunctions.Remove","text":"<pre><code>func (e *LayoutFunctions) Remove(id LayoutFuncId)\n</code></pre>"},{"location":"api/ui/#manager","title":"Manager","text":"<p><code>struct</code></p> <pre><code>type Manager struct {\n    Host  *engine.Host\n    Group *Group\n\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/ui/#manageradd","title":"Manager.Add","text":"<pre><code>func (man *Manager) Add() *UI\n</code></pre>"},{"location":"api/ui/#managerclear","title":"Manager.Clear","text":"<pre><code>func (man *Manager) Clear()\n</code></pre>"},{"location":"api/ui/#managerinit","title":"Manager.Init","text":"<pre><code>func (man *Manager) Init(host *engine.Host)\n</code></pre>"},{"location":"api/ui/#managerrelease","title":"Manager.Release","text":"<pre><code>func (man *Manager) Release()\n</code></pre>"},{"location":"api/ui/#managerremove","title":"Manager.Remove","text":"<pre><code>func (man *Manager) Remove(ui *UI)\n</code></pre>"},{"location":"api/ui/#managerreserve","title":"Manager.Reserve","text":"<pre><code>func (man *Manager) Reserve(additionalElements int)\n</code></pre>"},{"location":"api/ui/#overflow","title":"Overflow","text":"<p>int <pre><code>type Overflow = int\n</code></pre></p>"},{"location":"api/ui/#panel","title":"Panel","text":"<p>UI <pre><code>type Panel UI\n</code></pre></p>"},{"location":"api/ui/#firstpanelonentity","title":"FirstPanelOnEntity","text":"<pre><code>func FirstPanelOnEntity(entity *engine.Entity) *Panel\n</code></pre>"},{"location":"api/ui/#paneladdchild","title":"Panel.AddChild","text":"<pre><code>func (p *Panel) AddChild(target *UI)\n</code></pre>"},{"location":"api/ui/#panelbackground","title":"Panel.Background","text":"<pre><code>func (p *Panel) Background() *rendering.Texture\n</code></pre>"},{"location":"api/ui/#panelbase","title":"Panel.Base","text":"<pre><code>func (p *Panel) Base() *UI\n</code></pre>"},{"location":"api/ui/#panelbordercolor","title":"Panel.BorderColor","text":"<pre><code>func (p *Panel) BorderColor() [4]matrix.Color\n</code></pre>"},{"location":"api/ui/#panelbordersize","title":"Panel.BorderSize","text":"<pre><code>func (p *Panel) BorderSize() matrix.Vec4\n</code></pre>"},{"location":"api/ui/#panelborderstyle","title":"Panel.BorderStyle","text":"<pre><code>func (p *Panel) BorderStyle() [4]BorderStyle\n</code></pre>"},{"location":"api/ui/#panelchild","title":"Panel.Child","text":"<pre><code>func (p *Panel) Child(index int) *UI\n</code></pre>"},{"location":"api/ui/#paneldisabledragscroll","title":"Panel.DisableDragScroll","text":"<pre><code>func (p *Panel) DisableDragScroll()\n</code></pre>"},{"location":"api/ui/#paneldontfitcontent","title":"Panel.DontFitContent","text":"<pre><code>func (p *Panel) DontFitContent()\n</code></pre>"},{"location":"api/ui/#paneldontfitcontentheight","title":"Panel.DontFitContentHeight","text":"<pre><code>func (p *Panel) DontFitContentHeight()\n</code></pre>"},{"location":"api/ui/#paneldontfitcontentwidth","title":"Panel.DontFitContentWidth","text":"<pre><code>func (p *Panel) DontFitContentWidth()\n</code></pre>"},{"location":"api/ui/#panelenabledragscroll","title":"Panel.EnableDragScroll","text":"<pre><code>func (p *Panel) EnableDragScroll()\n</code></pre>"},{"location":"api/ui/#panelenforcecolor","title":"Panel.EnforceColor","text":"<pre><code>func (p *Panel) EnforceColor(color matrix.Color)\n</code></pre>"},{"location":"api/ui/#panelfitcontent","title":"Panel.FitContent","text":"<pre><code>func (p *Panel) FitContent()\n</code></pre>"},{"location":"api/ui/#panelfitcontentheight","title":"Panel.FitContentHeight","text":"<pre><code>func (p *Panel) FitContentHeight()\n</code></pre>"},{"location":"api/ui/#panelfitcontentwidth","title":"Panel.FitContentWidth","text":"<pre><code>func (p *Panel) FitContentWidth()\n</code></pre>"},{"location":"api/ui/#panelfittingcontent","title":"Panel.FittingContent","text":"<pre><code>func (p *Panel) FittingContent() bool\n</code></pre>"},{"location":"api/ui/#panelfreeze","title":"Panel.Freeze","text":"<pre><code>func (p *Panel) Freeze()\n</code></pre>"},{"location":"api/ui/#panelhasenforcedcolor","title":"Panel.HasEnforcedColor","text":"<pre><code>func (p *Panel) HasEnforcedColor() bool\n</code></pre>"},{"location":"api/ui/#panelinit","title":"Panel.Init","text":"<pre><code>func (panel *Panel) Init(texture *rendering.Texture, anchor Anchor, elmType ElementType)\n</code></pre>"},{"location":"api/ui/#panelinsertchild","title":"Panel.InsertChild","text":"<pre><code>func (p *Panel) InsertChild(target *UI, idx int)\n</code></pre>"},{"location":"api/ui/#panelisfrozen","title":"Panel.IsFrozen","text":"<pre><code>func (p *Panel) IsFrozen() bool\n</code></pre>"},{"location":"api/ui/#panelisscrolling","title":"Panel.IsScrolling","text":"<pre><code>func (p *Panel) IsScrolling() bool\n</code></pre>"},{"location":"api/ui/#paneloverflow","title":"Panel.Overflow","text":"<pre><code>func (p *Panel) Overflow() Overflow\n</code></pre>"},{"location":"api/ui/#panelpaneldata","title":"Panel.PanelData","text":"<pre><code>func (p *Panel) PanelData() *panelData\n</code></pre>"},{"location":"api/ui/#panelremovebackground","title":"Panel.RemoveBackground","text":"<pre><code>func (p *Panel) RemoveBackground()\n</code></pre>"},{"location":"api/ui/#panelremovechild","title":"Panel.RemoveChild","text":"<pre><code>func (p *Panel) RemoveChild(target *UI)\n</code></pre>"},{"location":"api/ui/#panelresetscroll","title":"Panel.ResetScroll","text":"<pre><code>func (p *Panel) ResetScroll()\n</code></pre>"},{"location":"api/ui/#panelscrolldirection","title":"Panel.ScrollDirection","text":"<pre><code>func (p *Panel) ScrollDirection() PanelScrollDirection\n</code></pre>"},{"location":"api/ui/#panelscrollx","title":"Panel.ScrollX","text":"<pre><code>func (p *Panel) ScrollX() float32\n</code></pre>"},{"location":"api/ui/#panelscrolly","title":"Panel.ScrollY","text":"<pre><code>func (p *Panel) ScrollY() float32\n</code></pre>"},{"location":"api/ui/#panelsetbackground","title":"Panel.SetBackground","text":"<pre><code>func (p *Panel) SetBackground(tex *rendering.Texture)\n</code></pre>"},{"location":"api/ui/#panelsetbordercolor","title":"Panel.SetBorderColor","text":"<pre><code>func (p *Panel) SetBorderColor(left, top, right, bottom matrix.Color)\n</code></pre>"},{"location":"api/ui/#panelsetborderradius","title":"Panel.SetBorderRadius","text":"<pre><code>func (p *Panel) SetBorderRadius(topLeft, topRight, bottomRight, bottomLeft float32)\n</code></pre>"},{"location":"api/ui/#panelsetbordersize","title":"Panel.SetBorderSize","text":"<pre><code>func (p *Panel) SetBorderSize(left, top, right, bottom float32)\n</code></pre>"},{"location":"api/ui/#panelsetborderstyle","title":"Panel.SetBorderStyle","text":"<pre><code>func (p *Panel) SetBorderStyle(left, top, right, bottom BorderStyle)\n</code></pre>"},{"location":"api/ui/#panelsetcolor","title":"Panel.SetColor","text":"<pre><code>func (p *Panel) SetColor(bgColor matrix.Color)\n</code></pre>"},{"location":"api/ui/#panelsetoverflow","title":"Panel.SetOverflow","text":"<pre><code>func (p *Panel) SetOverflow(overflow Overflow)\n</code></pre>"},{"location":"api/ui/#panelsetscrolldirection","title":"Panel.SetScrollDirection","text":"<pre><code>func (p *Panel) SetScrollDirection(direction PanelScrollDirection)\n</code></pre>"},{"location":"api/ui/#panelsetscrollx","title":"Panel.SetScrollX","text":"<pre><code>func (p *Panel) SetScrollX(value float32)\n</code></pre>"},{"location":"api/ui/#panelsetscrolly","title":"Panel.SetScrollY","text":"<pre><code>func (p *Panel) SetScrollY(value float32)\n</code></pre>"},{"location":"api/ui/#panelsetspeed","title":"Panel.SetSpeed","text":"<pre><code>func (p *Panel) SetSpeed(speed float32)\n</code></pre>"},{"location":"api/ui/#panelsetuseblending","title":"Panel.SetUseBlending","text":"<pre><code>func (p *Panel) SetUseBlending(useBlending bool)\n</code></pre>"},{"location":"api/ui/#panelunenforcecolor","title":"Panel.UnEnforceColor","text":"<pre><code>func (p *Panel) UnEnforceColor()\n</code></pre>"},{"location":"api/ui/#panelunfreeze","title":"Panel.UnFreeze","text":"<pre><code>func (p *Panel) UnFreeze()\n</code></pre>"},{"location":"api/ui/#panelscrolldirection_1","title":"PanelScrollDirection","text":"<p>int32 <pre><code>type PanelScrollDirection = int32\n</code></pre></p>"},{"location":"api/ui/#positioning","title":"Positioning","text":"<p>int <pre><code>type Positioning = int\n</code></pre></p>"},{"location":"api/ui/#progressbar","title":"ProgressBar","text":"<p>Panel <pre><code>type ProgressBar Panel\n</code></pre></p>"},{"location":"api/ui/#progressbarbase","title":"ProgressBar.Base","text":"<pre><code>func (p *ProgressBar) Base() *UI\n</code></pre>"},{"location":"api/ui/#progressbarinit","title":"ProgressBar.Init","text":"<pre><code>func (p *ProgressBar) Init(fgTexture, bgTexture *rendering.Texture, anchor Anchor)\n</code></pre>"},{"location":"api/ui/#progressbarsetbgcolor","title":"ProgressBar.SetBGColor","text":"<pre><code>func (b *ProgressBar) SetBGColor(bgColor matrix.Color)\n</code></pre>"},{"location":"api/ui/#progressbarsetfgcolor","title":"ProgressBar.SetFGColor","text":"<pre><code>func (b *ProgressBar) SetFGColor(fgColor matrix.Color)\n</code></pre>"},{"location":"api/ui/#progressbarsetvalue","title":"ProgressBar.SetValue","text":"<pre><code>func (b *ProgressBar) SetValue(value float32)\n</code></pre>"},{"location":"api/ui/#progressbarvalue","title":"ProgressBar.Value","text":"<pre><code>func (b ProgressBar) Value() float32\n</code></pre>"},{"location":"api/ui/#select","title":"Select","text":"<p>Panel <pre><code>type Select Panel\n</code></pre></p>"},{"location":"api/ui/#selectaddoption","title":"Select.AddOption","text":"<pre><code>func (s *Select) AddOption(name string)\n</code></pre>"},{"location":"api/ui/#selectbase","title":"Select.Base","text":"<pre><code>func (s *Select) Base() *UI\n</code></pre>"},{"location":"api/ui/#selectinit","title":"Select.Init","text":"<pre><code>func (s *Select) Init(text string, options []string, anchor Anchor)\n</code></pre>"},{"location":"api/ui/#selectpickoption","title":"Select.PickOption","text":"<pre><code>func (s *Select) PickOption(index int)\n</code></pre>"},{"location":"api/ui/#selectpickoptionbylabel","title":"Select.PickOptionByLabel","text":"<pre><code>func (s *Select) PickOptionByLabel(label string)\n</code></pre>"},{"location":"api/ui/#selectselectdata","title":"Select.SelectData","text":"<pre><code>func (s *Select) SelectData() *selectData\n</code></pre>"},{"location":"api/ui/#selectsetcolor","title":"Select.SetColor","text":"<pre><code>func (s *Select) SetColor(newColor matrix.Color)\n</code></pre>"},{"location":"api/ui/#selectsetoptionscolor","title":"Select.SetOptionsColor","text":"<pre><code>func (s *Select) SetOptionsColor(newColor matrix.Color)\n</code></pre>"},{"location":"api/ui/#selectvalue","title":"Select.Value","text":"<pre><code>func (s *Select) Value() string\n</code></pre>"},{"location":"api/ui/#shaderdata","title":"ShaderData","text":"<p><code>struct</code></p> <pre><code>type ShaderData struct {\n    rendering.ShaderDataBase\n    UVs          matrix.Vec4\n    FgColor      matrix.Color\n    BgColor      matrix.Color\n    Scissor      matrix.Vec4\n    Size2D       matrix.Vec4\n    BorderRadius matrix.Vec4\n    BorderSize   matrix.Vec4\n    BorderColor  [4]matrix.Color\n    BorderLen    matrix.Vec2\n}\n</code></pre>"},{"location":"api/ui/#shaderdatasize","title":"ShaderData.Size","text":"<pre><code>func (s ShaderData) Size() int\n</code></pre>"},{"location":"api/ui/#slider","title":"Slider","text":"<p>Panel <pre><code>type Slider Panel\n</code></pre></p>"},{"location":"api/ui/#sliderbase","title":"Slider.Base","text":"<pre><code>func (s *Slider) Base() *UI\n</code></pre>"},{"location":"api/ui/#sliderdelta","title":"Slider.Delta","text":"<pre><code>func (slider Slider) Delta() float32\n</code></pre>"},{"location":"api/ui/#sliderinit","title":"Slider.Init","text":"<pre><code>func (s *Slider) Init(anchor Anchor)\n</code></pre>"},{"location":"api/ui/#slidersetbgcolor","title":"Slider.SetBGColor","text":"<pre><code>func (slider *Slider) SetBGColor(bgColor matrix.Color)\n</code></pre>"},{"location":"api/ui/#slidersetfgcolor","title":"Slider.SetFGColor","text":"<pre><code>func (slider *Slider) SetFGColor(fgColor matrix.Color)\n</code></pre>"},{"location":"api/ui/#slidersetvalue","title":"Slider.SetValue","text":"<pre><code>func (slider *Slider) SetValue(value float32)\n</code></pre>"},{"location":"api/ui/#slidersliderdata","title":"Slider.SliderData","text":"<pre><code>func (s *Slider) SliderData() *sliderData\n</code></pre>"},{"location":"api/ui/#slidervalue","title":"Slider.Value","text":"<pre><code>func (slider Slider) Value() float32\n</code></pre>"},{"location":"api/ui/#ui","title":"UI","text":"<p><code>struct</code></p> <pre><code>type UI struct {\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/ui/#allonentity","title":"AllOnEntity","text":"<pre><code>func AllOnEntity(entity *engine.Entity) []*UI\n</code></pre>"},{"location":"api/ui/#firstonentity","title":"FirstOnEntity","text":"<pre><code>func FirstOnEntity(entity *engine.Entity) *UI\n</code></pre>"},{"location":"api/ui/#uiaddevent","title":"UI.AddEvent","text":"<pre><code>func (ui *UI) AddEvent(evtType EventType, evt func()) events.Id\n</code></pre>"},{"location":"api/ui/#uiclean","title":"UI.Clean","text":"<pre><code>func (ui *UI) Clean()\n</code></pre>"},{"location":"api/ui/#uientity","title":"UI.Entity","text":"<pre><code>func (ui *UI) Entity() *engine.Entity\n</code></pre>"},{"location":"api/ui/#uievent","title":"UI.Event","text":"<pre><code>func (ui *UI) Event(evtType EventType) *events.Event\n</code></pre>"},{"location":"api/ui/#uiexecuteevent","title":"UI.ExecuteEvent","text":"<pre><code>func (ui *UI) ExecuteEvent(evtType EventType) bool\n</code></pre>"},{"location":"api/ui/#uigeneratescissor","title":"UI.GenerateScissor","text":"<pre><code>func (ui *UI) GenerateScissor()\n</code></pre>"},{"location":"api/ui/#uihide","title":"UI.Hide","text":"<pre><code>func (ui *UI) Hide()\n</code></pre>"},{"location":"api/ui/#uihost","title":"UI.Host","text":"<pre><code>func (ui *UI) Host() *engine.Host\n</code></pre>"},{"location":"api/ui/#uiistype","title":"UI.IsType","text":"<pre><code>func (ui *UI) IsType(elmType ElementType) bool\n</code></pre>"},{"location":"api/ui/#uilayout","title":"UI.Layout","text":"<pre><code>func (ui *UI) Layout() *Layout\n</code></pre>"},{"location":"api/ui/#uiremoveevent","title":"UI.RemoveEvent","text":"<pre><code>func (ui *UI) RemoveEvent(evtType EventType, evtId events.Id)\n</code></pre>"},{"location":"api/ui/#uisetdirty","title":"UI.SetDirty","text":"<pre><code>func (ui *UI) SetDirty(dirtyType DirtyType)\n</code></pre>"},{"location":"api/ui/#uishaderdata","title":"UI.ShaderData","text":"<pre><code>func (ui *UI) ShaderData() *ShaderData\n</code></pre>"},{"location":"api/ui/#uishow","title":"UI.Show","text":"<pre><code>func (ui *UI) Show()\n</code></pre>"},{"location":"api/ui/#uitobutton","title":"UI.ToButton","text":"<pre><code>func (u *UI) ToButton() *Button\n</code></pre>"},{"location":"api/ui/#uitocheckbox","title":"UI.ToCheckbox","text":"<pre><code>func (u *UI) ToCheckbox() *Checkbox\n</code></pre>"},{"location":"api/ui/#uitoimage","title":"UI.ToImage","text":"<pre><code>func (u *UI) ToImage() *Image\n</code></pre>"},{"location":"api/ui/#uitoinput","title":"UI.ToInput","text":"<pre><code>func (u *UI) ToInput() *Input\n</code></pre>"},{"location":"api/ui/#uitolabel","title":"UI.ToLabel","text":"<pre><code>func (u *UI) ToLabel() *Label\n</code></pre>"},{"location":"api/ui/#uitopanel","title":"UI.ToPanel","text":"<pre><code>func (u *UI) ToPanel() *Panel\n</code></pre>"},{"location":"api/ui/#uitoprogressbar","title":"UI.ToProgressBar","text":"<pre><code>func (u *UI) ToProgressBar() *ProgressBar\n</code></pre>"},{"location":"api/ui/#uitoselect","title":"UI.ToSelect","text":"<pre><code>func (u *UI) ToSelect() *Select\n</code></pre>"},{"location":"api/ui/#uitoslider","title":"UI.ToSlider","text":"<pre><code>func (u *UI) ToSlider() *Slider\n</code></pre>"},{"location":"api/ui/#uitype","title":"UI.Type","text":"<pre><code>func (ui *UI) Type() ElementType\n</code></pre>"},{"location":"api/ui/#uiupdate","title":"UI.Update","text":"<pre><code>func (ui *UI) Update(deltaTime float64)\n</code></pre>"},{"location":"api/ui/#uielementdata","title":"UIElementData","text":"<p><code>interface</code></p> <pre><code>type UIElementData interface {\n    // Has unexported methods.\n}\n</code></pre>"},{"location":"api/windowing/","title":"package windowing","text":"<pre><code>import \"kaiju/windowing\"\n</code></pre>"},{"location":"api/windowing/#functions","title":"Functions","text":""},{"location":"api/windowing/#dpi2px","title":"DPI2PX","text":"<pre><code>func DPI2PX(pixels, mm, targetMM int) int\n</code></pre>"},{"location":"api/windowing/#types","title":"Types","text":""},{"location":"api/windowing/#filesearch","title":"FileSearch","text":"<p><code>struct</code></p> <pre><code>type FileSearch struct {\n    Title     string\n    Extension string\n}\n</code></pre>"},{"location":"api/windowing/#window","title":"Window","text":"<p><code>struct</code></p> <pre><code>type Window struct {\n    Mouse      hid.Mouse\n    Keyboard   hid.Keyboard\n    Touch      hid.Touch\n    Stylus     hid.Stylus\n    Controller hid.Controller\n    Cursor     hid.Cursor\n    Renderer   rendering.Renderer\n\n    OnResize events.Event\n    OnMove   events.Event\n    // Has unexported fields.\n}\n</code></pre>"},{"location":"api/windowing/#new","title":"New","text":"<pre><code>func New(windowName string, width, height, x, y int) (*Window, error)\n</code></pre>"},{"location":"api/windowing/#windowaddborder","title":"Window.AddBorder","text":"<pre><code>func (w *Window) AddBorder()\n</code></pre>"},{"location":"api/windowing/#windowcenter","title":"Window.Center","text":"<pre><code>func (w *Window) Center() (x int, y int)\n</code></pre>"},{"location":"api/windowing/#windowclipboardcontents","title":"Window.ClipboardContents","text":"<pre><code>func (w *Window) ClipboardContents() string\n</code></pre>"},{"location":"api/windowing/#windowcopytoclipboard","title":"Window.CopyToClipboard","text":"<pre><code>func (w *Window) CopyToClipboard(text string)\n</code></pre>"},{"location":"api/windowing/#windowcursoribeam","title":"Window.CursorIbeam","text":"<pre><code>func (w *Window) CursorIbeam()\n</code></pre>"},{"location":"api/windowing/#windowcursorsizeall","title":"Window.CursorSizeAll","text":"<pre><code>func (w *Window) CursorSizeAll()\n</code></pre>"},{"location":"api/windowing/#windowcursorsizens","title":"Window.CursorSizeNS","text":"<pre><code>func (w *Window) CursorSizeNS()\n</code></pre>"},{"location":"api/windowing/#windowcursorsizewe","title":"Window.CursorSizeWE","text":"<pre><code>func (w *Window) CursorSizeWE()\n</code></pre>"},{"location":"api/windowing/#windowcursorstandard","title":"Window.CursorStandard","text":"<pre><code>func (w *Window) CursorStandard()\n</code></pre>"},{"location":"api/windowing/#windowdestroy","title":"Window.Destroy","text":"<pre><code>func (w *Window) Destroy()\n</code></pre>"},{"location":"api/windowing/#windowendupdate","title":"Window.EndUpdate","text":"<pre><code>func (w *Window) EndUpdate()\n</code></pre>"},{"location":"api/windowing/#windowfocus","title":"Window.Focus","text":"<pre><code>func (w *Window) Focus()\n</code></pre>"},{"location":"api/windowing/#windowgetdrawablesize","title":"Window.GetDrawableSize","text":"<pre><code>func (w *Window) GetDrawableSize() (int32, int32)\n</code></pre>"},{"location":"api/windowing/#windowgetinstanceextensions","title":"Window.GetInstanceExtensions","text":"<pre><code>func (w *Window) GetInstanceExtensions() []string\n</code></pre>"},{"location":"api/windowing/#windowheight","title":"Window.Height","text":"<pre><code>func (w *Window) Height() int\n</code></pre>"},{"location":"api/windowing/#windowisclosed","title":"Window.IsClosed","text":"<pre><code>func (w *Window) IsClosed() bool\n</code></pre>"},{"location":"api/windowing/#windowiscrashed","title":"Window.IsCrashed","text":"<pre><code>func (w *Window) IsCrashed() bool\n</code></pre>"},{"location":"api/windowing/#windowispcsize","title":"Window.IsPCSize","text":"<pre><code>func (w *Window) IsPCSize() bool\n</code></pre>"},{"location":"api/windowing/#windowisphonesize","title":"Window.IsPhoneSize","text":"<pre><code>func (w *Window) IsPhoneSize() bool\n</code></pre>"},{"location":"api/windowing/#windowistabletsize","title":"Window.IsTabletSize","text":"<pre><code>func (w *Window) IsTabletSize() bool\n</code></pre>"},{"location":"api/windowing/#windowplatforminstance","title":"Window.PlatformInstance","text":"<pre><code>func (w *Window) PlatformInstance() unsafe.Pointer\n</code></pre>"},{"location":"api/windowing/#windowplatformwindow","title":"Window.PlatformWindow","text":"<pre><code>func (w *Window) PlatformWindow() unsafe.Pointer\n</code></pre>"},{"location":"api/windowing/#windowpoll","title":"Window.Poll","text":"<pre><code>func (w *Window) Poll()\n</code></pre>"},{"location":"api/windowing/#windowposition","title":"Window.Position","text":"<pre><code>func (w *Window) Position() (x int, y int)\n</code></pre>"},{"location":"api/windowing/#windowremoveborder","title":"Window.RemoveBorder","text":"<pre><code>func (w *Window) RemoveBorder()\n</code></pre>"},{"location":"api/windowing/#windowsetposition","title":"Window.SetPosition","text":"<pre><code>func (w *Window) SetPosition(x, y int)\n</code></pre>"},{"location":"api/windowing/#windowsetsize","title":"Window.SetSize","text":"<pre><code>func (w *Window) SetSize(width, height int)\n</code></pre>"},{"location":"api/windowing/#windowsizemm","title":"Window.SizeMM","text":"<pre><code>func (w *Window) SizeMM() (int, int, error)\n</code></pre>"},{"location":"api/windowing/#windowswapbuffers","title":"Window.SwapBuffers","text":"<pre><code>func (w *Window) SwapBuffers()\n</code></pre>"},{"location":"api/windowing/#windowviewport","title":"Window.Viewport","text":"<pre><code>func (w *Window) Viewport() matrix.Vec4\n</code></pre>"},{"location":"api/windowing/#windowwidth","title":"Window.Width","text":"<pre><code>func (w *Window) Width() int\n</code></pre>"},{"location":"api/windowing/#windowx","title":"Window.X","text":"<pre><code>func (w *Window) X() int\n</code></pre>"},{"location":"api/windowing/#windowxy","title":"Window.XY","text":"<pre><code>func (w *Window) XY() (int, int)\n</code></pre>"},{"location":"api/windowing/#windowy","title":"Window.Y","text":"<pre><code>func (w *Window) Y() int\n</code></pre>"},{"location":"engine_developers/build_from_source-custom/","title":"Build from source","text":"<p>Below are instructions on how to build the engine from source. Please take care to ensure you're using the Kaiju Engine Go compiler. It is modified for speed (relating to games) and has some features enabled that are currently disabled in Go until the next release.</p>"},{"location":"engine_developers/build_from_source-custom/#prerequisites","title":"Prerequisites","text":"<p>To start, make sure you have the Vulkan SDK installed for your system.</p> <p>I have made modifications to the Go compiler to increase the performance of the engine, for this reason you'll need to build the engine with the Kaiju Engine Go compiler</p> <ul> <li>Download the Kaiju Engine Go compiler (release version 1.24)</li> <li>This should be placed along side the Kaiju Engine repository</li> <li>Checkout kaiju-go1.24, run <code>git checkout kaiju-go1.24</code>, inside of the repository folder</li> <li>Ensure you have the standard Go compiler installed (Go builds Go)</li> <li>Run the <code>make</code> script file for your platform inside of the <code>src</code> directory</li> <li>This will build the Kaiju Engine Go compiler into the <code>bin</code> directory</li> </ul>"},{"location":"engine_developers/build_from_source-custom/#windows-development","title":"Windows Development","text":"<ul> <li>Download mingw into <code>C:/</code></li> <li>I use x86_64-13.2.0-release-win32-seh-msvcrt-rt_v11-rev1.7z </li> <li>Add the <code>bin</code> folder to your environment path</li> <li>Mine is <code>C:\\mingw64\\bin</code></li> <li>Pull the repository</li> <li>To build the exe, run <code>go run build/build.go</code></li> <li>Make sure to use the Kaiju Engine Go compiler</li> </ul>"},{"location":"engine_developers/build_from_source-custom/#linux-development","title":"Linux development","text":"<ul> <li>Ensure you've got <code>gcc</code> installed</li> <li>Ensure you've got the X11 libs installed (xlib)</li> <li>Pull the repository</li> <li>To build the exe, run <code>go run build/build.go</code></li> <li>Make sure to use the Kaiju Engine Go compiler</li> </ul>"},{"location":"engine_developers/build_from_source-custom/#debug-in-vscode","title":"Debug in VSCode","text":"<ul> <li>Open the project in VSCode</li> <li>Press Ctrl+Shift+P and type \"Choose Go Environment\"</li> <li>Select the Kaiju Engine Go compiler <code>bin</code> folder</li> <li>Select one of the debug options</li> <li>Press F5</li> </ul>"},{"location":"engine_developers/build_from_source-custom/#building-content","title":"Building content","text":"<p>The source code is not deployed with the project template files generated. So you will want to generate these files before you begin playing around with creating projects. To do this, go into the src folder and run the command below. <pre><code>go run ./generators/project_template/main.go\n</code></pre></p> <p>This will generate the project template zip file. This zip file is extracted into the folder that you select when creating a new project. It has a copy of the source code and content. Also be sure that whenever you pull new changes in content from the repository, you run this command again to update the project template. This will also require you to re-extract the project template into your project folder.</p>"},{"location":"engine_developers/build_from_source/","title":"Build from source","text":"<p>Below are instructions on how to build the engine from source. Please take care to ensure you're using the Kaiju Engine Go compiler. It is modified for speed (relating to games) and has some features enabled that are currently disabled in Go until the next release.</p>"},{"location":"engine_developers/build_from_source/#prerequisites","title":"Prerequisites","text":"<p>To start, make sure you have the Vulkan SDK installed for your system.</p>"},{"location":"engine_developers/build_from_source/#windows-development","title":"Windows Development","text":"<ul> <li>Download mingw into <code>C:/</code></li> <li>I use x86_64-13.2.0-release-win32-seh-msvcrt-rt_v11-rev1.7z </li> <li>Add the <code>bin</code> folder to your environment path</li> <li>Mine is <code>C:\\mingw64\\bin</code></li> <li>Pull the repository</li> <li>To build the exe, run <code>go run build/build.go</code></li> <li>Make sure to use the Kaiju Engine Go compiler</li> </ul>"},{"location":"engine_developers/build_from_source/#linux-development","title":"Linux development","text":"<ul> <li>Ensure you've got <code>gcc</code> installed</li> <li>Ensure you've got the X11 libs installed (xlib)</li> <li>Pull the repository</li> <li>To build the exe, run <code>go run build/build.go</code></li> <li>Make sure to use the Kaiju Engine Go compiler</li> </ul>"},{"location":"engine_developers/build_from_source/#building-content","title":"Building content","text":"<p>The source code is not deployed with the project template files generated. So you will want to generate these files before you begin playing around with creating projects. To do this, go into the src folder and run the command below. <pre><code>go run ./generators/project_template/main.go\n</code></pre></p> <p>This will generate the project template zip file. This zip file is extracted into the folder that you select when creating a new project. It has a copy of the source code and content. Also be sure that whenever you pull new changes in content from the repository, you run this command again to update the project template. This will also require you to re-extract the project template into your project folder.</p>"},{"location":"engine_developers/building_fonts/","title":"Building new fonts","text":"<p>Kaiju uses MSDF (multi-channel signed distance field) fonts for rendering text. This allows for high quality text rendering at any size. Other forms of fonts (such as bitmap) is not supported by default, you'll need to add support for fonts like that yourself if you need to [1].</p>"},{"location":"engine_developers/building_fonts/#building-msdf-fonts","title":"Building MSDF fonts","text":"<p>To build new font's you'll need the <code>msdf-atlas-gen</code> tool, which can be found here. Place this executable into the <code>bin</code> folder of the Kaiju repository (you may need to create this folder). Also in this folder, create a folder for the font face you'd like to convert. For example, if you'd like to convert the OpenSans font, create a folder called <code>OpenSans</code>. Inside this folder, place the TTF files for the font. Lastly, you'll need to create a text file named <code>charset.txt</code> within your font folder. This text file should have all of the characters you need out of your font. Check out the sample <code>charset.txt</code> file in the <code>content/editor/fonts/charset.txt</code> file for an example. Make note of double quotes on the ends, the escaped characters, and the UTF-8 file format.</p> <p>Once you've done this setup work, you can run the following command from within the <code>src</code> folder:</p> <pre><code>go run ./generators/msdf/main.go OpenSans\n</code></pre>"},{"location":"engine_developers/building_fonts/#using-msdf-fonts","title":"Using MSDF fonts","text":"<p>You'll need to replace <code>OpenSans</code> with whatever your folder name is. Once this process completes, it will create a new folder within your font folder <code>out</code> which has all the <code>.bin</code> and <code>.png</code> files for your font. So this would be <code>OpenSans/out</code> in our example.</p> <p>Copy these files over to the <code>content/fonts</code> folder or the <code>content/editor/fonts</code> folder to begin using them. At this point you can create a <code>const</code> wherever you need it that is <code>rendering.FontFace</code> (a <code>string</code> alias). This is what you will pass into the font/label code to bind your font face for use.</p>"},{"location":"engine_developers/building_fonts/#notes","title":"Notes","text":"<p>[1] The font system uses a mapping of character-&gt;glyph so it has everything you need to support bitmap fonts. You'll need to change the shader that is used by the font system to support bitmap fonts. You'll also need to make a custom build of the <code>.bin</code> file to go along with your font, see how the <code>src/generators/msdf/main.go</code> builds this binary for more information.</p>"},{"location":"engine_developers/editor_windows/","title":"Editor windows","text":"<p>To create an editor window, you will need to create a HTML file and optionally CSS files to design your UI. You then need to construct a new host container which will also create a new window.</p> <p>The quickest way to get started would be to checkout the About window it's HTML and CSS file. It is the simplest example of a window and should give you a good idea of how to create one.</p>"},{"location":"engine_developers/prompt_popup/","title":"Prompt popups","text":"<p>There are times in the engine code where you need to get some sort of feedback immediately from the developer before you continue to do any actions. Usually this is in the form of an alert box with ok and cancel buttons or a input box for some text. For this, the alert package is used, we have two functions, New and NewInput. Both of these return a channel so that you can block until the pop up is complete. below are a couple of examples of how to use these functions.</p>"},{"location":"engine_developers/prompt_popup/#new","title":"New","text":"<pre><code>ok := &lt;-alert.New(\"Save Changes\", \"You are changing stages, any unsaved changes will be lost. Are you sure you wish to continue?\", \"Yes\", \"No\", host)\n// ok will be true if the \"Yes\" (ok) button was clicked\n</code></pre>"},{"location":"engine_developers/prompt_popup/#newinput","title":"NewInput","text":"<pre><code>name := &lt;-alert.NewInput(\"Stage Name\", \"Name of stage...\", \"\", \"Save\", \"Cancel\", host)\n// The result will be \"\" if cancel was clicked, otherwise it's the input text\n</code></pre>"},{"location":"getting_started/editor_controls/","title":"Editor Controls","text":"<p>The primary editor window gives you access to all other editor windows. The main window is also the primary viewport for your game stage (level/map/scene).</p> Shortcut Description <code>Alt + LMB</code> Rotate viewport <code>MMB</code> Pan viewport <code>Space + LMB</code> Pan viewport <code>Scroll</code> Zoom viewport <code>F</code> Focus the selection <code>G</code> Grab/move selection <code>R</code> Rotate selection <code>S</code> Scale selection <code>X</code> Locks transform mod to X axis <code>Y</code> Locks transform mod to Y axis <code>Z</code> Locks transform mod to Z axis <code>Y</code> Open content browser <code>Z</code> Open content browser <code>Ctrl + S</code> Save the current stage <code>Ctrl + Space</code> Open content browser <code>Ctrl + H</code> Open hierarchy window <code>Ctrl + P</code> Parent selection [1] <code>F5</code> Build and run a debug build [2] <code>Ctrl + F5</code> Build and run a release build [3]"},{"location":"getting_started/editor_controls/#notes","title":"Notes","text":"<p>[1] Parenting selection will parent all selected entities to the last selected entity. If there is only 1 entity selected when parenting, then it will be removed from it's parent and moved to the root. [2] If a map is currently open, that map will be automatically loaded into in the debug instance that runs. [3] This will start from the main entry point of the game, it will not load the current map.</p>"},{"location":"getting_started/editor_launch/","title":"Launching the editor","text":"<p>When you launch the editor, you will be presented with the project select window. In this window, you can either select an existing project from the list below or click the button to find or create a project.</p>"},{"location":"getting_started/editor_launch/#selecting-a-project-folder","title":"Selecting a project folder","text":"<p>If you clicked on the \"Select project folder\" button, a window will pop up, allowing you to browse your file system and select a folder. Navigate into the folder you wish to select, and then click on the \"Select\" button in the top right.</p> <p>If the folder is empty, a new project will be created inside of that folder. if there are content inside of the folder, Then the engine will try to determine if it is a kaiju engine project. If it is, it will be opened. If it's not, you will be presented with a warning that the selected folder is not a kaiju project.</p> <p>You will then be loaded into the main editor window.</p>"},{"location":"getting_started/editor_launch/#selecting-an-existing-project","title":"Selecting an existing project","text":"<p>Back on the project select window, there is a list of existing projects if you have previously opened any. By clicking on any of the labels with the project name you're interested in, it will immediately be opened. If that project no longer exists, you will get a warning, and the project will be removed from the list.</p> <p>You will then be loaded into the main editor window.</p>"},{"location":"programming/data_binding/","title":"Binding data for the editor","text":"<p>In the Kaiju engine, it's possible to create structures that the editor is aware of. These structures are required to be plain-ol-data (POD), but can also be some specialized engine structures as well. These structures are meant to provide a method of easily binding arbitrary data for your game code.</p>"},{"location":"programming/data_binding/#creating-a-structure","title":"Creating a structure","text":"<p>There are only 2 requirements for your structure, (1) it must be POD, and (2) it must implement the interface: <pre><code>func Init(e *engine.Entity, host *engine.Host)\n</code></pre></p>"},{"location":"programming/data_binding/#registering-your-structure","title":"Registering your structure","text":"<p>To register your structure, you'll need to add it to the engine registry. You typically will do this in the <code>init</code> function of your package. The function you will need to call is <code>engine.RegisterEntityData</code>. This will take in your POD type and register it for the editor to use. For example: <pre><code>func init() {\n    engine.RegisterEntityData(&amp;MyModuleStructure{})\n}\n</code></pre></p>"},{"location":"programming/data_binding/#supported-pod-types","title":"Supported POD types","text":"<p>Below are a list of POD types that you can use for your structures.</p> Types int int16 int32 int64 uint uint16 uint32 uint64 float32 float64 complex64 complex128 bool string EntityId uintptr"},{"location":"programming/data_binding/#struct-tag-decorators-and-constraints","title":"Struct tag decorators and constraints","text":"<p>Struct tags allow developers to tell the editor how to treat each field in the structure when the developer is interacting with it. They are defined using standard go structure tagging:</p> <pre><code>type SomeEntityDataModule struct {\n    Speed     float32 `clamp:\"3,1,30\"`\n    MaxCount  int     `default:\"15\"`\n    MaxHeight float32 `default:\"3.14\"`\n    IsPrimary bool    `default:\"false\"`\n}\n</code></pre> Key Arguments Description clamp number,number,number Clamps the value between 2 numbers: default, min, max default any Sets the default/starting value"},{"location":"shaders/shader_definition/","title":"Shader Definition","text":"<p>Shaders in Vulkan can be a bit complex, so we have developed the foundational tools to aid in the development and usage of shaders. In your content folder there is a folder named \"shaders\", this folder should contain a folder named \"definitions\". Inside of this folder is where you create a simple definition file for your shader.</p>"},{"location":"shaders/shader_definition/#setting-up-a-new-shader-definition","title":"Setting up a new shader definition","text":"<p>A shader definition contains all of the information about the shaders that will be combined to create a shader pipeline. To start, you will need to create a new shader definition <code>.json</code> file. This file should just contain one object named \"Vulkan\" and inside of it, fill out the shaders that make up the pipeline.</p> <p>So for example, the basic shader definition would be created as: <pre><code>{\n    \"Vulkan\": {\n        \"Vert\": \"shaders/spv/basic.vert.spv\",\n        \"Frag\": \"shaders/spv/basic.frag.spv\",\n        \"Geom\": \"\",\n        \"Tesc\": \"\",\n        \"Tese\": \"\",\n    }\n}\n</code></pre></p> <p>This tells the system what shaders you will need for this pipeline. With just the description of which shaders to use, you are ready to generate the rest of the information directly from your supplied shaders.</p>"},{"location":"shaders/shader_definition/#generate-shader-definition","title":"Generate shader definition","text":"<p>To generate the shader definitions, you can run the go generator tool found in <pre><code>src/generators/shader_definition/main.go\n</code></pre></p> <p>If you are in visual studio, you can run this by selecting the \"Shader Definition Generator\" launch setting and running it. This will go through all of the definition files within <code>content/shaders/definitions</code> and update the <code>.json</code> files to contain all the information needed about the shader. With this, the engine will know how to load up your shader and setup the pipeline layout for your shader. It will also setup any named buffer objects so that you can update the data within them in your code easily by using their name.</p>"},{"location":"ui/go_access/","title":"Accessing the UI elements from Go","text":"<p>At some point you'll want to access the UI that you've designed in HTML from Go. To do this you'll want to take that returned document from <code>markup.DocumentFromHTMLAsset</code> and access some helper functions or the list of elements.</p>"},{"location":"ui/go_access/#getelementbyid","title":"GetElementById","text":"<p>In our Writing example, we created a <code>div</code> with an id <code>nameList</code>. This allows us to get access to all of the elements inside of that <code>div</code> by calling <code>GetElementById</code> on the document.</p> <pre><code>//...\ndoc, err := markup.DocumentFromHTMLAsset(host, \"ui/tests/binding.html\", data, nil)\nlist, ok := doc.GetElementById(\"nameList\")\n</code></pre> <p>In this case <code>ok</code> will be <code>false</code> if the element could not be found. Otherwise <code>list</code> will be the <code>DocElement</code> for that panel. You can access the child entities from this panel and go through all the child contents that way.</p>"},{"location":"ui/go_access/#other-accessors","title":"Other accessors","text":"<p>You can access other elements by class, tag, or group. Class and tag are the classic ways to access elements in HTML, and group is a way to access a group of elements that have the same value in the <code>group</code> html attribute.</p> <p>For example, the divs with ids <code>one</code>, <code>two</code>, and <code>three</code> all have the same group value of <code>group1</code>. You can access all of these divs by calling <code>GetElementsByGroup</code> on the document.</p> <pre><code>&lt;!-- ... --&gt;\n&lt;div&gt;\n    &lt;div id=\"one\" class=\"red\" group=\"group1\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"two\" class=\"green\" group=\"group1\"&gt;&lt;/div&gt;\n&lt;div id=\"three\" class=\"blue\" group=\"group1\"&gt;&lt;/div&gt;\n&lt;!-- ... --&gt;\n</code></pre>"},{"location":"ui/html_attributes/","title":"UI HTML Attributes","text":"<p>Some standard as well as non-standard HTML attributes are available for developers to use. Below are some tables going over different attributes that are currently available and what they are used for.</p>"},{"location":"ui/html_attributes/#general","title":"General","text":"Attribute Description id A unique id for this element, useful for searching in Go group The group that this element belongs to, useful for searching in Go class The CSS class style to use style An inline override style to use for this element"},{"location":"ui/html_attributes/#events","title":"Events","text":"<p>We have both standard and non-standard events built into the UI elements. For the most part, all automatic events will be prefixed with <code>on</code> for the HTML attribute name.</p> Attribute Description onclick The element was clicked or tapped via finger or stylus onrightclick The element was right-clicked onmiss The anything but the element was clicked or tapped via finger or stylus onsubmit The enter key is pressed in an input field onkeydown A key is pressed while the element is focused onkeyup A key is released while the element is focused ondblclick The element was double clicked or tapped via finger or stylus onmouseover The mouse or stylus hovers over this element onmouseenter The mouse or stylus hovers over this element onmouseleave The mouse or stylus exits hovering over this element onmouseexit The mouse or stylus exits hovering over this element onmousedown The mouse button, touch, or stylus is pressed on the element onmouseup The mouse button, touch, or stylus is released on the element onmousewheel The mouse wheel was moved while hovering over the element onchange The value of the element changed (input, select, checkbox, etc.) ondragenter The cursor is currently dragging something and hovers over this ondragleave The cursor is currently dragging something and stops hovering over this ondragstart The cursor started dragging this element ondrop The cursor was dragging something and dropped it onto this element ondragend The cursor stopped dragging this element"},{"location":"ui/preview/","title":"Preview UI (Live)","text":"<p>Since the engine UI is built using HTML and CSS to build out the interface, we don't provide any graphical wysiwyg tools at the moment. To ease the process of designing your UI though, we've added the ability to have a live preview of your UI as you write your HTML and CSS code.</p>"},{"location":"ui/preview/#live-preview","title":"Live preview","text":"<p>To activate the live preview, open up the console window (`) and type <code>preview path/to/file.html</code>. So if we are going off of the example we gave in Writing, then we'd type <code>preview content/ui/tests/binding.html</code> into the console and hit enter. This will load up the preview in a separate window for us to monitor. The preview updates every time there is a change to the file (each time the HTML file is saved).</p>"},{"location":"ui/preview/#binding-dummy-data","title":"Binding dummy data","text":"<p>You'll often need to preview some dummy data in your HTML UI, to do this simply create a <code>.json</code> file next to your HTML file. So in the case of <code>content/ui/tests/binding.html</code> we would have a <code>content/ui/tests/binding.html.json</code> file. This file should contain the data you want to bind to your HTML file for the preview. For example, if we wanted to bind a list of entity names to our HTML file, we would create a <code>content/ui/tests/binding.html.json</code> file with the following content:</p> <pre><code>{\n    \"EntityNames\": [\"Entity1\", \"Entity2\", \"Entity3\"]\n}\n</code></pre>"},{"location":"ui/writing/","title":"Writing UI (HTML/CSS)","text":"<p>There are only 2 primitive UI elements in the engine. (1) a panel, and (2) a label. From these 2 primitives all UI is created in the engine. You can manually create these elements yourself, but the easiest way to create UI is through the use of HTML/CSS templates. This is the preferred method for creating UI in Kaiju Engine.</p>"},{"location":"ui/writing/#htmlcss","title":"HTML/CSS","text":"<p>To begin creating UI, first create a <code>.html</code> file inside of the <code>content/ui</code> folder or any subfolder of that folder. We'll start with an example named <code>binding.html</code> which we place into a <code>tests</code> folder (<code>content/ui/tests/binding.html</code>).</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"ui/tests/binding_style.css\"&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div class=\"container\"&gt;\n            &lt;div id=\"nameList\"&gt;\n                {{range .EntityNames}}\n                    &lt;div&gt;Entity: {{.}}&lt;/div&gt;\n                {{end}}\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Here you'll notice a few things, the path to the <code>.css</code> stylesheet to use for this document, and some Go template syntax for binding a slice of strings named <code>EntityNames</code>. So this template expects something similar to the following structure as binding data:</p> <pre><code>type BindingData struct {\n    EntityNames []string\n}\n</code></pre> <p>Next, you'll want to create the <code>.css</code> file since it was referenced in the HTML head. Create a file named <code>binding_style.css</code> in the same folder as the <code>.html</code> file (<code>content/ui/tests/binding_style.css</code>).</p> <pre><code>body {\n    padding: 0;\n    margin: 0;\n}\n.content {\n    position: absolute;\n    top: 0;\n    height: 300px;\n    background-color: #000;\n    padding: 10px;\n    border-bottom: 1px solid white;\n    z-index: 100;\n}\n#nameList {\n    padding: 0;\n    height: calc(100% - 32px);\n    overflow-y: scroll;\n    color: white;\n}\n</code></pre> <p>At this point your UI is complete, though probably not what you'd consider pretty.</p>"},{"location":"ui/writing/#go","title":"Go","text":"<p>To load up this UI in Go, you'll have access to the host, and you'll need to call <code>DocumentFromHTMLAsset</code> and provide the path to your HTML file.</p> <pre><code>data := struct{\n    EntityNames []string\n}{\n    []string{\"Entity1\", \"Entity2\", \"Entity3\"},\n}\ndoc, err := markup.DocumentFromHTMLAsset(host, \"ui/tests/binding.html\", data, nil)\n</code></pre> <p>This will load up the HTML document and any of the CSS it references and build out your UI. The returned <code>doc</code> will contain the document and all the elements/panels/labels. This UI is immediately loaded into the <code>host</code> so you don't need to worry about doing that yourself. The last argument is a funcmap used for inline template functions</p>"}]}